{"version":3,"file":"static/js/905.8bc10bb0.chunk.js","mappings":"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","sources":["actions/namespace.js","utils/file_saver.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport saveAs from 'utils/file_saver.js';\nimport server from 'constants/server';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { getCohorts } from 'actions/cohort';\nimport { APPEND_CREATED_NAMESPACE, CHANGED_NAMESPACE, DELETED_CURRENT_NAMESPACE, GET_ALL_NAMESPACES, UPDATED_OWNED_NAMESPACE, UPDATED_STUDENT_PROGRESS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Returns an action object to be used in signalling that a namespace has been created.\n *\n * @param {Object} namespace - the created namespace\n * @returns {Object} the action object\n */\nexport function appendCreatedNamespace( namespace ) {\n\treturn {\n\t\ttype: APPEND_CREATED_NAMESPACE,\n\t\tpayload: {\n\t\t\tnamespace\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been changed.\n *\n * @param {Object} namespace - the changed namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.announcements - announcements\n * @param {Array} namespace.cohorts - cohorts\n * @param {string} namespace.description - namespace description\n * @param {boolean} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @returns {Object} the action object\n */\nexport function changedNamespace({ title, owners, announcements = [], cohorts = [], description, enableTicketing, _id }) {\n\treturn {\n\t\ttype: CHANGED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tannouncements,\n\t\t\tcohorts,\n\t\t\tdescription,\n\t\t\tenableTicketing,\n\t\t\towners,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been deleted.\n *\n * @param {string} id - the id of the namespace to be deleted\n * @returns {Object} the action object\n */\nexport function deletedCurrentNamespace( id ) {\n\treturn {\n\t\ttype: DELETED_CURRENT_NAMESPACE,\n\t\tpayload: {\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a student's progress has been updated.\n *\n * @param {Object} options - progress of the student\n * @param {string} options.email - email of the student\n * @param {string} options.lessonId - lesson id\n * @param {number} options.progress - progress of the student\n * @param {Object} options.cohort - cohort of the student\n */\nexport function updateStudentProgress({ email, lessonID, progress, cohort }) {\n\treturn {\n\t\ttype: UPDATED_STUDENT_PROGRESS,\n\t\tpayload: {\n\t\t\temail, lessonID, progress, cohort\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that an owned namespace has been updated.\n *\n * @param {Object} namespace - the updated namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @returns {Object} the action object\n */\nexport function updatedOwnedNamespace({ title, owners, description, enableTicketing, _id }) {\n\treturn {\n\t\ttype: UPDATED_OWNED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\tenableTicketing,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Makes a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} namespace - the new namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.description - namespace description\n * @param {Array} namespace.owners - ids of owners\n * @param {Object} namespace.props - properties of the invoking component\n */\nexport const createNamespace = async ( dispatch, { title, description, owners, props }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_namespace', { title, description, owners });\n\t\tif ( !res.data.successful ) {\n\t\t\treturn addErrorNotification( dispatch, new Error( res.data.message ));\n\t\t}\n\t\tconst namespace = res.data.namespace;\n\t\tprops.onNamespace( namespace );\n\t\tdispatch( appendCreatedNamespace( namespace ) );\n\t\tprops.history.replace( '/lessons' );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: res.data.successful ? 'success' : 'error'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to create a new namespace\n */\nexport const createNamespaceInjector = dispatch => {\n\treturn async ({ title, description, owners, props }) => {\n\t\tawait createNamespace( dispatch, { title, description, owners, props } );\n\t};\n};\n\n/**\n * Makes a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the namespace to be deleted\n * @param {Object} history - browser history object\n * @returns {void}\n */\nexport const deleteCurrentNamespace = async ( dispatch, id, history ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_namespace', { id });\n\t\tif ( history ) {\n\t\t\thistory.replace( '/lessons' );\n\t\t}\n\t\tdispatch( deletedCurrentNamespace( id ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to delete a namespace\n */\nexport const deleteCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id, history ) => {\n\t\tawait deleteCurrentNamespace( dispatch, id, history );\n\t};\n};\n\n/**\n * Makes a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} ns - the updated namespace\n */\nexport const updateCurrentNamespace = async ( dispatch, ns ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_namespace', { ns });\n\t\tdispatch( changedNamespace( res.data.namespace ) );\n\t\tdispatch( updatedOwnedNamespace( res.data.namespace ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tgetCohorts( dispatch, {\n\t\t\tnamespaceID: ns._id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a namespace\n */\nexport const updateCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id, ns ) => {\n\t\tawait updateCurrentNamespace( dispatch, id, ns );\n\t};\n};\n\n/**\n * Makes a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.namespaceTitle - title of the namespace\n * @returns {void}\n */\nexport const getNamespaceActions = async ( dispatch, { namespaceID, namespaceTitle } ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_namespace_actions?'+qs.stringify({ namespaceID }) );\n\t\tconst blob = new Blob([ res.data ], {\n\t\t\ttype: 'application/json'\n\t\t});\n\t\tconst name = `actions_${namespaceTitle}.json`;\n\t\tsaveAs( blob, name );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a namespace's actions\n */\nexport const getNamespaceActionsInjector = ( dispatch ) => {\n\treturn async ({ namespaceID, namespaceTitle }) => {\n\t\tawait getNamespaceActions( dispatch, { namespaceID, namespaceTitle });\n\t};\n};\n\n/**\n * Makes a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.lessonID - id of the lesson\n * @param {string} options.email - email of the user\n * @param {number} options.progress - progress of the user\n * @param {Object} options.cohort - cohort of the user\n */\nexport const adjustProgress = async ( dispatch, { email, lessonID, namespaceID, progress, cohort }) => {\n\tconst res = await axios.post( server+'/user_adjust_progress', {\n\t\temail, lessonID, namespaceID, progress\n\t});\n\taddNotification( dispatch, {\n\t\ttitle: i18next.t('common:updated'),\n\t\tmessage: res.data.message,\n\t\tlevel: 'success'\n\t});\n\tdispatch( updateStudentProgress({ email, lessonID, progress, cohort }) );\n};\n\n/**\n * Returns a function to make a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a user's lesson progress\n */\nexport const adjustProgressInjector = ( dispatch ) => {\n\treturn async ( { email, lessonID, namespaceID, progress, cohort } ) => {\n\t\tawait adjustProgress( dispatch, { email, lessonID, namespaceID, progress, cohort } );\n\t};\n};\n\n/**\n * Makes a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getAllNamespaces = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_namespaces' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_NAMESPACES,\n\t\t\tpayload: {\n\t\t\t\tnamespaces: res.data.namespaces\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a all available namespaces\n */\nexport const getAllNamespacesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllNamespaces( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Array} options.lessons - lessons of the course in the order to be displayed on the dashboard\n * @param {string} options.id - id of the namespace\n * @returns {void}\n */\nexport const setLessonOrder = async ( dispatch, { lessons, id }) => {\n\ttry {\n\t\tawait axios.post( server+'/set_lesson_order', {\n\t\t\tlessons, id\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to set the order lessons appear on the dashboard\n */\nexport const setLessonOrderInjector = ( dispatch ) => {\n\treturn async ({ lessons, id }) => {\n\t\tawait setLessonOrder( dispatch, { lessons, id } );\n\t};\n};\n","/*\n* Adapted from:\n*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.3.8\n* 2018-03-22 14:03:47\n*\n* By Eli Grey, https://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*\n* @source http://purl.eligrey.com/github/FileSaver.js/blob/master/src/FileSaver.js\n*/\n\n// VARIABLES //\n\nconst RE_AUTO_BOM = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nconst ARBITRARY_REVOKE_TIMEOUT = 1000 * 40; // Time in ms\n\n\n// FUNCTIONS //\n\nfunction click(node) {\n\tconst event = new MouseEvent( 'click' );\n\tnode.dispatchEvent( event );\n}\n\nfunction throwOutside( ex ) {\n\tsetImmediate(function throwEx() {\n\t\tthrow ex;\n\t}, 0 );\n}\n\nfunction autoBOM( blob ) {\n\t// Prepend BOM for UTF-8 XML and text/* types (including HTML). Note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\tif ( RE_AUTO_BOM.test( blob.type ) ) {\n\t\treturn new Blob([ String.fromCharCode( 0xFEFF ), blob ], {\n\t\t\ttype: blob.type\n\t\t});\n\t}\n\treturn blob;\n}\n\nfunction dispatch( filesaver, eventTypes, event ) {\n\teventTypes = [].concat( eventTypes );\n\tlet i = eventTypes.length;\n\twhile ( i-- ) {\n\t\tlet listener = filesaver[ 'on' + eventTypes[i] ];\n\t\tif ( typeof listener === 'function' ) {\n\t\t\ttry {\n\t\t\t\tlistener.call( filesaver, event || filesaver );\n\t\t\t} catch ( ex ) {\n\t\t\t\tthrowOutside( ex );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// MAIN //\n\nfunction saveFactory( view ) {\n\tif (\n\t\ttypeof view === 'undefined' ||\n\t\ttypeof navigator !== 'undefined' &&\n\t\t/MSIE [1-9]\\./.test( navigator.userAgent )\n\t) {\n\t\treturn;\n\t}\n\tconst doc = view.document;\n\n\t// Only get URL when necessary in case Blob.js hasn't overridden it yet:\n\tfunction getURL() {\n\t\treturn view.URL || view.webkitURL || view;\n\t}\n\tfunction revoke( file ) {\n\t\tfunction revoker() {\n\t\t\tif ( typeof file === 'string' ) { // File is an object URL...\n\t\t\t\tgetURL().revokeObjectURL(file);\n\t\t\t} else { // File is a File...\n\t\t\t\tfile.remove();\n\t\t\t}\n\t\t}\n\t\tsetTimeout( revoker, ARBITRARY_REVOKE_TIMEOUT );\n\t}\n\n\tconst saveLink = doc.createElementNS( 'http://www.w3.org/1999/xhtml', 'a' );\n\tconst canUseSaveLink = 'download' in saveLink;\n\tconst isSafari = /constructor/i.test( view.HTMLElement ) || view.safari;\n\tconst isChromeIOS =/CriOS\\/[\\d]+/.test( navigator.userAgent );\n\tconst setImmediate = view.setImmediate || view.setTimeout;\n\tconst forceSavableType = 'application/octet-stream';\n\n\tfunction FileSaver(blob, name, noAutoBOM ) {\n\t\tif ( !noAutoBOM ) {\n\t\t\tblob = autoBOM(blob);\n\t\t}\n\t\t// First try a.download, then web filesystem, then object URLs\n\t\tconst self = this;\n\t\tconst type = blob.type;\n\t\tconst force = type === forceSavableType;\n\t\tlet objectURL;\n\t\tfunction dispatchAll() {\n\t\t\tdispatch( self, 'writestart progress write writeend'.split(' ') );\n\t\t}\n\t\t// On any filesystem errors, revert to saving with object URLs:\n\t\tfunction fsError() {\n\t\t\tif ((isChromeIOS || (force && isSafari)) && view.FileReader) {\n\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onloadend = function onLoadEnd() {\n\t\t\t\t\tlet url = isChromeIOS ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\tconst popup = view.open(url, '_blank');\n\t\t\t\t\tif ( !popup ) {\n\t\t\t\t\t\tview.location.href = url;\n\t\t\t\t\t}\n\t\t\t\t\turl = void 0; // Release reference before dispatching...\n\t\t\t\t\tself.readyState = self.DONE;\n\t\t\t\t\tdispatchAll();\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\tself.readyState = self.INIT;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Don't create more object URLs than needed:\n\t\t\tif ( !objectURL ) {\n\t\t\t\tobjectURL = getURL().createObjectURL( blob );\n\t\t\t}\n\t\t\tif ( force ) {\n\t\t\t\tview.location.href = objectURL;\n\t\t\t} else {\n\t\t\t\tconst opened = view.open( objectURL, '_blank' );\n\t\t\t\tif ( !opened ) {\n\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\tview.location.href = objectURL;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.readyState = self.DONE;\n\t\t\tdispatchAll();\n\t\t\trevoke( objectURL );\n\t\t}\n\t\tself.readyState = self.INIT;\n\n\t\tif ( canUseSaveLink ) {\n\t\t\tobjectURL = getURL().createObjectURL(blob);\n\t\t\tsetImmediate(function save() {\n\t\t\t\tsaveLink.href = objectURL;\n\t\t\t\tsaveLink.download = name;\n\t\t\t\tclick( saveLink );\n\t\t\t\tdispatchAll();\n\t\t\t\trevoke( objectURL );\n\t\t\t\tself.readyState = self.DONE;\n\t\t\t}, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tfsError();\n\t}\n\tconst proto = FileSaver.prototype;\n\tfunction saveAs( blob, name, noAutoBOM ) {\n\t\treturn new FileSaver( blob, name || blob.name || 'download', noAutoBOM );\n\t}\n\n\t// IE 10+ (native saveAs)\n\tif ( typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob ) {\n\t\treturn function saveAs( blob, name, noAutoBOM ) {\n\t\t\tname = name || blob.name || 'download';\n\t\t\tif ( !noAutoBOM ) {\n\t\t\t\tblob = autoBOM( blob );\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tproto.abort = function abort() {};\n\tproto.readyState = proto.INIT = 0;\n\tproto.WRITING = 1;\n\tproto.DONE = 2;\n\n\tproto.error = null;\n\tproto.onwritestart = null;\n\tproto.onprogress = null;\n\tproto.onwrite = null;\n\tproto.onabort = null;\n\tproto.onerror = null;\n\tproto.onwriteend = null;\n\n\treturn saveAs;\n}\n\nconst saveAs = saveFactory(\n\ttypeof self !== 'undefined' && self ||\n\ttypeof window !== 'undefined' && window ||\n\tthis.content\n);\n\n\n// EXPORTS //\n\nexport default saveAs;\n"],"names":["appendCreatedNamespace","namespace","type","APPEND_CREATED_NAMESPACE","payload","changedNamespace","title","owners","announcements","cohorts","description","enableTicketing","_id","CHANGED_NAMESPACE","deletedCurrentNamespace","id","DELETED_CURRENT_NAMESPACE","updateStudentProgress","email","lessonID","progress","cohort","UPDATED_STUDENT_PROGRESS","createNamespace","dispatch","props","axios","server","res","data","successful","addErrorNotification","Error","message","onNamespace","history","replace","addNotification","level","createNamespaceInjector","deleteCurrentNamespace","deleteCurrentNamespaceInjector","updateCurrentNamespace","ns","UPDATED_OWNED_NAMESPACE","getCohorts","namespaceID","updateCurrentNamespaceInjector","getNamespaceActions","namespaceTitle","qs","blob","Blob","name","saveAs","getNamespaceActionsInjector","adjustProgress","i18next","adjustProgressInjector","getAllNamespaces","GET_ALL_NAMESPACES","namespaces","getAllNamespacesInjector","setLessonOrder","lessons","setLessonOrderInjector","RE_AUTO_BOM","throwOutside","ex","setImmediate","autoBOM","test","String","fromCharCode","view","navigator","userAgent","saveLink","document","createElementNS","canUseSaveLink","isSafari","HTMLElement","safari","isChromeIOS","setTimeout","proto","FileSaver","prototype","msSaveOrOpenBlob","noAutoBOM","abort","readyState","INIT","WRITING","DONE","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","getURL","URL","webkitURL","revoke","file","revokeObjectURL","remove","objectURL","self","this","force","dispatchAll","filesaver","eventTypes","event","i","concat","length","listener","call","split","createObjectURL","node","href","download","MouseEvent","dispatchEvent","FileReader","reader","onloadend","url","result","open","location","readAsDataURL","fsError","saveFactory","window","content"],"sourceRoot":""}