{"version":3,"file":"static/js/6872.71081907.chunk.js","mappings":"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","sources":["actions/custom_field.js","actions/file.js","ev/components/admin-settings/user-fields/index.js","ev/components/admin-settings/branding/index.js","ev/components/admin-settings/texts/index.js","components/admin-settings/index.js","actions/backup.js","actions/role.js","containers/visible-admin-settings/index.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { CREATED_CUSTOM_FIELD, DELETED_CUSTOM_FIELD, FIELD_POSITION_INCREMENTED, FIELD_POSITION_DECREMENTED, GET_CUSTOM_FIELDS, UPDATED_CUSTOM_FIELD } from 'constants/action_types.js';\nimport { globalAxios } from 'helpers/axios.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get all custom user fields.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getCustomFields = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await globalAxios.get( server+'/get_custom_fields' );\n\t\tdispatch({\n\t\t\ttype: GET_CUSTOM_FIELDS,\n\t\t\tpayload: {\n\t\t\t\tcustomFields: res.data.fields\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to get all custom user fields with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a GET request to the server to get all custom user fields\n */\nexport const getCustomFieldsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getCustomFields( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to increment a custom field's position.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the custom field's unique id\n * @returns {void}\n */\nexport const incrementFieldPosition = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server+'/increment_field_position', {\n\t\t\tid\n\t\t});\n\t\tdispatch({\n\t\t\ttype: FIELD_POSITION_INCREMENTED,\n\t\t\tpayload: {\n\t\t\t\tcustomFields: res.data.fields\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to increment a custom field's position with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to increment a custom field's position\n */\nexport const incrementFieldPositionInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait incrementFieldPosition( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to the server to decrement a custom field's position.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the custom field's unique id\n * @returns {void}\n */\nexport const decrementFieldPosition = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server+'/decrement_field_position', {\n\t\t\tid\n\t\t});\n\t\tdispatch({\n\t\t\ttype: FIELD_POSITION_DECREMENTED,\n\t\t\tpayload: {\n\t\t\t\tcustomFields: res.data.fields\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to decrement a custom field's position with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to decrement a custom field's position\n */\nexport const decrementFieldPositionInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait decrementFieldPosition( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a custom field.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the custom field's unique id\n * @returns {void}\n */\nexport const deleteCustomField = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server+'/delete_custom_field', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_CUSTOM_FIELD,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a custom field with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to delete a custom field\n */\nexport const deleteCustomFieldInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteCustomField( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a custom field.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} field - the custom field's data\n * @param {string} field.name - the custom field's name\n * @param {string} field.description - the custom field's description\n * @param {string} field.type - the custom field's type\n * @param {Array} field.options - the custom field's options (if type is `dropdown`)\n * @param {number} field.position - the custom field's position\n * @param {boolean} field.showOnProfile - whether the custom field should be shown on the users' profile\n * @param {boolean} field.editableOnSignup - whether the custom field should be editable on signup\n * @param {boolean} field.editableOnProfile - whether the custom field should be editable on the users' profile\n * @returns {void}\n */\nexport const createCustomField = async ( dispatch, {\n\tname,\n\tdescription,\n\ttype,\n\toptions,\n\tposition,\n\tshowOnProfile,\n\teditableOnSignup,\n\teditableOnProfile\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/create_custom_field', {\n\t\t\tname,\n\t\t\tdescription,\n\t\t\ttype,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tshowOnProfile,\n\t\t\teditableOnSignup,\n\t\t\teditableOnProfile\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_CUSTOM_FIELD,\n\t\t\tpayload: res.data.field\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to create a custom field with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to create a custom field\n */\nexport const createCustomFieldInjector = dispatch => {\n\treturn async ({\n\t\tname,\n\t\tdescription,\n\t\ttype,\n\t\toptions,\n\t\tposition,\n\t\tshowOnProfile,\n\t\teditableOnSignup,\n\t\teditableOnProfile\n\t}) => {\n\t\tawait createCustomField( dispatch, {\n\t\t\tname,\n\t\t\tdescription,\n\t\t\ttype,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tshowOnProfile,\n\t\t\teditableOnSignup,\n\t\t\teditableOnProfile\n\t\t});\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a custom field.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} field - the custom field's data\n * @param {string} field.name - the custom field's name\n * @param {string} field.description - the custom field's description\n * @param {string} field.type - the custom field's type\n * @param {Array} field.options - the custom field's options (if type is `dropdown`)\n * @param {number} field.position - the custom field's position\n * @param {boolean} field.showOnProfile - whether the custom field should be shown on the users' profile\n * @param {boolean} field.editableOnSignup - whether the custom field should be editable on signup\n * @param {boolean} field.editableOnProfile - whether the custom field should be editable on the users' profile\n */\nexport const updateCustomField = async ( dispatch, {\n\tname,\n\tdescription,\n\ttype,\n\toptions,\n\tposition,\n\tshowOnProfile,\n\teditableOnSignup,\n\teditableOnProfile\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/update_custom_field', {\n\t\t\tname,\n\t\t\tdescription,\n\t\t\ttype,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tshowOnProfile,\n\t\t\teditableOnSignup,\n\t\t\teditableOnProfile\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:update'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_CUSTOM_FIELD,\n\t\t\tpayload: {\n\t\t\t\tname,\n\t\t\t\tdescription,\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tshowOnProfile,\n\t\t\t\teditableOnSignup,\n\t\t\t\teditableOnProfile\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a custom field with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to update a custom field\n */\nexport const updateCustomFieldInjector = dispatch => {\n\treturn async ({\n\t\tname,\n\t\tdescription,\n\t\ttype,\n\t\toptions,\n\t\tposition,\n\t\tshowOnProfile,\n\t\teditableOnSignup,\n\t\teditableOnProfile\n\t}) => {\n\t\tawait updateCustomField( dispatch, {\n\t\t\tname,\n\t\t\tdescription,\n\t\t\ttype,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tshowOnProfile,\n\t\t\teditableOnSignup,\n\t\t\teditableOnProfile\n\t\t});\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport copyToClipboard from 'clipboard-copy';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Button from 'react-bootstrap/Button';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { DELETED_FILE, GET_ALL_FILES, RECEIVED_FILES, RECEIVED_LICENSE, RECEIVED_NAMESPACE_FILES, REMOVED_LICENSE, UPDATED_SETTINGS } from 'constants/action_types.js';\n\n\n// FUNCTIONS //\n\nasync function getFilesRequest( dispatch, { namespaceName, owner = false }) {\n\ttry {\n\t\tconst url = `${server}/get_files?${qs.stringify({\n\t\t\tnamespaceName,\n\t\t\towner\n\t\t})}`;\n\t\tconst res = await axios.get( url );\n\t\tconst files = res.data.files;\n\t\tdispatch( receivedNamespaceFiles({ files, owner }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n}\n\n\n// EXPORTS //\n\n\nexport function receivedFiles( files ) {\n\treturn {\n\t\ttype: RECEIVED_FILES,\n\t\tpayload: {\n\t\t\tfiles\n\t\t}\n\t};\n}\n\nexport function receivedLicense( license ) {\n\treturn {\n\t\ttype: RECEIVED_LICENSE,\n\t\tpayload: {\n\t\t\tlicense\n\t\t}\n\t};\n}\n\nexport function removedLicense() {\n\treturn {\n\t\ttype: REMOVED_LICENSE\n\t};\n}\n\nexport function receivedNamespaceFiles({ files, owner }) {\n\treturn {\n\t\ttype: RECEIVED_NAMESPACE_FILES,\n\t\tpayload: {\n\t\t\tfiles,\n\t\t\towner\n\t\t}\n\t};\n}\n\nexport const getUserFiles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_user_files' );\n\t\tdispatch( receivedFiles( res.data.files ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getUserFilesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getUserFiles( dispatch );\n\t};\n};\n\nexport const deleteFile = async ( dispatch, _id, namespaceName, owner ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/delete_file`, { _id });\n\t\tif ( namespaceName ) {\n\t\t\tgetFilesRequest( dispatch, { namespaceName, owner });\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: DELETED_FILE,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: _id\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:delete-file-title'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const deleteFileInjector = ( dispatch ) => {\n\treturn async ( _id, namespaceName, owner ) => {\n\t\tawait deleteFile( dispatch, _id, namespaceName, owner );\n\t};\n};\n\nexport const uploadFile = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\n\t\t\towner: formData.get( 'owner' ),\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_file?'+ query, formData );\n\t\tgetFilesRequest( dispatch, {\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\n\t\t\towner: formData.get( 'owner' )\n\t\t});\n\t\tconst msg = {\n\t\t\ttitle: i18next.t('common:file-upload-title'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 10\n\t\t};\n\t\tmsg.children = <div style={{ marginBottom: 30 }}>\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\n\t\t\t\t{i18next.t('common:copy-link')}\n\t\t\t</Tooltip>}>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tcopyToClipboard( server+'/'+res.data.filename );\n\t\t\t\t\t\taddNotification( dispatch, {\n\t\t\t\t\t\t\ttitle: i18next.t('common:copied-title'),\n\t\t\t\t\t\t\tmessage: i18next.t('common:link-copied'),\n\t\t\t\t\t\t\tlevel: 'success',\n\t\t\t\t\t\t\tposition: 'tl'\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"fa fa-clipboard\"></i>\n\t\t\t\t</Button>\n\t\t\t</OverlayTrigger>\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\n\t\t\t\t{i18next.t('common:open-uploaded-file')}\n\t\t\t</Tooltip>}>\n\t\t\t\t<a\n\t\t\t\t\thref={server+'/'+res.data.filename}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\n\t\t\t\t>\n\t\t\t\t\t<Button size=\"sm\" variant=\"outline-secondary\">\n\t\t\t\t\t\t<i className=\"fa fa-external-link-alt\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</a>\n\t\t\t</OverlayTrigger>\n\t\t</div>;\n\t\treturn addNotification( dispatch, msg );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const uploadFileInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tawait uploadFile( dispatch, { formData, user } );\n\t};\n};\n\nexport const getFilesInjector = ( dispatch ) => {\n\treturn async ({ namespaceName }) => {\n\t\tawait getFilesRequest( dispatch, { namespaceName });\n\t};\n};\n\nexport const getOwnerFilesInjector = ( dispatch ) => {\n\treturn async ({ namespaceName }) => {\n\t\tawait getFilesRequest( dispatch, { namespaceName, owner: true });\n\t};\n};\n\nexport const getAllFiles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_files' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_FILES,\n\t\t\tpayload: {\n\t\t\t\tfiles: res.data.files\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getAllFilesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllFiles( dispatch );\n\t};\n};\n\nexport const uploadLicense = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_license?'+ query, formData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:uploaded'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5\n\t\t});\n\t\tdispatch( receivedLicense( res.data.license ) );\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const uploadLicenseInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tawait uploadLicense( dispatch, { formData, user } );\n\t};\n};\n\nexport const getLicense = async ( dispatch, user ) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.get( server+'/get_license?'+ query );\n\t\tdispatch( receivedLicense( res.data.license ) );\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getLicenseInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait getLicense( dispatch, user );\n\t};\n};\n\nexport const removeLicense = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/remove_license' );\n\t\tif ( res.data.message === 'ok' ) {\n\t\t\tdispatch( removedLicense() );\n\t\t}\n\t} catch ( err ) {\n\t\tif ( err.message.includes( '404' ) ) {\n\t\t\t// Case: License file has already been removed\n\t\t\tdispatch( removedLicense() );\n\t\t}\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const removeLicenseInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait removeLicense( dispatch );\n\t};\n};\n\nexport const uploadLogo = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_logo?'+ query, formData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:uploaded'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res.data;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\nexport const uploadLogoInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tconst res = await uploadLogo( dispatch, { formData, user } );\n\t\treturn res;\n\t};\n};\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst UserFields = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default UserFields;\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst Branding = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Branding;\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst Texts = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Texts;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Nav from 'react-bootstrap/Nav';\nimport asyncComponent from 'components/async';\nconst Configuration = asyncComponent( () => import( './configuration.js' ) );\nconst License = asyncComponent( () => import( './license.js' ) );\nconst Backups = asyncComponent( () => import( './backups.js' ) );\nconst Roles = asyncComponent( () => import( './roles.js' ) );\nimport UserFields from 'ev/components/admin-settings/user-fields';\nimport Branding from 'ev/components/admin-settings/branding';\nimport Texts from 'ev/components/admin-settings/texts';\nimport './admin_settings.css';\n\n\n// MAIN //\n\nclass Settings extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst subpage = props.match.params.subpage;\n\t\tlet activePage;\n\t\tswitch ( subpage ) {\n\t\t\tdefault:\n\t\t\tcase 'license':\n\t\t\t\tactivePage = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'configuration':\n\t\t\t\tactivePage = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'branding':\n\t\t\t\tactivePage = 2;\n\t\t\t\tbreak;\n\t\t\tcase 'texts':\n\t\t\t\tactivePage = 3;\n\t\t\t\tbreak;\n\t\t\tcase 'credentials':\n\t\t\t\tactivePage = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'badges':\n\t\t\t\tactivePage = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'user-fields':\n\t\t\t\tactivePage = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'backups':\n\t\t\t\tactivePage = 7;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.state = {\n\t\t\tactivePage\n\t\t};\n\t}\n\n\thandleSelect = ( selectedKey ) => {\n\t\tselectedKey = Number( selectedKey );\n\t\tconst { history } = this.props;\n\t\tswitch ( selectedKey ) {\n\t\t\tcase 0:\n\t\t\t\thistory.replace( '/admin/settings/license' );\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\thistory.replace( '/admin/settings/configuration' );\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\thistory.replace( '/admin/settings/branding' );\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\thistory.replace( '/admin/settings/texts' );\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\thistory.replace( '/admin/settings/credentials' );\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\thistory.replace( '/admin/settings/badges' );\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\thistory.replace( '/admin/settings/user-fields' );\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\thistory.replace( '/admin/settings/backups' );\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState({\n\t\t\tactivePage: selectedKey\n\t\t});\n\t}\n\n\trenderPage() {\n\t\tswitch ( this.state.activePage ) {\n\t\t\tcase 0:\n\t\t\t\treturn ( <License\n\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\tuploadLicense={this.props.uploadLicense}\n\t\t\t\t\tgetLicense={this.props.getLicense}\n\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\tremoveLicense={this.props.removeLicense}\n\t\t\t\t\tgetUsers={this.props.getUsers}\n\t\t\t\t/> );\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<Configuration\n\t\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\tgetSettings={this.props.getSettings}\n\t\t\t\t\t\tupdateSettings={this.props.updateSettings}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<Branding\n\t\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\tuploadLogo={this.props.uploadLogo}\n\t\t\t\t\t\tupdateSettings={this.props.updateSettings}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 3:\n\t\t\t\treturn (\n\t\t\t\t\t<Texts\n\t\t\t\t\t\taddCustomTranslation={this.props.addCustomTranslation}\n\t\t\t\t\t\ttranslations={this.props.translations}\n\t\t\t\t\t\tremoveCustomTranslation={this.props.removeCustomTranslation}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 4:\n\t\t\t\treturn (\n\t\t\t\t\t<Roles\n\t\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\t\tcreateRole={this.props.createRole}\n\t\t\t\t\t\tgetAllRoles={this.props.getAllRoles}\n\t\t\t\t\t\tdeleteRole={this.props.deleteRole}\n\t\t\t\t\t\tupdateRole={this.props.updateRole}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 5:\n\t\t\t\treturn (\n\t\t\t\t\t<div>BADGES</div>\n\t\t\t\t);\n\t\t\tcase 6:\n\t\t\t\treturn (\n\t\t\t\t\t<UserFields\n\t\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\tcreateCustomField={this.props.createCustomField}\n\t\t\t\t\t\tdeleteCustomField={this.props.deleteCustomField}\n\t\t\t\t\t\tgetCustomFields={this.props.getCustomFields}\n\t\t\t\t\t\tincrementFieldPosition={this.props.incrementFieldPosition}\n\t\t\t\t\t\tdecrementFieldPosition={this.props.decrementFieldPosition}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase 7:\n\t\t\t\treturn (\n\t\t\t\t\t<Backups\n\t\t\t\t\t\tadmin={this.props.admin}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\tcreateBackup={this.props.createBackup}\n\t\t\t\t\t\tgetBackups={this.props.getBackups}\n\t\t\t\t\t\tdeleteBackup={this.props.deleteBackup}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst page = this.renderPage();\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<div className=\"admin-settings-div\" >\n\t\t\t\t<div className=\"admin-settings-navbar\" >\n\t\t\t\t\t<Nav variant=\"pills\" activeKey={this.state.activePage} onSelect={this.handleSelect}>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"0\" title=\"License\" >{t('license')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"1\" title=\"Configuration\" >{t('configuration')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"2\" title=\"Branding\" >{t('branding')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"3\" title=\"Texts\" >{t('common:texts')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"4\" title=\"Roles\" >{t('roles')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link disabled eventKey=\"5\" title=\"Badges\" >{t('common:badges')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"6\" title=\"User Fields\" >{t('user-fields')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"7\" title=\"Backups\" >{t('backups')}</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t</Nav>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"admin-settings-container\" >\n\t\t\t\t\t{page}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// PROPERTIES //\n\nSettings.propTypes = {\n\taddCustomTranslation: PropTypes.func.isRequired,\n\tadmin: PropTypes.object.isRequired,\n\tcreateBackup: PropTypes.func.isRequired,\n\tcreateCustomField: PropTypes.func.isRequired,\n\tcreateRole: PropTypes.func.isRequired,\n\tdecrementFieldPosition: PropTypes.func.isRequired,\n\tdeleteBackup: PropTypes.func.isRequired,\n\tdeleteCustomField: PropTypes.func.isRequired,\n\tdeleteRole: PropTypes.func.isRequired,\n\tgetAllRoles: PropTypes.func.isRequired,\n\tgetBackups: PropTypes.func.isRequired,\n\tgetCustomFields: PropTypes.func.isRequired,\n\tgetLicense: PropTypes.func.isRequired,\n\tgetSettings: PropTypes.func.isRequired,\n\tgetUsers: PropTypes.func.isRequired,\n\tincrementFieldPosition: PropTypes.func.isRequired,\n\tmatch: PropTypes.object.isRequired,\n\tremoveCustomTranslation: PropTypes.func.isRequired,\n\tremoveLicense: PropTypes.func.isRequired,\n\tt: PropTypes.func.isRequired,\n\ttranslations: PropTypes.object.isRequired,\n\tupdateRole: PropTypes.func.isRequired,\n\tupdateSettings: PropTypes.func.isRequired,\n\tuploadLicense: PropTypes.func.isRequired,\n\tuploadLogo: PropTypes.func.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( [ 'admin_settings', 'common' ] )( Settings );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { CREATED_BACKUP, DELETED_BACKUP, GET_BACKUPS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get the list of backups.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getBackups = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_backups' );\n\t\tdispatch({\n\t\t\ttype: GET_BACKUPS,\n\t\t\tpayload: {\n\t\t\t\tbackups: res.data.backups\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request to the server to get the list of backups with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a GET request to the server to get the list of backups\n */\nexport const getBackupsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getBackups( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a backup.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const createBackup = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_backup' );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_BACKUP,\n\t\t\tpayload: {\n\t\t\t\tbackup: res.data.backup\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request to the server to create a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a POST request to the server to create a backup\n */\nexport const createBackupInjector = dispatch => {\n\treturn async () => {\n\t\tawait createBackup( dispatch );\n\t};\n};\n\n/**\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the backup to delete\n */\nexport const deleteBackup = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_backup', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_BACKUP,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a POST request to the server to delete a backup\n */\nexport const deleteBackupInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteBackup( dispatch, id );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { globalAxios } from 'helpers/axios.js';\nimport { CREATED_ROLE, DELETED_ROLE, GET_ALL_ROLES, UPDATED_ROLE } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get all roles.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getAllRoles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await globalAxios.get( server+'/get_all_roles' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_ROLES,\n\t\t\tpayload: {\n\t\t\t\troles: res.data.roles\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server toe retrieve all roles with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a GET request to the server to retrieve all roles\n */\nexport const getAllRolesInjector = dispatch => {\n\treturn async () => {\n\t\tawait getAllRoles( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} role - the role to create\n * @param {string} role.title - the title of the role\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\n * @param {Object} role.permissions - the permissions of the role\n * @param {string} role.searchContext - the search context for the role governing where it can be used\n * @returns {(Object|Error)} result of the POST request or an error\n */\nexport const createRole = async ( dispatch, {\n\ttitle,\n\tauthorizedRoles,\n\tsearchContext,\n\tpermissions\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/create_role', {\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_ROLE,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to create a new role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to create a new role\n */\nexport const createRoleInjector = dispatch => {\n\treturn async ({\n\t\ttitle,\n\t\tauthorizedRoles,\n\t\tsearchContext,\n\t\tpermissions\n\t}) => {\n\t\tconst res = await createRole( dispatch, {\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} role - the role to update\n * @param {string} role.id - the id of the role\n * @param {string} role.title - the new title of the role\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\n * @param {Object} role.permissions - the permissions of the role\n * @param {string} role.searchContext - the search context for the role governing where it can be used\n * @returns {(Object|Error)} result of the POST request or an error\n */\nexport const updateRole = async ( dispatch, {\n\tid,\n\ttitle,\n\tauthorizedRoles,\n\tsearchContext,\n\tpermissions\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/update_role', {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_ROLE,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to update a role\n */\nexport const updateRoleInjector = dispatch => {\n\treturn async ({\n\t\tid,\n\t\ttitle,\n\t\tauthorizedRoles,\n\t\tsearchContext,\n\t\tpermissions\n\t}) => {\n\t\tconst res = await updateRole( dispatch, {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the role to delete\n * @returns {void}\n */\nexport const deleteRole = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server+'/delete_role', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_ROLE,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to delete a role\n */\nexport const deleteRoleInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteRole( dispatch, id );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AdminSettings from 'components/admin-settings';\nimport { getUsersInjector } from 'actions/user.js';\nimport { addNotificationInjector } from 'actions/notification.js';\nimport { getLicenseInjector, uploadLicenseInjector, removeLicenseInjector, uploadLogoInjector } from 'actions/file.js';\nimport { createCustomFieldInjector, deleteCustomFieldInjector, getCustomFieldsInjector,\n\tdecrementFieldPositionInjector, incrementFieldPositionInjector } from 'actions/custom_field.js';\nimport { createBackupInjector, deleteBackupInjector, getBackupsInjector } from 'actions/backup.js';\nimport { addCustomTranslationInjector, getSettingsInjector, removeCustomTranslationInjector, updateSettingsInjector } from 'actions/settings.js';\nimport { createRoleInjector, deleteRoleInjector, getAllRolesInjector, updateRoleInjector } from 'actions/role.js';\n\n\n// FUNCTIONS //\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tadmin: state.admin,\n\t\tuser: state.user,\n\t\ttranslations: state.translations\n\t};\n}\n\nfunction mapDispatchToProps( dispatch ) {\n\treturn {\n\t\taddCustomTranslation: addCustomTranslationInjector( dispatch ),\n\t\taddNotification: addNotificationInjector( dispatch ),\n\t\tgetAllRoles: getAllRolesInjector( dispatch ),\n\t\tgetBackups: getBackupsInjector( dispatch ),\n\t\tgetUsers: getUsersInjector( dispatch ),\n\t\tcreateBackup: createBackupInjector( dispatch ),\n\t\tcreateCustomField: createCustomFieldInjector( dispatch ),\n\t\tcreateRole: createRoleInjector( dispatch ),\n\t\tdeleteBackup: deleteBackupInjector( dispatch ),\n\t\tdeleteRole: deleteRoleInjector( dispatch ),\n\t\tdeleteCustomField: deleteCustomFieldInjector( dispatch ),\n\t\tgetCustomFields: getCustomFieldsInjector( dispatch ),\n\t\tgetLicense: getLicenseInjector( dispatch ),\n\t\tgetSettings: getSettingsInjector( dispatch ),\n\t\tremoveCustomTranslation: removeCustomTranslationInjector( dispatch ),\n\t\tuploadLogo: uploadLogoInjector( dispatch ),\n\t\tupdateRole: updateRoleInjector( dispatch ),\n\t\tupdateSettings: updateSettingsInjector( dispatch ),\n\t\tuploadLicense: uploadLicenseInjector( dispatch ),\n\t\tremoveLicense: removeLicenseInjector( dispatch ),\n\t\tincrementFieldPosition: incrementFieldPositionInjector( dispatch ),\n\t\tdecrementFieldPosition: decrementFieldPositionInjector( dispatch )\n\t};\n}\n\n\n// MAIN //\n\nconst VisibleAdminSettings = connect( mapStateToProps, mapDispatchToProps )( AdminSettings );\n\n\n// EXPORTS //\n\nexport default VisibleAdminSettings;\n"],"names":["getCustomFields","dispatch","globalAxios","server","res","type","GET_CUSTOM_FIELDS","payload","customFields","data","fields","addErrorNotification","getCustomFieldsInjector","incrementFieldPosition","id","FIELD_POSITION_INCREMENTED","incrementFieldPositionInjector","decrementFieldPosition","FIELD_POSITION_DECREMENTED","decrementFieldPositionInjector","deleteCustomField","addNotification","title","i18next","message","level","DELETED_CUSTOM_FIELD","deleteCustomFieldInjector","createCustomField","name","description","options","position","showOnProfile","editableOnSignup","editableOnProfile","CREATED_CUSTOM_FIELD","field","createCustomFieldInjector","getFilesRequest","namespaceName","owner","url","qs","axios","files","receivedNamespaceFiles","receivedLicense","license","RECEIVED_LICENSE","removedLicense","REMOVED_LICENSE","RECEIVED_NAMESPACE_FILES","getUserFiles","RECEIVED_FILES","getUserFilesInjector","deleteFile","_id","DELETED_FILE","deleteFileInjector","uploadFile","formData","user","query","get","jwt","token","msg","autoDismiss","children","style","marginBottom","placement","overlay","size","variant","float","marginRight","onClick","copyToClipboard","filename","className","href","target","rel","uploadFileInjector","getFilesInjector","getOwnerFilesInjector","getAllFiles","GET_ALL_FILES","getAllFilesInjector","uploadLicense","uploadLicenseInjector","getLicense","getLicenseInjector","removeLicense","includes","removeLicenseInjector","uploadLogo","UPDATED_SETTINGS","uploadLogoInjector","asyncComponent","Configuration","License","Backups","Roles","Settings","props","activePage","selectedKey","Number","history","replace","setState","match","params","subpage","state","this","admin","getUsers","getSettings","updateSettings","addCustomTranslation","translations","removeCustomTranslation","createRole","getAllRoles","deleteRole","updateRole","createBackup","getBackups","deleteBackup","page","renderPage","t","Nav","activeKey","onSelect","handleSelect","eventKey","disabled","Component","withTranslation","GET_BACKUPS","backups","getBackupsInjector","CREATED_BACKUP","backup","createBackupInjector","DELETED_BACKUP","deleteBackupInjector","GET_ALL_ROLES","roles","getAllRolesInjector","authorizedRoles","searchContext","permissions","CREATED_ROLE","createRoleInjector","UPDATED_ROLE","updateRoleInjector","DELETED_ROLE","deleteRoleInjector","connect","addCustomTranslationInjector","addNotificationInjector","getUsersInjector","getSettingsInjector","removeCustomTranslationInjector","updateSettingsInjector","AdminSettings"],"sourceRoot":""}