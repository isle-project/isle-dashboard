{"version":3,"sources":["actions/badge.js","actions/file.js","actions/ticket.js","components/async/index.js","components/ticket-modal/index.js","utils/format_time.js"],"names":[],"mappings":"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","file":"static/js/9397.2dde9880.chunk.js","sourcesContent":["/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport i18next from 'i18next';\r\nimport contains from '@stdlib/assert/contains';\r\nimport server from 'constants/server';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { RETRIEVED_BADGES, USER_RECEIVED_BADGES } from 'constants/action_types.js';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\n/**\r\n * Create a badge notification object for use in the `react-notification-system` component.\r\n *\r\n * @param {Object} opts - options\r\n * @param {string} opts.name - name of the badge\r\n * @param {string} opts.description - description of the badge\r\n * @param {string} opts.picture - URL with icon of the badge\r\n * @returns {Object} `react-notification-system` component configuration\r\n */\r\nfunction createBadgeNotification({ name, description, picture }) {\r\n\tconst pic = server + '/badges/' + picture;\r\n\treturn {\r\n\t\tchildren: (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{i18next.t('common:received-badge')}{name}</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"received-badge-before\" />\r\n\t\t\t\t\t\t<img className=\"received-badge\" src={pic} alt=\"Received Badge\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p style={{ marginTop: 15 }}>{i18next.t('common:received-badge-for')}<b>{description}</b></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t),\r\n\t\tlevel: 'info',\r\n\t\tposition: 'tc',\r\n\t\tdismissible: 'button',\r\n\t\tautoDismiss: 0\r\n\t};\r\n}\r\n\r\n\r\n// FUNCTIONS //\r\n\r\n/**\r\n * Returns an action for retrieving the user's badges.\r\n *\r\n * @param {Array} badges - retrieved user badges\r\n * @returns {Object} action\r\n */\r\nexport function receivedUserBadges( badges ) {\r\n\treturn {\r\n\t\ttype: USER_RECEIVED_BADGES,\r\n\t\tpayload: {\r\n\t\t\tbadges\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action for retrieved available badges.\r\n *\r\n * @param {Array} badges - retrieved available badges\r\n * @returns {Object} action\r\n */\r\nexport function retrievedBadges( badges ) {\r\n\treturn {\r\n\t\ttype: RETRIEVED_BADGES,\r\n\t\tpayload: {\r\n\t\t\tbadges\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Makes a GET request to retrieve the user's badges.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getUserBadges = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_user_badges' );\r\n\t\tconst { badges, addedBadges } = res.data;\r\n\t\tdispatch( receivedUserBadges( badges ) );\r\n\t\tif ( addedBadges.length > 0 ) {\r\n\t\t\tfor ( let i = 0; i < badges.length; i++ ) {\r\n\t\t\t\tconst item = badges[i];\r\n\t\t\t\tif ( contains( addedBadges, item.name ) ) {\r\n\t\t\t\t\taddNotification( dispatch, createBadgeNotification( item ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve the user's badges.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve the user's badges\r\n */\r\nexport const getUserBadgesInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getUserBadges( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to retrieve the available badges.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getAvailableBadges = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_available_badges' );\r\n\t\tdispatch( retrievedBadges( res.data ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve the available badges.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve the available badges\r\n */\r\nexport const getAvailableBadgesInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getAvailableBadges( dispatch );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport i18next from 'i18next';\r\nimport server from 'constants/server';\r\nimport copyToClipboard from 'clipboard-copy';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { DELETED_FILE, GET_ALL_FILES, RECEIVED_FILES, RECEIVED_LICENSE, RECEIVED_NAMESPACE_FILES, REMOVED_LICENSE, UPDATED_SETTINGS } from 'constants/action_types.js';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nasync function getFilesRequest( dispatch, { namespaceName, owner = false }) {\r\n\ttry {\r\n\t\tconst url = `${server}/get_files?${qs.stringify({\r\n\t\t\tnamespaceName,\r\n\t\t\towner\r\n\t\t})}`;\r\n\t\tconst res = await axios.get( url );\r\n\t\tconst files = res.data.files;\r\n\t\tdispatch( receivedNamespaceFiles({ files, owner }) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\n\r\nexport function receivedFiles( files ) {\r\n\treturn {\r\n\t\ttype: RECEIVED_FILES,\r\n\t\tpayload: {\r\n\t\t\tfiles\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function receivedLicense( license ) {\r\n\treturn {\r\n\t\ttype: RECEIVED_LICENSE,\r\n\t\tpayload: {\r\n\t\t\tlicense\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function removedLicense() {\r\n\treturn {\r\n\t\ttype: REMOVED_LICENSE\r\n\t};\r\n}\r\n\r\nexport function receivedNamespaceFiles({ files, owner }) {\r\n\treturn {\r\n\t\ttype: RECEIVED_NAMESPACE_FILES,\r\n\t\tpayload: {\r\n\t\t\tfiles,\r\n\t\t\towner\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const getUserFiles = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_user_files' );\r\n\t\tdispatch( receivedFiles( res.data.files ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const getUserFilesInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getUserFiles( dispatch );\r\n\t};\r\n};\r\n\r\nexport const deleteFile = async ( dispatch, _id, namespaceName, owner ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( `${server}/delete_file`, { _id });\r\n\t\tif ( namespaceName ) {\r\n\t\t\tgetFilesRequest( dispatch, { namespaceName, owner });\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETED_FILE,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: _id\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:delete-file-title'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const deleteFileInjector = ( dispatch ) => {\r\n\treturn async ( _id, namespaceName, owner ) => {\r\n\t\tawait deleteFile( dispatch, _id, namespaceName, owner );\r\n\t};\r\n};\r\n\r\nexport const uploadFile = async ( dispatch, { formData, user }) => {\r\n\ttry {\r\n\t\tconst query = qs.stringify({\r\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\r\n\t\t\towner: formData.get( 'owner' ),\r\n\t\t\tjwt: user.token\r\n\t\t});\r\n\t\tconst res = await axios.post( server+'/upload_file?'+ query, formData );\r\n\t\tgetFilesRequest( dispatch, {\r\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\r\n\t\t\towner: formData.get( 'owner' )\r\n\t\t});\r\n\t\tconst msg = {\r\n\t\t\ttitle: i18next.t('common:file-upload-title'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success',\r\n\t\t\tposition: 'tl',\r\n\t\t\tautoDismiss: 10\r\n\t\t};\r\n\t\tmsg.children = <div style={{ marginBottom: 30 }}>\r\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\r\n\t\t\t\t{i18next.t('common:copy-link')}\r\n\t\t\t</Tooltip>}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tvariant=\"outline-secondary\"\r\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tcopyToClipboard( server+'/'+res.data.filename );\r\n\t\t\t\t\t\taddNotification( dispatch, {\r\n\t\t\t\t\t\t\ttitle: i18next.t('common:copied-title'),\r\n\t\t\t\t\t\t\tmessage: i18next.t('common:link-copied'),\r\n\t\t\t\t\t\t\tlevel: 'success',\r\n\t\t\t\t\t\t\tposition: 'tl'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fa fa-clipboard\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</OverlayTrigger>\r\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\r\n\t\t\t\t{i18next.t('common:open-uploaded-file')}\r\n\t\t\t</Tooltip>}>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref={server+'/'+res.data.filename}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button size=\"sm\" variant=\"outline-secondary\">\r\n\t\t\t\t\t\t<i className=\"fa fa-external-link-alt\"></i>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</a>\r\n\t\t\t</OverlayTrigger>\r\n\t\t</div>;\r\n\t\treturn addNotification( dispatch, msg );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const uploadFileInjector = ( dispatch ) => {\r\n\treturn async ({ formData, user }) => {\r\n\t\tawait uploadFile( dispatch, { formData, user } );\r\n\t};\r\n};\r\n\r\nexport const getFilesInjector = ( dispatch ) => {\r\n\treturn async ({ namespaceName }) => {\r\n\t\tawait getFilesRequest( dispatch, { namespaceName });\r\n\t};\r\n};\r\n\r\nexport const getOwnerFilesInjector = ( dispatch ) => {\r\n\treturn async ({ namespaceName }) => {\r\n\t\tawait getFilesRequest( dispatch, { namespaceName, owner: true });\r\n\t};\r\n};\r\n\r\nexport const getAllFiles = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_all_files' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_FILES,\r\n\t\t\tpayload: {\r\n\t\t\t\tfiles: res.data.files\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const getAllFilesInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getAllFiles( dispatch );\r\n\t};\r\n};\r\n\r\nexport const uploadLicense = async ( dispatch, { formData, user }) => {\r\n\ttry {\r\n\t\tconst query = qs.stringify({\r\n\t\t\tjwt: user.token\r\n\t\t});\r\n\t\tconst res = await axios.post( server+'/upload_license?'+ query, formData );\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:uploaded'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success',\r\n\t\t\tposition: 'tl',\r\n\t\t\tautoDismiss: 5\r\n\t\t});\r\n\t\tdispatch( receivedLicense( res.data.license ) );\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const uploadLicenseInjector = ( dispatch ) => {\r\n\treturn async ({ formData, user }) => {\r\n\t\tawait uploadLicense( dispatch, { formData, user } );\r\n\t};\r\n};\r\n\r\nexport const getLicense = async ( dispatch, user ) => {\r\n\ttry {\r\n\t\tconst query = qs.stringify({\r\n\t\t\tjwt: user.token\r\n\t\t});\r\n\t\tconst res = await axios.get( server+'/get_license?'+ query );\r\n\t\tdispatch( receivedLicense( res.data.license ) );\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const getLicenseInjector = ( dispatch ) => {\r\n\treturn async ( user ) => {\r\n\t\tawait getLicense( dispatch, user );\r\n\t};\r\n};\r\n\r\nexport const removeLicense = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/remove_license' );\r\n\t\tif ( res.data.message === 'ok' ) {\r\n\t\t\tdispatch( removedLicense() );\r\n\t\t}\r\n\t} catch ( err ) {\r\n\t\tif ( err.message.includes( '404' ) ) {\r\n\t\t\t// Case: License file has already been removed\r\n\t\t\tdispatch( removedLicense() );\r\n\t\t}\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\nexport const removeLicenseInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait removeLicense( dispatch );\r\n\t};\r\n};\r\n\r\nexport const uploadLogo = async ( dispatch, { formData, user }) => {\r\n\ttry {\r\n\t\tconst query = qs.stringify({\r\n\t\t\tjwt: user.token\r\n\t\t});\r\n\t\tconst res = await axios.post( server+'/upload_logo?'+ query, formData );\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:uploaded'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success',\r\n\t\t\tposition: 'tl',\r\n\t\t\tautoDismiss: 5\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATED_SETTINGS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\treturn res.data;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\nexport const uploadLogoInjector = ( dispatch ) => {\r\n\treturn async ({ formData, user }) => {\r\n\t\tconst res = await uploadLogo( dispatch, { formData, user } );\r\n\t\treturn res;\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport server from 'constants/server';\r\nimport i18next from 'i18next';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { CREATED_TICKET, DELETED_TICKET, GET_ALL_TICKETS,\r\n\tGET_COURSE_TICKETS, GET_USER_TICKETS, TICKET_CLOSED,\r\n\tTICKET_OPENED, TICKET_MESSAGE_ADDED, TICKET_PRIORITY_UPDATED } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Makes a GET request to the server to get all tickets.\r\n *\r\n * @param {Function} dispatch - dispatch object\r\n * @returns {void}\r\n */\r\nexport const getAllTickets = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_all_tickets' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_TICKETS,\r\n\t\t\tpayload: {\r\n\t\t\t\ttickets: res.data.tickets\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a GET request to get all tickets with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a GET request to get all tickets\r\n */\r\nexport const getAllTicketsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getAllTickets( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to get all tickets for the given course.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} namespaceID - course id\r\n * @returns {void}\r\n */\r\nexport const getCourseTickets = async ( dispatch, namespaceID ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_course_tickets?'+qs.stringify({ namespaceID }) );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_COURSE_TICKETS,\r\n\t\t\tpayload: {\r\n\t\t\t\ttickets: res.data.tickets\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a GET request to get all tickets for the given course with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a GET request to get all tickets for the given course\r\n */\r\nexport const getCourseTicketsInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait getCourseTickets( dispatch, id );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to get all tickets for the user making the request.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getUserTickets = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_user_tickets' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_USER_TICKETS,\r\n\t\t\tpayload: {\r\n\t\t\t\ttickets: res.data.tickets\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a GET request to get tickets for the user making the request with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a GET request to get tickets for the user making the request\r\n */\r\nexport const getUserTicketsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getUserTickets( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to delete a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - ticket id\r\n * @returns {void}\r\n */\r\nexport const deleteTicket = async ( dispatch, id ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/delete_ticket', {\r\n\t\t\tid\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:deleted'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: DELETED_TICKET,\r\n\t\t\tpayload: {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to delete a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to delete a ticket\r\n */\r\nexport const deleteTicketInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait deleteTicket( dispatch, id );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to create a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} ticket - ticket object\r\n * @param {string} ticket.title - ticket title\r\n * @param {string} ticket.description - ticket description\r\n * @param {Object} ticket.platform - user platform\r\n * @param {Object} ticket.namespace - namespace object\r\n * @param {Array} ticket.files - array of files\r\n * @returns {void}\r\n */\r\nexport const createTicket = async ( dispatch, {\r\n\ttitle,\r\n\tdescription,\r\n\tplatform,\r\n\tnamespace,\r\n\tfiles\r\n}) => {\r\n\ttry {\r\n\t\tlet res;\r\n\t\tlet attachments;\r\n\t\tif ( !files || files.length === 0 ) {\r\n\t\t\tres = await axios.post( server + '/create_ticket', {\r\n\t\t\t\ttitle,\r\n\t\t\t\tdescription,\r\n\t\t\t\tplatform,\r\n\t\t\t\tnamespaceID: namespace._id\r\n\t\t\t});\r\n\t\t\tattachments = [];\r\n\t\t} else {\r\n\t\t\tconst formData = new FormData();\r\n\t\t\tfor ( let i = 0; i < files.length; i++ ) {\r\n\t\t\t\tformData.append( 'attachment', files[ i ] );\r\n\t\t\t}\r\n\t\t\tformData.append( 'title', title );\r\n\t\t\tformData.append( 'description', description );\r\n\t\t\tformData.append( 'platform', JSON.stringify( platform ) );\r\n\t\t\tformData.append( 'namespaceID', namespace._id );\r\n\t\t\tres = await axios.post( server + '/create_ticket', formData );\r\n\t\t\tattachments = res.data.attachments;\r\n\t\t}\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:created'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: CREATED_TICKET,\r\n\t\t\tpayload: {\r\n\t\t\t\ttitle,\r\n\t\t\t\tdescription,\r\n\t\t\t\tplatform,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tattachments\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to create a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to create a ticket\r\n */\r\nexport const createTicketInjector = dispatch => {\r\n\treturn async ({\r\n\t\ttitle,\r\n\t\tdescription,\r\n\t\tplatform,\r\n\t\tnamespace,\r\n\t\tfiles\r\n\t}) => {\r\n\t\tawait createTicket( dispatch, {\r\n\t\t\ttitle,\r\n\t\t\tdescription,\r\n\t\t\tplatform,\r\n\t\t\tnamespace,\r\n\t\t\tfiles\r\n\t\t});\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to send a message to a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} opts - message options\r\n * @param {string} opts.message - message content\r\n * @param {string} opts.ticketID - ticket id\r\n * @param {Object} opts.user - user object\r\n * @returns {void}\r\n */\r\nexport const sendTicketMessage = async ( dispatch, { message, ticketID, user } ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/add_ticket_message', {\r\n\t\t\tbody: message,\r\n\t\t\tticketID\r\n\t\t});\r\n\t\tconst msgObj = {\r\n\t\t\tbody: message,\r\n\t\t\tauthor: user.name,\r\n\t\t\temail: user.email,\r\n\t\t\tpicture: user.picture,\r\n\t\t\tcreatedAt: new Date().getTime()\r\n\t\t};\r\n\t\tdispatch({\r\n\t\t\ttype: TICKET_MESSAGE_ADDED,\r\n\t\t\tpayload: {\r\n\t\t\t\tid: ticketID,\r\n\t\t\t\tmessage: msgObj\r\n\t\t\t}\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:added'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to send a message to a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to send a message to a ticket\r\n */\r\nexport const sendTicketMessageInjector = dispatch => {\r\n\treturn async ({ message, ticketID, user }) => {\r\n\t\tawait sendTicketMessage( dispatch, { message, ticketID, user } );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to close a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - ticket id\r\n * @returns {void}\r\n */\r\nexport const closeTicket = async ( dispatch, id ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/close_ticket', {\r\n\t\t\tticketID: id\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:closed'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: TICKET_CLOSED,\r\n\t\t\tpayload: {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to close a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to close a ticket\r\n */\r\nexport const closeTicketInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait closeTicket( dispatch, id );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to update priority of a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - ticket id\r\n * @param {string} priority - new priority\r\n * @returns {void}\r\n */\r\nexport const updatePriority = async ( dispatch, id, priority ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/update_ticket_priority', {\r\n\t\t\tticketID: id,\r\n\t\t\tpriority\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:updated'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: TICKET_PRIORITY_UPDATED,\r\n\t\t\tpayload: {\r\n\t\t\t\tid,\r\n\t\t\t\tpriority\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to update priority of a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to update priority of a ticket\r\n */\r\nexport const updatePriorityInjector = dispatch => {\r\n\treturn async ( id, priority ) => {\r\n\t\tawait updatePriority( dispatch, id, priority );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to open a ticket.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - ticket id\r\n * @returns {void}\r\n */\r\nexport const openTicket = async ( dispatch, id ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/open_ticket', {\r\n\t\t\tticketID: id\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:opened'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: TICKET_OPENED,\r\n\t\t\tpayload: {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function that makes a POST request to open a ticket with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function that makes a POST request to open a ticket\r\n */\r\nexport const openTicketInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait openTicket( dispatch, id );\r\n\t};\r\n};\r\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport Spinner from 'components/spinner';\n\n\n// MAIN //\n\n/**\n * Adds a spinner to a component for asynchronous loading.\n *\n * @param {Component} importComponent - component to be wrapped\n * @returns {AsyncComponent} wrapped component\n */\nfunction asyncComponent( importComponent ) {\n\tclass AsyncComponent extends Component {\n\t\tconstructor( props ) {\n\t\t\tsuper( props );\n\n\t\t\tthis.state = {\n\t\t\t\tcomponent: null\n\t\t\t};\n\t\t}\n\n\t\tasync componentDidMount() {\n\t\t\tconst { default: component } = await importComponent();\n\t\t\tthis.setState({ // eslint-disable-line react/no-did-mount-set-state\n\t\t\t\tcomponent: component\n\t\t\t});\n\t\t}\n\n\t\trender() {\n\t\t\tconst C = this.state.component;\n\t\t\treturn C ? <C {...this.props} /> : <Spinner />;\n\t\t}\n\t}\n\treturn AsyncComponent;\n}\n\n\n// EXPORTS //\n\nexport default asyncComponent;\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport server from 'constants/server';\r\nimport './ticket_modal.css';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nconst createTooltip = ( str ) => {\r\n\treturn <Tooltip id=\"tooltip\">{str}</Tooltip>;\r\n};\r\n\r\n\r\n// MAIN //\r\n\r\nclass TicketModal extends Component {\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\r\n\t\tthis.state = {\r\n\t\t\tresponse: ''\r\n\t\t};\r\n\t}\r\n\r\n\thandleResponseChange = ( event ) => {\r\n\t\tthis.setState({\r\n\t\t\tresponse: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleResponseSubmit = () => {\r\n\t\tthis.props.submitTicketMessage({\r\n\t\t\tmessage: this.state.response,\r\n\t\t\tticketID: this.props.ticket._id\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tresponse: ''\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleCompletion = () => {\r\n\t\tif ( this.props.ticket.done ) {\r\n\t\t\tthis.props.openTicket( this.props.ticket._id );\r\n\t\t} else {\r\n\t\t\tthis.props.closeTicket( this.props.ticket._id );\r\n\t\t}\r\n\t};\r\n\r\n\trenderMessage = ( val, idx ) => {\r\n\t\tconst t = this.props.t;\r\n\t\tconst createdAt = new Date( val.createdAt );\r\n\t\treturn (\r\n\t\t\t<div className=\"message-container\" key={idx} >\r\n\t\t\t\t<div className=\"message-data\">\r\n\t\t\t\t\t<div className=\"message-profile-pic\">\r\n\t\t\t\t\t\t<img src={`${server}/thumbnail/${val.picture}`} alt=\"User Profile Pic\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"message-author-line\">\r\n\t\t\t\t\t\t<span className=\"message-author\">{ val.author }</span>\r\n\t\t\t\t\t\t&nbsp;{t('common:wrote-on', { date: `${createdAt.toLocaleTimeString()} ${createdAt.toLocaleDateString()}` })}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"message-body\">\r\n\t\t\t\t\t{val.body}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst t = this.props.t;\r\n\t\tconst { ticket } = this.props;\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Modal show={this.props.show} onHide={this.props.onHide} dialogClassName=\"modal-60w\" >\r\n\t\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t\t<Modal.Title as=\"h3\" style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t{t('common:title')}: {ticket.title}\r\n\t\t\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={createTooltip( t('close-ticket-modal') )}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={this.props.onHide}\r\n\t\t\t\t\t\t\t\t\tstyle={{ float: 'right' }}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\r\n\t\t\t\t\t\t\t\t\taria-label={t('close-ticket-modal')}\r\n\t\t\t\t\t\t\t\t\tclassName=\"modal-close\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">x</span>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body style={{ height: '60vh', overflowY: 'auto' }}>\r\n\t\t\t\t\t\t<span className=\"title\">{t('common:description')}:</span>\r\n\t\t\t\t\t\t<p style={{ whiteSpace: 'pre-wrap' }}>\r\n\t\t\t\t\t\t\t{ticket.description}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{ticket.namespace.title ?\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:course')}: `}</span>\r\n\t\t\t\t\t\t\t\t<span>{ticket.namespace.title}</span>\r\n\t\t\t\t\t\t\t\t{' | '}\r\n\t\t\t\t\t\t\t</Fragment> :\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ticket.lesson ?\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:lesson')}: `}</span>\r\n\t\t\t\t\t\t\t\t<span>{ticket.lesson.title}</span>\r\n\t\t\t\t\t\t\t\t{' | '}\r\n\t\t\t\t\t\t\t</Fragment> :\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ticket.component ?\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:component')}: `}</span>\r\n\t\t\t\t\t\t\t\t<span>{ticket.component}</span>\r\n\t\t\t\t\t\t\t</Fragment> :\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ticket.attachments.length > 0 ?\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:attachments')}: `}</span>\r\n\t\t\t\t\t\t\t\t{ticket.attachments.map( ( file, idx ) => {\r\n\t\t\t\t\t\t\t\t\treturn ( <a aria-label={t('common:attachments')} href={`${server}/attachments/${file.filename}`} key={idx} style={{ marginLeft: 6 }} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-link\" style={{ marginRight: 2 }} ></i>\r\n\t\t\t\t\t\t\t\t\t\t{file.title}\r\n\t\t\t\t\t\t\t\t\t</a> );\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Fragment> :\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t<span className=\"title\">{t('common:messages')}:</span>\r\n\t\t\t\t\t\t{ticket.messages.map( this.renderMessage )}\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer style={{ background: 'ghostwhite' }} >\r\n\t\t\t\t\t\t<FormGroup controlId=\"form-text\" style={{ width: 'calc(100% - 200px)' }} >\r\n\t\t\t\t\t\t\t<FormLabel>{t('enter-response')}</FormLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tas=\"textarea\" rows=\"5\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.response}\r\n\t\t\t\t\t\t\t\tplaceholder={ticket.done ? t('require-open-ticket') : t('response-comes-here')}\r\n\t\t\t\t\t\t\t\tonChange={this.handleResponseChange}\r\n\t\t\t\t\t\t\t\tdisabled={ticket.done}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<div style={{ float: 'right', width: '180px' }} className=\"d-grid gap-2\" >\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={this.handleResponseSubmit}\r\n\t\t\t\t\t\t\t\tdisabled={!this.state.response || ticket.done}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('submit-response')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={this.toggleCompletion}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ticket.done ? t('common:open-ticket') : t('common:close-ticket')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={this.props.onHide}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t('common:hide')}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n// PROPERTIES //\r\n\r\nTicketModal.propTypes = {\r\n\tcloseTicket: PropTypes.func.isRequired,\r\n\tonHide: PropTypes.func.isRequired,\r\n\topenTicket: PropTypes.func.isRequired,\r\n\tshow: PropTypes.bool.isRequired,\r\n\tsubmitTicketMessage: PropTypes.func.isRequired,\r\n\tticket: PropTypes.object.isRequired\r\n};\r\n\r\nTicketModal.defaultProps = {};\r\n\r\n\r\n// EXPORTS\r\n\r\nexport default withTranslation( [ 'ticket_modal', 'common' ] )( TicketModal );\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport floor from '@stdlib/math/base/special/floor';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n* Formats a timestamp in a human readable format.\r\n*\r\n* @param {number} timestamp - timestamp\r\n* @param {Object} [opts] - options\r\n* @param {string} [opts.hours] - hours\r\n* @param {string} [opts.minutes] - minutes\r\n* @param {string} [opts.seconds] - seconds\r\n* @returns {string} formatted timestamp\r\n*/\r\nconst formatTime = ( time, opts = { hours: true, minutes: true, seconds: true }) => {\r\n\ttime = time / 1000;\r\n\tconst hours = floor( time / ( 60*60 ) );\r\n\ttime = time % ( 60*60 );\r\n\tlet minutes = floor( time / 60 );\r\n\tif ( minutes < 10 ) {\r\n\t\tminutes = '0'+minutes;\r\n\t}\r\n\ttime = time % 60;\r\n\tlet seconds = floor( time );\r\n\tif ( seconds < 10 ) {\r\n\t\tseconds = '0'+seconds;\r\n\t}\r\n\tlet out = '';\r\n\tif ( opts.hours ) {\r\n\t\tout += hours;\r\n\t}\r\n\tif ( opts.minutes ) {\r\n\t\tif ( out ) {\r\n\t\t\tout += ':';\r\n\t\t}\r\n\t\tout += minutes;\r\n\t}\r\n\tif ( opts.seconds ) {\r\n\t\tif ( out ) {\r\n\t\t\tout += ':';\r\n\t\t}\r\n\t\tout += seconds;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default formatTime;\r\n"],"sourceRoot":""}