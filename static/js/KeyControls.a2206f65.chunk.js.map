{"version":3,"sources":["../node_modules/@isle-project/components/key-controls/main.js"],"names":[],"mappings":"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","file":"static/js/KeyControls.a2206f65.chunk.js","sourcesContent":["\n// MODULES //\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport objectKeys from '@stdlib/utils/keys';\nimport lowercase from '@stdlib/string/lowercase';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport SessionContext from '@isle-project/session/context.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:key-controls' );\nconst RE_ALPHABETIC = /^[a-z]$/i;\nconst INPUTS = [ 'input', 'textarea' ];\n\n\n// MAIN //\n\n/**\n* Keyboard controls.\n*\n* @property {Object} actions - object mapping key codes to events\n* @property {Node} container - DOM node for which to attach event listeners\n*/\nclass KeyControls extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\tcomponentDidMount() {\n\t\tdebug( 'Component has mounted...' );\n\t\tthis.addListeners();\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.container !== prevProps.container ) {\n\t\t\tdebug( 'Container has changed, re-attach event listeners...' );\n\t\t\tthis.removeListeners( prevProps.container );\n\t\t\tthis.addListeners();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdebug( 'Component has unmounted...' );\n\t\tthis.removeListeners();\n\t}\n\n\taddListeners = () => {\n\t\tconst keys = objectKeys( this.props.actions );\n\t\tdebug( `Add keydown event listeners for ${this.props.container ? 'container' : 'document'}: ${keys.join( ', ')}` );\n\t\tif ( this.props.container ) {\n\t\t\ttry {\n\t\t\t\tlet node;\n\t\t\t\tif ( isString( this.props.container ) ) {\n\t\t\t\t\tnode = document.querySelector( this.props.container );\n\t\t\t\t} else {\n\t\t\t\t\tnode = ReactDOM.findDOMNode( this.props.container );\n\t\t\t\t}\n\t\t\t\tnode.addEventListener( 'keydown', this.triggerEvent );\n\t\t\t} catch ( err ) {\n\t\t\t\tdebug( err.message );\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.addEventListener( 'keydown', this.triggerDocEvent );\n\t\t}\n\t};\n\n\tremoveListeners = ( container ) => {\n\t\tconst keys = objectKeys( this.props.actions );\n\t\tdebug( `Remove keydown event listeners for ${container ? 'container' : 'document'}: ${keys.join( ', ')}` );\n\t\tif ( container ) {\n\t\t\ttry {\n\t\t\t\tlet node;\n\t\t\t\tif ( isString( this.props.container ) ) {\n\t\t\t\t\tnode = document.querySelector( this.props.container );\n\t\t\t\t} else {\n\t\t\t\t\tnode = ReactDOM.findDOMNode( this.props.container );\n\t\t\t\t}\n\t\t\t\tnode.removeEventListener( 'keydown', this.triggerEvent );\n\t\t\t} catch ( err ) {\n\t\t\t\tdebug( err.message );\n\t\t\t}\n\t\t}\n\t\tdocument.removeEventListener( 'keydown', this.triggerDocEvent );\n\t};\n\n\ttriggerEvent = ( event ) => {\n\t\tlet keyName = event.key;\n\t\tdebug( `Received key press for container: ${keyName}` );\n\t\tlet modifiers = '';\n\t\tif ( event.ctrlKey ) {\n\t\t\tmodifiers += 'ctrl+';\n\t\t}\n\t\tif ( event.shiftKey ) {\n\t\t\tkeyName = lowercase( keyName );\n\t\t\tmodifiers += 'shift+';\n\t\t}\n\t\tif ( event.altKey ) {\n\t\t\tmodifiers += 'alt+';\n\t\t}\n\t\tif ( event.metaKey ) {\n\t\t\tmodifiers += 'meta+';\n\t\t}\n\t\tconst fn = this.props.actions[ modifiers+keyName ];\n\t\tif (\n\t\t\tdocument.activeElement === this.props.container &&\n\t\t\tisFunction( fn )\n\t\t) {\n\t\t\tif ( !modifiers && RE_ALPHABETIC.test( keyName ) && document.activeElement !== document.body ) {\n\t\t\t\tconst el = document.activeElement;\n\t\t\t\tconst inTextField = el && ( INPUTS.indexOf( el.tagName.toLowerCase() ) !== -1 || el.isContentEditable );\n\t\t\t\tif ( inTextField || el.tagName === 'CANVAS' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tfn( event );\n\t\t}\n\t};\n\n\ttriggerDocEvent = ( event ) => {\n\t\tlet keyName = event.key;\n\t\tdebug( `Received key press for document: ${keyName}` );\n\t\tlet modifiers = '';\n\t\tif ( event.ctrlKey ) {\n\t\t\tmodifiers += 'ctrl+';\n\t\t}\n\t\tif ( event.shiftKey ) {\n\t\t\tkeyName = lowercase( keyName );\n\t\t\tmodifiers += 'shift+';\n\t\t}\n\t\tif ( event.altKey ) {\n\t\t\tmodifiers += 'alt+';\n\t\t}\n\t\tif ( event.metaKey ) {\n\t\t\tmodifiers += 'meta+';\n\t\t}\n\t\tconst fn = this.props.actions[ modifiers+keyName ];\n\t\tif ( isFunction( fn ) ) {\n\t\t\tif (\n\t\t\t\t!modifiers &&\n\t\t\t\tRE_ALPHABETIC.test( keyName ) &&\n\t\t\t\tdocument.activeElement !== document.body\n\t\t\t) {\n\t\t\t\tconst el = document.activeElement;\n\t\t\t\tconst inTextField = el && ( INPUTS.indexOf( el.tagName.toLowerCase() ) !== -1 || el.isContentEditable );\n\t\t\t\tif ( inTextField || el.tagName === 'CANVAS' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tfn( event );\n\t\t}\n\t};\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\n\n// PROPERTIES //\n\nKeyControls.defaultProps = {\n\tactions: {},\n\tcontainer: null\n};\n\nKeyControls.propTypes = {\n\tactions: PropTypes.objectOf( PropTypes.func ),\n\tcontainer: PropTypes.oneOfType([ PropTypes.object, PropTypes.element, PropTypes.string ])\n};\n\nKeyControls.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default KeyControls;\n"],"sourceRoot":""}