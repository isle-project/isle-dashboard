{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/hierarchical_clustering.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":["input"],"mappings":"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","file":"static/js/HierarchicalClusteringMenu.163d4dac.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport incrspace from '@stdlib/array/incrspace';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport NumberInput from '@isle-project/components/input/number';\nimport Dashboard from '@isle-project/components/dashboard';\nimport factor from '@isle-project/utils/factor-variable';\nimport HierarchicalClustering from '@isle-project/components/models/hierarchical-clustering';\nimport { DATA_EXPLORER_HIERARCHICAL_CLUSTERING } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DISTANCES = [ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ];\nconst LINKAGE = [ 'complete', 'single' ];\n\n\n// MAIN //\n\nconst HierarchicalClusteringMenu = ( props ) => {\n\tconst { quantitative, t } = props;\n\tconst compute = ( variables, attach, K, linkage, distance ) => {\n\t\tconst output = <HierarchicalClustering\n\t\t\tvariables={variables} K={K} linkage={linkage} distance={distance}\n\t\t\tdata={props.data}\n\t\t\tonResult={( result ) => {\n\t\t\t\tif ( attach ) {\n\t\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\t\tconst suffix = variables.map( x => x[ 0 ] ).join( '' );\n\t\t\t\t\tconst assignments = result.getClusterAssignments( K );\n\t\t\t\t\tconst name = factor( 'hclust_cluster_' + suffix, incrspace( 0, K, 1 ).map( x => `Cluster ${x+1}` ) );\n\t\t\t\t\tnewData[ name ] = assignments;\n\t\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t\t}\n\t\t\t\t\tprops.onGenerate( newCategorical, newData );\n\t\t\t\t}\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_HIERARCHICAL_CLUSTERING, {\n\t\t\tvariables, attach, K, linkage, distance\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('Hierarchical Clustering')}\n\t\t\t\t<QuestionButton title={t('Hierarchical Clustering')} content={t('Hierarchical Clustering-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={compute}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variables')} multi\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('attach-clusters-table')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={t('number-of-clusters')}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tdefaultValue={3}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('linkage')}\n\t\t\t\t\t\tdefaultValue={LINKAGE[ 0 ]}\n\t\t\t\t\t\toptions={LINKAGE}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('distance')}\n\t\t\t\t\t\tdefaultValue={DISTANCES[ 0 ]}\n\t\t\t\t\t\toptions={DISTANCES}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nHierarchicalClusteringMenu.defaultProps = {\n\tlogAction() {}\n};\n\nHierarchicalClusteringMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HierarchicalClusteringMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleKeyPress = useCallback( ( event ) => {\n\t\tif ( event.which === 13 ) {\n\t\t\tonChange( !value );\n\t\t\tupdateValue( !value );\n\t\t}\n\t}, [ onChange, updateValue, value ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tonKeyPress={handleKeyPress}\n\t\tdisabled={disabled}\n\t\taria-label={props.legend}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\tif ( disabled ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{ color: 'darkgray' }}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n * Creates a tooltip for a number input.\n *\n * @param {Object} options - function options\n * @param {number} options.min - minimum value\n * @param {number} options.max - maximum value\n * @param {number} options.step - step size\n * @param {Function} options.t - translation function\n * @returns {string} tooltip\n */\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}