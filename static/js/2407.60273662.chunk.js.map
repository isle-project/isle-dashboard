{"version":3,"sources":["ev/components/admin-settings/user-fields/index.js","ev/components/admin-settings/branding/index.js","ev/components/admin-settings/texts/index.js","components/admin-settings/index.js","actions/backup.js","actions/role.js","containers/visible-admin-settings/index.js"],"names":[],"mappings":"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","file":"static/js/2407.60273662.chunk.js","sourcesContent":["// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst UserFields = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default UserFields;\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst Branding = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Branding;\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst Texts = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Texts;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, Route, Routes } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport asyncComponent from 'components/async';\nconst Configuration = asyncComponent( () => import( './configuration.js' ) );\nconst License = asyncComponent( () => import( './license.js' ) );\nconst Backups = asyncComponent( () => import( './backups.js' ) );\nconst Roles = asyncComponent( () => import( './roles.js' ) );\nimport UserFields from 'ev/components/admin-settings/user-fields';\nimport Branding from 'ev/components/admin-settings/branding';\nimport Texts from 'ev/components/admin-settings/texts';\nimport './admin_settings.css';\n\n\n// MAIN //\n\n/**\n * Renders the admin settings page.\n *\n * @param {Object} props - component properties\n * @returns {ReactElement} setting page\n */\nconst Settings = ( props ) => {\n\tconst [ activePage, setActivePage ] = useState( window.location.pathname );\n\tconst { t } = useTranslation( [ 'admin_settings', 'common' ] );\n\tconst navigate = useNavigate();\n\tconst handleSelect = ( selectedKey ) => {\n\t\tnavigate( selectedKey );\n\t\tsetActivePage( selectedKey );\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"admin-settings-navbar\" >\n\t\t\t\t<Nav variant=\"pills\" activeKey={activePage} onSelect={handleSelect}>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/license\" title=\"License\" >{t('license')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/configuration\" title=\"Configuration\" >{t('configuration')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/branding\" title=\"Branding\" >{t('branding')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/texts\" title=\"Texts\" >{t('common:texts')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/credentials\" title=\"Roles\" >{t('roles')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link disabled eventKey=\"/admin/settings/badges\" title=\"Badges\" >{t('common:badges')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/user-fields\" title=\"User Fields\" >{t('user-fields')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/backups\" title=\"Backups\" >{t('backups')}</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t</div>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"license\" element={<License\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tuploadLicense={props.uploadLicense}\n\t\t\t\t\tgetLicense={props.getLicense}\n\t\t\t\t\tuser={props.user}\n\t\t\t\t\tremoveLicense={props.removeLicense}\n\t\t\t\t\tgetUsers={props.getUsers} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"configuration\" element={<Configuration\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tuser={props.user}\n\t\t\t\t\tgetSettings={props.getSettings}\n\t\t\t\t\tupdateSettings={props.updateSettings} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"branding\" element={<Branding\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tuser={props.user}\n\t\t\t\t\tuploadLogo={props.uploadLogo}\n\t\t\t\t\tupdateSettings={props.updateSettings} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"texts\" element={<Texts\n\t\t\t\t\taddCustomTranslation={props.addCustomTranslation}\n\t\t\t\t\ttranslations={props.translations}\n\t\t\t\t\tremoveCustomTranslation={props.removeCustomTranslation} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"credentials\" element={<Roles\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tcreateRole={props.createRole}\n\t\t\t\t\tgetAllRoles={props.getAllRoles}\n\t\t\t\t\tdeleteRole={props.deleteRole}\n\t\t\t\t\tupdateRole={props.updateRole} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"user-fields\" element={<UserFields\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tuser={props.user}\n\t\t\t\t\tcreateCustomField={props.createCustomField}\n\t\t\t\t\tdeleteCustomField={props.deleteCustomField}\n\t\t\t\t\tgetCustomFields={props.getCustomFields}\n\t\t\t\t\tincrementFieldPosition={props.incrementFieldPosition}\n\t\t\t\t\tdecrementFieldPosition={props.decrementFieldPosition} />}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"backups\" element={<Backups\n\t\t\t\t\tadmin={props.admin}\n\t\t\t\t\tuser={props.user}\n\t\t\t\t\tcreateBackup={props.createBackup}\n\t\t\t\t\tgetBackups={props.getBackups}\n\t\t\t\t\tdeleteBackup={props.deleteBackup} />}\n\t\t\t\t/>\n\t\t\t</Routes>\n\t\t</Fragment>\n\t);\n};\n\n\n// PROPERTIES //\n\nSettings.propTypes = {\n\taddCustomTranslation: PropTypes.func.isRequired,\n\tadmin: PropTypes.object.isRequired,\n\tcreateBackup: PropTypes.func.isRequired,\n\tcreateCustomField: PropTypes.func.isRequired,\n\tcreateRole: PropTypes.func.isRequired,\n\tdecrementFieldPosition: PropTypes.func.isRequired,\n\tdeleteBackup: PropTypes.func.isRequired,\n\tdeleteCustomField: PropTypes.func.isRequired,\n\tdeleteRole: PropTypes.func.isRequired,\n\tgetAllRoles: PropTypes.func.isRequired,\n\tgetBackups: PropTypes.func.isRequired,\n\tgetCustomFields: PropTypes.func.isRequired,\n\tgetLicense: PropTypes.func.isRequired,\n\tgetSettings: PropTypes.func.isRequired,\n\tgetUsers: PropTypes.func.isRequired,\n\tincrementFieldPosition: PropTypes.func.isRequired,\n\tremoveCustomTranslation: PropTypes.func.isRequired,\n\tremoveLicense: PropTypes.func.isRequired,\n\ttranslations: PropTypes.object.isRequired,\n\tupdateRole: PropTypes.func.isRequired,\n\tupdateSettings: PropTypes.func.isRequired,\n\tuploadLicense: PropTypes.func.isRequired,\n\tuploadLogo: PropTypes.func.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default Settings;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { CREATED_BACKUP, DELETED_BACKUP, GET_BACKUPS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get the list of backups.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getBackups = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_backups' );\n\t\tdispatch({\n\t\t\ttype: GET_BACKUPS,\n\t\t\tpayload: {\n\t\t\t\tbackups: res.data.backups\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request to the server to get the list of backups with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a GET request to the server to get the list of backups\n */\nexport const getBackupsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getBackups( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a backup.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const createBackup = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_backup' );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_BACKUP,\n\t\t\tpayload: {\n\t\t\t\tbackup: res.data.backup\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request to the server to create a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a POST request to the server to create a backup\n */\nexport const createBackupInjector = dispatch => {\n\treturn async () => {\n\t\tawait createBackup( dispatch );\n\t};\n};\n\n/**\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the backup to delete\n */\nexport const deleteBackup = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_backup', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_BACKUP,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function making a POST request to the server to delete a backup\n */\nexport const deleteBackupInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteBackup( dispatch, id );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { globalAxios } from 'helpers/axios.js';\nimport { CREATED_ROLE, DELETED_ROLE, GET_ALL_ROLES, UPDATED_ROLE } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get all roles.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getAllRoles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await globalAxios.get( server+'/get_all_roles' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_ROLES,\n\t\t\tpayload: {\n\t\t\t\troles: res.data.roles\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server toe retrieve all roles with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a GET request to the server to retrieve all roles\n */\nexport const getAllRolesInjector = dispatch => {\n\treturn async () => {\n\t\tawait getAllRoles( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} role - the role to create\n * @param {string} role.title - the title of the role\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\n * @param {Object} role.permissions - the permissions of the role\n * @param {string} role.searchContext - the search context for the role governing where it can be used\n * @returns {(Object|Error)} result of the POST request or an error\n */\nexport const createRole = async ( dispatch, {\n\ttitle,\n\tauthorizedRoles,\n\tsearchContext,\n\tpermissions\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/create_role', {\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_ROLE,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to create a new role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to create a new role\n */\nexport const createRoleInjector = dispatch => {\n\treturn async ({\n\t\ttitle,\n\t\tauthorizedRoles,\n\t\tsearchContext,\n\t\tpermissions\n\t}) => {\n\t\tconst res = await createRole( dispatch, {\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} role - the role to update\n * @param {string} role.id - the id of the role\n * @param {string} role.title - the new title of the role\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\n * @param {Object} role.permissions - the permissions of the role\n * @param {string} role.searchContext - the search context for the role governing where it can be used\n * @returns {(Object|Error)} result of the POST request or an error\n */\nexport const updateRole = async ( dispatch, {\n\tid,\n\ttitle,\n\tauthorizedRoles,\n\tsearchContext,\n\tpermissions\n}) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server + '/update_role', {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_ROLE,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to update a role\n */\nexport const updateRoleInjector = dispatch => {\n\treturn async ({\n\t\tid,\n\t\ttitle,\n\t\tauthorizedRoles,\n\t\tsearchContext,\n\t\tpermissions\n\t}) => {\n\t\tconst res = await updateRole( dispatch, {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tauthorizedRoles,\n\t\t\tsearchContext,\n\t\t\tpermissions\n\t\t});\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a role.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the role to delete\n * @returns {void}\n */\nexport const deleteRole = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await globalAxios.post( server+'/delete_role', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_ROLE,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a role with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to delete a role\n */\nexport const deleteRoleInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteRole( dispatch, id );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AdminSettings from 'components/admin-settings';\nimport { getUsersInjector } from 'actions/user.js';\nimport { addNotificationInjector } from 'actions/notification.js';\nimport { getLicenseInjector, uploadLicenseInjector, removeLicenseInjector, uploadLogoInjector } from 'actions/file.js';\nimport { createCustomFieldInjector, deleteCustomFieldInjector, getCustomFieldsInjector,\n\tdecrementFieldPositionInjector, incrementFieldPositionInjector } from 'actions/custom_field.js';\nimport { createBackupInjector, deleteBackupInjector, getBackupsInjector } from 'actions/backup.js';\nimport { addCustomTranslationInjector, getSettingsInjector, removeCustomTranslationInjector, updateSettingsInjector } from 'actions/settings.js';\nimport { createRoleInjector, deleteRoleInjector, getAllRolesInjector, updateRoleInjector } from 'actions/role.js';\n\n\n// FUNCTIONS //\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tadmin: state.admin,\n\t\tuser: state.user,\n\t\ttranslations: state.translations\n\t};\n}\n\nfunction mapDispatchToProps( dispatch ) {\n\treturn {\n\t\taddCustomTranslation: addCustomTranslationInjector( dispatch ),\n\t\taddNotification: addNotificationInjector( dispatch ),\n\t\tgetAllRoles: getAllRolesInjector( dispatch ),\n\t\tgetBackups: getBackupsInjector( dispatch ),\n\t\tgetUsers: getUsersInjector( dispatch ),\n\t\tcreateBackup: createBackupInjector( dispatch ),\n\t\tcreateCustomField: createCustomFieldInjector( dispatch ),\n\t\tcreateRole: createRoleInjector( dispatch ),\n\t\tdeleteBackup: deleteBackupInjector( dispatch ),\n\t\tdeleteRole: deleteRoleInjector( dispatch ),\n\t\tdeleteCustomField: deleteCustomFieldInjector( dispatch ),\n\t\tgetCustomFields: getCustomFieldsInjector( dispatch ),\n\t\tgetLicense: getLicenseInjector( dispatch ),\n\t\tgetSettings: getSettingsInjector( dispatch ),\n\t\tremoveCustomTranslation: removeCustomTranslationInjector( dispatch ),\n\t\tuploadLogo: uploadLogoInjector( dispatch ),\n\t\tupdateRole: updateRoleInjector( dispatch ),\n\t\tupdateSettings: updateSettingsInjector( dispatch ),\n\t\tuploadLicense: uploadLicenseInjector( dispatch ),\n\t\tremoveLicense: removeLicenseInjector( dispatch ),\n\t\tincrementFieldPosition: incrementFieldPositionInjector( dispatch ),\n\t\tdecrementFieldPosition: decrementFieldPositionInjector( dispatch )\n\t};\n}\n\n\n// MAIN //\n\nconst VisibleAdminSettings = connect( mapStateToProps, mapDispatchToProps )( AdminSettings );\n\n\n// EXPORTS //\n\nexport default VisibleAdminSettings;\n"],"sourceRoot":""}