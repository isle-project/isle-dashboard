{"version":3,"file":"static/js/ContingencyTableMenu.e524c473.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/contingency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport ContingencyTable from '@isle-project/components/tables/contingency-table';\nimport { DATA_EXPLORER_CONTINGENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:contingency-table' );\n\n\n// MAIN //\n\nclass ContingencyTableMenu extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\trelativeFreqs: false,\n\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\tgroup: null, // eslint-disable-line react/no-unused-state\n\t\t\tnDecimalPlaces: 3,\n\t\t\tvariables: props.variables,\n\t\t\tdisplay: []\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( props.variables.length !== state.variables.length ) {\n\t\t\tdebug( 'Available variables have changed...' );\n\t\t\treturn {\n\t\t\t\trowVar: props.defaultRowVar || props.variables[ 0 ],\n\t\t\t\tcolVar: props.defaultColVar || props.variables[ 1 ],\n\t\t\t\tvariables: props.variables\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tgenerateContingencyTable() {\n\t\tconst { rowVar, colVar, group, relativeFreqs, nDecimalPlaces, display } = this.state;\n\t\tif ( !rowVar || !colVar ) {\n\t\t\treturn this.props.session.addNotification({\n\t\t\t\ttitle: this.props.t('select-variables'),\n\t\t\t\tmessage: this.props.t('select-row-and-column-variable'),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <ContingencyTable\n\t\t\trowVar={rowVar}\n\t\t\tcolVar={colVar}\n\t\t\tgroup={group}\n\t\t\trelativeFreqs={relativeFreqs}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdisplay={display}\n\t\t\tdata={this.props.data}\n\t\t/>;\n\t\tthis.props.logAction( DATA_EXPLORER_CONTINGENCY_TABLE, {\n\t\t\trowVar, colVar, group, relativeFreqs, display\n\t\t});\n\t\tthis.props.onCreated( output );\n\t}\n\n\trender() {\n\t\tconst { variables, groupingVariables, t } = this.props;\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t\t{t('Contingency Table')}\n\t\t\t\t\t<QuestionButton title={t('Contingency Table')} content={t('Contingency Table-description')} />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('row-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.rowVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trowVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('column-variable')}\n\t\t\t\t\t\tdefaultValue={this.state.colVar}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcolVar: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tgroup: value // eslint-disable-line react/no-unused-state\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttooltip={t('contingency-table-group-tooltip')}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trelativeFreqs: !this.state.relativeFreqs\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('display')}\n\t\t\t\t\t\toptions={['Row Percent', 'Column Percent']}\n\t\t\t\t\t\tmulti\n\t\t\t\t\t\tonChange={( display ) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdisplay: display ? display : []\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{ this.state.relativeFreqs || this.state.display.length > 0 ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tdefaultValue={this.state.nDecimalPlaces}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tnDecimalPlaces: value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t\t</p> : null }\n\t\t\t\t\t<Button variant=\"primary\" block onClick={this.generateContingencyTable.bind( this )}>\n\t\t\t\t\t\t{t('generate')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nContingencyTableMenu.defaultProps = {\n\tdefaultRowVar: null,\n\tdefaultColVar: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nContingencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultColVar: PropTypes.string,\n\tdefaultRowVar: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ContingencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["debug","logger","ContingencyTableMenu","Component","constructor","props","super","this","state","relativeFreqs","rowVar","defaultRowVar","variables","colVar","defaultColVar","group","nDecimalPlaces","display","length","generateContingencyTable","session","addNotification","title","t","message","level","position","output","data","logAction","DATA_EXPLORER_CONTINGENCY_TABLE","onCreated","render","groupingVariables","as","content","legend","defaultValue","options","onChange","value","setState","clearable","menuPlacement","tooltip","multi","inline","width","max","min","variant","block","onClick","bind","defaultProps","propTypes","PropTypes","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","isRequired","uid","generateUID","CheckboxInput","disabled","useRef","useContext","SessionContext","setValue","useState","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","handleChange","event","target","checked","handleSpanChange","input","type","tooltipPlacement","current","style","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop","step","PINF","NINF","NumberInput","propValue","onBlur","useTranslation","isNumber","valid","validity","parseFloat","isnan","finishChange","contains","splitted","split","isNull","createTooltip","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString"],"sourceRoot":""}