{"version":3,"file":"static/js/NaiveBayesMenu.c6e4bd73.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/naive_bayes.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/models/naive-bayes/design_matrix.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport uniq from 'uniq';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport { DATA_EXPLORER_NAIVE_BAYES } from '@isle-project/constants/actions.js';\nimport NaiveBayes from '@isle-project/components/models/naive-bayes';\nimport { designMatrix } from '@isle-project/components/models/naive-bayes/design_matrix.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst NaiveBayesMenu = ( props ) => {\n\tconst [ y, setY ] = useState( props.categorical[ 0 ] );\n\tconst [ x, setX ] = useState( props.quantitative[ 0 ] );\n\tconst [ omitMissing, setOmitMissing ] = useState( false );\n\n\tconst { categorical, quantitative, t } = props;\n\tconst compute = () => {\n\t\tconst output = <NaiveBayes\n\t\t\tx={x} y={y}\n\t\t\tomitMissing={omitMissing}\n\t\t\tdata={props.data}\n\t\t\tquantitative={props.quantitative}\n\t\t\tcategorical={props.categorical}\n\t\t\tonPredict={( results, counter ) => {\n\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\tconst newQuantitative = props.quantitative.slice();\n\t\t\t\tconst { matrix } = designMatrix( x, y, props.data, props.quantitative );\n\t\t\t\tconst probs = results.predictProbs( matrix );\n\t\t\t\tfor ( let i = 0; i < results.classes.length; i++ ) {\n\t\t\t\t\tconst name = 'probs_' + results.classes[ i ] + '_bayes' + counter;\n\t\t\t\t\tconst classProbs = probs.map( x => x[ i ] );\n\t\t\t\t\tnewData[ name ] = classProbs;\n\t\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst pred = results.predict( matrix );\n\t\t\t\tconst name = 'pred_bayes'+ counter;\n\t\t\t\tnewData[ name ] = pred;\n\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t}\n\t\t\t\tprops.onGenerate( newQuantitative, newCategorical, newData );\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_NAIVE_BAYES, {\n\t\t\ty, x, omitMissing\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Naive Bayes')}\n\t\t\t\t<QuestionButton title={t('Naive Bayes')} content={t('Naive Bayes-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\t\toptions={categorical}\n\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\tonChange={setY}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('predictors-x')} multi\n\t\t\t\t\toptions={uniq( quantitative.concat( categorical ) )}\n\t\t\t\t\tdefaultValue={x || ''}\n\t\t\t\t\tonChange={setX}\n\t\t\t\t/>\n\t\t\t\t<CheckboxInput\n\t\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\tonChange={setOmitMissing}\n\t\t\t\t/>\n\t\t\t\t<Button disabled={!x || x.length === 0} variant=\"primary\" block onClick={compute} >\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nNaiveBayesMenu.defaultProps = {\n\tlogAction() {}\n};\n\nNaiveBayesMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default NaiveBayesMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport contains from '@stdlib/assert/contains';\nimport ndarray from '@stdlib/ndarray/array';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isUndefinedOrNull from '@stdlib/assert/is-undefined-or-null';\nimport isnan from '@stdlib/assert/is-nan';\nimport isArray from '@stdlib/assert/is-array';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\n\n\n// FUNCTIONS //\n\nfunction isMissing( x ) {\n\treturn isnan( x ) || isUndefinedOrNull( x );\n}\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\n\n// MAIN //\n\nexport function designMatrix( x, y, data, quantitative ) {\n\tlet matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst nobs = data[ x[ 0 ] ].length;\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tconst row = [];\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\trow.push( values[ i ] );\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatrix.push( row );\n\t}\n\tmatrix = ndarray( matrix );\n\tconst yvalues = data[ y ];\n\treturn { matrix, predictors, yvalues };\n}\n\nexport function designMatrixMissing( x, y, data, quantitative ) {\n\tlet matrix = [];\n\tconst predictors = [];\n\tconst hash = {};\n\tif ( !isArray( x ) ) {\n\t\tx = [ x ];\n\t}\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst nobs = data[ x[ 0 ] ].length;\n\tconst yvalues = [];\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tconst row = [];\n\t\tlet missing = false;\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tif ( isNonMissingNumber( values[ i ] ) ) {\n\t\t\t\t\trow.push( values[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tif ( isMissing( val ) ) {\n\t\t\t\t\tmissing = true;\n\t\t\t\t} else {\n\t\t\t\t\tfor ( let k = 0; k < categories.length; k++ ) {\n\t\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( isMissing( data[ y ][ i ] ) ) {\n\t\t\tmissing = true;\n\t\t}\n\t\tif ( !missing ) {\n\t\t\tmatrix.push( row );\n\t\t\tyvalues.push( data[ y ][ i ] );\n\t\t}\n\t}\n\tmatrix = ndarray( matrix );\n\treturn { matrix, predictors, yvalues };\n}\n"],"names":["NaiveBayesMenu","props","y","setY","useState","categorical","x","setX","quantitative","omitMissing","setOmitMissing","t","style","fontSize","as","title","content","legend","options","defaultValue","onChange","multi","uniq","concat","disabled","length","variant","block","onClick","output","data","onPredict","results","counter","newData","copy","newQuantitative","slice","matrix","designMatrix","probs","predictProbs","i","classes","name","classProbs","map","contains","push","pred","predict","newCategorical","onGenerate","logAction","DATA_EXPLORER_NAIVE_BAYES","onCreated","defaultProps","propTypes","PropTypes","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","isRequired","uid","generateUID","CheckboxInput","bind","useRef","session","useContext","SessionContext","value","setValue","state","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","inline","tooltipPlacement","current","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop","isMissing","isnan","isUndefinedOrNull","isNonMissingNumber","isNumber","predictors","hash","isArray","j","values","categories","extractCategoriesFromValues","k","nobs","row","val","ndarray","yvalues","designMatrixMissing","missing"],"sourceRoot":""}