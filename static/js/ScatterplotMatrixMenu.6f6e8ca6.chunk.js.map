{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot_matrix.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"names":[],"mappings":"y0CAeA,MAAM,sBAA0B,OAAW,CAC1C,KAAM,CAAE,KAAM,CAAE,EAAI,MACd,CAAE,UAAW,YAAa,G,EAAI,6CAAU,IAAK,EAC7C,CAAE,MAAO,QAAS,G,EAAI,6CAAU,IAAK,EAErC,SAAW,IAAM,CACtB,MAAM,Q,EAAS,8EAAc,CAAE,EACzB,OAAS,CACd,UAAW,MAAO,MACnB,EACM,QAAU,IAAM,CACrB,MAAM,QAAQ,gBAAgB,CAC7B,MAAO,EAAE,aAAa,EACtB,QAAS,EAAE,qBAAqB,EAChC,MAAO,UACP,SAAU,IACX,CAAC,EACD,MAAM,UAAW,mEAA2B,MAAO,CACpD,EACM,OAAS,iDAAC,iFAAiB,CAChC,GAAI,OACJ,KACA,UACA,MACA,OACA,QACA,WAAY,MAAM,WACnB,EACA,MAAM,UAAW,mEAAqB,MAAO,EAC7C,MAAM,UAAW,MAAO,CACzB,EACA,OACC,iDAAC,4DAAI,KACJ,iDAAC,oEAAY,GAAG,MACd,EAAE,oBAAoB,EAAE,iDAAC,mDAAc,CAAC,MAAO,EAAE,oBAAoB,EAAG,QAAS,EAAE,gCAAgC,EAAG,CACxH,EACA,iDAAC,kEAAU,UAAU,gBACpB,iDAAC,qEAAW,CACX,OAAQ,EAAE,WAAW,EACrB,QAAS,MAAM,UACf,MAAK,GACL,SAAU,aACX,EACA,iDAAC,qEAAW,CACX,OAAQ,GAAG,EAAE,OAAO,KACpB,QAAS,MAAM,kBACf,UAAW,GACX,SAAU,SACX,EACA,iDAAC,8DAAM,CACN,QAAQ,UACR,QAAS,SACT,SAAU,CAAC,WAAa,UAAU,OAAS,GAE1C,EAAE,UAAU,CACd,CACD,CACD,CAEF,EAKA,sBAAsB,aAAe,CACpC,kBAAmB,KACnB,WAAY,CAAC,EACb,YAAa,CAAC,CACf,EAEA,sBAAsB,UAAY,CACjC,KAAM,oEACN,kBAAmB,wDACnB,UAAW,uDACX,WAAY,uDACZ,UAAW,kEACX,QAAS,oEACT,UAAW,kEACZ,EAKA,4BAAe,qB,i7CCrFf,MAAM,eAAmB,OAAW,CACnC,MAAM,QAAU,iDAAC,+DAAO,CAAC,GAAG,4BAC3B,iDAAC,qEAAa,KAAE,MAAM,KAAM,EAC5B,iDAAC,mEAAW,KAAE,MAAM,OAAQ,CAC7B,EACA,OACC,iDAAC,sEAAc,CAAC,QAAS,CAAE,QAAS,QAAS,OAAQ,EAAG,UAAU,OAAO,UAAS,GAAC,QAAS,SAC3F,iDAAC,8DAAM,CACN,aAAY,MAAM,MAClB,KAAK,KACL,QAAQ,oBACR,UAAU,mBAEV,iDAAC,OAAI,UAAU,iBAAiB,CACjC,CACD,CAEF,EAKA,eAAe,UAAY,CAC1B,QAAW,4DAAoB,CAAE,yDAAkB,sDAAe,CAAC,EAAE,WACrE,MAAS,mEACV,EAKA,sBAAe,c","file":"static/js/ScatterplotMatrixMenu.6f6e8ca6.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport SelectInput from '@isle-project/components/input/select';\nimport ScatterPlotMatrix from '@isle-project/components/plots/scatterplot-matrix';\nimport { DATA_EXPLORER_SHARE_SPLOM, DATA_EXPLORER_SPLOM } from '@isle-project/constants/actions.js';\nimport QuestionButton from '../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMatrixMenu = ( props ) => {\n\tconst { data, t } = props;\n\tconst [ variables, setVariables ] = useState( null );\n\tconst [ color, setColor ] = useState( null );\n\n\tconst generate = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariables, color, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SPLOM, action );\n\t\t};\n\t\tconst output = <ScatterPlotMatrix\n\t\t\tid={plotId}\n\t\t\tdata={data}\n\t\t\tvariables={variables}\n\t\t\tcolor={color}\n\t\t\taction={action}\n\t\t\tonShare={onShare}\n\t\t\tonSelected={props.onSelected}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SPLOM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot Matrix')}<QuestionButton title={t('Scatterplot Matrix')} content={t('Scatterplot Matrix-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className=\"d-grid gap-3\" >\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variables')}\n\t\t\t\t\toptions={props.variables}\n\t\t\t\t\tmulti\n\t\t\t\t\tonChange={setVariables}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={`${t('color')}:`}\n\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tonChange={setColor}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonClick={generate}\n\t\t\t\t\tdisabled={!variables || variables.length < 2}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMatrixMenu.defaultProps = {\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {}\n};\n\nScatterplotMatrixMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMatrixMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"sourceRoot":""}