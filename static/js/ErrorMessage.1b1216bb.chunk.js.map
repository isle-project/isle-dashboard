{"version":3,"file":"static/js/ErrorMessage.1b1216bb.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/utils/format-error/index.js","../node_modules/@isle-project/components/internal/error-message/main.js","../node_modules/anser/lib/index.js","../node_modules/ansi-to-react/lib/index.js","../node_modules/escape-carriage/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js"],"sourcesContent":["// MODULES //\n\nimport repeat from '@stdlib/string/repeat';\nimport max from '@stdlib/math/base/special/max';\n\n\n// VARIABLES //\n\nconst RE_ANSI = /[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[a-zA-Z\\d]*)*)?\\u0007)|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))/g; // eslint-disable-line no-control-regex\nconst RE_DIGIT_COLON = /\\((\\d+):/;\nconst RE_LINE_DIGIT = /(\\n *)(\\d*) \\|/g;\nconst RE_LINE_WRAPPER_OPENING = /<LineWrapper tagName=\"[a-zA-Z0-9]+\" startLineNumber=\\{\\d+\\} endLineNumber=\\{\\d+\\} >/g;\nconst RE_LINE_WRAPPER_CLOSING = /<\\/LineWrapper>/g;\nconst RE_FRAGMENT = /<\\/?React.Fragment>/g;\nconst RE_STATUSBAR = /<StatusBar[^\\n]+\\n/;\nconst NUM_WRAPPER_LINES = 9;\n\n\n// MAIN //\n\nconst formatError = ( msg ) => {\n\tmsg = msg.replace( RE_ANSI, '\\n' );\n\tmsg = msg.replace( RE_STATUSBAR, '\\n' );\n\tmsg = msg.replace( '</Lesson>', '' );\n\tmsg = msg.replace( RE_DIGIT_COLON, ( match, p1 ) => {\n\t\tconst line = String( parseInt( p1, 10 )-NUM_WRAPPER_LINES );\n\t\treturn '(' + line + ':';\n\t});\n\tmsg = msg.replace( RE_LINE_DIGIT, ( match, p1, p2 ) => {\n\t\tconst line = p2 ? String( parseInt( p2, 10 )-NUM_WRAPPER_LINES ) : '';\n\t\tconst spaces = repeat( ' ', max( p2.length - line.length, 0 ) );\n\t\treturn p1 + spaces + line + ' |';\n\t});\n\tmsg = msg.replace( RE_LINE_WRAPPER_OPENING, '' );\n\tmsg = msg.replace( RE_LINE_WRAPPER_CLOSING, '' );\n\tmsg = msg.replace( RE_FRAGMENT, '' );\n\tmsg = msg.replace( '&lt;', '<' );\n\tmsg = msg.replace( '&gt;', '>' );\n\treturn msg;\n};\n\n\n// EXPORTS //\n\nexport default formatError;\n","// MODULES //\n\nimport React, { useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Ansi from 'ansi-to-react';\nimport formatError from '@isle-project/utils/format-error';\nimport Tooltip from '@isle-project/components/tooltip';\nimport './error_message.css';\n\n\n// MAIN //\n\nconst ErrorMessage = ( props ) => {\n\tconst { t } = useTranslation( 'general' );\n\tconst [ showStack, setShowStack ] = useState( false );\n\tconst toggleStack = useCallback( () => {\n\t\tsetShowStack( !showStack );\n\t}, [ showStack ] );\n\tlet title = t('error-encountered');\n\tif ( props.componentName ) {\n\t\ttitle += ` ${t('in')} <${props.componentName} />`;\n\t}\n\treturn ( <Card className=\"error-boundary-message\">\n\t\t<Card.Body>\n\t\t\t<h3>{title}</h3>\n\t\t\t<pre>\n\t\t\t\t<Ansi>{formatError( showStack ? props.error.stack : props.error.message )}</Ansi>\n\t\t\t</pre>\n\t\t\t<ButtonGroup style={{ position: 'absolute', top: 12, right: 22 }} >\n\t\t\t\t<Tooltip tooltip={t('toggle-error-stack-trace')} placement=\"left\" >\n\t\t\t\t\t<Button aria-label={t('toggle-error-stack-trace')} variant=\"outline-secondary\" onClick={toggleStack} >\n\t\t\t\t\t\t<i className=\"fas fa-layer-group\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip tooltip={t('retry')}>\n\t\t\t\t\t<Button aria-label={t('retry')} variant=\"outline-secondary\" onClick={props.resetError} >\n\t\t\t\t\t\t<i className=\"fas fa-redo\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</ButtonGroup>\n\t\t</Card.Body>\n\t</Card> );\n};\n\n\n// EXPORTS //\n\nexport default ErrorMessage;\n","\"use strict\"; // This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ANSI_COLORS = [[{\n  color: \"0, 0, 0\",\n  \"class\": \"ansi-black\"\n}, {\n  color: \"187, 0, 0\",\n  \"class\": \"ansi-red\"\n}, {\n  color: \"0, 187, 0\",\n  \"class\": \"ansi-green\"\n}, {\n  color: \"187, 187, 0\",\n  \"class\": \"ansi-yellow\"\n}, {\n  color: \"0, 0, 187\",\n  \"class\": \"ansi-blue\"\n}, {\n  color: \"187, 0, 187\",\n  \"class\": \"ansi-magenta\"\n}, {\n  color: \"0, 187, 187\",\n  \"class\": \"ansi-cyan\"\n}, {\n  color: \"255,255,255\",\n  \"class\": \"ansi-white\"\n}], [{\n  color: \"85, 85, 85\",\n  \"class\": \"ansi-bright-black\"\n}, {\n  color: \"255, 85, 85\",\n  \"class\": \"ansi-bright-red\"\n}, {\n  color: \"0, 255, 0\",\n  \"class\": \"ansi-bright-green\"\n}, {\n  color: \"255, 255, 85\",\n  \"class\": \"ansi-bright-yellow\"\n}, {\n  color: \"85, 85, 255\",\n  \"class\": \"ansi-bright-blue\"\n}, {\n  color: \"255, 85, 255\",\n  \"class\": \"ansi-bright-magenta\"\n}, {\n  color: \"85, 255, 255\",\n  \"class\": \"ansi-bright-cyan\"\n}, {\n  color: \"255, 255, 255\",\n  \"class\": \"ansi-bright-white\"\n}]];\n\nvar Anser = function () {\n  _createClass(Anser, null, [{\n    key: \"escapeForHtml\",\n\n    /**\n     * Anser.escapeForHtml\n     * Escape the input HTML.\n     *\n     * This does the minimum escaping of text to make it compliant with HTML.\n     * In particular, the '&','<', and '>' characters are escaped. This should\n     * be run prior to `ansiToHtml`.\n     *\n     * @name Anser.escapeForHtml\n     * @function\n     * @param {String} txt The input text (containing the ANSI snippets).\n     * @returns {String} The escaped html.\n     */\n    value: function escapeForHtml(txt) {\n      return new Anser().escapeForHtml(txt);\n    }\n    /**\n     * Anser.linkify\n     * Adds the links in the HTML.\n     *\n     * This replaces any links in the text with anchor tags that display the\n     * link. The links should have at least one whitespace character\n     * surrounding it. Also, you should apply this after you have run\n     * `ansiToHtml` on the text.\n     *\n     * @name Anser.linkify\n     * @function\n     * @param {String} txt The input text.\n     * @returns {String} The HTML containing the <a> tags (unescaped).\n     */\n\n  }, {\n    key: \"linkify\",\n    value: function linkify(txt) {\n      return new Anser().linkify(txt);\n    }\n    /**\n     * Anser.ansiToHtml\n     * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n     * content.\n     *\n     * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n     * that can be represented in HTML.\n     * For example, cursor movement codes are ignored and hidden from output.\n     * The default style uses colors that are very close to the prescribed\n     * standard. The standard assumes that the text will have a black\n     * background. These colors are set as inline styles on the SPAN tags.\n     *\n     * Another option is to set `use_classes: true` in the options argument.\n     * This will instead set classes on the spans so the colors can be set via\n     * CSS. The class names used are of the format `ansi-*-fg/bg` and\n     * `ansi-bright-*-fg/bg` where `*` is the color name,\n     * i.e black/red/green/yellow/blue/magenta/cyan/white.\n     *\n     * @name Anser.ansiToHtml\n     * @function\n     * @param {String} txt The input text.\n     * @param {Object} options The options passed to the ansiToHTML method.\n     * @returns {String} The HTML output.\n     */\n\n  }, {\n    key: \"ansiToHtml\",\n    value: function ansiToHtml(txt, options) {\n      return new Anser().ansiToHtml(txt, options);\n    }\n    /**\n     * Anser.ansiToJson\n     * Converts ANSI input into JSON output.\n     *\n     * @name Anser.ansiToJson\n     * @function\n     * @param {String} txt The input text.\n     * @param {Object} options The options passed to the ansiToHTML method.\n     * @returns {String} The HTML output.\n     */\n\n  }, {\n    key: \"ansiToJson\",\n    value: function ansiToJson(txt, options) {\n      return new Anser().ansiToJson(txt, options);\n    }\n    /**\n     * Anser.ansiToText\n     * Converts ANSI input into text output.\n     *\n     * @name Anser.ansiToText\n     * @function\n     * @param {String} txt The input text.\n     * @returns {String} The text output.\n     */\n\n  }, {\n    key: \"ansiToText\",\n    value: function ansiToText(txt) {\n      return new Anser().ansiToText(txt);\n    }\n    /**\n     * Anser\n     * The `Anser` class.\n     *\n     * @name Anser\n     * @function\n     * @returns {Anser}\n     */\n\n  }]);\n\n  function Anser() {\n    _classCallCheck(this, Anser);\n\n    this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n    this.bright = 0;\n  }\n  /**\n   * setupPalette\n   * Sets up the palette.\n   *\n   * @name setupPalette\n   * @function\n   */\n\n\n  _createClass(Anser, [{\n    key: \"setupPalette\",\n    value: function setupPalette() {\n      this.PALETTE_COLORS = []; // Index 0..15 : System color\n\n      for (var i = 0; i < 2; ++i) {\n        for (var j = 0; j < 8; ++j) {\n          this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n        }\n      } // Index 16..231 : RGB 6x6x6\n      // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n\n\n      var levels = [0, 95, 135, 175, 215, 255];\n\n      var format = function format(r, g, b) {\n        return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n      };\n\n      var r = void 0,\n          g = void 0,\n          b = void 0;\n\n      for (var _r = 0; _r < 6; ++_r) {\n        for (var _g = 0; _g < 6; ++_g) {\n          for (var _b = 0; _b < 6; ++_b) {\n            this.PALETTE_COLORS.push(format(_r, _g, _b));\n          }\n        }\n      } // Index 232..255 : Grayscale\n\n\n      var level = 8;\n\n      for (var _i = 0; _i < 24; ++_i, level += 10) {\n        this.PALETTE_COLORS.push(format(level, level, level));\n      }\n    }\n    /**\n     * escapeForHtml\n     * Escapes the input text.\n     *\n     * @name escapeForHtml\n     * @function\n     * @param {String} txt The input text.\n     * @returns {String} The escpaed HTML output.\n     */\n\n  }, {\n    key: \"escapeForHtml\",\n    value: function escapeForHtml(txt) {\n      return txt.replace(/[&<>]/gm, function (str) {\n        return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n      });\n    }\n    /**\n     * linkify\n     * Adds HTML link elements.\n     *\n     * @name linkify\n     * @function\n     * @param {String} txt The input text.\n     * @returns {String} The HTML output containing link elements.\n     */\n\n  }, {\n    key: \"linkify\",\n    value: function linkify(txt) {\n      return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n        return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n      });\n    }\n    /**\n     * ansiToHtml\n     * Converts ANSI input into HTML output.\n     *\n     * @name ansiToHtml\n     * @function\n     * @param {String} txt The input text.\n     * @param {Object} options The options passed ot the `process` method.\n     * @returns {String} The HTML output.\n     */\n\n  }, {\n    key: \"ansiToHtml\",\n    value: function ansiToHtml(txt, options) {\n      return this.process(txt, options, true);\n    }\n    /**\n     * ansiToJson\n     * Converts ANSI input into HTML output.\n     *\n     * @name ansiToJson\n     * @function\n     * @param {String} txt The input text.\n     * @param {Object} options The options passed ot the `process` method.\n     * @returns {String} The JSON output.\n     */\n\n  }, {\n    key: \"ansiToJson\",\n    value: function ansiToJson(txt, options) {\n      options = options || {};\n      options.json = true;\n      options.clearLine = false;\n      return this.process(txt, options, true);\n    }\n    /**\n     * ansiToText\n     * Converts ANSI input into HTML output.\n     *\n     * @name ansiToText\n     * @function\n     * @param {String} txt The input text.\n     * @returns {String} The text output.\n     */\n\n  }, {\n    key: \"ansiToText\",\n    value: function ansiToText(txt) {\n      return this.process(txt, {}, false);\n    }\n    /**\n     * process\n     * Processes the input.\n     *\n     * @name process\n     * @function\n     * @param {String} txt The input text.\n     * @param {Object} options An object passed to `processChunk` method, extended with:\n     *\n     *  - `json` (Boolean): If `true`, the result will be an object.\n     *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n     *\n     * @param {Boolean} markup\n     */\n\n  }, {\n    key: \"process\",\n    value: function process(txt, options, markup) {\n      var _this = this;\n\n      var self = this;\n      var raw_text_chunks = txt.split(/\\033\\[/);\n      var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n      if (options === undefined || options === null) {\n        options = {};\n      }\n\n      options.clearLine = /\\r/.test(txt); // check for Carriage Return\n\n      var color_chunks = raw_text_chunks.map(function (chunk) {\n        return _this.processChunk(chunk, options, markup);\n      });\n\n      if (options && options.json) {\n        var first = self.processChunkJson(\"\");\n        first.content = first_chunk;\n        first.clearLine = options.clearLine;\n        color_chunks.unshift(first);\n\n        if (options.remove_empty) {\n          color_chunks = color_chunks.filter(function (c) {\n            return !c.isEmpty();\n          });\n        }\n\n        return color_chunks;\n      } else {\n        color_chunks.unshift(first_chunk);\n      }\n\n      return color_chunks.join(\"\");\n    }\n    /**\n     * processChunkJson\n     * Processes the current chunk into json output.\n     *\n     * @name processChunkJson\n     * @function\n     * @param {String} text The input text.\n     * @param {Object} options An object containing the following fields:\n     *\n     *  - `json` (Boolean): If `true`, the result will be an object.\n     *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n     *\n     * @param {Boolean} markup If false, the colors will not be parsed.\n     * @return {Object} The result object:\n     *\n     *  - `content` (String): The text.\n     *  - `fg` (String|null): The foreground color.\n     *  - `bg` (String|null): The background color.\n     *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n     *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n     *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n     *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n     *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n     *\n     */\n\n  }, {\n    key: \"processChunkJson\",\n    value: function processChunkJson(text, options, markup) {\n      // Are we using classes or styles?\n      options = typeof options == \"undefined\" ? {} : options;\n      var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n      var key = options.key = use_classes ? \"class\" : \"color\";\n      var result = {\n        content: text,\n        fg: null,\n        bg: null,\n        fg_truecolor: null,\n        bg_truecolor: null,\n        clearLine: options.clearLine,\n        decoration: null,\n        was_processed: false,\n        isEmpty: function isEmpty() {\n          return !result.content;\n        }\n      }; // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n      //\n      // This regex matches four groups within a chunk.\n      //\n      // The first and third groups match code type.\n      // We supported only SGR command. It has empty first group and \"m\" in third.\n      //\n      // The second group matches all of the number+semicolon command sequences\n      // before the \"m\" (or other trailing) character.\n      // These are the graphics or SGR commands.\n      //\n      // The last group is the text (including newlines) that is colored by\n      // the other group\"s commands.\n\n      var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n      if (!matches) return result;\n      var orig_txt = result.content = matches[4];\n      var nums = matches[2].split(\";\"); // We currently support only \"SGR\" (Select Graphic Rendition)\n      // Simply ignore if not a SGR command.\n\n      if (matches[1] !== \"\" || matches[3] !== \"m\") {\n        return result;\n      }\n\n      if (!markup) {\n        return result;\n      }\n\n      var self = this;\n      self.decoration = null;\n\n      while (nums.length > 0) {\n        var num_str = nums.shift();\n        var num = parseInt(num_str);\n\n        if (isNaN(num) || num === 0) {\n          self.fg = self.bg = self.decoration = null;\n        } else if (num === 1) {\n          self.decoration = \"bold\";\n        } else if (num === 2) {\n          self.decoration = \"dim\"; // Enable code 2 to get string\n        } else if (num == 3) {\n          self.decoration = \"italic\";\n        } else if (num == 4) {\n          self.decoration = \"underline\";\n        } else if (num == 5) {\n          self.decoration = \"blink\";\n        } else if (num === 7) {\n          self.decoration = \"reverse\";\n        } else if (num === 8) {\n          self.decoration = \"hidden\"; // Enable code 9 to get strikethrough\n        } else if (num === 9) {\n          self.decoration = \"strikethrough\";\n        } else if (num == 39) {\n          self.fg = null;\n        } else if (num == 49) {\n          self.bg = null; // Foreground color\n        } else if (num >= 30 && num < 38) {\n          self.fg = ANSI_COLORS[0][num % 10][key]; // Foreground bright color\n        } else if (num >= 90 && num < 98) {\n          self.fg = ANSI_COLORS[1][num % 10][key]; // Background color\n        } else if (num >= 40 && num < 48) {\n          self.bg = ANSI_COLORS[0][num % 10][key]; // Background bright color\n        } else if (num >= 100 && num < 108) {\n          self.bg = ANSI_COLORS[1][num % 10][key];\n        } else if (num === 38 || num === 48) {\n          // extend color (38=fg, 48=bg)\n          var is_foreground = num === 38;\n\n          if (nums.length >= 1) {\n            var mode = nums.shift();\n\n            if (mode === \"5\" && nums.length >= 1) {\n              // palette color\n              var palette_index = parseInt(nums.shift());\n\n              if (palette_index >= 0 && palette_index <= 255) {\n                if (!use_classes) {\n                  if (!this.PALETTE_COLORS) {\n                    self.setupPalette();\n                  }\n\n                  if (is_foreground) {\n                    self.fg = this.PALETTE_COLORS[palette_index];\n                  } else {\n                    self.bg = this.PALETTE_COLORS[palette_index];\n                  }\n                } else {\n                  var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n\n                  if (is_foreground) {\n                    self.fg = klass;\n                  } else {\n                    self.bg = klass;\n                  }\n                }\n              }\n            } else if (mode === \"2\" && nums.length >= 3) {\n              // true color\n              var r = parseInt(nums.shift());\n              var g = parseInt(nums.shift());\n              var b = parseInt(nums.shift());\n\n              if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                var color = r + \", \" + g + \", \" + b;\n\n                if (!use_classes) {\n                  if (is_foreground) {\n                    self.fg = color;\n                  } else {\n                    self.bg = color;\n                  }\n                } else {\n                  if (is_foreground) {\n                    self.fg = \"ansi-truecolor\";\n                    self.fg_truecolor = color;\n                  } else {\n                    self.bg = \"ansi-truecolor\";\n                    self.bg_truecolor = color;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (self.fg === null && self.bg === null && self.decoration === null) {\n        return result;\n      } else {\n        var styles = [];\n        var classes = [];\n        var data = {};\n        result.fg = self.fg;\n        result.bg = self.bg;\n        result.fg_truecolor = self.fg_truecolor;\n        result.bg_truecolor = self.bg_truecolor;\n        result.decoration = self.decoration;\n        result.was_processed = true;\n        return result;\n      }\n    }\n    /**\n     * processChunk\n     * Processes the current chunk of text.\n     *\n     * @name processChunk\n     * @function\n     * @param {String} text The input text.\n     * @param {Object} options An object containing the following fields:\n     *\n     *  - `json` (Boolean): If `true`, the result will be an object.\n     *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n     *\n     * @param {Boolean} markup If false, the colors will not be parsed.\n     * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n     */\n\n  }, {\n    key: \"processChunk\",\n    value: function processChunk(text, options, markup) {\n      var _this2 = this;\n\n      var self = this;\n      options = options || {};\n      var jsonChunk = this.processChunkJson(text, options, markup);\n\n      if (options.json) {\n        return jsonChunk;\n      }\n\n      if (jsonChunk.isEmpty()) {\n        return \"\";\n      }\n\n      if (!jsonChunk.was_processed) {\n        return jsonChunk.content;\n      }\n\n      var use_classes = options.use_classes;\n      var styles = [];\n      var classes = [];\n      var data = {};\n\n      var render_data = function render_data(data) {\n        var fragments = [];\n        var key = void 0;\n\n        for (key in data) {\n          if (data.hasOwnProperty(key)) {\n            fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n          }\n        }\n\n        return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n      };\n\n      if (jsonChunk.fg) {\n        if (use_classes) {\n          classes.push(jsonChunk.fg + \"-fg\");\n\n          if (jsonChunk.fg_truecolor !== null) {\n            data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n            jsonChunk.fg_truecolor = null;\n          }\n        } else {\n          styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n        }\n      }\n\n      if (jsonChunk.bg) {\n        if (use_classes) {\n          classes.push(jsonChunk.bg + \"-bg\");\n\n          if (jsonChunk.bg_truecolor !== null) {\n            data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n            jsonChunk.bg_truecolor = null;\n          }\n        } else {\n          styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n        }\n      }\n\n      if (jsonChunk.decoration) {\n        if (use_classes) {\n          classes.push(\"ansi-\" + jsonChunk.decoration);\n        } else if (jsonChunk.decoration === \"bold\") {\n          styles.push(\"font-weight:bold\");\n        } else if (jsonChunk.decoration === \"dim\") {\n          styles.push(\"opacity:0.5\");\n        } else if (jsonChunk.decoration === \"italic\") {\n          styles.push(\"font-style:italic\"); // underline and blink are treated bellow\n        } else if (jsonChunk.decoration === \"reverse\") {\n          styles.push(\"filter:invert(100%)\");\n        } else if (jsonChunk.decoration === \"hidden\") {\n          styles.push(\"visibility:hidden\");\n        } else if (jsonChunk.decoration === \"strikethrough\") {\n          styles.push(\"text-decoration:line-through\");\n        } else {\n          styles.push(\"text-decoration:\" + jsonChunk.decoration);\n        }\n      }\n\n      if (use_classes) {\n        return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n      } else {\n        return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n      }\n    }\n  }]);\n\n  return Anser;\n}();\n\n;\nmodule.exports = Anser;","\"use strict\";\n\nvar _slicedToArray = require(\"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar anser_1 = __importDefault(require(\"anser\"));\n\nvar escape_carriage_1 = require(\"escape-carriage\");\n\nvar React = __importStar(require(\"react\"));\n/**\n * Converts ANSI strings into JSON output.\n * @name ansiToJSON\n * @function\n * @param {String} input The input string.\n * @param {boolean} use_classes If `true`, HTML classes will be appended\n *                              to the HTML output.\n * @return {Array} The parsed input.\n */\n\n\nfunction ansiToJSON(input) {\n  var use_classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  input = escape_carriage_1.escapeCarriageReturn(fixBackspace(input));\n  return anser_1.default.ansiToJson(input, {\n    json: true,\n    remove_empty: true,\n    use_classes: use_classes\n  });\n}\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry} bundle\n * @return {String} class name(s)\n */\n\n\nfunction createClass(bundle) {\n  var classNames = \"\";\n\n  if (bundle.bg) {\n    classNames += \"\".concat(bundle.bg, \"-bg \");\n  }\n\n  if (bundle.fg) {\n    classNames += \"\".concat(bundle.fg, \"-fg \");\n  }\n\n  if (bundle.decoration) {\n    classNames += \"ansi-\".concat(bundle.decoration, \" \");\n  }\n\n  if (classNames === \"\") {\n    return null;\n  }\n\n  classNames = classNames.substring(0, classNames.length - 1);\n  return classNames;\n}\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry} bundle\n * @return {Object} returns the style object\n */\n\n\nfunction createStyle(bundle) {\n  var style = {};\n\n  if (bundle.bg) {\n    style.backgroundColor = \"rgb(\".concat(bundle.bg, \")\");\n  }\n\n  if (bundle.fg) {\n    style.color = \"rgb(\".concat(bundle.fg, \")\");\n  }\n\n  return style;\n}\n/**\n * Converts an Anser bundle into a React Node.\n * @param linkify whether links should be converting into clickable anchor tags.\n * @param useClasses should render the span with a class instead of style.\n * @param bundle Anser output.\n * @param key\n */\n\n\nfunction convertBundleIntoReact(linkify, useClasses, bundle, key) {\n  var style = useClasses ? null : createStyle(bundle);\n  var className = useClasses ? createClass(bundle) : null;\n\n  if (!linkify) {\n    return React.createElement(\"span\", {\n      style: style,\n      key: key,\n      className: className\n    }, bundle.content);\n  }\n\n  var content = [];\n  var linkRegex = /(\\s+|^)(https?:\\/\\/(?:www\\.|(?!www))[^\\s.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g;\n  var index = 0;\n  var match;\n\n  while ((match = linkRegex.exec(bundle.content)) !== null) {\n    var _match = match,\n        _match2 = _slicedToArray(_match, 3),\n        pre = _match2[1],\n        url = _match2[2];\n\n    var startIndex = match.index + pre.length;\n\n    if (startIndex > index) {\n      content.push(bundle.content.substring(index, startIndex));\n    } // Make sure the href we generate from the link is fully qualified. We assume http\n    // if it starts with a www because many sites don't support https\n\n\n    var href = url.startsWith(\"www.\") ? \"http://\".concat(url) : url;\n    content.push(React.createElement(\"a\", {\n      key: index,\n      href: href,\n      target: \"_blank\"\n    }, \"\".concat(url)));\n    index = linkRegex.lastIndex;\n  }\n\n  if (index < bundle.content.length) {\n    content.push(bundle.content.substring(index));\n  }\n\n  return React.createElement(\"span\", {\n    style: style,\n    key: key,\n    className: className\n  }, content);\n}\n\nfunction Ansi(props) {\n  var className = props.className,\n      useClasses = props.useClasses,\n      children = props.children,\n      linkify = props.linkify;\n  return React.createElement(\"code\", {\n    className: className\n  }, ansiToJSON(children !== null && children !== void 0 ? children : \"\", useClasses !== null && useClasses !== void 0 ? useClasses : false).map(convertBundleIntoReact.bind(null, linkify !== null && linkify !== void 0 ? linkify : false, useClasses !== null && useClasses !== void 0 ? useClasses : false)));\n}\n\nexports.default = Ansi; // This is copied from the Jupyter Classic source code\n// notebook/static/base/js/utils.js to handle \\b in a way\n// that is **compatible with Jupyter classic**.   One can\n// argue that this behavior is questionable:\n//   https://stackoverflow.com/questions/55440152/multiple-b-doesnt-work-as-expected-in-jupyter#\n\nfunction fixBackspace(txt) {\n  var tmp = txt;\n\n  do {\n    txt = tmp; // Cancel out anything-but-newline followed by backspace\n\n    tmp = txt.replace(/[^\\n]\\x08/gm, \"\");\n  } while (tmp.length < txt.length);\n\n  return txt;\n}","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\n\n\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n\n  var idx = txt.lastIndexOf(\"\\n\");\n  return escapeCarriageReturn(txt.slice(0, idx)) + \"\\n\" + escapeSingleLineSafe(txt.slice(idx + 1));\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;"],"names":["RE_ANSI","RE_DIGIT_COLON","RE_LINE_DIGIT","RE_LINE_WRAPPER_OPENING","RE_LINE_WRAPPER_CLOSING","RE_FRAGMENT","RE_STATUSBAR","msg","replace","match","p1","String","parseInt","p2","line","repeat","max","length","props","t","useTranslation","useState","showStack","setShowStack","toggleStack","useCallback","title","componentName","Card","className","formatError","error","stack","message","ButtonGroup","style","position","top","right","tooltip","placement","Button","variant","onClick","resetError","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","ANSI_COLORS","color","Anser","instance","TypeError","_classCallCheck","this","fg","bg","fg_truecolor","bg_truecolor","bright","value","txt","escapeForHtml","linkify","options","ansiToHtml","ansiToJson","ansiToText","PALETTE_COLORS","j","push","levels","format","r","g","b","_r","_g","_b","level","_i","str","process","json","clearLine","markup","_this","raw_text_chunks","split","first_chunk","shift","undefined","test","color_chunks","map","chunk","processChunk","first","processChunkJson","content","unshift","remove_empty","filter","c","isEmpty","join","text","use_classes","result","decoration","was_processed","matches","nums","self","num_str","num","isNaN","is_foreground","mode","palette_index","klass","setupPalette","_this2","jsonChunk","styles","classes","data","render_data","fragments","hasOwnProperty","module","exports","_slicedToArray","__importDefault","mod","__esModule","__importStar","k","call","anser_1","escape_carriage_1","React","convertBundleIntoReact","useClasses","bundle","backgroundColor","concat","createStyle","classNames","substring","createClass","createElement","linkRegex","index","exec","_match2","pre","url","startIndex","href","startsWith","lastIndex","fixBackspace","tmp","default","children","input","arguments","escapeCarriageReturn","ansiToJSON","bind","base","insert","slice","findLongestString","arr","longest","escapeSingleLineSafe","res","escapeCarriageReturnSafe","idx","lastIndexOf","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","err","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest"],"sourceRoot":""}