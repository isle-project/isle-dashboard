{"version":3,"file":"static/js/PrincipalComponentAnalysis.4b3b3bb2.chunk.js","mappings":"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","sources":["../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/dc/evd.js","../node_modules/ml-matrix/src/dc/nipals.js","../node_modules/ml-pca/src/pca.js","../node_modules/@isle-project/components/models/principal-component-analysis/main.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js"],"sourcesContent":["import { AbstractMatrix } from '../matrix';\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n}","import BaseView from './base';\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n\n}","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const {\n      assumeSymmetric = false\n    } = options;\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n    let isSymmetric = false;\n\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n\n      X.set(i, i, d[i]);\n\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n\n    return X;\n  }\n\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n\n        e[j] = g;\n      }\n\n      f = 0;\n\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n\n      do {\n        iter = iter + 1;\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n\n      if (s === 0) {\n        s = norm;\n      }\n\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n\n        if (s > 0) {\n          s = Math.sqrt(s);\n\n          if (y < x) {\n            s = -s;\n          }\n\n          s = x - w / ((y - x) / 2 + s);\n\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n      m = n - 2;\n\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n\n        if (m === l) {\n          break;\n        }\n\n        if (Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H.get(m - 1, m - 1)) + Math.abs(z) + Math.abs(H.get(m + 1, m + 1))))) {\n          break;\n        }\n\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(i + 1, n, Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z);\n          }\n\n          t = Math.abs(H.get(i, n));\n\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n\n            if (vr === 0 && vi === 0) {\n              vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n            }\n\n            cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(i + 1, n - 1, (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x);\n              H.set(i + 1, n, (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x);\n            } else {\n              cdivres = cdiv(-r - y * H.get(i, n - 1), -s - y * H.get(i, n), z, q);\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let {\n      Y\n    } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10\n    } = options;\n    let u;\n\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (let counter = 0; counter < maxIterations && diff > terminationCriteria; counter++) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()));\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n\n}","import { Matrix, MatrixTransposeView, EVD, SVD, NIPALS } from 'ml-matrix';\n/**\r\n * Creates new PCA (Principal Component Analysis) from the dataset\r\n * @param {Matrix} dataset - dataset or covariance matrix.\r\n * @param {Object} [options]\r\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix.\r\n * @param {string} [options.method='SVD'] - select which method to use: SVD (default), covarianceMatrirx or NIPALS.\r\n * @param {number} [options.nCompNIPALS=2] - number of components to be computed with NIPALS.\r\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean).\r\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation).\r\n * @param {boolean} [options.ignoreZeroVariance=false] - ignore columns with zero variance if `scale` is `true`.\r\n * */\n\nexport class PCA {\n  constructor(dataset, options = {}) {\n    if (dataset === true) {\n      const model = options;\n      this.center = model.center;\n      this.scale = model.scale;\n      this.means = model.means;\n      this.stdevs = model.stdevs;\n      this.U = Matrix.checkMatrix(model.U);\n      this.S = model.S;\n      this.R = model.R;\n      this.excludedFeatures = model.excludedFeatures || [];\n      return;\n    }\n\n    dataset = new Matrix(dataset);\n    const {\n      isCovarianceMatrix = false,\n      method = 'SVD',\n      nCompNIPALS = 2,\n      center = true,\n      scale = false,\n      ignoreZeroVariance = false\n    } = options;\n    this.center = center;\n    this.scale = scale;\n    this.means = null;\n    this.stdevs = null;\n    this.excludedFeatures = [];\n\n    if (isCovarianceMatrix) {\n      // User provided a covariance matrix instead of dataset.\n      this._computeFromCovarianceMatrix(dataset);\n\n      return;\n    }\n\n    this._adjust(dataset, ignoreZeroVariance);\n\n    switch (method) {\n      case 'covarianceMatrix':\n        {\n          // User provided a dataset but wants us to compute and use the covariance matrix.\n          const covarianceMatrix = new MatrixTransposeView(dataset).mmul(dataset).div(dataset.rows - 1);\n\n          this._computeFromCovarianceMatrix(covarianceMatrix);\n\n          break;\n        }\n\n      case 'NIPALS':\n        {\n          this._computeWithNIPALS(dataset, nCompNIPALS);\n\n          break;\n        }\n\n      case 'SVD':\n        {\n          const svd = new SVD(dataset, {\n            computeLeftSingularVectors: false,\n            computeRightSingularVectors: true,\n            autoTranspose: true\n          });\n          this.U = svd.rightSingularVectors;\n          const singularValues = svd.diagonal;\n          const eigenvalues = [];\n\n          for (const singularValue of singularValues) {\n            eigenvalues.push(singularValue * singularValue / (dataset.rows - 1));\n          }\n\n          this.S = eigenvalues;\n          break;\n        }\n\n      default:\n        {\n          throw new Error(`unknown method: ${method}`);\n        }\n    }\n  }\n  /**\r\n   * Load a PCA model from JSON\r\n   * @param {Object} model\r\n   * @return {PCA}\r\n   */\n\n\n  static load(model) {\n    if (typeof model.name !== 'string') {\n      throw new TypeError('model must have a name property');\n    }\n\n    if (model.name !== 'PCA') {\n      throw new RangeError(`invalid model: ${model.name}`);\n    }\n\n    return new PCA(true, model);\n  }\n  /**\r\n   * Project the dataset into the PCA space\r\n   * @param {Matrix} dataset\r\n   * @param {Object} options\r\n   * @return {Matrix} dataset projected in the PCA space\r\n   */\n\n\n  predict(dataset, options = {}) {\n    const {\n      nComponents = this.U.columns\n    } = options;\n    dataset = new Matrix(dataset);\n\n    if (this.center) {\n      dataset.subRowVector(this.means);\n\n      if (this.scale) {\n        for (let i of this.excludedFeatures) {\n          dataset.removeColumn(i);\n        }\n\n        dataset.divRowVector(this.stdevs);\n      }\n    }\n\n    let predictions = dataset.mmul(this.U);\n    return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n  }\n  /**\r\n   * Calculates the inverse PCA transform\r\n   * @param {Matrix} dataset\r\n   * @return {Matrix} dataset projected in the PCA space\r\n   */\n\n\n  invert(dataset) {\n    dataset = Matrix.checkMatrix(dataset);\n    let inverse = dataset.mmul(this.U.transpose());\n\n    if (this.center) {\n      if (this.scale) {\n        inverse.mulRowVector(this.stdevs);\n      }\n\n      inverse.addRowVector(this.means);\n    }\n\n    return inverse;\n  }\n  /**\r\n   * Returns the proportion of variance for each component\r\n   * @return {[number]}\r\n   */\n\n\n  getExplainedVariance() {\n    let sum = 0;\n\n    for (const s of this.S) {\n      sum += s;\n    }\n\n    return this.S.map(value => value / sum);\n  }\n  /**\r\n   * Returns the cumulative proportion of variance\r\n   * @return {[number]}\r\n   */\n\n\n  getCumulativeVariance() {\n    let explained = this.getExplainedVariance();\n\n    for (let i = 1; i < explained.length; i++) {\n      explained[i] += explained[i - 1];\n    }\n\n    return explained;\n  }\n  /**\r\n   * Returns the Eigenvectors of the covariance matrix\r\n   * @returns {Matrix}\r\n   */\n\n\n  getEigenvectors() {\n    return this.U;\n  }\n  /**\r\n   * Returns the Eigenvalues (on the diagonal)\r\n   * @returns {[number]}\r\n   */\n\n\n  getEigenvalues() {\n    return this.S;\n  }\n  /**\r\n   * Returns the standard deviations of the principal components\r\n   * @returns {[number]}\r\n   */\n\n\n  getStandardDeviations() {\n    return this.S.map(x => Math.sqrt(x));\n  }\n  /**\r\n   * Returns the loadings matrix\r\n   * @return {Matrix}\r\n   */\n\n\n  getLoadings() {\n    return this.U.transpose();\n  }\n  /**\r\n   * Export the current model to a JSON object\r\n   * @return {Object} model\r\n   */\n\n\n  toJSON() {\n    return {\n      name: 'PCA',\n      center: this.center,\n      scale: this.scale,\n      means: this.means,\n      stdevs: this.stdevs,\n      U: this.U,\n      S: this.S,\n      excludedFeatures: this.excludedFeatures\n    };\n  }\n\n  _adjust(dataset, ignoreZeroVariance) {\n    if (this.center) {\n      const mean = dataset.mean('column');\n      const stdevs = this.scale ? dataset.standardDeviation('column', {\n        mean\n      }) : null;\n      this.means = mean;\n      dataset.subRowVector(mean);\n\n      if (this.scale) {\n        for (let i = 0; i < stdevs.length; i++) {\n          if (stdevs[i] === 0) {\n            if (ignoreZeroVariance) {\n              dataset.removeColumn(i);\n              stdevs.splice(i, 1);\n              this.excludedFeatures.push(i);\n              i--;\n            } else {\n              throw new RangeError(`Cannot scale the dataset (standard deviation is zero at index ${i}`);\n            }\n          }\n        }\n\n        this.stdevs = stdevs;\n        dataset.divRowVector(stdevs);\n      }\n    }\n  }\n\n  _computeFromCovarianceMatrix(dataset) {\n    const evd = new EVD(dataset, {\n      assumeSymmetric: true\n    });\n    this.U = evd.eigenvectorMatrix;\n    this.U.flipRows();\n    this.S = evd.realEigenvalues;\n    this.S.reverse();\n  }\n\n  _computeWithNIPALS(dataset, nCompNIPALS) {\n    this.U = new Matrix(nCompNIPALS, dataset.columns);\n    this.S = [];\n    let x = dataset;\n\n    for (let i = 0; i < nCompNIPALS; i++) {\n      let dc = new NIPALS(x);\n      this.U.setRow(i, dc.w.transpose());\n      this.S.push(Math.pow(dc.s.get(0, 0), 2));\n      x = dc.xResidual;\n    }\n\n    this.U = this.U.transpose(); // to be compatible with API\n  }\n\n}","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from 'react-bootstrap/Alert';\nimport { PCA } from 'ml-pca';\nimport { withTranslation } from 'react-i18next';\nimport Table from '@isle-project/components/table';\nimport incrspace from '@stdlib/array/incrspace';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/assert/is-nan';\nimport Plotly from '@isle-project/components/plotly';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\n\n\n// FUNCTIONS //\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\nconst summaryTable = ( stdev, variance, cumVariance, t ) => {\n\t/* eslint-disable i18next/no-literal-string */\n\treturn (\n\t\t<Table bordered size=\"sm\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t<th>{t('standard-deviation')}</th>\n\t\t\t\t\t<th>{t('proportion-of-variance')}</th>\n\t\t\t\t\t<th>{t('cumulative-variance')}</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{stdev.map( ( val, id ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t<th> {`PC${id+1}`} </th>\n\t\t\t\t\t\t\t<td> {val.toFixed( 3 )} </td>\n\t\t\t\t\t\t\t<td> {variance[ id ].toFixed( 3 )} </td>\n\t\t\t\t\t\t\t<td> {cumVariance[ id ].toFixed( 3 )} </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n\t/* eslint-enable i18next/no-literal-string */\n};\n\nconst fitModel = ({ data, variables, scale, center, noComponents }) => {\n\ttry {\n\t\tconst matrix = [];\n\t\tconst n = data[ variables[ 0 ] ].length;\n\t\tfor ( let i = 0; i < n; i++ ) {\n\t\t\tconst row = [];\n\t\t\tlet missing = false;\n\t\t\tfor ( let j = 0; j < variables.length; j++ ) {\n\t\t\t\tconst val = data[ variables[ j ] ][ i ];\n\t\t\t\tif ( isNonMissingNumber( val ) ) {\n\t\t\t\t\trow.push( val );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !missing ) {\n\t\t\t\tmatrix.push( row );\n\t\t\t}\n\t\t}\n\t\tconst pca = new PCA( matrix, {\n\t\t\tcenter,\n\t\t\tscale\n\t\t});\n\t\tconst components = pca.predict( matrix, {\n\t\t\tnoComponents\n\t\t});\n\t\treturn {\n\t\t\tpca,\n\t\t\tcomponents\n\t\t};\n\t} catch ( _ ) {\n\t\treturn {};\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Principal component analysis.\n*\n* @property {Object} data - object of value arrays\n* @property {Array<string>} variables - names of variables used for clustering\n* @property {boolean} scale - scale values by dividing with the standard deviation\n* @property {boolean} center - center values by subtracting the mean\n* @property {number} noComponents - number of components supplied to the `onResult` callback\n* @property {Function} onResult - callback invoked with model object and components\n*/\nclass PrincipalComponentAnalysis extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst { data, variables, scale, center, noComponents } = props;\n\t\tconst { pca, components } = fitModel( { data, variables, scale, center, noComponents } );\n\t\tthis.state = {\n\t\t\tpca,\n\t\t\tcomponents,\n\t\t\t...props\n\t\t};\n\t\tif ( pca ) {\n\t\t\tprops.onResult( this.state.pca, this.state.components );\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.variables !== prevState.variables\n\t\t) {\n\t\t\tconst { data, variables, scale, center, noComponents } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel( { data, variables, scale, center, noComponents } ),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\tif ( newState.pca ) {\n\t\t\t\tnextProps.onResult( newState.pca, newState.components );\n\t\t\t}\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst { pca } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !pca ) {\n\t\t\treturn <Alert variant=\"danger\">{t('missing-attributes')}</Alert>;\n\t\t}\n\t\tconst stdev = pca.getStandardDeviations();\n\t\tconst variance = pca.getExplainedVariance();\n\t\tconst cumVariance = pca.getCumulativeVariance();\n\t\tconst trace = {\n\t\t\tx: incrspace( 0, variance.length, 1 ),\n\t\t\ty: variance,\n\t\t\ttype: 'scatter',\n\t\t\tname: t('proportion-of-variance')\n\t\t};\n\t\treturn (<div style={{ overflowX: 'auto', width: '100%' }}>\n\t\t\t\t<span className=\"title\" >{t('pca-summary')}</span>\n\t\t\t\t{summaryTable( stdev, variance, cumVariance, t )}\n\t\t\t\t<Plotly editable data={[ trace ]} layout={{\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\ttitle: t('principal-component')\n\t\t\t\t\t},\n\t\t\t\t\tyaxis: {\n\t\t\t\t\t\ttitle: t('explained-proportion')\n\t\t\t\t\t}\n\t\t\t\t}} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nPrincipalComponentAnalysis.defaultProps = {\n\tcenter: true,\n\tscale: false,\n\tnoComponents: 0,\n\tonResult() {}\n};\n\nPrincipalComponentAnalysis.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tvariables: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tcenter: PropTypes.bool,\n\tscale: PropTypes.bool,\n\tnoComponents: PropTypes.number,\n\tonResult: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( withPropCheck( PrincipalComponentAnalysis ) );\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n    let swapped = false;\n    let a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n    let si = new Float64Array(ni);\n\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n\n        U.set(j, j, 1);\n      }\n\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n\n            t = -t / U.get(k, k);\n\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n\n          U.set(k, k, 1 + U.get(k, k));\n\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n\n            t = -t / V.get(k + 1, k);\n\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n\n    while (p > 0) {\n      let k, kase;\n\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n\n        const alpha = Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n\n          let t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1:\n          {\n            let f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (let j = p - 2; j >= k; j--) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n\n              if (j !== k) {\n                f = -sn * e[j - 1];\n                e[j - 1] = cs * e[j - 1];\n              }\n\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                  V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                  V.set(i, j, t);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            let f = e[k - 1];\n            e[k - 1] = 0;\n\n            for (let j = k; j < p; j++) {\n              let t = hypotenuse(s[j], f);\n              let cs = s[j] / t;\n              let sn = f / t;\n              s[j] = t;\n              f = -sn * e[j];\n              e[j] = cs * e[j];\n\n              if (wantu) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                  U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            const scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[k]), Math.abs(e[k]));\n            const sp = s[p - 1] / scale;\n            const spm1 = s[p - 2] / scale;\n            const epm1 = e[p - 2] / scale;\n            const sk = s[k] / scale;\n            const ek = e[k] / scale;\n            const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            const c = sp * epm1 * (sp * epm1);\n            let shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            let f = (sk + sp) * (sk - sp) + shift;\n            let g = sk * ek;\n\n            for (let j = k; j < p - 1; j++) {\n              let t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              let cs = f / t;\n              let sn = g / t;\n\n              if (j !== k) {\n                e[j - 1] = t;\n              }\n\n              f = cs * s[j] + sn * e[j];\n              e[j] = cs * e[j] - sn * s[j];\n              g = sn * s[j + 1];\n              s[j + 1] = cs * s[j + 1];\n\n              if (wantv) {\n                for (let i = 0; i < n; i++) {\n                  t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                  V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                  V.set(i, j, t);\n                }\n              }\n\n              t = hypotenuse(f, g);\n              if (t === 0) t = Number.MIN_VALUE;\n              cs = f / t;\n              sn = g / t;\n              s[j] = t;\n              f = cs * e[j] + sn * s[j + 1];\n              s[j + 1] = -sn * e[j] + cs * s[j + 1];\n              g = sn * e[j + 1];\n              e[j + 1] = cs * e[j + 1];\n\n              if (wantu && j < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                  U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                  U.set(i, j, t);\n                }\n              }\n            }\n\n            e[p - 2] = f;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[k] <= 0) {\n              s[k] = s[k] < 0 ? -s[k] : 0;\n\n              if (wantv) {\n                for (let i = 0; i <= pp; i++) {\n                  V.set(i, k, -V.get(i, k));\n                }\n              }\n            }\n\n            while (k < pp) {\n              if (s[k] >= s[k + 1]) {\n                break;\n              }\n\n              let t = s[k];\n              s[k] = s[k + 1];\n              s[k + 1] = t;\n\n              if (wantv && k < n - 1) {\n                for (let i = 0; i < n; i++) {\n                  t = V.get(i, k + 1);\n                  V.set(i, k + 1, V.get(i, k));\n                  V.set(i, k, t);\n                }\n              }\n\n              if (wantu && k < m - 1) {\n                for (let i = 0; i < m; i++) {\n                  t = U.get(i, k + 1);\n                  U.set(i, k + 1, U.get(i, k));\n                  U.set(i, k, t);\n                }\n              }\n\n              k++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n\n}","export function hypotenuse(a, b) {\n  let r = 0;\n\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n\n  return 0;\n}","import { AbstractMatrix } from '../matrix';\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n}"],"names":["BaseView","constructor","matrix","rows","columns","super","this","MatrixTransposeView","set","rowIndex","columnIndex","value","get","EigenvalueDecomposition","options","assumeSymmetric","WrapperMatrix2D","isSquare","Error","isEmpty","i","j","n","V","d","Float64Array","e","isSymmetric","f","g","h","k","hh","scale","Math","abs","sqrt","tred2","l","m","p","r","dl1","c","c2","c3","el1","s","s2","iter","tst1","eps","Number","EPSILON","max","tql2","H","ort","low","high","orthes","nn","t","w","x","y","ra","sa","vr","vi","notlast","cdivres","exshift","norm","q","z","min","cdiv","hqr2","realEigenvalues","Array","from","imaginaryEigenvalues","eigenvectorMatrix","diagonalMatrix","X","xr","xi","yr","yi","nipals","Y","scaleScores","maxIterations","terminationCriteria","u","isArray","getColumnVector","tOld","diff","counter","transpose","mmul","div","clone","sub","pow","sum","xResidual","residual","yResidual","mulS","betas","PCA","dataset","model","center","means","stdevs","U","S","R","excludedFeatures","isCovarianceMatrix","method","nCompNIPALS","ignoreZeroVariance","_computeFromCovarianceMatrix","_adjust","covarianceMatrix","_computeWithNIPALS","svd","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","rightSingularVectors","singularValues","diagonal","eigenvalues","singularValue","push","static","name","TypeError","RangeError","predict","nComponents","subRowVector","removeColumn","divRowVector","predictions","subMatrix","invert","inverse","mulRowVector","addRowVector","getExplainedVariance","map","getCumulativeVariance","explained","length","getEigenvectors","getEigenvalues","getStandardDeviations","getLoadings","toJSON","mean","standardDeviation","splice","evd","flipRows","reverse","dc","setRow","fitModel","data","variables","noComponents","row","missing","val","isNumber","isnan","pca","components","_","PrincipalComponentAnalysis","Component","props","state","onResult","nextProps","prevState","newState","render","Alert","variant","stdev","variance","cumVariance","trace","incrspace","type","style","overflowX","width","className","bordered","size","id","key","toFixed","summaryTable","editable","layout","xaxis","title","yaxis","defaultProps","propTypes","PropTypes","isRequired","withTranslation","withPropCheck","SingularValueDecomposition","a","wantu","Boolean","wantv","swapped","aux","console","warn","nu","ni","work","si","nct","nrt","mrc","pp","kase","alpha","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","b","shift","tmp","solve","threshold","scols","Ls","VL","vrows","urows","VLU","solveForDiagonal","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","hypotenuse"],"sourceRoot":""}