{"version":3,"sources":["actions/namespace.js","components/create-namespace/index.js","components/text-select/index.js","utils/check_url_path.js","utils/file_saver.js"],"names":["setImmediate","self","saveAs"],"mappings":"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","file":"static/js/8498.56982b4e.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport saveAs from 'utils/file_saver.js';\nimport server from 'constants/server';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { getCohorts } from 'actions/cohort';\nimport { APPEND_CREATED_NAMESPACE, CHANGED_NAMESPACE, DELETED_CURRENT_NAMESPACE, GET_ALL_NAMESPACES, UPDATED_OWNED_NAMESPACE, UPDATED_STUDENT_PROGRESS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Returns an action object to be used in signalling that a namespace has been created.\n *\n * @param {Object} namespace - the created namespace\n * @returns {Object} the action object\n */\nexport function appendCreatedNamespace( namespace ) {\n\treturn {\n\t\ttype: APPEND_CREATED_NAMESPACE,\n\t\tpayload: {\n\t\t\tnamespace\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been changed.\n *\n * @param {Object} namespace - the changed namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.announcements - announcements\n * @param {Array} namespace.cohorts - cohorts\n * @param {string} namespace.description - namespace description\n * @param {boolean} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @param {Array} namespace.completions - array of completion metric objects associated with the namespace\n * @returns {Object} the action object\n */\nexport function changedNamespace({ title, owners, announcements = [], cohorts = [], description, enableTicketing, _id, completions }) {\n\treturn {\n\t\ttype: CHANGED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tannouncements,\n\t\t\tcohorts,\n\t\t\tdescription,\n\t\t\tenableTicketing,\n\t\t\towners,\n\t\t\tcompletions,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been deleted.\n *\n * @param {string} id - the id of the namespace to be deleted\n * @returns {Object} the action object\n */\nexport function deletedCurrentNamespace( id ) {\n\treturn {\n\t\ttype: DELETED_CURRENT_NAMESPACE,\n\t\tpayload: {\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a student's progress has been updated.\n *\n * @param {Object} options - progress of the student\n * @param {string} options.email - email of the student\n * @param {string} options.lessonId - lesson id\n * @param {number} options.progress - progress of the student\n * @param {Object} options.cohort - cohort of the student\n */\nexport function updateStudentProgress({ email, lessonID, progress, cohort }) {\n\treturn {\n\t\ttype: UPDATED_STUDENT_PROGRESS,\n\t\tpayload: {\n\t\t\temail, lessonID, progress, cohort\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that an owned namespace has been updated.\n *\n * @param {Object} namespace - the updated namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @returns {Object} the action object\n */\nexport function updatedOwnedNamespace({ title, owners, description, enableTicketing, _id }) {\n\treturn {\n\t\ttype: UPDATED_OWNED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\tenableTicketing,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Makes a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} namespace - the new namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.description - namespace description\n * @param {string} namespace.tag - a completion category associated with the namespace\n * @param {Array} namespace.owners - ids of owners\n * @param {Object} namespace.props - properties of the invoking component\n */\nexport const createNamespace = async ( dispatch, { title, description, tag, owners, props }) => {\n\ttry {\n\t\tconst body = {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\t...(isString( tag ) && tag !== '_default_tag' && { tag })\n\t\t};\n\t\tconst res = await axios.post( server+'/create_namespace', body );\n\t\tif ( !res.data.successful ) {\n\t\t\treturn addErrorNotification( dispatch, new Error( res.data.message ));\n\t\t}\n\t\tconst namespace = res.data.namespace;\n\t\t// props.onNamespace( namespace );\n\t\tdispatch( appendCreatedNamespace( namespace ) );\n\t\twindow.location.replace( '/dashboard/lessons/'+title );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: res.data.successful ? 'success' : 'error'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to create a new namespace\n */\nexport const createNamespaceInjector = dispatch => {\n\treturn async ({ title, description, tag, owners, props }) => {\n\t\tawait createNamespace( dispatch, { title, description, tag, owners, props } );\n\t};\n};\n\n/**\n * Makes a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the namespace to be deleted\n * @returns {void}\n */\nexport const deleteCurrentNamespace = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_namespace', { id });\n\t\tdispatch( deletedCurrentNamespace( id ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to delete a namespace\n */\nexport const deleteCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id ) => {\n\t\tawait deleteCurrentNamespace( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} ns - the updated namespace\n */\nexport const updateCurrentNamespace = async ( dispatch, ns ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_namespace', { ns });\n\t\tdispatch( changedNamespace( res.data.namespace ) );\n\t\tdispatch( updatedOwnedNamespace( res.data.namespace ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tgetCohorts( dispatch, {\n\t\t\tnamespaceID: ns._id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a namespace\n */\nexport const updateCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id, ns ) => {\n\t\tawait updateCurrentNamespace( dispatch, id, ns );\n\t};\n};\n\n/**\n * Makes a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.namespaceTitle - title of the namespace\n * @returns {void}\n */\nexport const getNamespaceActions = async ( dispatch, { namespaceID, namespaceTitle } ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_namespace_actions?'+qs.stringify({ namespaceID }) );\n\t\tconst blob = new Blob([ res.data ], {\n\t\t\ttype: 'application/json'\n\t\t});\n\t\tconst name = `actions_${namespaceTitle}.json`;\n\t\tsaveAs( blob, name );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a namespace's actions\n */\nexport const getNamespaceActionsInjector = ( dispatch ) => {\n\treturn async ({ namespaceID, namespaceTitle }) => {\n\t\tawait getNamespaceActions( dispatch, { namespaceID, namespaceTitle });\n\t};\n};\n\n/**\n * Makes a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.lessonID - id of the lesson\n * @param {string} options.email - email of the user\n * @param {number} options.progress - progress of the user\n * @param {Object} options.cohort - cohort of the user\n */\nexport const adjustProgress = async ( dispatch, { email, lessonID, namespaceID, progress, cohort }) => {\n\tconst res = await axios.post( server+'/user_adjust_progress', {\n\t\temail, lessonID, namespaceID, progress\n\t});\n\taddNotification( dispatch, {\n\t\ttitle: i18next.t('common:updated'),\n\t\tmessage: res.data.message,\n\t\tlevel: 'success'\n\t});\n\tdispatch( updateStudentProgress({ email, lessonID, progress, cohort }) );\n};\n\n/**\n * Returns a function to make a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a user's lesson progress\n */\nexport const adjustProgressInjector = ( dispatch ) => {\n\treturn async ( { email, lessonID, namespaceID, progress, cohort } ) => {\n\t\tawait adjustProgress( dispatch, { email, lessonID, namespaceID, progress, cohort } );\n\t};\n};\n\n/**\n * Makes a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getAllNamespaces = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_namespaces' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_NAMESPACES,\n\t\t\tpayload: {\n\t\t\t\tnamespaces: res.data.namespaces\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a all available namespaces\n */\nexport const getAllNamespacesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllNamespaces( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Array} options.lessons - lessons of the course in the order to be displayed on the dashboard\n * @param {string} options.id - id of the namespace\n * @returns {void}\n */\nexport const setLessonOrder = async ( dispatch, { lessons, id }) => {\n\ttry {\n\t\tawait axios.post( server+'/set_lesson_order', {\n\t\t\tlessons, id\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to set the order lessons appear on the dashboard\n */\nexport const setLessonOrderInjector = ( dispatch ) => {\n\treturn async ({ lessons, id }) => {\n\t\tawait setLessonOrder( dispatch, { lessons, id } );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Form from 'react-bootstrap/Form';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport logger from 'debug';\nimport isEmail from '@stdlib/assert/is-email-address';\nimport trim from '@stdlib/string/trim';\nimport contains from '@stdlib/assert/contains';\nimport TextSelect from 'components/text-select';\nimport SERVER from 'constants/server';\nimport checkURLPath from '../../utils/check_url_path';\nimport './create_namespace.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:create-namespace' );\n\n\n// FUNCTIONS //\n\n/**\n * Validates that a list of owners contains only email addresses.\n *\n * @private\n * @param {Array<string>} owners - list of owners\n * @returns {boolean} boolean indicating if the list of owners contains only email addresses\n */\nexport function validateOwners( owners ) {\n\tlet invalid = false;\n\tif ( owners.length === 0 ) {\n\t\tinvalid = true;\n\t} else {\n\t\towners.forEach( owner => {\n\t\t\tif ( !isEmail( owner ) ) {\n\t\t\t\tinvalid = true;\n\t\t\t}\n\t\t});\n\t}\n\tif ( invalid ) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/**\n * Validates a namespace name.\n *\n * @private\n * @param {string} title - namespace name\n * @returns {boolean} boolean indicating if the namespace name is valid\n */\nexport function validateTitle( title ) {\n\treturn title && title.length >= 3 && !contains( title, ' ' ) && !checkURLPath( title );\n}\n\n/**\n * Validates a namespace description.\n *\n * @private\n * @param {string} description - namespace description\n * @returns {boolean} boolean indicating if the namespace description is valid\n */\nexport function validateDescription( description ) {\n\treturn description && description.length >= 3;\n}\n\n\n// MAIN //\n\n/**\n * A component for creating a new namespace.\n *\n * @param {Object} props - component properties\n * @param {Object} props.user - user object\n * @param {Function} props.createNamespace - callback function for creating a new namespace with the specified title, description, and owners\n * @returns {ReactElement} component for creating a new namespace\n */\nconst CreateNamespace = ( props ) => {\n\tconst [ title, setTitle ] = useState( '' );\n\tconst [ description, setDescription ] = useState( '' );\n\tconst [ owners, setOwners ] = useState( [ props.user.email ] );\n\tconst [ tag, setTag ] = useState( null );\n\tconst { t } = useTranslation( [ 'namespace', 'common' ] );\n\n\tconst handleSubmit = () => {\n\t\tprops.createNamespace({\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\ttag,\n\t\t\tprops\n\t\t});\n\t};\n\tconst handleOwnerChange = ( newValue ) => {\n\t\tif ( !newValue ) {\n\t\t\tsetOwners( [] );\n\t\t}\n\t\tconst newOwners = newValue.map( x => trim( x.value ) );\n\t\tsetOwners( newOwners );\n\t};\n\tconst handleTitleChange = ( event ) => {\n\t\tconst value = event.target.value;\n\t\tsetTitle( value );\n\t};\n\tconst handleDescriptionChange = ( event ) => {\n\t\tconst value = event.target.value;\n\t\tsetDescription( value );\n\t};\n\tconst handleTagChange = ( event ) => {\n\t\tconst value = event.target.value;\n\t\tsetTag( value );\n\t};\n\tconst validTitle = validateTitle( title );\n\tconst invalidTitleChars = checkURLPath( title );\n\tconst validDescription = validateDescription( description );\n\tconst validOwners = validateOwners( owners );\n\tdebug( 'Validation status of input fields: ' );\n\tdebug( `Title: ${validTitle}` );\n\tdebug( `Description: ${validDescription}` );\n\tdebug( `Owners: ${validOwners}` );\n\treturn (\n\t\t<div className=\"create-namespace-container\" >\n\t\t\t<Card className=\"create-namespace-card\" >\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<Card.Title as=\"h2\" >{t('create-course')}</Card.Title>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Form style={{ padding: '20px' }}>\n\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"ownerTooltip\">{t('owner-tooltip')}</Tooltip>}>\n\t\t\t\t\t\t<FormGroup controlId=\"form-owners\" >\n\t\t\t\t\t\t\t<FormLabel>{t('common:owners')}</FormLabel>\n\t\t\t\t\t\t\t<TextSelect\n\t\t\t\t\t\t\t\tid=\"owners-text-select\"\n\t\t\t\t\t\t\t\tonChange={handleOwnerChange}\n\t\t\t\t\t\t\t\tdefaultValue={owners}\n\t\t\t\t\t\t\t\tisInvalid={!validOwners}\n\t\t\t\t\t\t\t\tplaceholder={t('enter-emails')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{t('invalid-owners')}\n\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"courseTooltip\" >{t('accessible-at')}<code>{SERVER+'/<course>/<lesson>'}</code></Tooltip>}>\n\t\t\t\t\t\t<FormGroup controlId=\"form-course\" >\n\t\t\t\t\t\t\t<FormLabel>{t('common:course')}</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('course-placeholder')}\n\t\t\t\t\t\t\t\tonChange={handleTitleChange}\n\t\t\t\t\t\t\t\tisInvalid={title && !validTitle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{ invalidTitleChars ?\n\t\t\t\t\t\t\t\t\t'Course identifier contains invalid character(s): '+invalidTitleChars[ 0 ] :\n\t\t\t\t\t\t\t\t\t'Course identifier must be at least three characters long and should not contain any spaces.'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"titleTooltip\">{t('title-tooltip')}</Tooltip>}>\n\t\t\t\t\t\t<FormGroup controlId=\"form-description\" >\n\t\t\t\t\t\t\t<FormLabel>{t('title-description')}</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('title-placeholder')}\n\t\t\t\t\t\t\t\tonChange={handleDescriptionChange}\n\t\t\t\t\t\t\t\tisInvalid={description && !validDescription}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{t('invalid-description')}\n\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"tagTooltip\">{t('tag-tooltip')}</Tooltip>}>\n\t\t\t\t\t\t<FormGroup controlId=\"form-tag\" >\n\t\t\t\t\t\t\t<FormLabel>{t('tag-description')}</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('tag-placeholder')}\n\t\t\t\t\t\t\t\tonChange={handleTagChange}\n\t\t\t\t\t\t\t\tisInvalid={description && !validDescription}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t\t{t('invalid-tag')}\n\t\t\t\t\t\t\t</FormControl.Feedback>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t</Form>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\tdisabled={!validOwners || !validTitle || !validDescription}\n\t\t\t\t\tblock\n\t\t\t\t>{t('common:create')}</Button>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\n\n// PROPERTIES //\n\nCreateNamespace.propTypes = {\n\tcreateNamespace: PropTypes.func.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\nCreateNamespace.defaultProps = {\n};\n\n\n// EXPORTS //\n\nexport default CreateNamespace;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport copy from 'clipboard-copy';\nimport CreatableSelect from 'react-select/creatable';\nimport { components } from 'react-select';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport isObjectArray from '@stdlib/assert/is-object-array';\nimport isEmptyString from '@stdlib/assert/is-empty-string';\nimport contains from '@stdlib/assert/contains';\nimport isNull from '@stdlib/assert/is-null';\nimport trim from '@stdlib/string/trim';\nimport './text_select.css';\n\n\n// VARIABLES //\n\nconst customStyles = {\n\tclearIndicator: ( provided, state ) => ({\n\t\t...provided,\n\t\tcursor: 'pointer'\n\t}),\n\tmultiValueRemove: ( provided, state ) => ({\n\t\t...provided,\n\t\tcursor: 'pointer'\n\t}),\n\tvalueContainer: ( provided, state ) => ({\n\t\t...provided,\n\t\tcursor: 'text'\n\t})\n};\n\n\n// FUNCTIONS //\n\n/**\n * Returns a select option object.\n *\n * @private\n * @param {string} label - option label\n * @returns {Object} option object\n */\nconst createOption = ( label ) => ({\n\tlabel,\n\tvalue: label\n});\n\n/**\n * Maps elements of an array to option objects.\n *\n * @private\n * @param {Array} arr - array of elements\n * @returns {Array} array of option objects\n */\nconst toOptions = ( arr ) => {\n\tif ( isNull( arr ) ) {\n\t\treturn null;\n\t}\n\tif ( isObjectArray( arr ) && arr[ 0 ].label && arr[ 0 ].value ) {\n\t\treturn arr;\n\t}\n\treturn arr.map( createOption );\n};\n\n\n// MAIN //\n\nclass TextSelect extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tvalue: toOptions( props.defaultValue )\n\t\t};\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.defaultValue !== prevProps.defaultValue ) {\n\t\t\tthis.setState({\n\t\t\t\tvalue: toOptions( this.props.defaultValue )\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = ( value ) => {\n\t\tthis.setState({ value });\n\t\tthis.props.onChange( value );\n\t};\n\n\thandleInputChange = ( inputValue, action ) => {\n\t\tif ( action.action === 'menu-close' ) {\n\t\t\tthis.addInputValues();\n\t\t}\n\t\telse if ( action.action !== 'input-blur' ) {\n\t\t\tthis.setState({\n\t\t\t\tinputValue\n\t\t\t});\n\t\t}\n\t};\n\n\taddInputValues = () => {\n\t\tlet { inputValue, value } = this.state;\n\t\tif ( !inputValue ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( contains( inputValue, ',' ) ) {\n\t\t\tinputValue = inputValue.split( ',' )\n\t\t\t\t.map( x => trim( x ) )\n\t\t\t\t.filter( x => !isEmptyString( x ) );\n\t\t} else {\n\t\t\tinputValue = [ trim( inputValue ) ];\n\t\t}\n\t\tlet newValue;\n\t\tif ( value ) {\n\t\t\tnewValue = value.concat( inputValue.map( createOption ) );\n\t\t} else {\n\t\t\tnewValue = inputValue.map( createOption );\n\t\t}\n\t\tthis.setState({\n\t\t\tinputValue: '',\n\t\t\tvalue: newValue\n\t\t}, () => {\n\t\t\tthis.props.onChange( this.state.value );\n\t\t});\n\t};\n\n\thandleKeyDown = ( event ) => {\n\t\tswitch ( event.key ) {\n\t\t\tcase 'Enter':\n\t\t\tcase 'Tab': {\n\t\t\t\tthis.addInputValues();\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { inputValue, value } = this.state;\n\t\tconst isInvalid = this.props.isInvalid;\n\t\tconst control = ( provided, state ) => {\n\t\t\tconst out = {\n\t\t\t\t...provided\n\t\t\t};\n\t\t\tif ( state.isFocused && isInvalid ) {\n\t\t\t\tout.boxShadow = '0 0 0 0.2rem rgba(220,53,69,0.25)';\n\t\t\t}\n\t\t\tout.borderColor = isInvalid ? '#dc3545' : '#ddd';\n\t\t\tout[ '&:hover' ] = {\n\t\t\t\tborderColor: isInvalid ? '#dc3545' : '#ddd'\n\t\t\t};\n\t\t\treturn out;\n\t\t};\n\t\tconst customComponents = {\n\t\t\tDropdownIndicator: null,\n\t\t\tMultiValueLabel: props => {\n\t\t\t\tconst copyToClipboard = () => {\n\t\t\t\t\tcopy( props.data.label );\n\t\t\t\t};\n\t\t\t\treturn (\n\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\toverlay={<Tooltip id=\"copy_tooltip\">{this.props.t('copy-tooltip')}</Tooltip>}\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\t\tonClick={copyToClipboard} onKeyPress={copyToClipboard}\n\t\t\t\t\t\t\tclassName=\"text-select-copy\"\n\t\t\t\t\t\t\taria-label={this.props.t('copy-tooltip')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<components.MultiValueLabel {...props} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<CreatableSelect\n\t\t\t\tinputId={this.props.id}\n\t\t\t\tcomponents={customComponents}\n\t\t\t\tinputValue={inputValue}\n\t\t\t\tisClearable={this.props.isClearable}\n\t\t\t\tisMulti\n\t\t\t\tmenuIsOpen={false}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonInputChange={this.handleInputChange}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tstyles={{ ...customStyles, control: control, ...this.props.styles }}\n\t\t\t\tt={this.props.t}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nTextSelect.propTypes = {\n\tdefaultValue: PropTypes.array,\n\tid: PropTypes.string,\n\tisClearable: PropTypes.bool,\n\tisInvalid: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tplaceholder: PropTypes.string,\n\tstyles: PropTypes.object\n};\n\nTextSelect.defaultProps = {\n\tdefaultValue: [],\n\tid: null,\n\tisClearable: false,\n\tisInvalid: false,\n\tonChange() {},\n\tplaceholder: '',\n\tstyles: {}\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( [ 'text_select', 'common' ] )( TextSelect );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// VARIABLES //\n\nconst REGEXP_CHARS = /[‘“!#$%&+^<=>{}()[\\]`]/;\n\n\n// MAIN //\n\n/**\n* Validates a string as a URL path.\n*\n* @param {string} str - value to validate\n* @returns {boolean} boolean indicating if a string is a URL path\n*/\nfunction checkURLPath( str ) {\n\treturn str && str.match( REGEXP_CHARS );\n}\n\n\n// EXPORTS //\n\nexport default checkURLPath;\n","/*\r\n* Adapted from:\r\n*\r\n* FileSaver.js\r\n* A saveAs() FileSaver implementation.\r\n* 1.3.8\r\n* 2018-03-22 14:03:47\r\n*\r\n* By Eli Grey, https://eligrey.com\r\n* License: MIT\r\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n*\r\n* @source http://purl.eligrey.com/github/FileSaver.js/blob/master/src/FileSaver.js\r\n*/\r\n\r\n// VARIABLES //\r\n\r\nconst RE_AUTO_BOM = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\r\nconst ARBITRARY_REVOKE_TIMEOUT = 1000 * 40; // Time in ms\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction click(node) {\r\n\tconst event = new MouseEvent( 'click' );\r\n\tnode.dispatchEvent( event );\r\n}\r\n\r\nfunction throwOutside( ex ) {\r\n\tsetImmediate(function throwEx() {\r\n\t\tthrow ex;\r\n\t}, 0 );\r\n}\r\n\r\nfunction autoBOM( blob ) {\r\n\t// Prepend BOM for UTF-8 XML and text/* types (including HTML). Note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n\tif ( RE_AUTO_BOM.test( blob.type ) ) {\r\n\t\treturn new Blob([ String.fromCharCode( 0xFEFF ), blob ], {\r\n\t\t\ttype: blob.type\r\n\t\t});\r\n\t}\r\n\treturn blob;\r\n}\r\n\r\nfunction dispatch( filesaver, eventTypes, event ) {\r\n\teventTypes = [].concat( eventTypes );\r\n\tlet i = eventTypes.length;\r\n\twhile ( i-- ) {\r\n\t\tlet listener = filesaver[ 'on' + eventTypes[i] ];\r\n\t\tif ( typeof listener === 'function' ) {\r\n\t\t\ttry {\r\n\t\t\t\tlistener.call( filesaver, event || filesaver );\r\n\t\t\t} catch ( ex ) {\r\n\t\t\t\tthrowOutside( ex );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// MAIN //\r\n\r\nfunction saveFactory( view ) {\r\n\tif (\r\n\t\ttypeof view === 'undefined' ||\r\n\t\ttypeof navigator !== 'undefined' &&\r\n\t\t/MSIE [1-9]\\./.test( navigator.userAgent )\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\tconst doc = view.document;\r\n\r\n\t// Only get URL when necessary in case Blob.js hasn't overridden it yet:\r\n\tfunction getURL() {\r\n\t\treturn view.URL || view.webkitURL || view;\r\n\t}\r\n\tfunction revoke( file ) {\r\n\t\tfunction revoker() {\r\n\t\t\tif ( typeof file === 'string' ) { // File is an object URL...\r\n\t\t\t\tgetURL().revokeObjectURL(file);\r\n\t\t\t} else { // File is a File...\r\n\t\t\t\tfile.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetTimeout( revoker, ARBITRARY_REVOKE_TIMEOUT );\r\n\t}\r\n\r\n\tconst saveLink = doc.createElementNS( 'http://www.w3.org/1999/xhtml', 'a' );\r\n\tconst canUseSaveLink = 'download' in saveLink;\r\n\tconst isSafari = /constructor/i.test( view.HTMLElement ) || view.safari;\r\n\tconst isChromeIOS =/CriOS\\/[\\d]+/.test( navigator.userAgent );\r\n\tconst setImmediate = view.setImmediate || view.setTimeout;\r\n\tconst forceSavableType = 'application/octet-stream';\r\n\r\n\tfunction FileSaver(blob, name, noAutoBOM ) {\r\n\t\tif ( !noAutoBOM ) {\r\n\t\t\tblob = autoBOM(blob);\r\n\t\t}\r\n\t\t// First try a.download, then web filesystem, then object URLs\r\n\t\tconst self = this;\r\n\t\tconst type = blob.type;\r\n\t\tconst force = type === forceSavableType;\r\n\t\tlet objectURL;\r\n\t\tfunction dispatchAll() {\r\n\t\t\tdispatch( self, 'writestart progress write writeend'.split(' ') );\r\n\t\t}\r\n\t\t// On any filesystem errors, revert to saving with object URLs:\r\n\t\tfunction fsError() {\r\n\t\t\tif ((isChromeIOS || (force && isSafari)) && view.FileReader) {\r\n\t\t\t\t// Safari doesn't allow downloading of blob urls\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.onloadend = function onLoadEnd() {\r\n\t\t\t\t\tlet url = isChromeIOS ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n\t\t\t\t\tconst popup = view.open(url, '_blank');\r\n\t\t\t\t\tif ( !popup ) {\r\n\t\t\t\t\t\tview.location.href = url;\r\n\t\t\t\t\t}\r\n\t\t\t\t\turl = void 0; // Release reference before dispatching...\r\n\t\t\t\t\tself.readyState = self.DONE;\r\n\t\t\t\t\tdispatchAll();\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\tself.readyState = self.INIT;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Don't create more object URLs than needed:\r\n\t\t\tif ( !objectURL ) {\r\n\t\t\t\tobjectURL = getURL().createObjectURL( blob );\r\n\t\t\t}\r\n\t\t\tif ( force ) {\r\n\t\t\t\tview.location.href = objectURL;\r\n\t\t\t} else {\r\n\t\t\t\tconst opened = view.open( objectURL, '_blank' );\r\n\t\t\t\tif ( !opened ) {\r\n\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\r\n\t\t\t\t\tview.location.href = objectURL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tself.readyState = self.DONE;\r\n\t\t\tdispatchAll();\r\n\t\t\trevoke( objectURL );\r\n\t\t}\r\n\t\tself.readyState = self.INIT;\r\n\r\n\t\tif ( canUseSaveLink ) {\r\n\t\t\tobjectURL = getURL().createObjectURL(blob);\r\n\t\t\tsetImmediate(function save() {\r\n\t\t\t\tsaveLink.href = objectURL;\r\n\t\t\t\tsaveLink.download = name;\r\n\t\t\t\tclick( saveLink );\r\n\t\t\t\tdispatchAll();\r\n\t\t\t\trevoke( objectURL );\r\n\t\t\t\tself.readyState = self.DONE;\r\n\t\t\t}, 0);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfsError();\r\n\t}\r\n\tconst proto = FileSaver.prototype;\r\n\tfunction saveAs( blob, name, noAutoBOM ) {\r\n\t\treturn new FileSaver( blob, name || blob.name || 'download', noAutoBOM );\r\n\t}\r\n\r\n\t// IE 10+ (native saveAs)\r\n\tif ( typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob ) {\r\n\t\treturn function saveAs( blob, name, noAutoBOM ) {\r\n\t\t\tname = name || blob.name || 'download';\r\n\t\t\tif ( !noAutoBOM ) {\r\n\t\t\t\tblob = autoBOM( blob );\r\n\t\t\t}\r\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\r\n\t\t};\r\n\t}\r\n\r\n\tproto.abort = function abort() {};\r\n\tproto.readyState = proto.INIT = 0;\r\n\tproto.WRITING = 1;\r\n\tproto.DONE = 2;\r\n\r\n\tproto.error = null;\r\n\tproto.onwritestart = null;\r\n\tproto.onprogress = null;\r\n\tproto.onwrite = null;\r\n\tproto.onabort = null;\r\n\tproto.onerror = null;\r\n\tproto.onwriteend = null;\r\n\r\n\treturn saveAs;\r\n}\r\n\r\nconst saveAs = saveFactory(\r\n\ttypeof self !== 'undefined' && self ||\r\n\ttypeof window !== 'undefined' && window ||\r\n\tthis.content\r\n);\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default saveAs;\r\n"],"sourceRoot":""}