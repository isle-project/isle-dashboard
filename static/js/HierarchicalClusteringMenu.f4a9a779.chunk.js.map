{"version":3,"file":"static/js/HierarchicalClusteringMenu.f4a9a779.chunk.js","mappings":"2HAOA,MAAMA,GAAYC,E,SAAAA,IAAU,IAAM,wFAKlC,O,sOCSA,MAAMC,EAAY,CAAE,YAAa,YAAa,SAAU,UAAW,aAC7DC,EAAU,CAAE,WAAY,UAKxBC,EAA+BC,IACpC,MAAM,aAAEC,EAAF,EAAgBC,GAAMF,EAyB5B,OACC,gBAAC,IAAD,CACCG,MAAO,4BACLD,EAAE,2BACH,gBAAC,IAAD,CAAgBC,MAAOD,EAAE,2BAA4BE,QAASF,EAAE,0CAEjEG,WAAW,EACXC,WA/Bc,CAAEC,EAAWC,EAAQC,EAAGC,EAASC,KAChD,MAAMC,EAAS,gBAAC,IAAD,CACdL,UAAWA,EAAWE,EAAGA,EAAGC,QAASA,EAASC,SAAUA,EACxDE,KAAMb,EAAMa,KACZC,SAAYC,IACX,GAAKP,EAAS,CACb,MAAMQ,EAAUC,GAAAA,CAAMjB,EAAMa,KAAM,GAC5BK,EAAiBlB,EAAMmB,YAAYC,QACnCC,EAASd,EAAUe,KAAKC,GAAKA,EAAG,KAAMC,KAAM,IAC5CC,EAAcV,EAAOW,sBAAuBjB,GAC5CkB,GAAOC,EAAAA,EAAAA,GAAQ,kBAAoBP,EAAQQ,GAAAA,CAAW,EAAGpB,EAAG,GAAIa,KAAKC,GAAM,WAAUA,EAAE,OAC7FP,EAASW,GAASF,EACZK,GAAAA,CAAUZ,EAAgBS,IAC/BT,EAAea,KAAMJ,GAEtB3B,EAAMM,WAAYY,EAAgBF,OAIrChB,EAAMgC,UAAWC,EAAAA,GAAuC,CACvD1B,UAAAA,EAAWC,OAAAA,EAAQC,EAAAA,EAAGC,QAAAA,EAASC,SAAAA,IAEhCX,EAAMkC,UAAWtB,KAWhB,gBAAC,IAAD,CACCuB,OAAQjC,EAAE,aAAckC,OAAK,EAC7BC,QAASpC,IAEV,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCkC,OAAQjC,EAAE,yBACVoC,cAAc,KAGhB,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCH,OAAQjC,EAAE,sBACVqC,IAAK,EACLC,QAAM,EACNF,aAAc,MAIjB,gBAAC,IAAD,KACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCH,OAAQjC,EAAE,WACVoC,aAAcxC,EAAS,GACvBuC,QAASvC,KAGX,gBAAC,IAAD,KACC,gBAAC,IAAD,CACCqC,OAAQjC,EAAE,YACVoC,aAAczC,EAAW,GACzBwC,QAASxC,QAWfE,EAA2B0C,aAAe,CACzCT,eAGDjC,EAA2B2C,UAAY,CACtCvB,YAAawB,IAAAA,MAAAA,WACb1C,aAAc0C,IAAAA,MAAAA,WACd9B,KAAM8B,IAAAA,OAAAA,WACNX,UAAWW,IAAAA,KACXrC,WAAYqC,IAAAA,KAAAA,WACZT,UAAWS,IAAAA,KAAAA,YAMZ,a,+GC5GA,MAAMC,EAAmB5C,IACxB,MAAM6C,EAAU,gBAAC,IAAD,CAASC,GAAG,4BAC3B,gBAAC,IAAD,KAAe9C,EAAMG,OACrB,gBAAC,IAAD,KAAiBH,EAAMI,UAExB,OACC,gBAAC,IAAD,CAAgB2C,QAAS,CAAE,QAAS,QAAS,SAAWC,UAAU,OAAOC,WAAS,EAACC,QAASL,GAC3F,gBAAC,IAAD,CACCM,KAAK,KACLC,QAAQ,oBACRC,UAAU,mBAEV,uBAAKA,UAAU,sBAMnBT,EAAeF,UAAY,CAC1B,QAAWC,IAAAA,UAAoB,CAAEA,IAAAA,OAAkBA,IAAAA,OAAkBW,WACrE,MAASX,IAAAA,OAAAA,YAMV,O,kIC1BA,MAAMY,GAAMC,E,SAAAA,GAAa,kBAmBnBC,EAAkBzD,IACvB,MAAM,KAAE0D,EAAF,aAAQpB,EAAR,SAAsBqB,EAAtB,SAAgCC,GAAa5D,EAC7C8C,GAAKe,EAAAA,EAAAA,QAAQ7D,EAAM8C,IAAMS,EAAKvD,IAC9B8D,GAAUC,EAAAA,EAAAA,YAAYC,EAAAA,IACpBC,EAAOC,IAAaC,EAAAA,EAAAA,UAC3BT,GAAQI,EAAQM,MAAQN,EAAQM,MAAOV,GAAQpB,IAEhD+B,EAAAA,EAAAA,YAAW,KACVH,EAAU5B,KACR,CAAEA,KACL+B,EAAAA,EAAAA,YAAW,KACLX,GACJQ,EAAUI,EAAAA,EAAOC,OAAOH,MAAOV,MAE9B,CAAEA,KACLW,EAAAA,EAAAA,YAAW,KACV,GAAKX,EAAO,CACX,IAAIc,EAAcF,EAAAA,EAAOC,OAAOH,MAAOV,GAClCc,IAAgBP,GACpBC,EAAUM,MAGV,CAAEd,EAAMO,IACX,MAAMQ,GAAcC,EAAAA,EAAAA,cAAeC,IAClCT,EAAUS,GACLjB,GACJY,EAAAA,EAAOC,OAAOK,SAAS,CACtB,CAAElB,GAAQiB,MAGV,CAAEjB,IACCmB,GAAeH,EAAAA,EAAAA,cAAeI,IACnC,MAAMH,EAAWG,EAAMC,OAAOC,QAC9BpB,EAAUe,GACVF,EAAaE,KACX,CAAEf,EAAUa,IACTQ,EAAmB,KACxB,MAAMN,EAA2B,OAAhB3E,EAAMiE,OAAkBjE,EAAMiE,OAASA,EACxDL,EAAUe,GACVF,EAAaE,IAERO,EAAQ,yBACb7B,UAAU,iBACV8B,KAAK,WACLH,QAAyB,OAAhBhF,EAAMiE,MAAiBjE,EAAMiE,MAAQA,EAC9CA,MAAM,WACNL,SAAUiB,EACVlB,SAAUA,EACV,aAAY3D,EAAMoF,UAEnB,IAAsB,IAAjBpF,EAAMwC,OACV,OACC,gBAAC,IAAD,CAAS4C,QAASpF,EAAMoF,QAASpC,UAAWhD,EAAMqF,kBACjD,wBAAMvC,GAAIA,EAAGwC,QAASC,MAAO,CAAEC,WAAY,SAAUxF,EAAMuF,QACzDL,EACD,wBACCO,KAAK,SAASC,SAAU,EACxBrC,UAAU,kBACVkC,MAAO,CACNI,MAAOhC,EAAW,WAAa,MAEhCiC,QAASX,EAAkBY,WAAYZ,GACtCjF,EAAMmC,UAKZ,MAAM2D,EAAenC,EAAWoC,IAAOd,EACvC,OACC,gBAAC,IAAD,CAASG,QAASpF,EAAMoF,QAASpC,UAAWhD,EAAMqF,kBACjD,uBAAKvC,GAAIA,EAAGwC,QAASjC,UAAU,2BAA2BkC,MAAOvF,EAAMuF,OACrEL,EACD,wBACCO,KAAK,SAASC,SAAU,EACxBrC,UAAU,kBACVkC,MAAO,CACNI,MAAOhC,EAAW,WAAa,MAEhCiC,QAASE,EAAcD,WAAYC,GAClC9F,EAAMmC,WASZsB,EAAchB,aAAe,CAC5BiB,KAAM,GACNE,aACAtB,cAAc,EACd2B,MAAO,KACPN,UAAU,EACVnB,QAAQ,EACRL,OAAQ,GACRiD,QAAS,GACTC,iBAAkB,QAClBE,MAAO,IAGR9B,EAAcf,UAAY,CACzBgB,KAAMf,IAAAA,OACNL,aAAcK,IAAAA,KACdsB,MAAOtB,IAAAA,KACPgB,SAAUhB,IAAAA,KACVH,OAAQG,IAAAA,KACRiB,SAAUjB,IAAAA,KACVR,OAAQQ,IAAAA,UAAoB,CAC3BA,IAAAA,OACAA,IAAAA,OAEDyC,QAASzC,IAAAA,OACT0C,iBAAkB1C,IAAAA,MAAgB,CAAE,OAAQ,MAAO,QAAS,WAC5D4C,MAAO5C,IAAAA,QAMR,ICjJA,EDiJA,G,kREjIA,MAfA,UAAuB,IAAEJ,EAAF,IAAOyD,EAAP,KAAYC,EAAZ,EAAkB/F,IACxC,IAAIkF,EAAW,GAAElF,EAAE,YAA0BA,EAAJ,IAAT+F,EAAe,UAAe,aAQ9D,OAPKD,IAAQE,KAAQ3D,IAAQ4D,IAC5Bf,GAAY,GAAElF,EAAE,cAAcqC,KAAOrC,EAAE,UAAU8F,IACtCzD,IAAQ4D,IACnBf,GAAY,GAAElF,EAAE,yBAAyBqC,IAC9ByD,IAAQE,MACnBd,GAAY,GAAElF,EAAE,0BAA0B8F,KAEpCZ,GCKR,MAAMgB,EAAQC,GAAAA,CAAQ,qBAChB9C,GAAMC,EAAAA,EAAAA,GAAa,gBA4BnB8C,EAAgBtG,IACrB,MAAM8C,GAAKe,EAAAA,EAAAA,QAAQ7D,EAAM8C,IAAMS,EAAKvD,KAC9B,KAAE0D,EAAF,aAAQpB,EAAR,IAAsBC,EAAtB,IAA2ByD,EAA3B,KAAgCC,EAAMhC,MAAOsC,EAA7C,OAAwDC,EAAxD,SAAgE5C,GAAa5D,GAC7E,EAAEE,IAAMuG,EAAAA,EAAAA,GAAgB,SACxB3C,GAAUC,EAAAA,EAAAA,YAAYC,EAAAA,IACpBC,EAAOC,IAAaC,EAAAA,EAAAA,UAC3BoC,IAAe7C,GAAQI,EAAQM,MAC9BN,EAAQM,MAAOV,GACfpB,KAEF+B,EAAAA,EAAAA,YAAW,KACV,GAAKX,EAAO,CACX,MAAMc,EAAcF,EAAAA,EAAOC,OAAOH,MAAOV,GACpCc,IAAgBP,IAASyC,EAAAA,EAAAA,aAAUzC,IACvCC,EAAUM,MAGV,CAAEd,EAAMO,KACXI,EAAAA,EAAAA,YAAW,KACVH,EAAU5B,KACR,CAAEA,KACL+B,EAAAA,EAAAA,YAAW,KACLX,GACJQ,EAAUI,EAAAA,EAAOC,OAAOH,MAAOV,MAE9B,CAAEA,IAEL,MAAMmB,GAAeH,EAAAA,EAAAA,cAAeI,IACnCsB,EAAO,mCACP,IAAIO,EAAQ7B,EAAMC,OAAO6B,SAASD,MAC9BhC,EAAWG,EAAMC,OAAOd,MAC5BC,EAAUS,GACL4B,GACFI,GAAsB,KAAbhC,GACE,MAAbA,GAAiC,MAAbA,GAAiC,OAAbA,GAExCA,EAAWkC,WAAYlC,GAClBmC,GAAAA,CAAOnC,KACXA,EAAW,IAEZf,EAAUe,GACLjB,GACJY,EAAAA,EAAOC,OAAOK,SAAS,CACtB,CAAElB,GAAQiB,KAGDjB,GACXY,EAAAA,EAAOC,OAAOK,SAAS,CACtB,CAAElB,GAAQiB,MAGV,CAAEjB,EAAM6C,EAAW3C,IAChBmD,GAAerC,EAAAA,EAAAA,cAAeI,IACnCsB,EAAO,sBACP,IAAIzB,EAAWG,EAAMC,OAAOd,MAC5B,GAAKnC,GAAAA,CAAU6C,EAAU,KAAQ,CAChCyB,EAAO,6BACP,MAAMY,EAAWrC,EAASsC,MAAO,KACV,KAAlBD,EAAU,IAAgC,KAAlBA,EAAU,KACtCrC,EAAWkC,WAAYG,EAAU,IAAOH,WAAYG,EAAU,KAG3DF,GAAAA,CAAOnC,GACXA,EAAW,GAGE,KAAbA,GAAgC,MAAbA,GACN,MAAbA,GAAiC,OAAbA,IAEpBA,EAAWkC,WAAYlC,IAEnBA,EAAWqB,EACfrB,EAAWqB,EAEFrB,EAAWpC,EACpBoC,EAAWpC,EAGF,IAAT0D,GAA6B,KAAbtB,GACH,MAAbA,GAAiC,MAAbA,GAAiC,OAAbA,IAExCA,GAAsBA,EAAWsB,GAElCrC,EAAUe,GACV6B,EAAQ7B,GACHA,IAAaV,IACjBC,EAAUS,GACLjB,GACJY,EAAAA,EAAOC,OAAOK,SAAS,CACtB,CAAElB,GAAQiB,OAIX,CAAEjB,EAAMnB,EAAKyD,EAAKC,EAAMhC,EAAOuC,EAAQ5C,IACpCwB,EAAU8B,GAAAA,CAAQlH,EAAMoF,SAAY+B,EAAc,CACvD5E,IAAAA,EAAKyD,IAAAA,EAAKC,KAAAA,EAAM/F,EAAAA,IACZF,EAAMoF,QACX,IAAsB,IAAjBpF,EAAMwC,OAAkB,CAC5B,MAAM0C,EACL,wBAAM7B,UAAU,QAAQkC,MAAO,CAAE6B,QAAS,SAAUpH,EAAMuF,QACvDvF,EAAMmC,OAAS,yBAAOkF,QAASvE,EAAGwC,SAAnB,IAA+BtF,EAAMmC,OAArC,QAA2D,KAC5E,yBACCW,GAAIA,EAAGwC,QACPH,KAAMnF,EAAMsH,YAAc,SAAW,OACrC3F,KAAK,QACL0B,UAAU,sBACVM,SAAU3D,EAAM2D,SAChBM,MAAqB,OAAdsC,EAAqBA,EAAYtC,EACxCgC,KAAMjG,EAAMiG,KACZ1D,IAAKvC,EAAMuC,IACXyD,IAAKhG,EAAMgG,IACXT,MAAO,CACNgC,MAAO,OACPC,YAAa,MACbhC,WAAY,SACTxF,EAAMyH,YAEV7D,SAAUiB,EACV2B,OAAQO,EACRlB,WAAY7F,EAAM6F,WAClB6B,UAAW1H,EAAM0H,UACjBC,QAAS3H,EAAM2H,QACfC,aAAa,QAEZ5H,EAAM6H,YACP,gCAAQ7H,EAAM6H,YAAd,KACA,8BAGH,OAAO7H,EAAM2D,SACZuB,EACA,gBAAC,IAAD,CAASpC,GAAG,8BAA8BE,UAAU,MAAM8E,MAAO9H,EAAM2D,SAAUyB,QAASA,GACxFF,GAGJ,MAAMA,EAAQ,yBACbpC,GAAIA,EAAGwC,QACPH,KAAMnF,EAAMsH,YAAc,SAAW,OACrC3F,KAAK,QACL0B,UAAU,sBACVM,SAAU3D,EAAM2D,SAChBM,MAAqB,OAAdsC,EAAqBA,EAAYtC,EACxCgC,KAAMjG,EAAMiG,KACZ1D,IAAKvC,EAAMuC,IACXyD,IAAKhG,EAAMgG,IACXT,MAAO,CACNgC,MAAO,OACP/B,WAAY,UACTxF,EAAMyH,YAEV7D,SAAUiB,EACV2B,OAAQO,EACRlB,WAAY7F,EAAM6F,WAClB6B,UAAW1H,EAAM0H,UACjBC,QAAS3H,EAAM2H,QACfC,aAAa,QAEd,OAAS,uBAAKvE,UAAU,QAAQkC,MAAO,CACtCwC,aAAc,MACdC,UAAW,SACRhI,EAAMuF,QAEPvF,EAAMmC,OACP,4BACC,yBAAOkF,QAASvE,EAAGwC,UACjB2C,EAAAA,EAAAA,aAAUjI,EAAMmC,QAChBnC,EAAMmC,OAAO,IACbnC,EAAMmC,QAGNnC,EAAM6H,YACP,gCAAQ7H,EAAM6H,aACd,MAEQ,KAEX,gBAAC,IAAD,CACC/E,GAAG,uBAAuBE,UAAWhD,EAAMqF,iBAC3CD,QAASA,EAAS0C,MAAO9H,EAAM2D,UAC/B,wBAAMN,UAAU,qBAAsB6B,MAOzCoB,EAAY7D,aAAe,CAC1BiB,KAAM,GACNC,UAAU,EACVxB,OAAQ,KACRI,IAAK4D,IACLH,IAAKE,IACLD,KAAM,EACN3D,aAAc,EACdkE,WACA5C,aACA8D,cACA7B,eACA8B,YACAnF,QAAQ,EACR8E,aAAa,EACb/B,MAAO,GACPkC,WAAY,GACZxD,MAAO,KACPmB,QAAS,KACTC,iBAAkB,QAGnBiB,EAAY5D,UAAY,CACvBgB,KAAMf,IAAAA,OACNL,aAAcK,IAAAA,OACdgB,SAAUhB,IAAAA,KACVH,OAAQG,IAAAA,KACRR,OAAQQ,IAAAA,UAAoB,CAC3BA,IAAAA,OACAA,IAAAA,OAEDqD,IAAKrD,IAAAA,OACLJ,IAAKI,IAAAA,OACL2E,YAAa3E,IAAAA,KACb6D,OAAQ7D,IAAAA,KACRiB,SAAUjB,IAAAA,KACV+E,UAAW/E,IAAAA,KACXkD,WAAYlD,IAAAA,KACZgF,QAAShF,IAAAA,KACTsD,KAAMtD,IAAAA,UAAoB,CACzBA,IAAAA,OACAA,IAAAA,SAED4C,MAAO5C,IAAAA,OACP8E,WAAY9E,IAAAA,OACZsB,MAAOtB,IAAAA,OACPyC,QAASzC,IAAAA,OACT0C,iBAAkB1C,IAAAA,MAAgB,CAAE,MAAO,QAAS,SAAU,UCnR/D,MDyRA","sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/hierarchical_clustering.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport incrspace from '@stdlib/array/incrspace';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport NumberInput from '@isle-project/components/input/number';\nimport Dashboard from '@isle-project/components/dashboard';\nimport factor from '@isle-project/utils/factor-variable';\nimport HierarchicalClustering from '@isle-project/components/models/hierarchical-clustering';\nimport { DATA_EXPLORER_HIERARCHICAL_CLUSTERING } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DISTANCES = [ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ];\nconst LINKAGE = [ 'complete', 'single' ];\n\n\n// MAIN //\n\nconst HierarchicalClusteringMenu = ( props ) => {\n\tconst { quantitative, t } = props;\n\tconst compute = ( variables, attach, K, linkage, distance ) => {\n\t\tconst output = <HierarchicalClustering\n\t\t\tvariables={variables} K={K} linkage={linkage} distance={distance}\n\t\t\tdata={props.data}\n\t\t\tonResult={( result ) => {\n\t\t\t\tif ( attach ) {\n\t\t\t\t\tconst newData = copy( props.data, 1 );\n\t\t\t\t\tconst newCategorical = props.categorical.slice();\n\t\t\t\t\tconst suffix = variables.map( x => x[ 0 ] ).join( '' );\n\t\t\t\t\tconst assignments = result.getClusterAssignments( K );\n\t\t\t\t\tconst name = factor( 'hclust_cluster_' + suffix, incrspace( 0, K, 1 ).map( x => `Cluster ${x+1}` ) );\n\t\t\t\t\tnewData[ name ] = assignments;\n\t\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t\t}\n\t\t\t\t\tprops.onGenerate( newCategorical, newData );\n\t\t\t\t}\n\t\t\t}}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_HIERARCHICAL_CLUSTERING, {\n\t\t\tvariables, attach, K, linkage, distance\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('Hierarchical Clustering')}\n\t\t\t\t<QuestionButton title={t('Hierarchical Clustering')} content={t('Hierarchical Clustering-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={compute}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variables')} multi\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('attach-clusters-table')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={t('number-of-clusters')}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tdefaultValue={3}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('linkage')}\n\t\t\t\t\t\tdefaultValue={LINKAGE[ 0 ]}\n\t\t\t\t\t\toptions={LINKAGE}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('distance')}\n\t\t\t\t\t\tdefaultValue={DISTANCES[ 0 ]}\n\t\t\t\t\t\toptions={DISTANCES}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nHierarchicalClusteringMenu.defaultProps = {\n\tlogAction() {}\n};\n\nHierarchicalClusteringMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HierarchicalClusteringMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["Dashboard","Loadable","DISTANCES","LINKAGE","HierarchicalClusteringMenu","props","quantitative","t","title","content","autoStart","onGenerate","variables","attach","K","linkage","distance","output","data","onResult","result","newData","copy","newCategorical","categorical","slice","suffix","map","x","join","assignments","getClusterAssignments","name","factor","incrspace","contains","push","logAction","DATA_EXPLORER_HIERARCHICAL_CLUSTERING","onCreated","legend","multi","options","defaultValue","min","inline","defaultProps","propTypes","PropTypes","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","variant","className","isRequired","uid","generateUID","CheckboxInput","bind","disabled","onChange","useRef","session","useContext","SessionContext","value","setValue","useState","state","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","tooltipPlacement","current","style","marginLeft","role","tabIndex","color","onClick","onKeyPress","onSpanChange","noop","max","step","PINF","NINF","debug","logger","NumberInput","propValue","onBlur","useTranslation","isNumber","valid","validity","parseFloat","isnan","finishChange","splitted","split","isNull","createTooltip","padding","htmlFor","numbersOnly","width","paddingLeft","inputStyle","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString"],"sourceRoot":""}