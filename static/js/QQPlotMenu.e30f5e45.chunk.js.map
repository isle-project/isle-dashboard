{"version":3,"file":"static/js/QQPlotMenu.e30f5e45.chunk.js","mappings":"2HAOMA,GAAYC,E,SAAAA,IAAU,kBAAM,yFAKlC,O,6GCEMC,EAAa,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,KAAMC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,aAAcC,EAAmD,EAAnDA,EAAGC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACtF,OACC,gBAAC,IAAD,CACCC,MAAO,4BACLL,EAAE,WACH,gBAAC,IAAD,CAAgBK,MAAOL,EAAE,WAAYM,QAASN,EAAE,0BAEjDO,WAAW,EACXC,WAUF,SAAyBC,GACxB,IAAMC,GAASC,EAAAA,EAAAA,GAAc,GACvBC,EAAS,CACdH,SAAAA,EAAUC,OAAAA,GAWLG,EAAS,gBAAC,IAAD,CAAQhB,KAAMA,EAAMY,SAAUA,EAAUK,GAAIJ,EAAQE,OAAQA,EAAQG,QATnE,WACfd,EAAQe,gBAAgB,CACvBX,MAAOL,EAAE,eACTiB,QAASjB,EAAE,uBACXkB,MAAO,UACPC,SAAU,OAEXjB,EAAWkB,EAAAA,GAA4BR,IAE6DR,WAAYA,IACjHF,EAAWmB,EAAAA,GAAsBT,GACjCT,EAAWU,KAxBV,gBAAC,IAAD,CACCS,OAAQtB,EAAE,YACVD,aAAcA,GAAgBD,EAAW,GACzCyB,QAASzB,MA4BbF,EAAW4B,aAAe,CACzBzB,aAAc,KACdG,UAFyB,cAiB1B,a,4FCjCA,IA1BuB,SAAEuB,GACxB,IAAMC,EAAU,gBAAC,IAAD,CAASZ,GAAG,4BAC3B,gBAAC,IAAD,KAAeW,EAAMpB,OACrB,gBAAC,IAAD,KAAiBoB,EAAMnB,UAExB,OACC,gBAAC,IAAD,CAAgBqB,QAAS,CAAE,QAAS,QAAS,SAAWC,UAAU,OAAOC,WAAS,EAACC,QAASJ,GAC3F,gBAAC,IAAD,CACCK,KAAK,KACLC,QAAQ,oBACRC,UAAU,mBAEV,uBAAKA,UAAU","sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/qqplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport QQPlot from '@isle-project/components/plots/qqplot';\nimport { DATA_EXPLORER_SHARE_QQPLOT, DATA_EXPLORER_QQPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from '../question_button.js';\n\n\n// MAIN //\n\nconst QQPlotMenu = ({ data, variables, defaultValue, t, session, logAction, onCreated, onSelected }) => {\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('QQ Plot')}\n\t\t\t\t<QuestionButton title={t('QQ Plot')} content={t('QQ Plot-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={generateQQPlot}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={defaultValue || variables[ 0 ]}\n\t\t\t\toptions={variables}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n\n\tfunction generateQQPlot( variable ) {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tsession.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tlogAction( DATA_EXPLORER_SHARE_QQPLOT, action );\n\t\t};\n\t\tconst output = <QQPlot data={data} variable={variable} id={plotId} action={action} onShare={onShare} onSelected={onSelected} />;\n\t\tlogAction( DATA_EXPLORER_QQPLOT, action );\n\t\tonCreated( output );\n\t}\n};\n\n\n// PROPERTIES //\n\nQQPlotMenu.defaultProps = {\n\tdefaultValue: null,\n\tlogAction() {}\n};\n\nQQPlotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QQPlotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"names":["Dashboard","Loadable","QQPlotMenu","data","variables","defaultValue","t","session","logAction","onCreated","onSelected","title","content","autoStart","onGenerate","variable","plotId","randomstring","action","output","id","onShare","addNotification","message","level","position","DATA_EXPLORER_SHARE_QQPLOT","DATA_EXPLORER_QQPLOT","legend","options","defaultProps","props","popover","trigger","placement","rootClose","overlay","size","variant","className"],"sourceRoot":""}