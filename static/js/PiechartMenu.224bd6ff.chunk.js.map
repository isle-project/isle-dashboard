{"version":3,"file":"static/js/PiechartMenu.224bd6ff.chunk.js","mappings":"8OAeMA,EAAQ,CACb,0BACA,iCAMKC,EAAe,SAAEC,GACtB,IAAQC,EAAgED,EAAhEC,UAAWC,EAAqDF,EAArDE,aAAcC,EAAuCH,EAAvCG,kBAAmBC,EAAoBJ,EAApBI,aAAcC,EAAML,EAANK,EAClE,GAAkCC,EAAAA,EAAAA,UAAUJ,GAAgBD,EAAW,IAAvE,eAAQM,EAAR,KAAkBC,EAAlB,KACA,GAAgDF,EAAAA,EAAAA,UAAUF,EAAc,IAAxE,eAAQK,EAAR,KAAyBC,EAAzB,KACA,GAA4BJ,EAAAA,EAAAA,UAAU,MAAtC,eAAQK,EAAR,KAAeC,EAAf,KACA,GAA0BN,EAAAA,EAAAA,UAAUR,EAAO,IAA3C,eAAQe,EAAR,KAAcC,EAAd,KA+BA,OACC,gBAAC,IAAD,KACC,gBAAC,WAAD,CAAaC,GAAG,MACdV,EAAE,aACH,gBAAC,IAAD,CAAgBW,MAAOX,EAAE,aAAcY,QAASZ,EAAE,4BAEnD,gBAAC,SAAD,KACC,gBAAC,IAAD,CACCa,OAAQb,EAAE,uBACVH,aAAcW,EACdM,QAASrB,EACTsB,SAAUN,IAEX,gBAAC,IAAD,CACCI,OAAQb,EAAE,YACVH,aAAcK,EACdY,QAASlB,EACTmB,SAAUZ,IAETK,IAASf,EAAO,GACjB,gBAAC,IAAD,CACCoB,OAAQb,EAAE,mBACVH,aAAcO,EACdU,QAASf,EACTgB,SAAUV,IACN,KACN,gBAAC,IAAD,CACCQ,OAAQb,EAAE,YACVH,aAAcS,EACdQ,QAAShB,EACTkB,WAAW,EACXC,cAAc,MACdF,SAAUR,IAEX,gBAAC,IAAD,CACCW,QAAQ,UAAUC,OAAK,EACvBC,QAjEmB,WACtB,IAAMC,GAASC,EAAAA,EAAAA,GAAc,GACvBC,EAAS,CACdrB,SAAAA,EAAUI,MAAAA,EAAOe,OAAAA,GAEbb,IAASf,EAAO,KACpB8B,EAAOnB,gBAAkBA,GAE1B,IASMoB,EAAQ,gBAAC,KAAD,QACbC,GAAIJ,GACA1B,EAFS,CAGbO,SAAUA,EACVI,MAAOA,EACPF,gBAAiBI,IAASf,EAAO,GAAMW,EAAkB,KACzDmB,OAAQA,EACRG,QAhBe,WACf/B,EAAMgC,QAAQC,gBAAgB,CAC7BjB,MAAOX,EAAE,eACT6B,QAAS7B,EAAE,uBACX8B,MAAO,UACPC,SAAU,OAEXpC,EAAMqC,UAAWC,EAAAA,GAA8BV,OAWhD5B,EAAMqC,UAAWE,EAAAA,GAAwBX,GACzC5B,EAAMwC,UAAWX,KAuCbxB,EAAE,gBASRN,EAAa0C,aAAe,CAC3BvC,aAAc,KACdC,kBAAmB,KACnBkC,UAH2B,cAoB5B,a,0FCtFA,IA1BuB,SAAErC,GACxB,IAAM0C,EAAU,gBAAC,IAAD,CAASZ,GAAG,4BAC3B,gBAAC,IAAD,KAAe9B,EAAMgB,OACrB,gBAAC,IAAD,KAAiBhB,EAAMiB,UAExB,OACC,gBAAC,IAAD,CAAgB0B,QAAS,CAAE,QAAS,QAAS,SAAWC,UAAU,OAAOC,WAAS,EAACC,QAASJ,GAC3F,gBAAC,IAAD,CACCK,KAAK,KACLxB,QAAQ,oBACRyB,UAAU,mBAEV,uBAAKA,UAAU","sources":["../node_modules/@isle-project/components/data-explorer/menu/piechart.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport SelectInput from '@isle-project/components/input/select';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport PieChart from '@isle-project/components/plots/piechart';\nimport { DATA_EXPLORER_SHARE_PIECHART, DATA_EXPLORER_PIECHART } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst MODES = [\n\t'Counts of unique values',\n\t'Values from a second variable'\n];\n\n\n// MAIN //\n\nconst PieChartMenu = ( props ) => {\n\tconst { variables, defaultValue, groupingVariables, quantitative, t } = props;\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ summaryVariable, setSummaryVariable ] = useState( quantitative[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ mode, setMode ] = useState( MODES[ 0 ] );\n\n\tconst handleGenerate = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable, group, plotId\n\t\t};\n\t\tif ( mode === MODES[ 1 ] ) {\n\t\t\taction.summaryVariable = summaryVariable;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_PIECHART, action );\n\t\t};\n\t\tconst output= <PieChart\n\t\t\tid={plotId}\n\t\t\t{...props}\n\t\t\tvariable={variable}\n\t\t\tgroup={group}\n\t\t\tsummaryVariable={mode === MODES[ 1 ] ? summaryVariable : null}\n\t\t\taction={action}\n\t\t\tonShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_PIECHART, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Pie Chart')}\n\t\t\t\t<QuestionButton title={t('Pie Chart')} content={t('Pie Chart-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('pie-sizes-represent')}\n\t\t\t\t\tdefaultValue={mode}\n\t\t\t\t\toptions={MODES}\n\t\t\t\t\tonChange={setMode}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t{ mode === MODES[ 1 ] ?\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('set-slice-sizes')}\n\t\t\t\t\t\tdefaultValue={summaryVariable}\n\t\t\t\t\t\toptions={quantitative}\n\t\t\t\t\t\tonChange={setSummaryVariable}\n\t\t\t\t\t/> : null }\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\tdefaultValue={group}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={handleGenerate}\n\t\t\t\t>{t('generate')}</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nPieChartMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nPieChartMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default PieChartMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"names":["MODES","PieChartMenu","props","variables","defaultValue","groupingVariables","quantitative","t","useState","variable","setVariable","summaryVariable","setSummaryVariable","group","setGroup","mode","setMode","as","title","content","legend","options","onChange","clearable","menuPlacement","variant","block","onClick","plotId","randomstring","action","output","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_PIECHART","DATA_EXPLORER_PIECHART","onCreated","defaultProps","popover","trigger","placement","rootClose","overlay","size","className"],"sourceRoot":""}