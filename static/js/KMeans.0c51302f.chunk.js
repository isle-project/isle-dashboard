"use strict";(self.webpackChunkisle_dashboard=self.webpackChunkisle_dashboard||[]).push([[4093],{74189:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(45254),prop_types__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(45697),prop_types__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__),react_i18next__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(81468),ml_kmeans__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(91535),ml_kmeans__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(ml_kmeans__WEBPACK_IMPORTED_MODULE_1__),react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(24032),react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_6__),_stdlib_assert_has_own_property__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(10813),_stdlib_assert_has_own_property__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_stdlib_assert_has_own_property__WEBPACK_IMPORTED_MODULE_2__),_isle_project_components_table__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(63393),_isle_project_utils_prop_check__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(25048),_isle_project_utils_is_non_missing_number__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(35865),__defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a};const summaryTable=(variables,centroids,t)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_isle_project_components_table__WEBPACK_IMPORTED_MODULE_3__.Z,{bordered:!0,size:"sm"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("thead",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("tr",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("th",null,t("cluster")),centroids.map((_,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("th",{key:i},i+1)))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("tbody",null,variables.map((name,idx)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("tr",{key:idx},react__WEBPACK_IMPORTED_MODULE_0__.createElement("th",null,name),centroids.map((x,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("td",{key:i},x.centroid[idx].toFixed(4)))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("tbody",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("tr",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("th",null,t("size")),centroids.map((x,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("th",{key:i},x.size))))),fitModel=({K,variables,data,initialization})=>{if(!data||!variables||!K||!initialization)return null;const matrix=[];if(!_stdlib_assert_has_own_property__WEBPACK_IMPORTED_MODULE_2___default()(data,variables[0]))return null;const n=data[variables[0]].length,missingIds=[];for(let i=0;i<n;i++){const row=[];let missing=!1;for(let j=0;j<variables.length;j++){if(!_stdlib_assert_has_own_property__WEBPACK_IMPORTED_MODULE_2___default()(data,variables[j]))return null;const val=data[variables[j]][i];if((0,_isle_project_utils_is_non_missing_number__WEBPACK_IMPORTED_MODULE_5__.Z)(val))row.push(val);else{missing=!0;break}}missing?missingIds.push(i):matrix.push(row)}try{const result=ml_kmeans__WEBPACK_IMPORTED_MODULE_1___default()(matrix,K,{initialization});for(let i=0;i<missingIds.length;i++)result.clusters.splice(missingIds[i],0,null);return result.clusters=result.clusters.map(x=>x===null?null:`Cluster ${x+1}`),result}catch(_){return null}};class KMeans extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(props){super(props);const{K,variables,data,initialization}=props,result=fitModel({K,variables,data,initialization});this.state=__spreadValues({result},props),result&&props.onResult(result)}static getDerivedStateFromProps(nextProps,prevState){if(nextProps.data!==prevState.data||nextProps.variables!==prevState.variables||nextProps.K!==prevState.K||nextProps.initialization!==prevState.initialization){const{K,variables,data,initialization}=nextProps,result=fitModel({K,variables,data,initialization});return nextProps.onResult(result),__spreadValues({result},nextProps)}return null}render(){const{result}=this.state,{t,variables}=this.props;return result?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{overflowX:"auto",width:"100%"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"title"},t("kmeans-summary")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,result.converged?t("algorithm-converged",{n:result.iterations}):t("algorithm-not-converged",{n:result.iterations})),summaryTable(variables,result.centroids,t)):react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_6___default(),{variant:"danger"},t("missing-attributes"))}}KMeans.defaultProps={K:3,initialization:"kmeans++",onResult(){}},KMeans.propTypes={data:prop_types__WEBPACK_IMPORTED_MODULE_7___default().object.isRequired,variables:prop_types__WEBPACK_IMPORTED_MODULE_7___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_7___default().string).isRequired,K:prop_types__WEBPACK_IMPORTED_MODULE_7___default().number,initialization:prop_types__WEBPACK_IMPORTED_MODULE_7___default().oneOf(["kmeans++","random","mostDistant"]),onResult:prop_types__WEBPACK_IMPORTED_MODULE_7___default().func},__webpack_exports__.default=(0,react_i18next__WEBPACK_IMPORTED_MODULE_8__.Zh)("models")((0,_isle_project_utils_prop_check__WEBPACK_IMPORTED_MODULE_4__.W)(KMeans))},3658:function(__unused_webpack_module,exports){Object.defineProperty(exports,"__esModule",{value:!0});function squaredEuclidean(p,q){let d=0;for(let i=0;i<p.length;i++)d+=(p[i]-q[i])*(p[i]-q[i]);return d}exports.squaredEuclidean=squaredEuclidean;function euclidean(p,q){return Math.sqrt(squaredEuclidean(p,q))}exports.euclidean=euclidean},91535:function(module,__unused_webpack_exports,__webpack_require__){function _interopDefault(ex){return ex&&typeof ex=="object"&&"default"in ex?ex.default:ex}var mlDistanceEuclidean=__webpack_require__(3658),nearestVector=_interopDefault(__webpack_require__(37010)),Random=_interopDefault(__webpack_require__(37931)),mlMatrix=__webpack_require__(78406);function calculateDistanceMatrix(data,distance){for(var distanceMatrix=new Array(data.length),i=0;i<data.length;++i)for(var j=i;j<data.length;++j){distanceMatrix[i]||(distanceMatrix[i]=new Array(data.length)),distanceMatrix[j]||(distanceMatrix[j]=new Array(data.length));const dist=distance(data[i],data[j]);distanceMatrix[i][j]=dist,distanceMatrix[j][i]=dist}return distanceMatrix}function updateClusterID(data,centers,clusterID,distance){for(var i=0;i<data.length;i++)clusterID[i]=nearestVector(centers,data[i],{distanceFunction:distance});return clusterID}function updateCenters(prevCenters,data,clusterID,K){const nDim=data[0].length;for(var centers=new Array(K),centersLen=new Array(K),i=0;i<K;i++){centers[i]=new Array(nDim),centersLen[i]=0;for(var j=0;j<nDim;j++)centers[i][j]=0}for(var l=0;l<data.length;l++){centersLen[clusterID[l]]++;for(var dim=0;dim<nDim;dim++)centers[clusterID[l]][dim]+=data[l][dim]}for(var id=0;id<K;id++)for(var d=0;d<nDim;d++)centersLen[id]?centers[id][d]/=centersLen[id]:centers[id][d]=prevCenters[id][d];return centers}function hasConverged(centers,oldCenters,distanceFunction,tolerance){for(var i=0;i<centers.length;i++)if(distanceFunction(centers[i],oldCenters[i])>tolerance)return!1;return!0}function random(data,K,seed){return new Random(seed).choice(data,{size:K})}function mostDistant(data,K,distanceMatrix,seed){const random2=new Random(seed);var ans=new Array(K);if(ans[0]=Math.floor(random2.random()*data.length),K>1){for(var maxDist={dist:-1,index:-1},l=0;l<data.length;++l)distanceMatrix[ans[0]][l]>maxDist.dist&&(maxDist.dist=distanceMatrix[ans[0]][l],maxDist.index=l);if(ans[1]=maxDist.index,K>2)for(var k=2;k<K;++k){for(var center={dist:-1,index:-1},m=0;m<data.length;++m){for(var minDistCent={dist:Number.MAX_VALUE,index:-1},n=0;n<k;++n)distanceMatrix[n][m]<minDistCent.dist&&ans.indexOf(m)===-1&&(minDistCent={dist:distanceMatrix[n][m],index:m});minDistCent.dist!==Number.MAX_VALUE&&minDistCent.dist>center.dist&&(center=Object.assign({},minDistCent))}ans[k]=center.index}}return ans.map(index=>data[index])}function kmeanspp(X,K,options={}){X=new mlMatrix.Matrix(X);const nSamples=X.rows,random2=new Random(options.seed),centers=[],localTrials=options.localTrials||2+Math.floor(Math.log(K)),firstCenterIdx=random2.randInt(nSamples);centers.push(X.getRow(firstCenterIdx));let closestDistSquared=new mlMatrix.Matrix(1,X.rows);for(let i=0;i<X.rows;i++)closestDistSquared.set(0,i,mlDistanceEuclidean.squaredEuclidean(X.getRow(i),centers[0]));let cumSumClosestDistSquared=[cumSum(closestDistSquared.getRow(0))];const factor=1/cumSumClosestDistSquared[0][nSamples-1];let probabilities=mlMatrix.Matrix.mul(closestDistSquared,factor);for(let i=1;i<K;i++){const candidateIdx=random2.choice(nSamples,{replace:!0,size:localTrials,probabilities:probabilities[0]}),candidates=X.selection(candidateIdx,range(X.columns)),distanceToCandidates=euclideanDistances(candidates,X);let bestCandidate,bestPot,bestDistSquared;for(let j=0;j<localTrials;j++){const newDistSquared=mlMatrix.Matrix.min(closestDistSquared,[distanceToCandidates.getRow(j)]),newPot=newDistSquared.sum();(bestCandidate===void 0||newPot<bestPot)&&(bestCandidate=candidateIdx[j],bestPot=newPot,bestDistSquared=newDistSquared)}centers[i]=X.getRow(bestCandidate),closestDistSquared=bestDistSquared,cumSumClosestDistSquared=[cumSum(closestDistSquared.getRow(0))],probabilities=mlMatrix.Matrix.mul(closestDistSquared,1/cumSumClosestDistSquared[0][nSamples-1])}return centers}function euclideanDistances(A,B){const result=new mlMatrix.Matrix(A.rows,B.rows);for(let i=0;i<A.rows;i++)for(let j=0;j<B.rows;j++)result.set(i,j,mlDistanceEuclidean.squaredEuclidean(A.getRow(i),B.getRow(j)));return result}function range(l){let r=[];for(let i=0;i<l;i++)r.push(i);return r}function cumSum(arr){let cumSum2=[arr[0]];for(let i=1;i<arr.length;i++)cumSum2[i]=cumSum2[i-1]+arr[i];return cumSum2}const distanceSymbol=Symbol("distance");class KMeansResult{constructor(clusters,centroids,converged,iterations,distance){this.clusters=clusters,this.centroids=centroids,this.converged=converged,this.iterations=iterations,this[distanceSymbol]=distance}nearest(data){const clusterID=new Array(data.length),centroids=this.centroids.map(function(centroid){return centroid.centroid});return updateClusterID(data,centroids,clusterID,this[distanceSymbol])}computeInformation(data){for(var enrichedCentroids=this.centroids.map(function(centroid){return{centroid,error:0,size:0}}),i=0;i<data.length;i++)enrichedCentroids[this.clusters[i]].error+=this[distanceSymbol](data[i],this.centroids[this.clusters[i]]),enrichedCentroids[this.clusters[i]].size++;for(var j=0;j<this.centroids.length;j++)enrichedCentroids[j].size?enrichedCentroids[j].error/=enrichedCentroids[j].size:enrichedCentroids[j].error=null;return new KMeansResult(this.clusters,enrichedCentroids,this.converged,this.iterations,this[distanceSymbol])}}const defaultOptions={maxIterations:100,tolerance:1e-6,withIterations:!1,initialization:"kmeans++",distanceFunction:mlDistanceEuclidean.squaredEuclidean};function step(centers,data,clusterID,K,options,iterations){clusterID=updateClusterID(data,centers,clusterID,options.distanceFunction);var newCenters=updateCenters(centers,data,clusterID,K),converged=hasConverged(newCenters,centers,options.distanceFunction,options.tolerance);return new KMeansResult(clusterID,newCenters,converged,iterations,options.distanceFunction)}function*kmeansGenerator(centers,data,clusterID,K,options){for(var converged=!1,stepNumber=0,stepResult;!converged&&stepNumber<options.maxIterations;)stepResult=step(centers,data,clusterID,K,options,++stepNumber),yield stepResult.computeInformation(data),converged=stepResult.converged,centers=stepResult.centroids}function kmeans(data,K,options){if(options=Object.assign({},defaultOptions,options),K<=0||K>data.length||!Number.isInteger(K))throw new Error("K should be a positive integer smaller than the number of points");var centers;if(Array.isArray(options.initialization)){if(options.initialization.length!==K)throw new Error("The initial centers should have the same length as K");centers=options.initialization}else switch(options.initialization){case"kmeans++":centers=kmeanspp(data,K,options);break;case"random":centers=random(data,K,options.seed);break;case"mostDistant":centers=mostDistant(data,K,calculateDistanceMatrix(data,options.distanceFunction),options.seed);break;default:throw new Error(`Unknown initialization method: "${options.initialization}"`)}options.maxIterations===0&&(options.maxIterations=Number.MAX_VALUE);var clusterID=new Array(data.length);if(options.withIterations)return kmeansGenerator(centers,data,clusterID,K,options);for(var converged=!1,stepNumber=0,stepResult;!converged&&stepNumber<options.maxIterations;)stepResult=step(centers,data,clusterID,K,options,++stepNumber),converged=stepResult.converged,centers=stepResult.centroids;return stepResult.computeInformation(data)}module.exports=kmeans},37010:function(__unused_webpack_module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:!0});const defaultOptions={distanceFunction:__webpack_require__(3658).squaredEuclidean};function nearestVector(listVectors,vector,options=defaultOptions){const distanceFunction=options.distanceFunction||defaultOptions.distanceFunction,similarityFunction=options.similarityFunction||defaultOptions.similarityFunction;let vectorIndex=-1;if(typeof similarityFunction=="function"){let maxSim=Number.MIN_VALUE;for(let j=0;j<listVectors.length;j++){const sim=similarityFunction(vector,listVectors[j]);sim>maxSim&&(maxSim=sim,vectorIndex=j)}}else if(typeof distanceFunction=="function"){let minDist=Number.MAX_VALUE;for(let i=0;i<listVectors.length;i++){const dist=distanceFunction(vector,listVectors[i]);dist<minDist&&(minDist=dist,vectorIndex=i)}}else throw new Error("A similarity or distance function it's required");return vectorIndex}exports.default=nearestVector;function findNearestVector(vectorList,vector,options=defaultOptions){const index=nearestVector(vectorList,vector,options);return vectorList[index]}exports.findNearestVector=findNearestVector},61298:function(__unused_webpack_module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const PROB_TOLERANCE=1e-8;function randomChoice(values,options={},random=Math.random){const{size=1,replace=!1,probabilities}=options;let valuesArr,cumSum;if(typeof values=="number"?valuesArr=getArray(values):valuesArr=values.slice(),probabilities){if(!replace)throw new Error("choice with probabilities and no replacement is not implemented");if(probabilities.length!==valuesArr.length)throw new Error("the length of probabilities option should be equal to the number of choices");cumSum=[probabilities[0]];for(let i=1;i<probabilities.length;i++)cumSum[i]=cumSum[i-1]+probabilities[i];if(Math.abs(1-cumSum[cumSum.length-1])>PROB_TOLERANCE)throw new Error(`probabilities should sum to 1, but instead sums to ${cumSum[cumSum.length-1]}`)}if(replace===!1&&size>valuesArr.length)throw new Error("size option is too large");const result=[];for(let i=0;i<size;i++){const index=randomIndex(valuesArr.length,random,cumSum);result.push(valuesArr[index]),replace||valuesArr.splice(index,1)}return result}function getArray(n){const arr=[];for(let i=0;i<n;i++)arr.push(i);return arr}function randomIndex(n,random,cumSum){const rand=random();if(cumSum){let idx=0;for(;rand>cumSum[idx];)idx++;return idx}else return Math.floor(rand*n)}exports.default=randomChoice},37931:function(__unused_webpack_module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:!0});const ml_xsadd_1=__webpack_require__(84455),choice_1=__webpack_require__(61298);class Random{constructor(seedOrRandom=Math.random){if(typeof seedOrRandom=="number"){const xsadd=new ml_xsadd_1.default(seedOrRandom);this.randomGenerator=xsadd.random}else this.randomGenerator=seedOrRandom}choice(values,options){return typeof values=="number"?choice_1.default(values,options,this.randomGenerator):choice_1.default(values,options,this.randomGenerator)}random(){return this.randomGenerator()}randInt(low,high){return high===void 0&&(high=low,low=0),low+Math.floor(this.randomGenerator()*(high-low))}randomSample(size){const result=[];for(let i=0;i<size;i++)result.push(this.random());return result}}exports.default=Random},84455:function(__unused_webpack_module,exports){Object.defineProperty(exports,"__esModule",{value:!0});const LOOP=8,FLOAT_MUL=1/16777216,sh1=15,sh2=18,sh3=11;function multiply_uint32(n,m){n>>>=0,m>>>=0;const nlo=n&65535;return((n-nlo)*m>>>0)+nlo*m>>>0}class XSadd{constructor(seed=Date.now()){this.state=new Uint32Array(4),this.init(seed),this.random=this.getFloat.bind(this)}getUint32(){return this.nextState(),this.state[3]+this.state[2]>>>0}getFloat(){return(this.getUint32()>>>8)*FLOAT_MUL}init(seed){if(!Number.isInteger(seed))throw new TypeError("seed must be an integer");this.state[0]=seed,this.state[1]=0,this.state[2]=0,this.state[3]=0;for(let i=1;i<LOOP;i++)this.state[i&3]^=i+multiply_uint32(1812433253,this.state[i-1&3]^this.state[i-1&3]>>>30>>>0)>>>0;this.periodCertification();for(let i=0;i<LOOP;i++)this.nextState()}periodCertification(){this.state[0]===0&&this.state[1]===0&&this.state[2]===0&&this.state[3]===0&&(this.state[0]=88,this.state[1]=83,this.state[2]=65,this.state[3]=68)}nextState(){let t=this.state[0];t^=t<<sh1,t^=t>>>sh2,t^=this.state[3]<<sh3,this.state[0]=this.state[1],this.state[1]=this.state[2],this.state[2]=this.state[3],this.state[3]=t}}exports.default=XSadd}}]);

//# sourceMappingURL=KMeans.0c51302f.chunk.js.map