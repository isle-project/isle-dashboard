{"version":3,"sources":["../node_modules/@isle-project/session/role_context.js","../node_modules/@isle-project/components/gate/main.js"],"names":["context"],"mappings":"i6BA6BA,aALgB,iCAAqB,WAAY,ECSjD,MAAM,aAAa,eAAU,CAC5B,YAAa,MAAOA,SAAU,CAC7B,MAAO,KAAM,EAEb,KAAK,MAAQ,CACZ,WAAY,GACZ,QAAS,GACT,WAAY,MAAM,MAAQ,MAAM,MAAOA,QAAQ,EAAI,GACnD,gBAAiB,EAClB,CACD,CAEA,mBAAoB,CACnB,KAAK,WAAa,GAClB,MAAM,QAAU,KAAK,QAChB,UACJ,KAAK,YAAc,QAAQ,UAAW,CAAE,KAAM,SAAY,CASzD,IAPC,OAAS,WACT,OAAS,WACT,OAAS,WACT,OAAS,aAET,KAAK,mBAAmB,EAEpB,KAAK,MAAM,MAAQ,CACvB,MAAM,WAAa,KAAK,MAAM,MAAO,OAAQ,EAC7C,GAAK,aAAe,KAAK,MAAM,WAC9B,OAAO,KAAK,SAAS,CACpB,UACD,CAAC,CAEH,CACK,KAAK,YACT,KAAK,YAAY,CAEnB,CAAC,EACD,KAAK,mBAAmB,EAE1B,CAEA,oBAAqB,CACpB,GAAK,KAAK,MAAM,MAAQ,CACvB,MAAM,WAAa,KAAK,MAAM,MAAO,KAAK,OAAQ,EAClD,GAAK,aAAe,KAAK,MAAM,WAC9B,OAAO,KAAK,SAAS,CACpB,UACD,CAAC,CAEH,CACD,CAEA,sBAAuB,CACjB,KAAK,aACT,KAAK,YAAY,EAElB,KAAK,WAAa,EACnB,CAEA,oBAAqB,CACpB,MAAM,QAAU,KAAK,QACrB,IAAI,SAAW,CACd,WAAY,QAAQ,WAAW,EAC/B,QAAS,QAAQ,QAAQ,EACzB,iBAAkB,QAAQ,gBAC3B,GAEC,SAAS,aAAe,KAAK,MAAM,YACnC,SAAS,UAAY,KAAK,MAAM,SAChC,SAAS,mBAAqB,KAAK,MAAM,mBAEzC,KAAK,SAAU,QAAS,CAE1B,CAEA,cAAe,CACd,GAAK,CAAC,KAAK,MAAM,OAAS,CAAC,KAAK,MAAM,MACrC,MAAO,GAER,MAAM,QAAU,KAAK,QACrB,OAAK,KAAK,MAAM,OAAS,KAAK,MAAM,MAC5B,KAAK,MAAM,MAAQ,QAAQ,WAAa,QAAQ,WAAa,KAAK,MAAM,MACpE,KAAK,MAAM,MACf,QAAQ,WAAa,KAAK,MAAM,MAGjC,KAAK,MAAM,MAAQ,QAAQ,SACnC,CAEA,cAAe,CACd,GAAK,CAAC,cAAa,KAAK,MAAM,MAAO,EACpC,OAAO,KAAK,MAAM,OAEnB,KAAM,CAAE,MAAO,SAAU,KAAM,QAAS,SAAU,YAAa,MAAO,SAAU,MAAO,MAAO,CAAE,EAAI,KAAK,MACzG,IAAI,OACJ,GAAK,OAAS,CAAC,KAAK,MAAM,WACzB,cAAS,EAAE,qBAAqB,EACzB,oBAAC,gBAAK,CAAC,QAAQ,QAAQ,MAAO,EAEtC,GAAK,OAAS,MACb,GAAK,MACJ,OAAS,EAAE,iBAAiB,EAAI,IAAM,MAAM,eAAe,EACtD,QACJ,QAAU,IACV,QAAU,EAAE,cAAc,EAAI,IAAK,MAAM,eAAe,OAEnD,CACN,MAAM,KAAO,MAAM,eAAe,EAClC,OAAS,EAAE,iBAAiB,EAAI,IAAM,IACvC,KACM,IAAK,SACX,cAAS,EAAE,eAAe,EACnB,oBAAC,gBAAK,CAAC,QAAQ,QAAQ,MAAO,EAErC,OAAS,EAAE,wBAAwB,EAEpC,IAAI,KAAO,GACX,GAAK,KAAO,CACX,GAAK,QACJ,cAAS,EAAE,eAAe,EACnB,oBAAC,gBAAK,CAAC,QAAQ,QAAQ,MAAO,EAEtC,QAAU,sBACV,KAAO,EACR,MAAY,UACX,QAAU,uBACV,KAAO,IAER,GAAK,SAAW,CACf,GAAK,YACJ,cAAS,EAAE,eAAe,EACnB,oBAAC,gBAAK,CAAC,QAAQ,QAAQ,MAAO,EAEjC,OACJ,QAAU,IACV,QAAU,EAAE,KAAK,GAElB,QAAU,IACV,QAAU,EAAE,aAAa,EACzB,KAAO,EACR,MAAY,cACN,OACJ,QAAU,IACV,QAAU,EAAE,KAAK,GAElB,QAAU,IACV,QAAU,EAAE,iBAAiB,EAC7B,KAAO,IAER,GAAK,MAAQ,CACZ,GAAK,SACJ,cAAS,EAAE,eAAe,EACnB,oBAAC,gBAAK,CAAC,QAAQ,QAAQ,MAAO,EAEjC,OACJ,QAAU,IACV,QAAU,EAAE,KAAK,GAElB,QAAU,IACV,QAAU,EAAE,WAAW,CACxB,MAAY,WACN,OACJ,QAAU,IACV,QAAU,EAAE,KAAK,GAElB,QAAU,IACV,QAAU,EAAE,eAAe,GAE5B,eAAU,IACI,oBAAC,gBAAK,CAAC,QAAQ,QAC3B,MACF,CAED,CAEA,kBAAmB,CAClB,OAAK,sBAAQ,KAAK,MAAM,MAAO,EACvB,KAEC,oBAAC,iBAAM,CAAC,QAAQ,YAAY,KAAK,QAAQ,QAAS,IAAM,CAChE,KAAK,SAAS,CACb,gBAAiB,CAAC,KAAK,MAAM,eAC9B,CAAC,CACF,EAAG,MAAO,CAAE,MAAO,OAAQ,GAC1B,oBAAC,KAAE,UAAU,eAAe,EAAI,IAAE,KAAK,MAAM,EAAE,uBAAuB,CACvE,CACD,CAEA,eAAgB,cAAe,QAAU,CACxC,MAAM,WAAa,eAAiB,KAAK,aAAa,EACtD,OACC,oBAAC,eAAQ,KACP,CAAC,eAAiB,CAAC,WAAa,KAAK,aAAa,EAAI,KACtD,SAAW,CAAC,WAAa,KAAK,iBAAiB,EAAI,KACpD,oBAAC,OACA,UAAU,qBACV,MAAO,CACN,QAAS,gBAAmB,YAAc,KAAK,MAAM,iBAAoB,SAAW,MACrF,GAEC,KAAK,MAAM,QACb,CACD,CAEF,CAEA,QAAS,CACR,MAAM,QAAU,KAAK,QACrB,OAAS,oBAAC,2BACP,aAAe,CAChB,KAAM,CAAE,SAAU,KAAM,QAAS,SAAU,YAAa,MAAO,QAAS,EAAI,KAAK,MAC3E,WAAa,KAAK,MAAM,YAAc,cAAgB,WACtD,QAAU,KAAK,MAAM,SAAW,cAAgB,QAChD,OAAW,SAAW,CAAC,QAAQ,WAAe,cAAgB,YACpE,IAAI,cAAgB,GACpB,OACC,UACA,CAAC,KAAK,MAAM,YACV,SAAW,QACX,UAAY,SACZ,aAAe,WAEV,KAAK,eAAgB,EAAM,IAE9B,MAAQ,QAGH,UAAY,YAIrB,OAAS,UAER,KAAK,MAAM,6BACX,CAAC,KAAK,MAAM,mBAKJ,CAAC,MAAQ,CAAC,OAAS,CAAC,YAC7B,cAAgB,IAEV,KAAK,eAAgB,cAAe,OAAQ,EACpD,CACD,CACD,CACD,CAKA,KAAK,aAAe,CACnB,KAAM,GACN,QAAS,GACT,SAAU,GACV,YAAa,GACb,MAAO,GACP,SAAU,GACV,MAAO,KACP,MAAO,KACP,OAAQ,OACR,SAAU,GACV,4BAA6B,GAC7B,MAAO,IACR,EAEA,KAAK,UAAY,CAChB,KAAM,0BACN,QAAS,0BACT,SAAU,0BACV,YAAa,0BACb,MAAO,0BACP,SAAU,0BACV,MAAO,gCAAsB,IAAK,EAClC,MAAO,gCAAsB,IAAK,EAClC,OAAQ,0BACR,SAAU,0BACV,4BAA6B,0BAC7B,MAAO,yBACR,EAEA,KAAK,YAAc,UAKnB,U,EAAe,aAAiB,MAAO,EAAG,IAAK,C","file":"static/js/Gate.5211a4e3.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-session program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\n\n\n// MAIN //\n\nconst context = React.createContext( 'anonymous' );\n\n\n// EXPORTS //\n\nexport default context;\n","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport { withTranslation } from 'react-i18next';\nimport isUndefined from '@stdlib/assert/is-undefined';\nimport isNull from '@stdlib/assert/is-null';\nimport { RECEIVED_USER_RIGHTS, LOGGED_IN, LOGGED_OUT } from '@isle-project/constants/events.js';\nimport { TOGGLE_PRESENTATION_MODE } from '@isle-project/constants/actions.js';\nimport SessionContext from '@isle-project/session/context.js';\nimport RoleContext from '@isle-project/session/role_context.js';\n\n\n// MAIN //\n\n/**\n* An ISLE component that allows to display its children only to reserved audiences.\n*\n* @property {boolean} user - when set the gated content is displayed to users\n* @property {boolean} notUser - when set the gated content is **not** displayed to users\n* @property {boolean} enrolled - when set the gated content is displayed to the students enrolled in the course\n* @property {boolean} notEnrolled - when set the gated content is **not** displayed to the students enrolled in the course\n* @property {boolean} owner - when set the gated content is displayed to the owner of the course (usually the instructor)\n* @property {boolean} notOwner - when set the gated content is **not** displayed to the owner of the course (usually the instructor)\n* @property {Date} until - time until the contents of the gate should remain visible\n* @property {Date} after - time after which the contents of the gate should become visible\n* @property {Node} banner - a custom message which is displayed to visitors for whom the gate's children are not visible instead of the default one\n* @property {boolean} showOwnerInPresentationMode - controls whether to show gate contents in presentation mode when gate is visible for `owner`s\n* @property {boolean} disabled - if a gate is disabled, the banner will be displayed no matter what\n* @property {Function} check - callback function returning a `boolean` indicating whether gate should display child components; the function is invoked whenever session actions arrive\n*/\nclass Gate extends Component {\n\tconstructor( props, context ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tisEnrolled: false,\n\t\t\tisOwner: false,\n\t\t\tvalidCheck: props.check ? props.check( context ) : true,\n\t\t\tbypassTimeCheck: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tconst session = this.context;\n\t\tif ( session ) {\n\t\t\tthis.unsubscribe = session.subscribe( ( type, action ) => {\n\t\t\t\tif (\n\t\t\t\t\ttype === RECEIVED_USER_RIGHTS ||\n\t\t\t\t\ttype === LOGGED_IN ||\n\t\t\t\t\ttype === LOGGED_OUT ||\n\t\t\t\t\ttype === TOGGLE_PRESENTATION_MODE\n\t\t\t\t) {\n\t\t\t\t\tthis.checkAuthorization();\n\t\t\t\t}\n\t\t\t\tif ( this.props.check ) {\n\t\t\t\t\tconst validCheck = this.props.check( session );\n\t\t\t\t\tif ( validCheck !== this.state.validCheck ) {\n\t\t\t\t\t\treturn this.setState({\n\t\t\t\t\t\t\tvalidCheck\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( this._isMounted ) {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.checkAuthorization();\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.props.check ) {\n\t\t\tconst validCheck = this.props.check( this.context );\n\t\t\tif ( validCheck !== this.state.validCheck ) {\n\t\t\t\treturn this.setState({\n\t\t\t\t\tvalidCheck\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.unsubscribe ) {\n\t\t\tthis.unsubscribe();\n\t\t}\n\t\tthis._isMounted = false;\n\t}\n\n\tcheckAuthorization() {\n\t\tconst session = this.context;\n\t\tlet newState = {\n\t\t\tisEnrolled: session.isEnrolled(),\n\t\t\tisOwner: session.isOwner(),\n\t\t\tpresentationMode: session.presentationMode\n\t\t};\n\t\tif (\n\t\t\tnewState.isEnrolled !== this.state.isEnrolled ||\n\t\t\tnewState.isOwner !== this.state.isOwner ||\n\t\t\tnewState.presentationMode !== this.state.presentationMode\n\t\t) {\n\t\t\tthis.setState( newState );\n\t\t}\n\t}\n\n\tisTimeActive() {\n\t\tif ( !this.props.after && !this.props.until ) {\n\t\t\treturn true;\n\t\t}\n\t\tconst session = this.context;\n\t\tif ( this.props.after && this.props.until ) {\n\t\t\treturn this.props.after < session.startTime && session.startTime <= this.props.until;\n\t\t} else if ( this.props.until ) {\n\t\t\treturn session.startTime <= this.props.until;\n\t\t}\n\t\t// Case: `after` property assigned\n\t\treturn this.props.after < session.startTime;\n\t}\n\n\trenderBanner() {\n\t\tif ( !isUndefined( this.props.banner ) ) {\n\t\t\treturn this.props.banner;\n\t\t}\n\t\tconst { check, disabled, user, notUser, enrolled, notEnrolled, owner, notOwner, after, until, t } = this.props;\n\t\tlet banner;\n\t\tif ( check && !this.state.validCheck ) {\n\t\t\tbanner = t('check-not-satisfied');\n\t\t\treturn <Alert variant=\"info\">{banner}</Alert>;\n\t\t}\n\t\tif ( after || until ) {\n\t\t\tif ( after ) {\n\t\t\t\tbanner = t('available-after') + ' ' + after.toLocaleString();\n\t\t\t\tif ( until ) {\n\t\t\t\t\tbanner += ' ';\n\t\t\t\t\tbanner += t('remain-until') + ' ' +until.toLocaleString();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst time = until.toLocaleString();\n\t\t\t\tbanner = t('available-until') + ' ' + time;\n\t\t\t}\n\t\t} else if ( disabled ) {\n\t\t\tbanner = t('not-available');\n\t\t\treturn <Alert variant=\"info\">{banner}</Alert>;\n\t\t} else {\n\t\t\tbanner = t('content-only-available');\n\t\t}\n\t\tlet bool = false;\n\t\tif ( user ) {\n\t\t\tif ( notUser ) {\n\t\t\t\tbanner = t('not-available');\n\t\t\t\treturn <Alert variant=\"info\">{banner}</Alert>;\n\t\t\t}\n\t\t\tbanner += ' to logged-in users';\n\t\t\tbool = true;\n\t\t} else if ( notUser ) {\n\t\t\tbanner += ' to logged-out users';\n\t\t\tbool = true;\n\t\t}\n\t\tif ( enrolled ) {\n\t\t\tif ( notEnrolled ) {\n\t\t\t\tbanner = t('not-available');\n\t\t\t\treturn <Alert variant=\"info\">{banner}</Alert>;\n\t\t\t}\n\t\t\tif ( bool ) {\n\t\t\t\tbanner += ' ';\n\t\t\t\tbanner += t('and');\n\t\t\t}\n\t\t\tbanner += ' ';\n\t\t\tbanner += t('to-enrolled');\n\t\t\tbool = true;\n\t\t} else if ( notEnrolled ) {\n\t\t\tif ( bool ) {\n\t\t\t\tbanner += ' ';\n\t\t\t\tbanner += t('and');\n\t\t\t}\n\t\t\tbanner += ' ';\n\t\t\tbanner += t('to-not-enrolled');\n\t\t\tbool = true;\n\t\t}\n\t\tif ( owner ) {\n\t\t\tif ( notOwner ) {\n\t\t\t\tbanner = t('not-available');\n\t\t\t\treturn <Alert variant=\"info\">{banner}</Alert>;\n\t\t\t}\n\t\t\tif ( bool ) {\n\t\t\t\tbanner += ' ';\n\t\t\t\tbanner += t('and');\n\t\t\t}\n\t\t\tbanner += ' ';\n\t\t\tbanner += t('to-owners');\n\t\t} else if ( notOwner ) {\n\t\t\tif ( bool ) {\n\t\t\t\tbanner += ' ';\n\t\t\t\tbanner += t('and');\n\t\t\t}\n\t\t\tbanner += ' ';\n\t\t\tbanner += t('to-non-owners');\n\t\t}\n\t\tbanner += '.';\n\t\tconst alert = <Alert variant=\"info\">\n\t\t\t{banner}\n\t\t</Alert>;\n\t\treturn alert;\n\t}\n\n\trenderShowButton() {\n\t\tif ( isNull( this.props.banner ) ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn ( <Button variant=\"secondary\" size=\"small\" onClick={() => {\n\t\t\tthis.setState({\n\t\t\t\tbypassTimeCheck: !this.state.bypassTimeCheck\n\t\t\t});\n\t\t}} style={{ float: 'right' }} >\n\t\t\t<i className=\"fas fa-clock\"></i> {this.props.t('toggle-hidden-content')}\n\t\t</Button> );\n\t}\n\n\trenderChildren( authenticated, isOwner ) {\n\t\tconst timeActive = authenticated && this.isTimeActive();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{!authenticated || !timeActive ? this.renderBanner() : null}\n\t\t\t\t{isOwner && !timeActive ? this.renderShowButton() : null}\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"gate outer-element\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: authenticated && ( timeActive || this.state.bypassTimeCheck ) ? 'inline' : 'none'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst session = this.context;\n\t\treturn ( <RoleContext.Consumer>\n\t\t\t{ currentRole => {\n\t\t\t\tconst { disabled, user, notUser, enrolled, notEnrolled, owner, notOwner } = this.props;\n\t\t\t\tconst isEnrolled = this.state.isEnrolled || currentRole === 'enrolled';\n\t\t\t\tconst isOwner = this.state.isOwner || currentRole === 'owner';\n\t\t\t\tconst isUser = ( session && !session.anonymous ) || currentRole !== 'anonymous';\n\t\t\t\tlet authenticated = false;\n\t\t\t\tif (\n\t\t\t\t\tdisabled ||\n\t\t\t\t\t!this.state.validCheck ||\n\t\t\t\t\t( notUser && isUser ) ||\n\t\t\t\t\t( notOwner && isOwner ) ||\n\t\t\t\t\t( notEnrolled && isEnrolled )\n\t\t\t\t) {\n\t\t\t\t\treturn this.renderChildren( false );\n\t\t\t\t}\n\t\t\t\tif ( user && isUser ) {\n\t\t\t\t\tauthenticated = true;\n\t\t\t\t}\n\t\t\t\telse if ( enrolled && isEnrolled ) {\n\t\t\t\t\tauthenticated = true;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\towner && isOwner &&\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.props.showOwnerInPresentationMode ||\n\t\t\t\t\t\t!this.state.presentationMode\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tauthenticated = true;\n\t\t\t\t}\n\t\t\t\telse if ( !user && !owner && !enrolled ) {\n\t\t\t\t\tauthenticated = true;\n\t\t\t\t}\n\t\t\t\treturn this.renderChildren( authenticated, isOwner );\n\t\t\t}}\n\t\t</RoleContext.Consumer> );\n\t}\n}\n\n\n// PROPERTIES //\n\nGate.defaultProps = {\n\tuser: false,\n\tnotUser: false,\n\tenrolled: false,\n\tnotEnrolled: false,\n\towner: false,\n\tnotOwner: false,\n\tafter: null,\n\tuntil: null,\n\tbanner: void 0,\n\tdisabled: false,\n\tshowOwnerInPresentationMode: false,\n\tcheck: null\n};\n\nGate.propTypes = {\n\tuser: PropTypes.bool,\n\tnotUser: PropTypes.bool,\n\tenrolled: PropTypes.bool,\n\tnotEnrolled: PropTypes.bool,\n\towner: PropTypes.bool,\n\tnotOwner: PropTypes.bool,\n\tafter: PropTypes.instanceOf( Date ),\n\tuntil: PropTypes.instanceOf( Date ),\n\tbanner: PropTypes.node,\n\tdisabled: PropTypes.bool,\n\tshowOwnerInPresentationMode: PropTypes.bool,\n\tcheck: PropTypes.func\n};\n\nGate.contextType = SessionContext;\n\n\n// EXPORTS //\n\nexport default withTranslation( 'gate' )( Gate );\n"],"sourceRoot":""}