{"version":3,"sources":["../node_modules/dompurify/dist/purify.js","../node_modules/@isle-project/components/internal/spinner/index.js","../node_modules/@isle-project/components/r/output/main.js","../node_modules/@isle-project/components/r/utils/create-prepend-code/index.js"],"names":[],"mappings":"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","file":"static/js/ROutput.5c5732f5.chunk.js","sourcesContent":["/*! @license DOMPurify 2.3.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.5/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.3.5';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        HTMLFormElement = window.HTMLFormElement,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n\n    var ElementPrototype = Element.prototype;\n\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment,\n        getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = null;\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n\n    /* Parsing of strict XHTML documents */\n    var PARSER_MEDIA_TYPE = void 0;\n    var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    var transformCaseFunc = void 0;\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    var isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {\n        return x;\n      } : stringToLowerCase;\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function');\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Mitigate a problem with templates inside select */\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n    var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          var tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = transformCaseFunc(tag);\n      var lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport PI from '@stdlib/constants/float64/pi';\n\n\n// MAIN //\n\n/**\n* Spinner to visualize load times.\n*\n* @property {string} display - CSS display property\n* @property {number} height - height (in px)\n* @property {number} width - width (in px)\n* @property {number} lines - number of lines\n* @property {Object} style - CSS inline styles\n*/\nclass Spinner extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.activeSpinner && this.context.canvas ) {\n\t\t\tclearInterval( this.activeSpinner );\n\t\t\tthis.context.clearRect( 0, 0, this.context.canvas.width, this.context.canvas.height );\n\t\t}\n\t\tif ( this.props.running === true ) {\n\t\t\tthis.startSpinner();\n\t\t}\n\t}\n\n\tstartSpinner = () => {\n\t\tconst canvas = findDOMNode( this );\n\t\tconst context = canvas.getContext( '2d' );\n\t\tthis.context = context;\n\t\tconst start = new Date();\n\t\tconst lines = this.props.lines;\n\t\tconst cW = context.canvas.width;\n\t\tconst cH = context.canvas.height;\n\n\t\tconst draw = () => {\n\t\t\tconst num = ( ( new Date() - start ) / 1000 ) * lines;\n\t\t\tconst rotation = parseInt( num, 10 ) / lines;\n\t\t\tcontext.save();\n\t\t\tcontext.clearRect( 0, 0, cW, cH );\n\t\t\tcontext.translate( cW / 2.0, cH / 2.0 );\n\t\t\tcontext.rotate( PI * 2 * rotation );\n\t\t\tfor ( let i = 0; i < lines; i++ ) {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.rotate( PI * 2.0 / lines );\n\t\t\t\tcontext.moveTo( cW / 10, 0 );\n\t\t\t\tcontext.lineTo( cW / 4, 0 );\n\t\t\t\tcontext.lineWidth = cW / 30;\n\t\t\t\tcontext.strokeStyle = 'rgba(0, 0, 0,' + i / lines + ')';\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tcontext.restore();\n\t\t};\n\t\tthis.activeSpinner = window.setInterval( draw, 50 );\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<canvas\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: this.props.width,\n\t\t\t\t\theight: this.props.height,\n\t\t\t\t\tdisplay: this.props.running ? this.props.display : 'none',\n\t\t\t\t\tmargin: 'auto',\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSpinner.defaultProps = {\n\tdisplay: 'block',\n\theight: 64,\n\tlines: 16,\n\tstyle: {},\n\twidth: 128\n};\n\nSpinner.propTypes = {\n\tdisplay: PropTypes.string,\n\theight: PropTypes.number,\n\tlines: PropTypes.number,\n\trunning: PropTypes.bool.isRequired,\n\tstyle: PropTypes.object,\n\twidth: PropTypes.number\n};\n\n\n// EXPORTS //\n\nexport default Spinner;\n","// MODULES //\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DOMPurify from 'dompurify';\nimport Spinner from '@isle-project/components/internal/spinner';\nimport createPrependCode from '@isle-project/components/r/utils/create-prepend-code';\nimport SessionContext from '@isle-project/session/context.js';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\n\n\n// FUNCTIONS //\n\nconst showResult = ( res ) => {\n\tif ( res ) {\n\t\tlet sanitized = {\n\t\t\t__html: DOMPurify.sanitize( res )\n\t\t};\n\t\t// eslint-disable-next-line react/no-danger\n\t\treturn <pre id=\"output\"><span dangerouslySetInnerHTML={sanitized} /></pre>;\n\t}\n\treturn <span />;\n};\n\n\n// MAIN //\n\n/**\n* Component for rendering R output inside an ISLE lesson.\n*\n* @property {string} code - R code used to evaluate\n* @property {Array<string>} libraries - R libraries that should be loaded automatically when the input `code` is executed\n* @property {(string|Array<string>)} prependCode - R code (or `array` of code blocks) to be prepended to the code stored in `code` when evaluating\n* @property {Function} onResult - callback invoked with `error` (`null` if operation was successful) and `result` holding R output\n* @property {Function} onPlots - callback invoked with any generated plots\n*/\nconst ROutput = ({ code, libraries, prependCode, onResult, onPlots }) => {\n\tconst [ result, setResult ] = useState( null );\n\tconst [ running, setRunning ] = useState( false );\n\tconst session = useContext( SessionContext );\n\tuseEffect( () => {\n\t\tsetRunning( true );\n\t\tconst prepended = createPrependCode( libraries, prependCode, session );\n\t\tconst fullCode = prepended + code;\n\t\tsession.executeRCode({\n\t\t\tcode: fullCode,\n\t\t\tonError: ( error ) => {\n\t\t\t\tsetResult( error );\n\t\t\t\tsetRunning( false );\n\t\t\t\tonResult( error );\n\t\t\t},\n\t\t\tonPlots: onPlots,\n\t\t\tonResult: ( err, res, body ) => {\n\t\t\t\tsetResult( body );\n\t\t\t\tsetRunning( false );\n\t\t\t\tonResult( err, body );\n\t\t\t}\n\t\t});\n\t}, [ code, libraries, onPlots, onResult, prependCode, session ] );\n\treturn (\n\t\t<span className=\"ROutput\">\n\t\t\t{ result ?\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: 'auto',\n\t\t\t\t\t\tmarginRight: 'auto',\n\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\tmarginBottom: '10px'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Spinner\n\t\t\t\t\t\twidth={128}\n\t\t\t\t\t\theight={64}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: '8px',\n\t\t\t\t\t\t\tmarginBottom: '-12px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trunning={running}\n\t\t\t\t\t/>\n\t\t\t\t\t{ !running ?\n\t\t\t\t\t\tshowResult( result ) :\n\t\t\t\t\t\t<span />\n\t\t\t\t\t}\n\t\t\t\t</div> :\n\t\t\t\t<span />\n\t\t\t}\n\t\t</span>\n\t);\n};\n\n\n// PROPERTIES //\n\nROutput.propTypes = {\n\tcode: PropTypes.string,\n\tlibraries: PropTypes.array,\n\tprependCode: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]),\n\tonPlots: PropTypes.func,\n\tonResult: PropTypes.func\n};\n\nROutput.defaultProps = {\n\tcode: '',\n\tlibraries: [],\n\tprependCode: '',\n\tonPlots() {},\n\tonResult() {}\n};\n\n\n// EXPORTS //\n\nexport default withPropCheck( ROutput );\n","// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\n\n\n// FUNCTIONS //\n\nconst requireLibs = ( libs ) => {\n\treturn libs.map( x => 'library(' + x + ');' )\n\t\t.join( ' ' );\n};\n\n\n// MAIN //\n\n/**\n* Create code to be added in front of user-supplied R code.\n*\n* @param {Array} libs - array of libraries to requireLibs\n* @param {(Array|string)} prependCode - array of strings or single string of code to prepend\n* @param {Object} session - session object\n* @param {string} generated code\n*/\nfunction createPrependCode( libs, prependCode, session ) {\n\tconst { rshell } = session.config;\n\tif ( rshell && rshell.libraries ) {\n\t\tlibs = libs.concat( rshell.libraries );\n\t}\n\tlet ret = requireLibs( libs );\n\tif ( rshell && rshell.global ) {\n\t\tret += rshell.global + '\\n';\n\t}\n\tprependCode = isArray( prependCode ) ?\n\t\tprependCode.join( '\\n' ) :\n\t\tprependCode;\n\tprependCode += '\\n';\n\tret += prependCode;\n\treturn ret;\n}\n\n\n// EXPORTS //\n\nexport default createPrependCode;\n"],"sourceRoot":""}