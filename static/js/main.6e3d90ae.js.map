{"version":3,"file":"static/js/main.6e3d90ae.js","mappings":"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","sources":["actions/authentication.js","actions/cohort.js","actions/lesson.js","actions/notification.js","actions/settings.js","actions/user.js","components/async/spinner.js","components/async/index.js","constants/action_types.js","constants/server.js","helpers/axios.js","helpers/i18n.js","reducers/admin.js","reducers/badges.js","reducers/cohorts.js","reducers/namespace.js","reducers/notification.js","reducers/translations.js","reducers/settings.js","reducers/gallery.js","reducers/search.js","reducers/user.js","reducers/index.js","containers/notification.js","containers/app.js","service_worker.js","index.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport server from 'constants/server';\nimport { addErrorNotification } from 'actions/notification.js';\nimport { loggedIn, receivedToken } from 'actions/user';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:authentication' );\n\n\n// FUNCTIONS //\n\n/**\n * Sanitizes the user object.\n *\n * @param {Object} user - user object\n * @returns {Array} sanitized user object and a boolean indicating whether the user object needs sanitizing on the server\n */\nconst sanitizeUser = ( user ) => {\n\t// Check for duplicated enrolled and owned namespaces:\n\tconst ownedNamespaces = user.ownedNamespaces;\n\tconst newOwnedNamespaces = [];\n\tlet ids = new Set();\n\tfor ( let i = 0; i < ownedNamespaces.length; i++ ) {\n\t\tif ( !ids.has( ownedNamespaces[ i ]._id ) ) {\n\t\t\tids.add( ownedNamespaces[ i ]._id );\n\t\t\tnewOwnedNamespaces.push( ownedNamespaces[ i ] );\n\t\t}\n\t}\n\tconst enrolledNamespaces = user.enrolledNamespaces;\n\tconst newEnrolledNamespaces = [];\n\tids = new Set();\n\tfor ( let i = 0; i < enrolledNamespaces.length; i++ ) {\n\t\tif ( !ids.has( enrolledNamespaces[ i ]._id ) ) {\n\t\t\tids.add( enrolledNamespaces[ i ]._id );\n\t\t\tnewEnrolledNamespaces.push( enrolledNamespaces[ i ] );\n\t\t}\n\t}\n\tconst needsSanitizing = newOwnedNamespaces.length !== ownedNamespaces.length ||\n\t\tnewEnrolledNamespaces.length !== enrolledNamespaces.length;\n\n\tif ( needsSanitizing ) {\n\t\tuser.ownedNamespaces = newOwnedNamespaces;\n\t\tuser.enrolledNamespaces = newEnrolledNamespaces;\n\t}\n\tdebug( 'Does user need sanitizing? '+needsSanitizing );\n\treturn [ user, needsSanitizing ];\n};\n\n\n// MAIN //\n\n/**\n * Makes a POST request to the server to sanitize the user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n * @returns {(Promise|null)} promise or null\n */\nexport const sanitizeRequest = ( dispatch, user ) => {\n\ttry {\n\t\treturn axios.post( server+'/sanitize_user', {\n\t\t\tid: user.id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to sanitize the user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to sanitize the user\n */\nexport const sanitizeRequestInjector = dispatch => {\n\treturn async ( user ) => {\n\t\tconst result = await sanitizeRequest( dispatch, user );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to fetch the user's credentials.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} obj - object with a `id` property and a `token` property\n * @returns {(Object|null)} user object or null\n */\nexport const fetchCredentials = async ( dispatch, obj ) => {\n\tdebug( 'Fetch user credentials...' );\n\tlocalStorage.setItem( 'ISLE_USER_'+server, JSON.stringify( obj ) );\n\ttry {\n\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\tid: obj.id\n\t\t});\n\t\tlet user = res.data;\n\t\tif ( user.picture ) {\n\t\t\tuser.picture = server + '/avatar/' + user.picture;\n\t\t}\n\t\tuser = {\n\t\t\t...obj,\n\t\t\t...user\n\t\t};\n\t\tlet [ sanitizedUser, needsSanitizing ] = sanitizeUser( user );\n\t\tdispatch( loggedIn( user ) );\n\t\tif ( needsSanitizing ) {\n\t\t\tsanitizeRequest( dispatch, obj );\n\t\t}\n\t\treturn sanitizedUser;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to fetch the user's credentials with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to fetch the user's credentials\n */\nexport const fetchCredentialsInjector = dispatch => {\n\treturn async ( obj ) => {\n\t\tconst result = await fetchCredentials( dispatch, obj );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to authenticate the user via Shibboleth.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} shibboleth - shibboleth object\n * @param {string} shibboleth.eppn - user EPPN\n * @param {string} shibboleth.affil - user affiliation\n * @param {string} shibboleth.time - time of authentication\n * @param {string} shibboleth.salt - salt\n * @param {string} shibboleth.token - token\n * @returns {(Object|null)} user object or null\n */\nexport const shibboleth = async ( dispatch, { eppn, name, affil, time, salt, token }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/shibboleth', {\n\t\t\teppn, name, affil, time, salt, token\n\t\t});\n\t\tdispatch( receivedToken( res.data ) );\n\t\treturn res;\n\t}\n\tcatch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to authenticate the user via Shibboleth with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to authenticate the user via Shibboleth\n */\nexport const shibbolethInjector = dispatch => {\n\treturn async ({ eppn, name, affil, time, salt, token }) => {\n\t\tconst result = await shibboleth( dispatch, { eppn, name, affil, time, salt, token } );\n\t\treturn result;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport logger from 'debug';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport { getLessons } from 'actions/lesson';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { ADD_ENROLLED_NAMESPACE, GET_ALL_COHORTS, RETRIEVED_COHORTS, RETRIEVED_ENROLLABLE_COHORTS } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:cohorts' );\n\n\n// MAIN //\n\n/**\n * Returns an action for a new enrolled namespace.\n *\n * @param {Object} namespace - namespace object\n * @param {string} namespace._id - namespace ID\n * @param {string} namespace.title - namespace title\n * @param {string} namespace.description - namespace description\n * @param {Array} namespace.owners - namespace owners\n * @returns {Object} action\n */\nexport function addEnrolledNamespace({ title, owners, description, _id }) {\n\treturn {\n\t\ttype: ADD_ENROLLED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieving all enrollable cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function retrievedEnrollableCohorts( cohorts, user ) {\n\treturn {\n\t\ttype: RETRIEVED_ENROLLABLE_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts,\n\t\t\tuser\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieved cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function retrievedCohorts( cohorts, user ) {\n\treturn {\n\t\ttype: RETRIEVED_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts,\n\t\t\tuser\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieving all cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @returns {Object} action\n */\nexport function retrievedAllCohorts( cohorts ) {\n\treturn {\n\t\ttype: GET_ALL_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts\n\t\t}\n\t};\n}\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request for retrieving all enrollable cohorts.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const getEnrollableCohorts = async ( dispatch, user ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_enrollable_cohorts' );\n\t\tconst cohorts = res.data.cohorts;\n\t\tdebug( 'Retrieved '+cohorts.length+' cohorts...' );\n\t\tdispatch( retrievedEnrollableCohorts( cohorts, user ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request for retrieving all enrollable cohorts with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make GET request for retrieving all enrollable cohorts\n */\nexport const getEnrollableCohortsInjector = dispatch => {\n\treturn async ( user ) => {\n\t\tawait getEnrollableCohorts( dispatch, user );\n\t};\n};\n\n/**\n * Makes a GET request for retrieving all cohorts for the selected course.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - course ID\n */\nexport const getCohorts = async ( dispatch, { namespaceID }) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_cohorts?'+qs.stringify({ namespaceID }) );\n\t\tdispatch( retrievedCohorts( res.data.cohorts ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request for retrieving all cohorts for the selected course with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make GET request for retrieving all cohorts for the selected course\n */\nexport const getCohortsInjector = ( dispatch ) => {\n\treturn async ({ namespaceID, userToken }) => {\n\t\tawait getCohorts( dispatch, { namespaceID, userToken });\n\t};\n};\n\n/**\n * Makes a POST request for adding the user to the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} cohortID - cohort ID\n * @param {Object} namespace - namespace object\n */\nexport const addUserToCohort = async ( dispatch, cohortID, namespace ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/add_to_cohort', { cohortID });\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( addEnrolledNamespace( namespace ) );\n\t\tconst namespaceName = namespace.title;\n\t\tgetLessons( dispatch, namespaceName );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for adding the user to the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for adding the user to the selected cohort\n */\nexport const addUserToCohortInjector = ( dispatch ) => {\n\treturn async ( cohortID, namespace ) => {\n\t\tawait addUserToCohort( dispatch, cohortID, namespace );\n\t};\n};\n\n/**\n * Makes a POST request for deleting the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} _id - cohort ID\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const deleteCohort = async ( dispatch, _id, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_cohort', { _id });\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tif ( namespaceID ) {\n\t\t\tgetCohorts( dispatch, {\n\t\t\t\tnamespaceID\n\t\t\t});\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for deleting the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for deleting the selected cohort\n */\nexport const deleteCohortInjector = ( dispatch ) => {\n\treturn async ( _id, namespaceID ) => {\n\t\tawait deleteCohort( dispatch, _id, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for creating a new cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} cohort - cohort object\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const createCohort = async ( dispatch, cohort, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_cohort', cohort );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tgetCohorts( dispatch, { namespaceID });\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for creating a new cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for creating a new cohort\n */\nexport const createCohortInjector = ( dispatch ) => {\n\treturn async ( cohort, namespaceID ) => {\n\t\tawait createCohort( dispatch, cohort, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for updating the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} cohort - cohort object\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const updateCohort = async ( dispatch, cohort, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_cohort', { cohort });\n\t\tlet msg = res.data.message;\n\t\tlet notification;\n\t\tif ( res.data.newEmails && res.data.newEmails.length > 0 ) {\n\t\t\tnotification = {\n\t\t\t\tchildren: <div>\n\t\t\t\t\t<p>{msg}</p>\n\t\t\t\t\t<p>{i18next.t('common:email-invitations-sent')}</p>\n\t\t\t\t\t<p>{res.data.newEmails.join( '\\n' )}</p>\n\t\t\t\t</div>,\n\t\t\t\tlevel: 'success',\n\t\t\t\tautoDismiss: 0,\n\t\t\t\tdismissible: 'button'\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tnotification = {\n\t\t\t\tmessage: msg,\n\t\t\t\tlevel: 'success'\n\t\t\t};\n\t\t}\n\t\taddNotification( dispatch, notification );\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tgetCohorts( dispatch, { namespaceID });\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for updating the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for updating the selected cohort\n */\nexport const updateCohortInjector = ( dispatch ) => {\n\treturn async ( cohort, namespaceID ) => {\n\t\tawait updateCohort( dispatch, cohort, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for retrieving the list of cohorts.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getAllCohorts = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_cohorts' );\n\t\tdispatch( retrievedAllCohorts( res.data.cohorts ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for retrieving the list of all cohorts with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for retrieving the list of all cohorts\n */\nexport const getAllCohortsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllCohorts( dispatch );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport qs from 'querystring';\nimport server from 'constants/server';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { DELETED_LESSON, GET_ALL_LESSONS, GET_TEMPLATE_LESSONS, GET_ROOMS, UPDATED_LESSON, RETRIEVED_LESSONS, RETRIEVED_PUBLIC_LESSONS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Returns an action signifying a lesson has been deleted.\n *\n * @param {string} lessonName - name of the lesson\n * @returns {Object} action\n */\nexport function deletedLesson( lessonName ) {\n\treturn {\n\t\ttype: DELETED_LESSON,\n\t\tpayload: {\n\t\t\tlessonName\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that a lesson has been updated.\n *\n * @param {string} lessonName - name of the lesson\n * @param {Object} props - properties of the lesson\n * @returns {Object} action\n */\nexport function updatedLesson( lessonName, props ) {\n\treturn {\n\t\ttype: UPDATED_LESSON,\n\t\tpayload: {\n\t\t\tlessonName,\n\t\t\tprops\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that lessons have been retrieved.\n *\n * @param {Array} lessons - lessons\n * @param {string} namespaceName - namespace name\n * @returns {Object} action\n */\nexport function retrievedLessons({ lessons, namespaceName }) {\n\treturn {\n\t\ttype: RETRIEVED_LESSONS,\n\t\tpayload: {\n\t\t\tlessons,\n\t\t\tnamespaceName\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all lessons have been retrieved for an admin user.\n *\n * @param {Array} lessons - lessons\n * @returns {Object} action\n */\nexport function retrievedAllLessons( lessons ) {\n\treturn {\n\t\ttype: GET_ALL_LESSONS,\n\t\tpayload: {\n\t\t\tlessons\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all lessons that may serve as templates have been retrieved.\n *\n * @param {Array} templateLessons - lessons that may serve as templates\n * @returns {Object} action\n */\nexport function retrievedTemplateLessons( templateLessons ) {\n\treturn {\n\t\ttype: GET_TEMPLATE_LESSONS,\n\t\tpayload: {\n\t\t\ttemplateLessons\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all chat rooms have been retrieved.\n *\n * @param {Array} rooms - chat rooms\n * @returns {Object} action\n */\nexport function retrievedRooms( rooms ) {\n\treturn {\n\t\ttype: GET_ROOMS,\n\t\tpayload: {\n\t\t\trooms\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all public lessons have been retrieved.\n *\n * @param {Array} lessons - lessons\n * @returns {Object} action\n */\nexport function retrievedPublicLessons( lessons ) {\n\treturn {\n\t\ttype: RETRIEVED_PUBLIC_LESSONS,\n\t\tpayload: {\n\t\t\tlessons\n\t\t}\n\t};\n}\n\n/**\n * Makes a POST request to retrieve all public lessons.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getPublicLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_public_lessons' );\n\t\tdispatch( retrievedPublicLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to retrieve all public lessons.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to retrieve all public lessons\n */\nexport const getPublicLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getPublicLessons( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to retrieve the ISLE file for a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - name of the lesson\n * @param {string} options.namespaceName - namespace name\n * @returns {(Object|null)} file data or null if the file does not exist\n */\nexport const getIsleFile = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_isle_file?'+qs.stringify({\n\t\t\tlessonName,\n\t\t\tnamespaceName\n\t\t}) );\n\t\treturn res.data;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve the ISLE file for a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve the ISLE file for a lesson\n */\nexport const getIsleFileInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tconst file = await getIsleFile( dispatch, { lessonName, namespaceName });\n\t\treturn file;\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all lessons for a given namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} namespaceName - namespace name\n */\nexport const getLessons = async ( dispatch, namespaceName ) => {\n\tif ( namespaceName ) {\n\t\ttry {\n\t\t\tconst res = await axios.get( server+'/get_lessons?'+qs.stringify({\n\t\t\t\tnamespaceName\n\t\t\t}) );\n\t\t\tlet lessons = res.data.lessons;\n\t\t\tlessons = lessons.map(( lesson, index ) => {\n\t\t\t\tlesson.colorIndex = index % 20;\n\t\t\t\tlesson.url = server+'/'+namespaceName+'/'+lesson.title;\n\t\t\t\tif ( lesson.lockUntil ) {\n\t\t\t\t\tlesson.lockUntil = new Date( lesson.lockUntil.time );\n\t\t\t\t}\n\t\t\t\tif ( !lesson.createdAt ) {\n\t\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\n\t\t\t\t}\n\t\t\t\tif ( !lesson.updatedAt ) {\n\t\t\t\t\tlesson.updatedAt = lesson.createdAt;\n\t\t\t\t}\n\t\t\t\treturn lesson;\n\t\t\t});\n\t\t\tdispatch( retrievedLessons({ lessons, namespaceName }) );\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t}\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all lessons for a given namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all lessons for a given namespace\n */\nexport const getLessonsInjector = ( dispatch ) => {\n\treturn async ( namespaceName ) => {\n\t\tawait getLessons( dispatch, namespaceName );\n\t};\n};\n\n/**\n * Makes a POST request to copy a lesson from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.sourceName - source lesson name\n * @param {string} options.targetName - target lesson name\n * @param {string} options.source - source namespace name\n * @param {string} options.target - target namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const copyLesson = async ( dispatch, { sourceName, target, targetName, source }) => {\n\tif ( sourceName && target && source ) {\n\t\ttry {\n\t\t\tconst res = await axios.post( server+'/copy_lesson', {\n\t\t\t\ttarget,\n\t\t\t\tsource,\n\t\t\t\tsourceName,\n\t\t\t\ttargetName\n\t\t\t});\n\t\t\taddNotification( dispatch, {\n\t\t\t\tmessage: res.data.message,\n\t\t\t\tlevel: 'success'\n\t\t\t});\n\t\t\treturn res;\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t\treturn err;\n\t\t}\n\t}\n};\n\n/**\n * Returns a function to make a POST request to copy a lesson from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to copy a lesson from a source namespace to a target namespace\n */\nexport const copyLessonInjector = ( dispatch ) => {\n\treturn async ({ sourceName, target, targetName, source }) => {\n\t\tawait copyLesson( dispatch, { sourceName, target, targetName, source } );\n\t};\n};\n\n/**\n * Makes a POST request to copy all lessons from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.source - source namespace name\n * @param {string} options.target - target namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const copyNamespaceLessons = async ( dispatch, { target, source }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/copy_namespace_lessons', {\n\t\t\ttarget,\n\t\t\tsource\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to copy all lessons from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to copy all lessons from a source namespace to a target namespace\n */\nexport const copyNamespaceLessonsInjector = ( dispatch ) => {\n\treturn async ({ target, source }) => {\n\t\tconst res = await copyNamespaceLessons( dispatch, { target, source } );\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to delete a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const deleteLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\tif ( !namespaceName || !lessonName ) {\n\t\tconst err = new Error( 'Missing `namespaceName` or `lessonName`.' );\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\tdispatch( deletedLesson( lessonName ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to delete a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to delete a lesson\n */\nexport const deleteLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait deleteLesson( dispatch, { lessonName, namespaceName } );\n\t};\n};\n\n/**\n * Makes a POST request to show a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const showLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/show_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { public: true }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to show a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to show a lesson in the gallery of the dashboard\n */\nexport const showLessonInGalleryInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait showLessonInGallery( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n\n/**\n * Makes a POST request to hide a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const hideLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/hide_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { public: false }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to hide a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to hide a lesson in the gallery of the dashboard\n */\nexport const hideLessonInGalleryInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait hideLessonInGallery( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to make a lesson available to users, i.e. set it to being active.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const activateLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/activate_lesson?', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { active: true }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to make a lesson available to users, i.e. set it to being active.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to make a lesson available to users, i.e. set it to being active\n */\nexport const activateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait activateLesson( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to make a lesson hidden from users, i.e. set it to being inactive.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const deactivateLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/deactivate_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { active: false }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive\n */\nexport const deactivateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait deactivateLesson( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to update a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n * @param {string} options.newTitle - new title\n * @param {string} options.newDescription - new description\n * @param {string} options.lockUntil - date on which the lesson should be made available to users\n * @param {boolean} options.template - controls whether the lesson shall be a template or not\n * @returns {boolean} true if the lesson was updated, false otherwise\n */\nexport const updateLesson = async ( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockUntil, template }) => {\n\tif ( namespaceName && lessonName ) {\n\t\ttry {\n\t\t\tconst query = {\n\t\t\t\tnamespaceName,\n\t\t\t\tlessonName,\n\t\t\t\tnewTitle,\n\t\t\t\tnewDescription,\n\t\t\t\tlockUntil\n\t\t\t};\n\t\t\tif ( isBoolean( template ) ) {\n\t\t\t\tquery.template = template;\n\t\t\t}\n\t\t\tconst res = await axios.post( server+'/update_lesson', query );\n\t\t\tdispatch( deletedLesson( lessonName ) );\n\t\t\taddNotification( dispatch, {\n\t\t\t\tmessage: res.data.message,\n\t\t\t\tlevel: 'success'\n\t\t\t});\n\t\t\tgetLessons( dispatch, namespaceName );\n\t\t\treturn true;\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n * Returns a function to make a POST request to update a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to update a lesson\n */\nexport const updateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName, newTitle, newDescription, lockUntil, template }) => {\n\t\tconst bool = await updateLesson( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockUntil, template });\n\t\treturn bool;\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all lessons for an admin user.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getAllLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_lessons' );\n\t\tdispatch( retrievedAllLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all lessons for an admin user.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all lessons for an admin user\n */\nexport const getAllLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllLessons( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all template lessons.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getTemplateLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_template_lessons' );\n\t\tdispatch( retrievedTemplateLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all template lessons.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all template lessons\n */\nexport const getTemplateLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getTemplateLessons( dispatch );\n\t};\n};\n\n\n/**\n * Makes a GET request to retrieve all chat rooms\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getRooms = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_open_rooms' );\n\t\tdispatch( retrievedRooms( res.data.rooms ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all chat rooms\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all chat rooms\n */\nexport const getRoomsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getRooms( dispatch );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { ADD_NOTIFICATION, ADD_ERROR_NOTIFICATION } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Dispatches an action object to add a notification.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} notification - Notification object\n */\nexport function addNotification( dispatch, notification ) {\n\tdispatch({\n\t\ttype: ADD_NOTIFICATION,\n\t\tpayload: notification\n\t});\n}\n\n/**\n * Returns a function to dispatch an action object to add a notification.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to dispatch action object to add a notification\n */\nexport const addNotificationInjector = dispatch => {\n\treturn notification => {\n\t\taddNotification( dispatch, notification );\n\t};\n};\n\n/**\n * Dispatches an action object to add an error notification.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Error} err - error object\n */\nexport function addErrorNotification( dispatch, err ) {\n\tlet msg;\n\tif ( err.response ) {\n\t\tmsg = 'Server response: ' + err.response.status + '.\\n';\n\t\tmsg += err.response.data;\n\t} else {\n\t\tmsg = err.message;\n\t}\n\tdispatch({\n\t\ttype: ADD_ERROR_NOTIFICATION,\n\t\tpayload: msg\n\t});\n}\n\n/**\n * Returns a function to dispatch an action object to add an error notification with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to dispatch action object to add an error notification\n */\nexport const addErrorNotificationInjector = dispatch => {\n\treturn message => {\n\t\taddErrorNotification( dispatch, message );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { UPDATED_SETTINGS, UPDATED_TRANSLATIONS, GET_CUSTOM_TRANSLATIONS, GET_SETTINGS_PUBLIC, GET_SETTINGS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to retrieve the server instance settings.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getSettings = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_settings' );\n\t\tdispatch({\n\t\t\ttype: GET_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve the server instance settings with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve the server instance settings\n */\nexport const getSettingsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getSettings( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to the server to retrieve the server instance's public settings.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getPublicSettings = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_public_settings' );\n\t\tdispatch({\n\t\t\ttype: GET_SETTINGS_PUBLIC,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve the server instance's public settings with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve the server instance's public settings\n */\nexport const getPublicSettingsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getPublicSettings( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a server instance setting.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} name - name of the setting to update\n * @param {string} value - value of the setting to update\n * @returns {void}\n */\nexport const updateSettings = async ( dispatch, name, value ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_settings', {\n\t\t\tname, value\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a server instance setting with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to update a server instance setting\n */\nexport const updateSettingsInjector = dispatch => {\n\treturn async ( name, value ) => {\n\t\tawait updateSettings( dispatch, name, value );\n\t};\n};\n\n/**\n * Makes a POST request to the server to add a custom translation.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} translation - the translation to add\n * @param {string} translation.language - the locale of the translation\n * @param {string} translation.ns - the namespace of the translation\n * @param {string} translation.key - the translation's key\n * @param {string} translation.value - the translation's value\n * @returns {(Object|Error)} the translation added or an error\n */\nexport const addCustomTranslation = async ( dispatch, { language, ns, key, value }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/add_custom_translation', {\n\t\t\tlanguage, ns, key, value\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to add a custom translation with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to add a custom translation\n */\nexport const addCustomTranslationInjector = dispatch => {\n\treturn async ({ language, ns, key, value }) => {\n\t\tconst res = await addCustomTranslation( dispatch, { language, ns, key, value });\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to get all custom translations.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getCustomTranslations = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_translations' );\n\t\tdispatch({\n\t\t\ttype: GET_CUSTOM_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to get all custom translations with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to get all custom translations\n */\nexport const getCustomTranslationsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getCustomTranslations( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to remove a custom translation.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} translation - the translation to remove\n * @param {string} translation.language - the locale of the translation\n * @param {string} translation.ns - the namespace of the translation\n * @param {string} translation.key - the translation's key\n * @returns {(Object|Error)} the server response or an error\n */\nexport const removeCustomTranslation = async ( dispatch, { language, ns, key }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/remove_custom_translation', {\n\t\t\tlanguage, ns, key\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:removed'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to remove a custom translation with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to remove a custom translation\n */\nexport const removeCustomTranslationInjector = dispatch => {\n\treturn async ({ language, ns, key }) => {\n\t\tconst res = await removeCustomTranslation( dispatch, { language, ns, key });\n\t\treturn res;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport { fetchCredentials } from 'actions/authentication.js';\nimport { getEnrollableCohorts } from 'actions/cohort.js';\nimport { addNotification, addErrorNotification } from 'actions/notification.js';\nimport { AUTHENTICATED, USER_PICTURE_MODIFIED, DELETED_USER, GET_USERS, LOGGED_IN, LOGGED_OUT, RECEIVED_TOKEN, REQUEST_TFA, USER_UPDATED, USER_UPDATED_BY_ADMIN } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:user' );\n\n\n// EXPORTS //\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function loggedIn( user ) {\n\treturn {\n\t\ttype: LOGGED_IN,\n\t\tpayload: {\n\t\t\temail: user.email,\n\t\t\tverifiedEmail: user.verifiedEmail,\n\t\t\tname: user.name,\n\t\t\tenrolledNamespaces: user.enrolledNamespaces,\n\t\t\townedNamespaces: user.ownedNamespaces,\n\t\t\torganization: user.organization,\n\t\t\twriteAccess: user.writeAccess,\n\t\t\tadministrator: user.administrator,\n\t\t\tlessonData: user.lessonData,\n\t\t\tpicture: user.picture,\n\t\t\tcreatedAt: user.createdAt,\n\t\t\tupdatedAt: user.updatedAt,\n\t\t\tscore: user.score,\n\t\t\tspentTime: user.spentTime,\n\t\t\tlicensed: user.licensed,\n\t\t\tcustomFields: user.customFields,\n\t\t\tavailableCustomFields: user.availableCustomFields,\n\t\t\ttwoFactorAuth: user.twoFactorAuth\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has logged-in and a JSON web token has been received.\n *\n * @param {Object} options - function options\n * @param {string} options.token - JSON web token\n * @param {string} options.id - user id\n * @returns {Object} action\n */\nexport function receivedToken({ token, id }) {\n\treturn {\n\t\ttype: RECEIVED_TOKEN,\n\t\tpayload: {\n\t\t\ttoken,\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n* Returns an action signaling that a request for a two-factor authentication token has been made.\n*\n* @param {Object} options - function options\n* @param {string} options.email - user email\n* @param {string} options.password - user password\n* @returns {Object} action\n*/\nexport function requestTFA({ email, password }) {\n\treturn {\n\t\ttype: REQUEST_TFA,\n\t\tpayload: {\n\t\t\temail,\n\t\t\tpassword\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been logged-out.\n *\n * @returns {Object} action\n */\nexport function loggedOut() {\n\treturn {\n\t\ttype: LOGGED_OUT\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @returns {Object} action\n */\nexport function authenticated() {\n\treturn {\n\t\ttype: AUTHENTICATED\n\t};\n}\n\n/**\n * Returns an action signaling that the user's picture has been updated.\n *\n * @param {Object} picture - user picture\n * @returns {Object} action\n */\nexport function updateUserPicture( picture ) {\n\treturn {\n\t\ttype: USER_PICTURE_MODIFIED,\n\t\tpayload: {\n\t\t\tpicture\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user's name or organization has been updated.\n *\n * @param {Object} user - user object\n * @param {string} user.name - user name\n * @param {string} user.organization - user organization\n * @returns {Object} action\n */\nexport const updatedUser = ({ name, organization }) => {\n\treturn {\n\t\ttype: USER_UPDATED,\n\t\tpayload: {\n\t\t\tname,\n\t\t\torganization\n\t\t}\n\t};\n};\n\n/**\n * Returns an action signaling that a user has been updated by an administrator.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport const updatedUserByAdmin = ( user ) => {\n\treturn {\n\t\ttype: USER_UPDATED_BY_ADMIN,\n\t\tpayload: user\n\t};\n};\n\n/**\n * Makes a GET request to the server to retrieve list of users.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getUsers = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_users' );\n\t\tdispatch({\n\t\t\ttype: GET_USERS,\n\t\t\tpayload: {\n\t\t\t\tusers: res.data.users\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve list of users with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve list of users\n */\nexport const getUsersInjector = dispatch => {\n\treturn async () => {\n\t\tawait getUsers( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to impersonate a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n * @param {string} options.password - user password\n */\nexport const impersonateUser = async ( dispatch, { id, password }) => {\n\tdebug( 'Impersonating user with id '+id );\n\ttry {\n\t\tconst res = await axios.post( server+'/impersonate', { id, password });\n\t\tconst user = await fetchCredentials( dispatch, {\n\t\t\tid: res.data.id\n\t\t});\n\t\tif ( user ) {\n\t\t\tgetEnrollableCohorts( dispatch, user );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to impersonate a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to impersonate a user\n */\nexport const impersonateUserInjector = dispatch => {\n\treturn async ({ id, password }) => {\n\t\tawait impersonateUser( dispatch, { id, password } );\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n */\nexport const deleteUser = async ( dispatch, { id }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_user', { id });\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_USER,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to delete a user\n */\nexport const deleteUserInjector = dispatch => {\n\treturn async ({ id }) => {\n\t\tawait deleteUser( dispatch, { id } );\n\t};\n};\n\n/**\n * Makes POST requests to the server to upload a user's profile picture.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Object} options.avatarData - user avatar picture data\n * @param {Object} options.thumbnailData - user thumbnail picture data\n */\nexport const uploadProfilePic = async ( dispatch, { avatarData, thumbnailData }) => {\n\ttry {\n\t\tlet res = await axios.post( server+'/upload_profile_pic', avatarData );\n\t\tconst message = res.data.message;\n\t\tlet filename = res.data.filename;\n\t\tfilename = server + '/avatar/' + filename;\n\t\tdispatch( updateUserPicture( filename ) );\n\n\t\tres = await axios.post( server+'/upload_thumbnail_pic', thumbnailData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('profile-pic-title'),\n\t\t\tmessage,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make POST requests to the server to upload a user's profile picture with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST requests to the server to upload a user's profile picture\n */\nexport const uploadProfilePicInjector = ( dispatch ) => {\n\treturn async ({ avatarData, thumbnailData }) => {\n\t\tawait uploadProfilePic( dispatch, { avatarData, thumbnailData });\n\t};\n};\n\n/**\n * Makes a POST request to the server to authenticate a user as an instructor.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.writeAccessToken - write access token to enable instructor access\n * @returns {boolean} true if the user is now an instructor, false otherwise\n */\nexport const authenticate = async ( dispatch, { writeAccessToken }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/set_write_access', { token: writeAccessToken });\n\t\tdispatch( authenticated() );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message+' You can now create your own courses on ISLE and have access to the gallery of public lessons.',\n\t\t\tlevel: 'success',\n\t\t\tautoDismiss: 10\n\t\t});\n\t\treturn true;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn false;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to authenticate a user as an instructor with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to authenticate a user as an instructor\n */\nexport const authenticateInjector = ( dispatch ) => {\n\treturn async ({ writeAccessToken }) => {\n\t\tconst result = await authenticate( dispatch, { writeAccessToken });\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to trigger an email to be sent to the user to change their password.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.email - user email\n */\nexport const forgotPassword = async ( dispatch, { email }) => {\n\ttry {\n\t\tawait axios.get( server+'/forgot_password?'+qs.stringify({ email }) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: 'Check your email inbox for a link to choose a new password.',\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger an email to be sent to the user to change their password with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger an email to be sent to the user to change their password\n */\nexport const forgotPasswordInjector = ( dispatch ) => {\n\treturn async ({ email }) => {\n\t\tawait forgotPassword( dispatch, { email });\n\t};\n};\n\n/**\n * Makes a POST request to the server to change a user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @param {string} form.name - user name\n * @param {string} form.organization- user organization\n * @param {Object} form.customFields - user custom fields\n */\nexport const updateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_user', form );\n\t\tdispatch( updatedUser({\n\t\t\tname: form.name,\n\t\t\torganization: form.organization,\n\t\t\tcustomFields: form.customFields\n\t\t}) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to change a user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to change a user's data\n */\nexport const updateUserInjector = ( dispatch ) => {\n\treturn async ({ name, organization, password, customFields }) => {\n\t\tawait updateUser( dispatch, { name, organization, password, customFields });\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new user.\n *\n * @param {Object} form - form data\n * @returns {Promise} promise that resolves to the server response\n */\nexport const createUser = ( form ) => {\n\treturn axios.post( server+'/create_user', form );\n};\n\n/**\n * Makes a POST request to the server to login a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {Object} server response\n */\nexport const handleLogin = async ( dispatch, form ) => {\n\tconst res = await axios.post( server+'/login', form );\n\tif ( res.data.message === 'finish-login-via-tfa' ) {\n\t\tdispatch( requestTFA( res.data ) );\n\t} else {\n\t\tdispatch( receivedToken( res.data ) );\n\t}\n\treturn res;\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user\n */\nexport const handleLoginInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLogin( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to login a user with a TFA code.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {(Object|Error)} server response or an error if the TFA code is invalid\n */\nexport const handleLoginTFA = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/login_tfa', form );\n\t\tdispatch( receivedToken( res.data ) );\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a TFA code with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user with a TFA code\n */\nexport const handleLoginTFAInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLoginTFA( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Restores a users' login session.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const restoreLogin = ( dispatch, user ) => {\n\tdispatch( loggedIn( user ) );\n};\n\n/**\n * Returns a function to restore a users' login session with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to restore a users' login session\n */\nexport const restoreLoginInjector = ( dispatch ) => {\n\treturn ( user ) => {\n\t\trestoreLogin( dispatch, user );\n\t};\n};\n\n/**\n * Logs a user out.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const logout = ( dispatch ) => {\n\tlocalStorage.removeItem( 'ISLE_USER_'+server );\n\tdispatch( loggedOut() );\n};\n\n/**\n * Returns a function to log a user out with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to log a user out\n */\nexport const logoutInjector = ( dispatch ) => {\n\treturn () => {\n\t\tlogout( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to the server to check whether a user's locally stored data has to be updated.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const userUpdateCheck = async ( dispatch, user ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/user_update_check?'+qs.stringify({\n\t\t\tupdatedAt: user.updatedAt\n\t\t}) );\n\t\tdebug( 'Received response: '+res.data );\n\t\tif ( !res.data.hasMostRecent ) {\n\t\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\t\tid: user.id\n\t\t\t});\n\t\t\tlet newUser = res.data;\n\t\t\tif ( newUser.picture ) {\n\t\t\t\tnewUser.picture = server + '/avatar/' + newUser.picture;\n\t\t\t}\n\t\t\tnewUser = {\n\t\t\t\tid: user.id,\n\t\t\t\ttoken: user.token,\n\t\t\t\t...newUser\n\t\t\t};\n\t\t\tdebug( 'Updated user data...' );\n\t\t\tdispatch( loggedIn( newUser ) );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to check whether a user's locally stored data has to be updated with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to check whether a user's locally stored data has to be updated\n */\nexport const userUpdateCheckInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait userUpdateCheck( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server to confirm a user's email address.\n *\n * @param {string} token - user token\n * @returns {string} server response message or error message\n */\nexport const confirmEmail = async ( token ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/confirm_email', {\n\t\t\ttoken\n\t\t});\n\t\treturn res.data.message;\n\t} catch ( err ) {\n\t\tif ( err.response && err.response.data ) {\n\t\t\treturn err.response.data;\n\t\t}\n\t\treturn err.message;\n\t}\n};\n\n/**\n * Make a POST request to the server to trigger a new email for confirming a user's email address.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const resendConfirmEmail = async ( dispatch, user ) => {\n\ttry {\n\t\tawait axios.post( server+'/resend_confirm_email' );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: 'Email sent',\n\t\t\tmessage: i18next.t('common:verification-email-sent'),\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger a new email for confirming a user's email address with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger a new email for confirming a user's email address\n */\nexport const resendConfirmEmailInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait resendConfirmEmail( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server by an administrator to update an arbitrary user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form object with new user data\n */\nexport const adminUpdateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/admin_update_user', form );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedUserByAdmin( form ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server by an administrator to update an arbitrary user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server by an administrator to update an arbitrary user's data\n */\nexport const adminUpdateUserInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tawait adminUpdateUser( dispatch, form );\n\t};\n};\n","/**\n* The MIT License (MIT)\n*\n* Copyright (c) 2015 Tobias Ahlin\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy of\n* this software and associated documentation files (the \"Software\"), to deal in\n* the Software without restriction, including without limitation the rights to\n* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n* the Software, and to permit persons to whom the Software is furnished to do so,\n* subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// MODULES //\n\nimport React from 'react';\n\n\n// MAIN //\n\nconst Spinner = () => {\n\treturn ( <div className=\"sk-cube-grid\">\n\t\t<div className=\"sk-cube sk-cube1\"></div>\n\t\t<div className=\"sk-cube sk-cube2\"></div>\n\t\t<div className=\"sk-cube sk-cube3\"></div>\n\t\t<div className=\"sk-cube sk-cube4\"></div>\n\t\t<div className=\"sk-cube sk-cube5\"></div>\n\t\t<div className=\"sk-cube sk-cube6\"></div>\n\t\t<div className=\"sk-cube sk-cube7\"></div>\n\t\t<div className=\"sk-cube sk-cube8\"></div>\n\t\t<div className=\"sk-cube sk-cube9\"></div>\n\t</div> );\n};\n\n\n// EXPORTS //\n\nexport default Spinner;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport Spinner from './spinner.js';\n\n\n// MAIN //\n\nfunction asyncComponent( importComponent ) {\n\tclass AsyncComponent extends Component {\n\t\tconstructor( props ) {\n\t\t\tsuper( props );\n\n\t\t\tthis.state = {\n\t\t\t\tcomponent: null\n\t\t\t};\n\t\t}\n\n\t\tasync componentDidMount() {\n\t\t\tconst { default: component } = await importComponent();\n\t\t\tthis.setState({ // eslint-disable-line react/no-did-mount-set-state\n\t\t\t\tcomponent: component\n\t\t\t});\n\t\t}\n\n\t\trender() {\n\t\t\tconst C = this.state.component;\n\t\t\treturn C ? <C {...this.props} /> : <Spinner />;\n\t\t}\n\t}\n\treturn AsyncComponent;\n}\n\n\n// EXPORTS //\n\nexport default asyncComponent;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// EXPORTS //\n\nexport const ADD_ENROLLED_NAMESPACE = 'ADD_ENROLLED_NAMESPACE';\nexport const ADD_ERROR_NOTIFICATION = 'ADD_ERROR_NOTIFICATION';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const APPEND_CREATED_NAMESPACE = 'APPEND_CREATED_NAMESPACE';\nexport const AUTHENTICATED = 'AUTHENTICATED';\nexport const CHANGED_NAMESPACE = 'CHANGED_NAMESPACE';\nexport const CREATED_ANNOUNCEMENT = 'CREATED_ANNOUNCEMENT';\nexport const CREATED_CUSTOM_FIELD = 'CREATED_CUSTOM_FIELD';\nexport const CREATED_BACKUP = 'CREATED_BACKUP';\nexport const CREATED_ROLE = 'CREATED_ROLE';\nexport const CREATED_TICKET = 'CREATED_TICKET';\nexport const DELETED_BACKUP = 'DELETED_BACKUP';\nexport const DELETED_CURRENT_NAMESPACE = 'DELETED_CURRENT_NAMESPACE';\nexport const DELETED_CUSTOM_FIELD = 'DELETED_CUSTOM_FIELD';\nexport const DELETED_EVENT = 'DELETED_EVENT';\nexport const DELETED_FILE = 'DELETED_FILE';\nexport const DELETED_LESSON = 'DELETED_LESSON';\nexport const DELETED_ROLE = 'DELETED_ROLE';\nexport const DELETED_TICKET = 'DELETED_TICKET';\nexport const DELETED_USER = 'DELETED_USER';\nexport const DELETED_ANNOUNCEMENT = 'DELETED_ANNOUNCEMENT';\nexport const DISABLED_TFA = 'DISABLED_TFA';\nexport const EDITED_ANNOUNCEMENT = 'EDITED_ANNOUNCEMENT';\nexport const ENABLED_TFA = 'ENABLED_TFA';\nexport const FIELD_POSITION_DECREMENTED = 'FIELD_POSITION_DECREMENTED';\nexport const FIELD_POSITION_INCREMENTED = 'FIELD_POSITION_INCREMENTED';\nexport const GET_ALL_COHORTS = 'GET_ALL_COHORTS';\nexport const GET_ALL_FILES = 'GET_ALL_FILES';\nexport const GET_ALL_LESSONS = 'GET_ALL_LESSONS';\nexport const GET_ALL_NAMESPACES = 'GET_ALL_NAMESPACES';\nexport const GET_ALL_ROLES = 'GET_ALL_ROLES';\nexport const GET_BACKUPS = 'GET_BACKUPS';\nexport const GET_EVENTS = 'GET_EVENTS';\nexport const GET_ALL_TICKETS = 'GET_ALL_TICKETS';\nexport const GET_COURSE_TICKETS = 'GET_COURSE_TICKETS';\nexport const GET_CUSTOM_FIELDS = 'GET_CUSTOM_FIELDS';\nexport const GET_CUSTOM_TRANSLATIONS = 'GET_CUSTOM_TRANSLATIONS';\nexport const GET_OVERVIEW_STATISTICS = 'GET_OVERVIEW_STATISTICS';\nexport const GET_HISTORICAL_OVERVIEW_STATISTICS = 'GET_HISTORICAL_OVERVIEW_STATISTICS';\nexport const GET_REQUEST_STATISTICS = 'GET_REQUEST_STATISTICS';\nexport const GET_ROOMS = 'GET_ROOMS';\nexport const GET_SETTINGS = 'GET_SETTINGS';\nexport const GET_SETTINGS_PUBLIC = 'GET_SETTINGS_PUBLIC';\nexport const GET_TEMPLATE_LESSONS = 'GET_TEMPLATE_LESSONS';\nexport const GET_TFA_QRCODE = 'GET_TFA_QRCODE';\nexport const GET_USERS = 'GET_USERS';\nexport const GET_USER_TICKETS = 'GET_USER_TICKETS';\nexport const LESSON_ORDER = 'LESSON_ORDER';\nexport const LESSON_ORDER_DIRECTION = 'LESSON_ORDER_DIRECTION';\nexport const RECEIVED_FILES = 'RECEIVED_FILES';\nexport const RECEIVED_LICENSE = 'RECEIVED_LICENSE';\nexport const RECEIVED_NAMESPACE_FILES = 'RECEIVED_NAMESPACE_FILES';\nexport const RECEIVED_TOKEN = 'RECEIVED_TOKEN';\nexport const REMOVED_LICENSE = 'REMOVED_LICENSE';\nexport const REQUEST_TFA = 'REQUEST_TFA';\nexport const RETRIEVED_BADGES = 'RETRIEVED_BADGES';\nexport const RETRIEVED_COHORTS = 'RETRIEVED_COHORTS';\nexport const RETRIEVED_LESSONS = 'RETRIEVED_LESSONS';\nexport const RETRIEVED_PUBLIC_LESSONS = 'RETRIEVED_PUBLIC_LESSONS';\nexport const SEARCH_PHRASE_SET = 'SEARCH_PHRASE_SET';\nexport const TICKET_CLOSED = 'TICKET_CLOSED';\nexport const TICKET_OPENED = 'TICKET_OPENED';\nexport const TICKET_MESSAGE_ADDED = 'TICKET_MESSAGE_ADDED';\nexport const TICKET_PRIORITY_UPDATED = 'TICKET_PRIORITY_UPDATED';\nexport const TRIGGERED_EVENT = 'TRIGGERED_EVENT';\nexport const UPDATED_LESSON = 'UPDATED_LESSON';\nexport const UPDATED_OWNED_NAMESPACE = 'UPDATED_OWNED_NAMESPACE';\nexport const LOGGED_IN = 'LOGGED_IN';\nexport const LOGGED_OUT = 'LOGGED_OUT';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const USER_UPDATED_BY_ADMIN = 'USER_UPDATED_BY_ADMIN';\nexport const USER_PICTURE_MODIFIED = 'USER_PICTURE_MODIFIED';\nexport const USER_RECEIVED_BADGES = 'USER_RECEIVED_BADGES';\nexport const UPDATED_CUSTOM_FIELD = 'UPDATED_CUSTOM_FIELD';\nexport const UPDATED_ROLE = 'UPDATED_ROLE';\nexport const UPDATED_SETTINGS = 'UPDATED_SETTINGS';\nexport const UPDATED_STUDENT_PROGRESS = 'UPDATED_STUDENT_PROGRESS';\nexport const UPDATED_TRANSLATIONS = 'UPDATED_TRANSLATIONS';\nexport const RETRIEVED_ENROLLABLE_COHORTS = 'RETRIEVED_ENROLLABLE_COHORTS';\n","\n/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport serverJSON from './../../config/server.json';\n\n\n// VARIABLES //\n\nexport const REMOTE = serverJSON.publicUrl;\nexport const LOCAL = 'http://localhost:17777';\n\n\n// MAIN //\n\nlet server;\nif ( process.env.NODE_ENV === 'development' ) { // eslint-disable-line no-process-env\n\tserver = process.env.REACT_APP_SERVER === 'remote' ? REMOTE : LOCAL; // eslint-disable-line no-process-env\n} else {\n\tserver = window.location.origin;\n}\n\n\n// EXPORTS //\n\nexport default server;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport i18next from './i18n';\nimport { store } from './../index.js';\n\n\n// MAIN //\n\naxios.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\treturn config;\n});\n\nconst namespaceClient = axios.create();\nnamespaceClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'namespace';\n\n\tconst target = config.data.namespaceID || config.params.namespaceID || state.namespace._id;\n\tconfig.headers[ 'X-Context-Target' ] = target;\n\treturn config;\n});\n\nconst programClient = axios.create();\n\nconst lessonClient = axios.create();\nlessonClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'lesson';\n\n\tlet target = config.data.lessonID || config.params.lessonID;\n\ttarget += state.namespace._id;\n\tconfig.headers[ 'X-Context-Target' ] = target;\n\n\treturn config;\n});\n\nconst globalClient = axios.create();\nglobalClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst token = store.getState().user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'global';\n\tconfig.headers[ 'X-Context-Target' ] = true;\n\treturn config;\n});\n\n\n// EXPORTS //\n\nexport const namespaceAxios = namespaceClient;\nexport const programAxios = programClient;\nexport const lessonAxios = lessonClient;\nexport const globalAxios = globalClient;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend/cjs';\nimport Backend from 'i18next-chained-backend';\nimport server from 'constants/server';\nimport { store } from './../index.js';\n\n\n// MAIN //\n\ni18n.use( Backend )\n\t.use( LanguageDetector )\n\t.use( initReactI18next )\n\t.init({\n\t\tdebug: false,\n\t\tlng: localStorage.getItem( 'i18nextLng' ) || 'en',\n\t\tfallbackLng: 'en',\n\t\tbackend: {\n\t\t\tbackends: [\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi\n\t\t\t],\n\t\t\tbackendOptions: [\n\t\t\t\t{\n\t\t\t\t\tloadPath: './locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: server+'/locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: 'https://cdn.jsdelivr.net/npm/@isle-project/locales/components/{{ns}}/{{lng}}.json'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\treact: {\n\t\t\tuseSuspense: false\n\t\t},\n\t\tinterpolation: {\n\t\t\tescapeValue: false // Not needed for React!\n\t\t}\n\t});\n\n\ni18n.store.on( 'added', function onLoaded( lng, ns ) {\n\tconst state = store.getState();\n\tconst translations = state.translations;\n\tconst custom = translations[ lng ][ ns ];\n\tif ( custom ) {\n\t\tconst keys = Object.keys( custom );\n\t\tif ( !i18n.store.data[ lng ][ ns+'_ORIGINAL' ] ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ] = {};\n\t\t}\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ][ keys[ i ] ] = i18n.store.data[ lng ][ ns ][ keys[ i ] ];\n\t\t\ti18n.store.data[ lng ][ ns ][ keys[ i ] ] = custom[ keys[ i ] ];\n\t\t}\n\t}\n});\n\n\n// EXPORTS //\n\nexport default i18n;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tcohorts: [],\n\tevents: [],\n\tfiles: [],\n\tlessons: [],\n\tlessonsMap: {},\n\tnamespaces: [],\n\troles: [],\n\trooms: [],\n\ttickets: [],\n\tusers: [],\n\tstatistics: {},\n\trequestStatistics: [],\n\thistoricalStatistics: [],\n\tbackups: [],\n\tlicense: null,\n\tsettings: {}\n};\n\n\n// EXPORTS //\n\nexport default function admin( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.GET_USERS: {\n\t\tlet users = action.payload.users;\n\t\tusers = users.map( x => {\n\t\t\tconst keys = objectKeys( x.lessonData );\n\t\t\tlet chatMessages = 0;\n\t\t\tlet nActions = 0;\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tconst key = keys[ i ];\n\t\t\t\tchatMessages += x.lessonData[ key ].chatMessages;\n\t\t\t\tconst types = objectKeys( x.lessonData[ key ].actionTypes );\n\t\t\t\tfor ( let j = 0; j < types.length; j++ ) {\n\t\t\t\t\tnActions += x.lessonData[ key ].actionTypes[ types[ j ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tx.nActions = nActions;\n\t\t\tx.chatMessages = chatMessages;\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.GET_ALL_COHORTS: {\n\t\tlet cohorts = action.payload.cohorts;\n\t\tcohorts = cohorts.map( x => {\n\t\t\tx.startDate = new Date( x.startDate );\n\t\t\tx.endDate = new Date( x.endDate );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tcohorts\n\t\t});\n\t}\n\tcase types.GET_ALL_FILES: {\n\t\tlet files = action.payload.files;\n\t\tfiles = files.map( x => {\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles\n\t\t});\n\t}\n\tcase types.DELETED_FILE: {\n\t\tconst files = state.files.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles\n\t\t});\n\t}\n\tcase types.GET_ALL_LESSONS: {\n\t\tlet lessons = action.payload.lessons;\n\t\tconst lessonsMap = { ...state.lessonsMap };\n\t\tlessons = lessons.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\tlessonsMap[ x._id ] = x.title;\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons,\n\t\t\tlessonsMap\n\t\t});\n\t}\n\tcase types.GET_ALL_NAMESPACES: {\n\t\tlet namespaces = action.payload.namespaces;\n\t\tnamespaces = namespaces.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tnamespaces\n\t\t});\n\t}\n\tcase types.GET_EVENTS: {\n\t\tlet events = action.payload.events;\n\t\tevents = events.map( x => {\n\t\t\tx.time = new Date( x.time );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.GET_ROOMS: {\n\t\tlet rooms = action.payload.rooms;\n\t\trooms = rooms.map( x => {\n\t\t\tx.startTime = new Date( x.startTime );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\trooms\n\t\t});\n\t}\n\tcase types.DELETED_EVENT: {\n\t\tconst events = state.events.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.DELETED_USER: {\n\t\tconst users = state.users.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.TRIGGERED_EVENT: {\n\t\tconst events = state.events.slice();\n\t\tfor ( let i = 0; i < events.length; i++ ) {\n\t\t\tif ( events[ i ]._id === action.payload.id ) {\n\t\t\t\tevents[ i ].done = true;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.USER_UPDATED_BY_ADMIN: {\n\t\tlet users = state.users.slice();\n\t\tfor ( let i = 0; i < users.length; i++ ) {\n\t\t\tconst user = users[ i ];\n\t\t\tif ( user._id === action.payload.id ) {\n\t\t\t\tconst keys = objectKeys( action.payload );\n\t\t\t\tfor ( let j = 0; j < keys.length; j++ ) {\n\t\t\t\t\tconst key = keys[ j ];\n\t\t\t\t\tif ( key !== 'id' ) {\n\t\t\t\t\t\tuser[ key ] = action.payload[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.GET_OVERVIEW_STATISTICS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tstatistics: action.payload.statistics\n\t\t});\n\t}\n\tcase types.GET_ALL_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.DELETED_TICKET: {\n\t\tconst tickets = state.tickets.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_PRIORITY_UPDATED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.priority = action.payload.priority;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.RECEIVED_LICENSE:\n\t\treturn Object.assign({}, state, {\n\t\t\tlicense: action.payload.license\n\t\t});\n\tcase types.REMOVED_LICENSE:\n\t\treturn Object.assign({}, state, {\n\t\t\tlicense: null\n\t\t});\n\tcase types.GET_HISTORICAL_OVERVIEW_STATISTICS: {\n\t\tconst statistics = action.payload.statistics.map( x => {\n\t\t\tx.createdAt = x.createdAt.substring( 0, x.createdAt.indexOf( 'T' ) );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\thistoricalStatistics: statistics\n\t\t});\n\t}\n\tcase types.GET_REQUEST_STATISTICS: {\n\t\treturn Object.assign({}, state, {\n\t\t\trequestStatistics: action.payload.statistics\n\t\t});\n\t}\n\tcase types.GET_BACKUPS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups: action.payload.backups\n\t\t});\n\t}\n\tcase types.CREATED_BACKUP: {\n\t\tconst backups = state.backups.slice();\n\t\tbackups.push( action.payload.backup );\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups\n\t\t});\n\t}\n\tcase types.DELETED_BACKUP: {\n\t\tconst backups = state.backups.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups\n\t\t});\n\t}\n\tcase types.GET_SETTINGS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tsettings: action.payload\n\t\t});\n\t}\n\tcase types.UPDATED_SETTINGS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tsettings: action.payload.settings\n\t\t});\n\t}\n\tcase types.GET_ALL_ROLES: {\n\t\tconst roles = action.payload.roles;\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.CREATED_ROLE: {\n\t\tconst roles = state.roles.slice();\n\t\troles.push( action.payload.role );\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.DELETED_ROLE: {\n\t\tconst roles = state.roles.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.UPDATED_ROLE: {\n\t\tconst { role } = action.payload;\n\t\tconst roles = state.roles.map( x => {\n\t\t\tif ( role._id === x._id ) {\n\t\t\t\treturn role;\n\t\t\t}\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// EXPORTS //\n\nexport default function badges( state = null, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_BADGES: {\n\t\treturn action.payload.badges;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\nimport isArray from '@stdlib/assert/is-array';\nimport isRegExpString from '@stdlib/assert/is-regexp-string';\nimport reFromString from '@stdlib/utils/regexp-from-string';\nimport contains from '@stdlib/assert/contains';\n\n\n// FUNCTIONS //\n\nfunction titleCompare( a, b ) {\n\treturn ( '' + a.title ).localeCompare( b.title );\n}\n\n\n// EXPORTS //\n\nexport default function cohorts( state = null, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_ENROLLABLE_COHORTS: {\n\t\tlet cohorts = action.payload.cohorts;\n\t\tif ( !isArray( cohorts ) ) {\n\t\t\treturn cohorts;\n\t\t}\n\t\tcohorts = cohorts.filter( elem => {\n\t\t\tlet emailFilter = elem.emailFilter || '';\n\t\t\tif ( isRegExpString( emailFilter ) ) {\n\t\t\t\temailFilter = reFromString( emailFilter );\n\t\t\t\treturn emailFilter.test( action.payload.user.email );\n\t\t\t}\n\t\t\treturn contains( action.payload.user.email, emailFilter || '' );\n\t\t});\n\t\treturn cohorts.sort( titleCompare );\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport * as types from 'constants/action_types.js';\n\n\n// FUNCTIONS //\n\nfunction titleCompare( a, b ) {\n\treturn ( '' + a.title ).localeCompare( b.title );\n}\n\n\n// VARIABLES //\n\nconst initialState = {\n\t_id: null,\n\ttitle: '',\n\tdescription: '',\n\towners: '',\n\tenableTicketing: false,\n\tannouncements: [],\n\tlessons: [],\n\tcohorts: [],\n\tfiles: [],\n\townerFiles: [],\n\ttickets: []\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.CHANGED_NAMESPACE: {\n\t\treturn Object.assign({}, state, {\n\t\t\t_id: action.payload._id,\n\t\t\ttitle: action.payload.title,\n\t\t\tdescription: action.payload.description,\n\t\t\tannouncements: action.payload.announcements,\n\t\t\tenableTicketing: action.payload.enableTicketing,\n\t\t\towners: action.payload.owners,\n\t\t\tcohorts: action.payload.cohorts\n\t\t});\n\t}\n\tcase types.DELETED_CURRENT_NAMESPACE: {\n\t\treturn initialState;\n\t}\n\tcase types.UPDATED_STUDENT_PROGRESS: {\n\t\tconst { cohort, email, lessonID, progress } = action.payload;\n\t\tconst cohorts = state.cohorts;\n\t\tfor ( let i = 0; i < cohorts.length; i++ ) {\n\t\t\tif ( cohorts[ i ].title === cohort ) {\n\t\t\t\tconst members = cohorts[ i ].members;\n\t\t\t\tfor ( let j = 0; j < members.length; j++ ) {\n\t\t\t\t\tif ( members[ j ].email === email ) {\n\t\t\t\t\t\tconst member = members[ j ];\n\t\t\t\t\t\tmember.lessonData[ lessonID ].progress = progress / 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, { cohorts });\n\t}\n\tcase types.RETRIEVED_LESSONS: {\n\t\tif ( action.payload.namespaceName === state.title ) {\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tlessons: action.payload.lessons\n\t\t\t});\n\t\t}\n\t\treturn state;\n\t}\n\tcase types.RETRIEVED_COHORTS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tcohorts: action.payload.cohorts.sort( titleCompare )\n\t\t});\n\t}\n\tcase types.DELETED_LESSON: {\n\t\tlet lessons = state.lessons.slice();\n\t\tlessons = lessons.filter( x => x.title !== action.payload.lessonName );\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tcase types.UPDATED_LESSON: {\n\t\tlet lessons = state.lessons.slice();\n\t\tconst { props, lessonName } = action.payload;\n\t\tfor ( let i = 0; i < lessons.length; i++ ) {\n\t\t\tif ( lessons[ i ].title === lessonName ) {\n\t\t\t\tfor ( let key in props ) {\n\t\t\t\t\tif ( hasOwnProp( props, key ) ) {\n\t\t\t\t\t\tlessons[ i ][ key ] = props[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tcase types.RECEIVED_NAMESPACE_FILES: {\n\t\tlet lessons = state.lessons;\n\t\tlet files = action.payload.files;\n\t\tfiles = files.map( file => {\n\t\t\tfile.updatedAt = new Date( file.updatedAt );\n\t\t\tfor ( let i = 0; i < lessons.length; i++ ) {\n\t\t\t\tif ( lessons[ i ]._id === file.lesson ) {\n\t\t\t\t\tfile.lesson = lessons[ i ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn file;\n\t\t});\n\t\tconst newState = {};\n\t\tif ( action.payload.owner ) {\n\t\t\tnewState.ownerFiles = files;\n\t\t} else {\n\t\t\tnewState.files = files;\n\t\t}\n\t\treturn Object.assign({}, state, newState );\n\t}\n\tcase types.EDITED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tfor (let i = 0; i < announcements.length; i++) {\n\t\t\tif (announcements[i].createdAt === action.payload.announcement.createdAt) {\n\t\t\t\tannouncements[i] = action.payload.announcement;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.CREATED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tannouncements.unshift(action.payload.announcement);\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.DELETED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tannouncements.splice(action.payload.index, 1);\n\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.GET_COURSE_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_PRIORITY_UPDATED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.priority = action.payload.priority;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tmessage: '',\n\tlevel: '',\n\tposition: 'tl',\n\tchildren: null,\n\ttime: null,\n\tautoDismiss: 5\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.ADD_NOTIFICATION: {\n\t\treturn Object.assign({}, initialState, {\n\t\t\t...action.payload,\n\t\t\ttime: new Date()\n\t\t});\n\t}\n\tcase types.ADD_ERROR_NOTIFICATION: {\n\t\treturn {\n\t\t\ttitle: 'Error encountered',\n\t\t\tmessage: action.payload,\n\t\t\tlevel: 'error',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5,\n\t\t\ttime: new Date()\n\t\t};\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {};\n\n\n// EXPORTS //\n\nexport default function translations( state = initialState, action ) {\n\tswitch ( action.type ) {\n\t\tcase types.GET_CUSTOM_TRANSLATIONS: {\n\t\t\treturn Object.assign( {}, state, action.payload );\n\t\t}\n\t\tcase types.UPDATED_TRANSLATIONS: {\n\t\t\treturn Object.assign( {}, state, action.payload.translations );\n\t\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {};\n\n\n// EXPORTS //\n\nexport default function settings( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.GET_SETTINGS_PUBLIC: {\n\t\treturn Object.assign({}, state, action.payload );\n\t}\n\tcase types.UPDATED_SETTINGS: {\n\t\treturn Object.assign({}, state, action.payload.settings );\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\nimport server from 'constants/server';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tlessons: null\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_PUBLIC_LESSONS: {\n\t\tlet lessons = action.payload.lessons;\n\t\tlessons = lessons.map( (lesson, index) => {\n\t\t\tlesson.colorIndex = index % 20;\n\t\t\tlesson.url = server+'/'+lesson.namespace+'/'+lesson.title;\n\t\t\tif ( !lesson.createdAt ) {\n\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\n\t\t\t}\n\t\t\tif ( !lesson.updatedAt ) {\n\t\t\t\tlesson.updatedAt = lesson.createdAt;\n\t\t\t}\n\t\t\treturn lesson;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport lowercase from '@stdlib/string/lowercase';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tphrase: null,\n\ttype: 'sequentially',\n\tdirection: 'ascending'\n};\n\n\n// EXPORTS //\n\nexport default function search( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.SEARCH_PHRASE_SET: {\n\t\treturn Object.assign({}, state, {\n\t\t\tphrase: lowercase( action.payload.phrase )\n\t\t});\n\t}\n\tcase types.LESSON_ORDER: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttype: action.payload.type\n\t\t});\n\t}\n\tcase types.LESSON_ORDER_DIRECTION: {\n\t\treturn Object.assign({}, state, {\n\t\t\tdirection: action.payload.direction\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tcase LOCATION_CHANGE: {\n\t\treturn initialState;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport groupBy from '@stdlib/utils/group-by';\nimport copy from '@stdlib/utils/copy';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tloggedIn: false,\n\temail: '',\n\tverifiedEmail: false,\n\tname: '',\n\torganization: '',\n\twriteAccess: false,\n\tadministrator: false,\n\tenrolledNamespaces: [],\n\townedNamespaces: [],\n\tlessonData: {},\n\tpicture: null,\n\tcreatedAt: null,\n\tupdatedAt: null,\n\tscore: null,\n\tspentTime: null,\n\tfiles: null,\n\tbadges: null,\n\tid: null,\n\ttoken: null,\n\ttickets: [],\n\tlicensed: false,\n\tcustomFields: null,\n\tavailableCustomFields: [],\n\ttwoFactorAuth: false,\n\trequestTFA: null,\n\ttemplateLessons: []\n};\n\n\n// FUNCTIONS //\n\nfunction getNamespace( namespaces, name ) {\n\tfor ( let i= 0; i < namespaces.length; i++ ) {\n\t\tif ( namespaces[i].title === name ) {\n\t\t\treturn namespaces[i];\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default function user( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.RECEIVED_TOKEN: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttoken: action.payload.token,\n\t\t\tid: action.payload.id\n\t\t});\n\t}\n\tcase types.LOGGED_IN: {\n\t\treturn Object.assign({}, state, {\n\t\t\temail: action.payload.email,\n\t\t\tverifiedEmail: action.payload.verifiedEmail,\n\t\t\tname: action.payload.name,\n\t\t\tenrolledNamespaces: action.payload.enrolledNamespaces,\n\t\t\townedNamespaces: action.payload.ownedNamespaces,\n\t\t\torganization: action.payload.organization,\n\t\t\twriteAccess: action.payload.writeAccess,\n\t\t\tadministrator: action.payload.administrator,\n\t\t\tpicture: action.payload.picture,\n\t\t\tlessonData: action.payload.lessonData,\n\t\t\tcreatedAt: action.payload.createdAt,\n\t\t\tupdatedAt: action.payload.updatedAt,\n\t\t\tscore: action.payload.score,\n\t\t\tspentTime: action.payload.spentTime,\n\t\t\tlicensed: action.payload.licensed,\n\t\t\tcustomFields: action.payload.customFields,\n\t\t\tavailableCustomFields: action.payload.availableCustomFields,\n\t\t\ttwoFactorAuth: action.payload.twoFactorAuth,\n\t\t\tloggedIn: true\n\t\t});\n\t}\n\tcase types.AUTHENTICATED: {\n\t\treturn Object.assign({}, state, {\n\t\t\twriteAccess: true\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tcase types.USER_UPDATED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tname: action.payload.name,\n\t\t\torganization: action.payload.organization,\n\t\t\tcustomFields: action.payload.customFields\n\t\t});\n\t}\n\tcase types.USER_PICTURE_MODIFIED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tpicture: action.payload.picture\n\t\t});\n\t}\n\tcase types.APPEND_CREATED_NAMESPACE: {\n\t\tconst arr = state.ownedNamespaces.slice();\n\t\tarr.push( action.payload.namespace );\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.DELETED_CURRENT_NAMESPACE: {\n\t\tconst arr = [];\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\n\t\t\tconst item = state.ownedNamespaces[ i ];\n\t\t\tif ( item._id !== action.payload.id ) {\n\t\t\t\tarr.push( item );\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.RETRIEVED_LESSONS: {\n\t\tconst arr = state.enrolledNamespaces.slice();\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\t\tconst course = arr[ i ];\n\t\t\tif ( course.title === action.payload.namespaceName ) {\n\t\t\t\tarr[ i ].lessons = action.payload.lessons;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces: arr\n\t\t});\n\t}\n\tcase types.UPDATED_OWNED_NAMESPACE: {\n\t\tconst arr = state.ownedNamespaces.slice();\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\t\tconst item = arr[ i ];\n\t\t\tif ( item._id === action.payload._id ) {\n\t\t\t\tarr[ i ] = action.payload;\n\t\t\t} else {\n\t\t\t\tarr[ i ] = item;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.ADD_ENROLLED_NAMESPACE: {\n\t\tconst arr = state.enrolledNamespaces.slice();\n\t\tarr.push( action.payload );\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces: arr\n\t\t});\n\t}\n\tcase types.CREATED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.unshift( action.payload.announcement );\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.unshift( action.payload.announcement );\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.EDITED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst announcement = action.payload.announcement;\n\t\tconst createdAt = announcement.createdAt;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\n\t\t\t\t\tns.announcements[ i ] = announcement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\n\t\t\t\t\tns.announcements[ i ] = announcement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.DELETED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.splice( action.payload.index, 1 );\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.splice( action.payload.index, 1 );\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.RECEIVED_FILES: {\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles: groupBy( action.payload.files, ( v ) => {\n\t\t\t\treturn v.namespace;\n\t\t\t})\n\t\t});\n\t}\n\tcase types.GET_USER_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.CREATED_TICKET: {\n\t\tconst tickets = state.tickets.slice();\n\t\ttickets.push({\n\t\t\t...action.payload,\n\t\t\tmessages: [],\n\t\t\tuser: {\n\t\t\t\tpicture: state.picture.substring( state.picture.lastIndexOf( '/' )+1 ),\n\t\t\t\tname: state.name,\n\t\t\t\temail: state.email\n\t\t\t}\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.USER_RECEIVED_BADGES: {\n\t\treturn Object.assign({}, state, {\n\t\t\tbadges: action.payload.badges\n\t\t});\n\t}\n\tcase types.GET_CUSTOM_FIELDS:\n\tcase types.FIELD_POSITION_DECREMENTED:\n\tcase types.FIELD_POSITION_INCREMENTED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields: action.payload.customFields\n\t\t});\n\t}\n\tcase types.DELETED_CUSTOM_FIELD: {\n\t\tconst fields = [];\n\t\tfor ( let i = 0; i < state.availableCustomFields.length; i++ ) {\n\t\t\tconst item = state.availableCustomFields[ i ];\n\t\t\tif ( item._id !== action.payload.id ) {\n\t\t\t\tfields.push( item );\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields: fields\n\t\t});\n\t}\n\tcase types.CREATED_CUSTOM_FIELD: {\n\t\tconst availableCustomFields = state.availableCustomFields.slice();\n\t\tavailableCustomFields.push({\n\t\t\t...action.payload\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields\n\t\t});\n\t}\n\tcase types.ENABLED_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttwoFactorAuth: action.payload.verified\n\t\t});\n\t}\n\tcase types.DISABLED_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttwoFactorAuth: !action.payload.disabled\n\t\t});\n\t}\n\tcase types.REQUEST_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\trequestTFA: {\n\t\t\t\temail: action.payload.email,\n\t\t\t\tpassword: action.payload.password\n\t\t\t}\n\t\t});\n\t}\n\tcase types.GET_TEMPLATE_LESSONS: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttemplateLessons: action.payload.templateLessons\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport admin from './admin';\nimport badges from './badges';\nimport cohorts from './cohorts';\nimport namespace from './namespace';\nimport notification from './notification';\nimport translations from './translations';\nimport settings from './settings';\nimport gallery from './gallery';\nimport search from './search';\nimport user from './user';\n\n\n// EXPORTS //\n\nexport default ( history ) => combineReducers({\n\tadmin,\n\tbadges,\n\tcohorts,\n\tgallery,\n\tnamespace,\n\tnotification,\n\trouter: connectRouter( history ),\n\tsearch,\n\tsettings,\n\ttranslations,\n\tuser\n});\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotificationSystem from 'react-notification-system';\n\n\n// VARIABLES //\n\nconst style = {\n\tNotificationItem: {\n\t\tDefaultStyle: {\n\t\t\tmargin: '20px 2px 2px 1px'\n\t\t},\n\t\tinfo: {\n\t\t\tcolor: 'black',\n\t\t\tbackgroundColor: 'white',\n\t\t\tboxShadow: '0 0 4px darkslategray',\n\t\t\theight: '400px',\n\t\t\twidth: '400px',\n\t\t\tborderTop: 'none'\n\t\t}\n\t}\n};\n\n\n// MAIN //\n\nclass NotificationContainer extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst notification = this.props.notification;\n\t\tconst prevNotification = prevProps.notification;\n\t\tif ( prevNotification.time !== notification.time ) {\n\t\t\tthis.notificationSystem.addNotification( notification );\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<NotificationSystem\n\t\t\t\tstyle={style}\n\t\t\t\tref={( elem ) => {\n\t\t\t\t\tthis.notificationSystem = elem;\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nNotificationContainer.propTypes = {\n\tnotification: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tnotification: state.notification\n\t};\n}\n\nexport default connect(\n\tmapStateToProps\n)( NotificationContainer );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport asyncComponent from 'components/async';\nimport server from 'constants/server';\nimport { fetchCredentialsInjector } from 'actions/authentication.js';\nimport { getEnrollableCohortsInjector } from 'actions/cohort.js';\nimport { getPublicSettingsInjector, getCustomTranslationsInjector } from 'actions/settings.js';\nimport NotificationSystem from './notification.js';\nimport './app.css';\n\n\n// VARIABLES //\n\nconst AsyncFooterBar = asyncComponent(() => import( 'containers/visible-footer-bar' ));\nconst AsyncTerms = asyncComponent(() => import( 'containers/visible-terms' ));\nconst AsyncPrivacy = asyncComponent(() => import( 'containers/visible-privacy' ));\nconst AsyncHeaderBar = asyncComponent(() => import( 'containers/visible-header-bar' ));\nconst AsyncForgotPassword = asyncComponent(() => import( 'containers/visible-forgot-password' ));\nconst AsyncCreateNamespace = asyncComponent(() => import( 'containers/visible-create-namespace' ));\nconst AsyncEditNamespace = asyncComponent(() => import( 'containers/visible-edit-namespace' ));\nconst AsyncNewPassword = asyncComponent(() => import( 'containers/visible-new-password' ));\nconst AsyncCompleteRegistration = asyncComponent(() => import( 'containers/visible-complete-registration' ));\nconst AsyncConfirmEmail = asyncComponent(() => import( 'containers/visible-confirm-email' ));\nconst AsyncShibboleth = asyncComponent(() => import( 'containers/visible-shibboleth' ));\nconst AsyncAdminPage = asyncComponent(() => import( 'containers/visible-admin' ));\nconst AsyncAdminSettings = asyncComponent(() => import( 'containers/visible-admin-settings' ));\nconst AsyncLogin = asyncComponent(() => import( 'containers/visible-login' ));\nconst AsyncLoginTFA = asyncComponent(() => import( 'containers/visible-login-tfa' ));\nconst AsyncSignup = asyncComponent(() => import( 'containers/visible-signup' ));\nconst AsyncNamespaceData = asyncComponent(() => import( 'containers/visible-namespace-data' ));\nconst AsyncGallery = asyncComponent(() => import( 'containers/visible-gallery' ));\nconst AsyncLessonsPage = asyncComponent(() => import( 'containers/visible-lessons-page' ));\nconst AsyncProfilePage = asyncComponent(() => import( 'containers/visible-profile-page' ));\nconst AsyncEnrollPage = asyncComponent(() => import( 'containers/visible-enroll-page' ));\nconst USER_STORAGE_ID = 'ISLE_USER_'+server;\n\n\n// VARIABLES //\n\nconst ALL_LOGGEDIN_PATHS = [\n\t'/create-namespace',\n\t'/edit-namespace/:namespace',\n\t'/edit-namespace',\n\t'/namespace-data/:namespace',\n\t'/profile',\n\t'/lessons/:namespace',\n\t'/lessons',\n\t'/gallery',\n\t'/enroll',\n\t'/admin',\n\t'/admin-settings'\n];\nconst RE_PUBLIC_PAGES = /(?:courses|new-password|complete-registration|confirm-email|shibboleth|signup|login|login-tfa|terms|privacy)/;\nconst debug = logger( 'isle-dashboard' );\n\n\n// MAIN //\n\nclass App extends Component {\n\tasync componentDidMount() {\n\t\tconst history = this.props.history;\n\t\tthis.props.getCustomTranslations();\n\t\tthis.props.getPublicSettings();\n\t\tif (\n\t\t\t!this.props.isLoggedIn &&\n\t\t\t!RE_PUBLIC_PAGES.test( history.location.pathname )\n\t\t) {\n\t\t\tlet isle = localStorage.getItem( USER_STORAGE_ID );\n\t\t\tif ( isle ) {\n\t\t\t\tisle = JSON.parse( isle );\n\t\t\t\tconst user = await this.props.fetchCredentials( isle );\n\t\t\t\tif ( user ) {\n\t\t\t\t\tthis.props.getEnrollableCohorts( user );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thistory.replace( '/login' );\n\t\t\t}\n\t\t}\n\t\tif ( this.props.isLoggedIn ) {\n\t\t\tdebug( 'User is logged in, updating local storage...' );\n\t\t\tconst isle = localStorage.getItem( USER_STORAGE_ID );\n\t\t\tif ( !isle ) {\n\t\t\t\tlocalStorage.setItem( USER_STORAGE_ID, JSON.stringify({\n\t\t\t\t\ttoken: this.props.user.token,\n\t\t\t\t\tid: this.props.user.id\n\t\t\t\t}) );\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst history = this.props.history;\n\t\tconst isLoggingOut = prevProps.isLoggedIn && !this.props.isLoggedIn;\n\t\tconst isLoggingIn = !prevProps.isLoggedIn && this.props.isLoggedIn;\n\t\tconst pathname = history.location.pathname;\n\t\tif ( isLoggingIn ) {\n\t\t\tif ( pathname === '/login-tfa' ) {\n\t\t\t\tconst path = this.props.user.writeAccess ? '/lessons' : '/profile';\n\t\t\t\thistory.push( path );\n\t\t\t}\n\t\t\telse if ( pathname && pathname !== '/' && pathname !== '/login' && pathname !== '/shibboleth' ) {\n\t\t\t\tdebug( 'User has logged in, redirecting to: '+pathname );\n\t\t\t\thistory.push( history.location.pathname );\n\t\t\t} else {\n\t\t\t\tconst path = this.props.user.writeAccess ? '/lessons' : '/profile';\n\t\t\t\tdebug( 'User has logged in, redirecting to default page: '+pathname );\n\t\t\t\thistory.push( path );\n\t\t\t}\n\t\t}\n\t\telse if ( isLoggingOut ) {\n\t\t\thistory.push( '/login' );\n\t\t}\n\t\telse if (\n\t\t\tthis.props.isLoggedIn && pathname &&\n\t\t\t( pathname === '/' || pathname === '/login' || pathname === '/login-tfa' || pathname === '/shibboleth' )\n\t\t) {\n\t\t\tconst path = this.props.user.writeAccess ? '/lessons' : '/profile';\n\t\t\thistory.push( path );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { settings } = this.props;\n\t\tlet AuthenticationBarrier = null;\n\t\tif ( this.props.isLoggedIn ) {\n\t\t\tAuthenticationBarrier =\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={ALL_LOGGEDIN_PATHS}\n\t\t\t\t\t\tcomponent={AsyncHeaderBar}\n\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/create-namespace\"\n\t\t\t\t\t\tcomponent={AsyncCreateNamespace}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/edit-namespace/:namespace\"\n\t\t\t\t\t\tcomponent={AsyncEditNamespace}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/namespace-data/:namespace\" exact\n\t\t\t\t\t\tcomponent={AsyncNamespaceData}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/namespace-data/:namespace/:subpage\"\n\t\t\t\t\t\tcomponent={AsyncNamespaceData}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/profile\"\n\t\t\t\t\t\tcomponent={AsyncProfilePage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/lessons\" exact\n\t\t\t\t\t\tcomponent={AsyncLessonsPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/lessons/:namespace\"\n\t\t\t\t\t\tcomponent={AsyncLessonsPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/gallery\"\n\t\t\t\t\t\tcomponent={AsyncGallery}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/enroll\"\n\t\t\t\t\t\tcomponent={AsyncEnrollPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/admin\" exact\n\t\t\t\t\t\tcomponent={AsyncAdminPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/admin/:subpage\"\n\t\t\t\t\t\tcomponent={AsyncAdminPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/admin/settings\" exact\n\t\t\t\t\t\tcomponent={AsyncAdminSettings}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/admin/settings/:subpage\"\n\t\t\t\t\t\tcomponent={AsyncAdminSettings}\n\t\t\t\t\t/>\n\t\t\t\t</Fragment>;\n\t\t}\n\t\treturn (\n\t\t\t<ConnectedRouter history={this.props.history}>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t{AuthenticationBarrier}\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/*\"\n\t\t\t\t\t\tcomponent={AsyncFooterBar}\n\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/\" component={AsyncLogin} />\n\t\t\t\t\t<Route path=\"/login\" component={AsyncLogin} />\n\t\t\t\t\t<Route path=\"/login-tfa\" component={AsyncLoginTFA} />\n\t\t\t\t\t<Route path=\"/new-password\" component={AsyncNewPassword} />\n\t\t\t\t\t<Route path=\"/complete-registration\" component={AsyncCompleteRegistration} />\n\t\t\t\t\t<Route path=\"/confirm-email\" component={AsyncConfirmEmail} />\n\t\t\t\t\t<Route path=\"/shibboleth\" component={AsyncShibboleth} />\n\t\t\t\t\t{settings.allowUserRegistrations ? <Route path=\"/signup\" component={AsyncSignup} /> : null}\n\t\t\t\t\t<Route path=\"/forgot-password\" component={AsyncForgotPassword} />\n\t\t\t\t\t<Route path=\"/terms\" component={AsyncTerms} />\n\t\t\t\t\t<Route path=\"/privacy\" component={AsyncPrivacy} />\n\t\t\t\t\t<NotificationSystem />\n\t\t\t\t</div>\n\t\t\t</ConnectedRouter>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nApp.propTypes = {\n\tfetchCredentials: PropTypes.func.isRequired,\n\tgetCustomTranslations: PropTypes.func.isRequired,\n\tgetEnrollableCohorts: PropTypes.func.isRequired,\n\tgetPublicSettings: PropTypes.func.isRequired,\n\thistory: PropTypes.object.isRequired,\n\tisLoggedIn: PropTypes.bool.isRequired,\n\tsettings: PropTypes.object.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tisLoggedIn: state.user.loggedIn,\n\t\tuser: state.user,\n\t\tsettings: state.settings\n\t};\n}\n\nfunction mapDispatchToProps( dispatch ) {\n\treturn {\n\t\tfetchCredentials: fetchCredentialsInjector( dispatch ),\n\t\tgetCustomTranslations: getCustomTranslationsInjector( dispatch ),\n\t\tgetPublicSettings: getPublicSettingsInjector( dispatch ),\n\t\tgetEnrollableCohorts: getEnrollableCohortsInjector( dispatch )\n\t};\n}\n","/**\n* MIT License\n*\n* Copyright (c) 2013-present, Facebook, Inc.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\n/* eslint-disable no-process-env, no-console */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register( config ) {\n\tif ( process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator ) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${window.location.origin}${window.location.pathname}service-worker.js`;\n\t\t\tif ( isLocalhost ) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker( swUrl, config );\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW( swUrl, config );\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW( swUrl, config ) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif ( installingWorker === null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif ( installingWorker.state === 'installed' ) {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tAt this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t\tbut the previous service worker will still serve the older\n\t\t\t\t\t\t\t\tcontent until all client tabs are closed.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tAt this point, everything has been precached.\n\t\t\t\t\t\t\t\tIt's the perfect time to display a\n\t\t\t\t\t\t\t\t\"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error( 'Error during service worker registration:', error );\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType !== null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ( 'serviceWorker' in navigator ) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport 'react-dates/initialize';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { createHashHistory } from 'history';\nimport { createStore, applyMiddleware } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from 'reducers';\nimport App from 'containers/app.js';\nimport * as serviceWorker from './service_worker.js';\nimport './helpers/axios';\nimport 'css/animations.css';\nimport 'css/index.css';\n\n\n// VARIABLES //\n\nconst persistConfig = {\n\tkey: 'root',\n\tblacklist: [ 'router', 'license', 'requestTFA' ],\n\tstorage: localforage\n};\nconst history = createHashHistory();\nconst rootReducer = createRootReducer( history );\nconst persistedReducer = persistReducer( persistConfig, rootReducer );\n\n// Apply the middleware to the store:\nconst middleware = routerMiddleware( history );\nexport const store = createStore( persistedReducer, applyMiddleware( middleware ) );\nconst persistor = persistStore( store );\n\n\n// MAIN //\n\nReactDOM.render(\n\t<Provider store={store} >\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<App history={history} />\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById( 'root' )\n);\n\nserviceWorker.register();\n"],"names":["debug","logger","sanitizeUser","user","ownedNamespaces","newOwnedNamespaces","ids","Set","i","length","has","_id","add","push","enrolledNamespaces","newEnrolledNamespaces","needsSanitizing","sanitizeRequest","dispatch","axios","server","id","err","addErrorNotification","sanitizeRequestInjector","result","fetchCredentials","obj","localStorage","setItem","JSON","stringify","res","data","picture","sanitizedUser","loggedIn","fetchCredentialsInjector","shibboleth","eppn","name","affil","time","salt","token","receivedToken","shibbolethInjector","retrievedEnrollableCohorts","cohorts","type","RETRIEVED_ENROLLABLE_COHORTS","payload","getEnrollableCohorts","getEnrollableCohortsInjector","getCohorts","namespaceID","qs","retrievedCohorts","RETRIEVED_COHORTS","addUserToCohort","cohortID","namespace","addNotification","message","level","title","owners","description","ADD_ENROLLED_NAMESPACE","namespaceName","getLessons","addUserToCohortInjector","deleteCohort","deleteCohortInjector","createCohort","cohort","createCohortInjector","updateCohort","msg","notification","newEmails","children","i18next","join","autoDismiss","dismissible","updateCohortInjector","getAllCohorts","GET_ALL_COHORTS","getAllCohortsInjector","deletedLesson","lessonName","DELETED_LESSON","updatedLesson","props","UPDATED_LESSON","retrievedLessons","lessons","RETRIEVED_LESSONS","getPublicLessons","RETRIEVED_PUBLIC_LESSONS","getPublicLessonsInjector","getIsleFile","getIsleFileInjector","file","map","lesson","index","colorIndex","url","lockUntil","Date","createdAt","toLocaleString","updatedAt","getLessonsInjector","copyLesson","sourceName","target","targetName","source","copyLessonInjector","copyNamespaceLessons","copyNamespaceLessonsInjector","deleteLesson","Error","deleteLessonInjector","showLessonInGallery","public","showLessonInGalleryInjector","hideLessonInGallery","hideLessonInGalleryInjector","activateLesson","active","activateLessonInjector","deactivateLesson","deactivateLessonInjector","updateLesson","newTitle","newDescription","template","query","isBoolean","updateLessonInjector","bool","getAllLessons","GET_ALL_LESSONS","getAllLessonsInjector","getTemplateLessons","templateLessons","GET_TEMPLATE_LESSONS","getTemplateLessonsInjector","getRooms","rooms","GET_ROOMS","getRoomsInjector","ADD_NOTIFICATION","addNotificationInjector","response","status","ADD_ERROR_NOTIFICATION","getSettings","GET_SETTINGS","getSettingsInjector","getPublicSettings","GET_SETTINGS_PUBLIC","getPublicSettingsInjector","updateSettings","value","UPDATED_SETTINGS","updateSettingsInjector","addCustomTranslation","language","ns","key","UPDATED_TRANSLATIONS","addCustomTranslationInjector","getCustomTranslations","GET_CUSTOM_TRANSLATIONS","getCustomTranslationsInjector","removeCustomTranslation","removeCustomTranslationInjector","LOGGED_IN","email","verifiedEmail","organization","writeAccess","administrator","lessonData","score","spentTime","licensed","customFields","availableCustomFields","twoFactorAuth","RECEIVED_TOKEN","getUsers","GET_USERS","users","getUsersInjector","impersonateUser","password","impersonateUserInjector","deleteUser","DELETED_USER","deleteUserInjector","uploadProfilePic","avatarData","thumbnailData","filename","USER_PICTURE_MODIFIED","position","uploadProfilePicInjector","authenticate","writeAccessToken","AUTHENTICATED","authenticateInjector","forgotPassword","forgotPasswordInjector","updateUser","form","USER_UPDATED","updateUserInjector","createUser","handleLogin","REQUEST_TFA","handleLoginInjector","handleLoginTFA","handleLoginTFAInjector","restoreLoginInjector","restoreLogin","logout","removeItem","LOGGED_OUT","logoutInjector","userUpdateCheck","hasMostRecent","newUser","userUpdateCheckInjector","confirmEmail","resendConfirmEmail","resendConfirmEmailInjector","adminUpdateUser","USER_UPDATED_BY_ADMIN","adminUpdateUserInjector","className","importComponent","state","component","default","this","setState","C","Component","APPEND_CREATED_NAMESPACE","CHANGED_NAMESPACE","CREATED_ANNOUNCEMENT","CREATED_CUSTOM_FIELD","CREATED_BACKUP","CREATED_ROLE","CREATED_TICKET","DELETED_BACKUP","DELETED_CURRENT_NAMESPACE","DELETED_CUSTOM_FIELD","DELETED_EVENT","DELETED_FILE","DELETED_ROLE","DELETED_TICKET","DELETED_ANNOUNCEMENT","DISABLED_TFA","EDITED_ANNOUNCEMENT","ENABLED_TFA","FIELD_POSITION_DECREMENTED","FIELD_POSITION_INCREMENTED","GET_ALL_FILES","GET_ALL_NAMESPACES","GET_ALL_ROLES","GET_BACKUPS","GET_EVENTS","GET_ALL_TICKETS","GET_COURSE_TICKETS","GET_CUSTOM_FIELDS","GET_OVERVIEW_STATISTICS","GET_HISTORICAL_OVERVIEW_STATISTICS","GET_REQUEST_STATISTICS","GET_TFA_QRCODE","GET_USER_TICKETS","LESSON_ORDER","LESSON_ORDER_DIRECTION","RECEIVED_FILES","RECEIVED_LICENSE","RECEIVED_NAMESPACE_FILES","REMOVED_LICENSE","RETRIEVED_BADGES","SEARCH_PHRASE_SET","TICKET_CLOSED","TICKET_OPENED","TICKET_MESSAGE_ADDED","TICKET_PRIORITY_UPDATED","TRIGGERED_EVENT","UPDATED_OWNED_NAMESPACE","USER_RECEIVED_BADGES","UPDATED_ROLE","UPDATED_STUDENT_PROGRESS","serverJSON","window","location","origin","config","headers","store","Authorization","namespaceClient","interceptors","request","use","params","lessonClient","lessonID","globalClient","namespaceAxios","globalAxios","i18n","Backend","LanguageDetector","initReactI18next","init","lng","getItem","fallbackLng","backend","backends","HttpApi","backendOptions","loadPath","react","useSuspense","interpolation","escapeValue","custom","translations","keys","Object","initialState","events","files","lessonsMap","namespaces","roles","tickets","statistics","requestStatistics","historicalStatistics","backups","license","settings","admin","action","types","x","objectKeys","chatMessages","nActions","actionTypes","j","assign","startDate","endDate","filter","startTime","slice","done","ticket","priority","substring","lastIndexOf","messages","unshift","indexOf","backup","role","badges","titleCompare","a","b","localeCompare","isArray","elem","emailFilter","isRegExpString","reFromString","test","contains","sort","enableTicketing","announcements","ownerFiles","progress","members","member","hasOwnProp","newState","owner","announcement","splice","phrase","direction","search","lowercase","LOCATION_CHANGE","requestTFA","getNamespace","arr","item","course","copy","groupBy","v","fields","verified","disabled","style","NotificationItem","DefaultStyle","margin","info","color","backgroundColor","boxShadow","height","width","borderTop","NotificationContainer","prevProps","prevState","notificationSystem","ref","connect","AsyncFooterBar","asyncComponent","AsyncTerms","AsyncPrivacy","AsyncHeaderBar","AsyncForgotPassword","AsyncCreateNamespace","AsyncEditNamespace","AsyncNewPassword","AsyncCompleteRegistration","AsyncConfirmEmail","AsyncShibboleth","AsyncAdminPage","AsyncAdminSettings","AsyncLogin","AsyncLoginTFA","AsyncSignup","AsyncNamespaceData","AsyncGallery","AsyncLessonsPage","AsyncProfilePage","AsyncEnrollPage","USER_STORAGE_ID","ALL_LOGGEDIN_PATHS","RE_PUBLIC_PAGES","App","history","isLoggedIn","pathname","isle","parse","replace","isLoggingOut","isLoggingIn","path","AuthenticationBarrier","Fragment","exact","allowUserRegistrations","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","persistConfig","blacklist","storage","localforage","createHashHistory","rootReducer","combineReducers","gallery","router","connectRouter","persistedReducer","persistReducer","middleware","routerMiddleware","createStore","applyMiddleware","persistor","persistStore","ReactDOM","loading","document","getElementById","addEventListener","fetch","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"sourceRoot":""}