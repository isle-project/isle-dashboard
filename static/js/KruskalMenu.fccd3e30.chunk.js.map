{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/kruskal.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"names":[],"mappings":"wRAOA,KAAM,WAAY,8EAAU,IAAM,qLAA0D,EAK5F,sBAAe,S,gzBCCf,KAAM,aAAgB,OAAW,CAChC,KAAM,eAAgB,CAAE,SAAU,QAAW,CAC5C,KAAM,CAAE,KAAM,cAAiB,MACzB,OAAS,iDAAC,sEAAO,CAAC,KAAY,SAAoB,MAAc,aAA4B,EAClG,MAAM,UAAW,mEAA6B,CAC7C,SAAU,MAAO,YAClB,CAAC,EACD,MAAM,UAAW,MAAO,CACzB,EACM,CAAE,aAAc,YAAa,GAAM,MACzC,MACC,kDAAC,kEAAS,CACT,UAAW,GACX,MAAO,iDAAC,YACN,EAAE,qBAAqB,EACxB,iDAAC,mDAAc,CAAC,MAAO,EAAE,qBAAqB,EAAG,QAAS,EAAE,iCAAiC,EAAG,CACjG,EACA,MAAO,EAAE,WAAW,EACpB,WAAY,cACZ,cAAc,gBAEd,iDAAC,qEAAW,CACX,OAAQ,EAAE,UAAU,EACpB,aAAc,aAAc,GAC5B,QAAS,aACV,EACA,iDAAC,qEAAW,CACX,OAAQ,EAAE,mBAAmB,EAC7B,aAAc,YAAa,GAC3B,QAAS,YACV,CACD,CAEF,EAKA,YAAY,UAAY,CACvB,YAAa,mEACb,aAAc,mEACd,KAAM,oEACN,UAAW,uDACX,UAAW,kEACX,aAAc,sDACf,EAEA,YAAY,aAAe,CAC1B,WAAY,CAAC,EACb,aAAc,EACf,EAKA,4BAAe,W,i7CCvDf,KAAM,gBAAmB,OAAW,CACnC,KAAM,SAAU,iDAAC,+DAAO,CAAC,GAAG,4BAC3B,iDAAC,qEAAa,KAAE,MAAM,KAAM,EAC5B,iDAAC,mEAAW,KAAE,MAAM,OAAQ,CAC7B,EACA,MACC,kDAAC,sEAAc,CAAC,QAAS,CAAE,QAAS,QAAS,OAAQ,EAAG,UAAU,OAAO,UAAS,GAAC,QAAS,SAC3F,iDAAC,8DAAM,CACN,aAAY,MAAM,MAClB,KAAK,KACL,QAAQ,oBACR,UAAU,mBAEV,iDAAC,OAAI,UAAU,iBAAiB,CACjC,CACD,CAEF,EAKA,eAAe,UAAY,CAC1B,QAAW,4DAAoB,CAAE,yDAAkB,sDAAe,CAAC,EAAE,WACrE,MAAS,mEACV,EAKA,sBAAe,c","file":"static/js/KruskalMenu.fccd3e30.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport Kruskal from '@isle-project/components/tests/kruskal';\nimport { DATA_EXPLORER_TESTS_KRUSKAL } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst KruskalMenu = ( props ) => {\n\tconst calculateTest = ( variable, group ) => {\n\t\tconst { data, showDecision } = props;\n\t\tconst output = <Kruskal data={data} variable={variable} group={group} showDecision={showDecision} />;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_KRUSKAL, {\n\t\t\tvariable, group, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst { quantitative, categorical, t } = props;\n\treturn (\n\t\t<Dashboard\n\t\t\tautoStart={false}\n\t\t\ttitle={<span>\n\t\t\t\t{t('Kruskal-Wallis Test')}\n\t\t\t\t<QuestionButton title={t('Kruskal-Wallis Test')} content={t('Kruskal-Wallis Test-description')} />\n\t\t\t</span>}\n\t\t\tlabel={t('calculate')}\n\t\t\tonGenerate={calculateTest}\n\t\t\tbodyClassName=\"d-grid gap-3\"\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('grouping-variable')}\n\t\t\t\tdefaultValue={categorical[ 0 ]}\n\t\t\t\toptions={categorical}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nKruskalMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\nKruskalMenu.defaultProps = {\n\tlogAction() {},\n\tshowDecision: true\n};\n\n\n// EXPORTS //\n\nexport default KruskalMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"sourceRoot":""}