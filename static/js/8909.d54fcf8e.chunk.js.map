{"version":3,"file":"static/js/8909.d54fcf8e.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/utils/obs-to-var/index.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/index.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../node_modules/@stdlib/math/base/special/round/lib/index.js","../node_modules/@stdlib/math/base/special/round/lib/round.js","../node_modules/@stdlib/string/replace/lib/index.js","../node_modules/@stdlib/string/replace/lib/replace.js","../node_modules/@stdlib/string/trim/lib/index.js","../node_modules/@stdlib/string/trim/lib/trim.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/index.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/@stdlib/utils/pluck/lib/index.js","../node_modules/@stdlib/utils/pluck/lib/pluck.js","../node_modules/@stdlib/utils/pluck/lib/validate.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["// MODULES //\n\nimport trim from '@stdlib/string/trim';\nimport objectKeys from '@stdlib/utils/keys';\n\n\n// VARIABLES //\n\nconst RE_NUMBER = /^\\s*[+-]?[\\d.]+e?[+-]?\\d*\\s*$/;\n\n\n// MAIN //\n\n/**\n* Returns a data object representation from an object array.\n*\n* ## Notes\n*\n* -   The function trims any whitespace from the variable names.\n*\n* @param {Array} arr - object array with each element corresponding to one observation\n* @returns {Object} object with each key corresponding to one variable containing all its values\n*/\nfunction obsToVar( arr ) {\n\tconst data = {};\n\tconst keymap = {};\n\tconst columnNames = objectKeys( arr[ 0 ] ).filter( x => x !== '' );\n\tfor ( let i = 0; i < columnNames.length; i++ ) {\n\t\tconst col = trim( columnNames[ i ] );\n\t\tkeymap[ columnNames[ i ] ] = col;\n\t\tdata[ col ] = new Array( arr.length );\n\t}\n\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\tfor ( let j = 0; j < columnNames.length; j++ ) {\n\t\t\tconst col = columnNames[ j ];\n\t\t\tlet val = arr[ i ][ col ];\n\t\t\tif ( RE_NUMBER.test( val ) ) {\n\t\t\t\tval = Number( val );\n\t\t\t}\n\t\t\tdata[ keymap[ col ] ][ i ] = val;\n\t\t}\n\t}\n\treturn data;\n}\n\n\n// EXPORTS //\n\nexport default obsToVar;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n// EXPORTS //\n\nmodule.exports = exec;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a regular expression.\n*\n* @module @stdlib/assert/is-regexp\n*\n* @example\n* var isRegExp = require( '@stdlib/assert/is-regexp' );\n*\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* bool = isRegExp( {} );\n* // returns false\n*/\n// MODULES //\n\nvar isRegExp = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isRegExp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar hasToStringTag = require('./../../has-tostringtag-support');\n\nvar nativeClass = require('@stdlib/utils/native-class');\n\nvar test = require('./try2exec.js'); // VARIABLES //\n\n\nvar FLG = hasToStringTag(); // MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\n\nfunction isRegExp(value) {\n  if (typeof value === 'object') {\n    if (value instanceof RegExp) {\n      return true;\n    }\n\n    if (FLG) {\n      return test(value);\n    }\n\n    return nativeClass(value) === '[object RegExp]';\n  }\n\n  return false;\n} // EXPORTS //\n\n\nmodule.exports = isRegExp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar exec = require('./exec.js'); // MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\n\n\nfunction test(value) {\n  try {\n    exec.call(value);\n    return true;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n} // EXPORTS //\n\n\nmodule.exports = test;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: implementation\n\n/**\n* Round a numeric value to the nearest integer.\n*\n* @module @stdlib/math/base/special/round\n*\n* @example\n* var round = require( '@stdlib/math/base/special/round' );\n*\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* v = round( -4.5 );\n* // returns -4.0\n*\n* v = round( -4.6 );\n* // returns -5.0\n*\n* v = round( 9.99999 );\n* // returns 10.0\n*\n* v = round( 9.5 );\n* // returns 10.0\n*\n* v = round( 9.2 );\n* // returns 9.0\n*\n* v = round( 0.0 );\n* // returns 0.0\n*\n* v = round( -0.0 );\n* // returns -0.0\n*\n* v = round( Infinity );\n* // returns Infinity\n*\n* v = round( -Infinity );\n* // returns -Infinity\n*\n* v = round( NaN );\n* // returns NaN\n*/\n// MODULES //\n\nvar round = require('./round.js'); // EXPORTS //\n\n\nmodule.exports = round;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: implementation\n\n/**\n* Rounds a numeric value to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = round( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = round( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = round( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = round( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = round( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = round( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = round( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = round( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = round( NaN );\n* // returns NaN\n*/\n\nvar round = Math.round; // eslint-disable-line stdlib/no-builtin-math\n// EXPORTS //\n\nmodule.exports = round;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/replace\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* str = 'Hello World';\n* out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n// MODULES //\n\nvar replace = require('./replace.js'); // EXPORTS //\n\n\nmodule.exports = replace;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar rescape = require('@stdlib/utils/escape-regexp-string');\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive;\n\nvar isRegExp = require('@stdlib/assert/is-regexp'); // MAIN //\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string primitive\n* @throws {TypeError} second argument argument must be a string primitive or regular expression\n* @throws {TypeError} third argument must be a string primitive or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\n\n\nfunction replace(str, search, newval) {\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. First argument must be a string primitive. Value: `' + str + '`.');\n  }\n\n  if (isString(search)) {\n    search = rescape(search);\n    search = new RegExp(search, 'g');\n  } else if (!isRegExp(search)) {\n    throw new TypeError('invalid argument. Second argument must be a string primitive or regular expression. Value: `' + search + '`.');\n  }\n\n  if (!isString(newval) && !isFunction(newval)) {\n    throw new TypeError('invalid argument. Third argument must be a string primitive or replacement function. Value: `' + newval + '`.');\n  }\n\n  return str.replace(search, newval);\n} // EXPORTS //\n\n\nmodule.exports = replace;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/trim\n*\n* @example\n* var trim = require( '@stdlib/string/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n// MODULES //\n\nvar trim = require('./trim.js'); // EXPORTS //\n\n\nmodule.exports = trim;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive;\n\nvar replace = require('./../../replace'); // VARIABLES //\n// The following regular expression should suffice to polyfill (most?) all environments.\n\n\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*([\\S\\s]*?)[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*$/; // MAIN //\n\n/**\n* Trim whitespace characters from beginning and end of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\nfunction trim(str) {\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. Must provide a string primitive. Value: `' + str + '`.');\n  }\n\n  return replace(str, RE, '$1');\n} // EXPORTS //\n\n\nmodule.exports = trim;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Escape a regular expression string or pattern.\n*\n* @module @stdlib/utils/escape-regexp-string\n*\n* @example\n* var rescape = require( '@stdlib/utils/escape-regexp-string' );\n*\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n// MODULES //\n\nvar rescape = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = rescape;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('@stdlib/assert/is-string').isPrimitive; // VARIABLES //\n\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string primitive\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n\nfunction rescape(str) {\n  var len;\n  var s;\n  var i;\n\n  if (!isString(str)) {\n    throw new TypeError('invalid argument. Must provide a regular expression string. Value: `' + str + '`.');\n  } // Check if the string starts with a forward slash...\n\n\n  if (str[0] === '/') {\n    // Find the last forward slash...\n    len = str.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (str[i] === '/') {\n        break;\n      }\n    }\n  } // If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\n\n  if (i === void 0 || i <= 0) {\n    return str.replace(RE_CHARS, '\\\\$&');\n  } // We need to de-construct the string...\n\n\n  s = str.substring(1, i); // Only escape the characters between the `/`:\n\n  s = s.replace(RE_CHARS, '\\\\$&'); // Reassemble:\n\n  str = str[0] + s + str.substring(i);\n  return str;\n} // EXPORTS //\n\n\nmodule.exports = rescape;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Extract a property value from each element of an object array.\n*\n* @module @stdlib/utils/pluck\n*\n* @example\n* var pluck = require( '@stdlib/utils/pluck' );\n*\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a' );\n* // returns [ 1, 0.5 ]\n*\n* arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* out = pluck( arr, 'a', {'copy':false} );\n* // returns [ 1, 0.5 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*/\n// MODULES //\n\nvar pluck = require('./pluck.js'); // EXPORTS //\n\n\nmodule.exports = pluck;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isArray = require('@stdlib/assert/is-array');\n\nvar copy = require('./../../copy');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property');\n\nvar defaults = require('./defaults.json');\n\nvar validate = require('./validate.js'); // MAIN //\n\n/**\n* Extracts a property value from each element of an object array.\n*\n* @param {Array} arr - source array\n* @param {*} prop - property to access\n* @param {Options} [options] - function options\n* @param {boolean} [options.copy=true] - boolean indicating whether to return a new data structure\n* @throws {TypeError} first argument must be an object array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Array} destination array\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a' );\n* // returns [ 1, 0.5 ]\n*\n* @example\n* var arr = [\n*     { 'a': 1, 'b': 2 },\n*     { 'a': 0.5, 'b': 3 }\n* ];\n*\n* var out = pluck( arr, 'a', {'copy':false} );\n* // returns [ 1, 0.5 ]\n*\n* var bool = ( arr[ 0 ] === out[ 0 ] );\n* // returns true\n*/\n\n\nfunction pluck(arr, prop, options) {\n  var opts;\n  var out;\n  var err;\n  var v;\n  var i;\n\n  if (!isArray(arr)) {\n    throw new TypeError('invalid argument. First argument must be an array. Value: `' + arr + '`.');\n  }\n\n  opts = copy(defaults);\n\n  if (arguments.length > 2) {\n    err = validate(opts, options);\n\n    if (err) {\n      throw err;\n    }\n  }\n\n  if (opts.copy) {\n    out = new Array(arr.length);\n  } else {\n    out = arr;\n  }\n\n  for (i = 0; i < arr.length; i++) {\n    v = arr[i];\n\n    if (v !== void 0 && v !== null && hasOwnProp(v, prop)) {\n      out[i] = v[prop];\n    }\n  }\n\n  return out;\n} // EXPORTS //\n\n\nmodule.exports = pluck;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isObject = require('@stdlib/assert/is-plain-object');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property');\n\nvar isBoolean = require('@stdlib/assert/is-boolean').isPrimitive; // MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {boolean} [options.copy] - boolean indicating whether to return a new data structure\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'copy': false\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\n\n\nfunction validate(opts, options) {\n  if (!isObject(options)) {\n    return new TypeError('invalid argument. Options argument must be an object. Value: `' + options + '`.');\n  }\n\n  if (hasOwnProp(options, 'copy')) {\n    opts.copy = options.copy;\n\n    if (!isBoolean(opts.copy)) {\n      return new TypeError('invalid option. `copy` option must be a boolean primitive. Option: `' + opts.copy + '`.');\n    }\n  }\n\n  return null;\n} // EXPORTS //\n\n\nmodule.exports = validate;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["RE_NUMBER","arr","data","keymap","columnNames","objectKeys","filter","x","i","length","col","trim","Array","j","val","test","Number","exec","RegExp","prototype","module","exports","isRegExp","hasToStringTag","nativeClass","FLG","value","call","err","round","Math","replace","rescape","isFunction","isString","str","search","newval","TypeError","RE","RE_CHARS","s","substring","pluck","isArray","copy","hasOwnProp","defaults","validate","prop","options","opts","out","v","arguments","isObject","isBoolean","rHyphen","camelize","string","_","chr","toUpperCase","_excluded","ButtonGroup","_ref","ref","bsPrefix","size","toggle","vertical","className","_ref$as","as","Component","rest","prefix","baseClass","displayName","defaultProps","role","Table","striped","bordered","borderless","hover","variant","responsive","props","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}