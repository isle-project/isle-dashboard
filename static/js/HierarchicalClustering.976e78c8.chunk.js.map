{"version":3,"sources":["../node_modules/@stdlib/assert/is-array-array/lib/index.js","../node_modules/@stdlib/assert/is-array-array/lib/main.js","../node_modules/compute-argmax/lib/index.js","../node_modules/compute-chebyshev-distance/lib/index.js","../node_modules/compute-cosine-distance/lib/index.js","../node_modules/compute-cosine-similarity/lib/index.js","../node_modules/compute-dot/lib/index.js","../node_modules/compute-euclidean-distance/lib/index.js","../node_modules/compute-hamming/lib/index.js","../node_modules/compute-l2norm/lib/index.js","../node_modules/compute-manhattan-distance/lib/index.js","../node_modules/@isle-project/utils/svg/index.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/blackbox.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/dendrogram.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/fullscreen_button.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/queue.js","../node_modules/@isle-project/components/models/hierarchical-clustering/hclust/index.js","../node_modules/@isle-project/components/models/hierarchical-clustering/main.js","../node_modules/@isle-project/utils/blob-to-base64/index.js","../node_modules/validate.io-function/lib/index.js","../node_modules/validate.io-string/lib/index.js"],"names":[],"mappings":"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","file":"static/js/HierarchicalClustering.976e78c8.chunk.js","sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of arrays.\n*\n* @module @stdlib/assert/is-array-array\n*\n* @example\n* var isArrayArray = require( '@stdlib/assert/is-array-array' );\n*\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-function' );\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of arrays.\n*\n* @name isArrayArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an array of arrays\n*\n* @example\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\nvar isArrayArray = arrayfun( isArray );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n*\n*\tCOMPUTE: argmax\n*\n*\n*\tDESCRIPTION:\n*\t\t- Computes the maximum value of a numeric array and returns the corresponding array indices.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: argmax( arr )\n*\tComputes the maximum value of a numeric array and returns the corresponding array indices.\n*\n* @param {Array} arr - array of values\n* @returns {Array} array indices\n*/\nfunction argmax( arr ) {\n\tif ( !Array.isArray( arr ) ) {\n\t\tthrow new TypeError( 'argmax()::invalid input argument. Must provide an array.' );\n\t}\n\tvar len = arr.length,\n\t\tmax = arr[ 0 ],\n\t\tidx = [ 0 ],\n\t\tval;\n\n\tfor ( var i = 1; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( val > max ) {\n\t\t\tmax = val;\n\t\t\tidx.length = 0;\n\t\t\tidx.push( i );\n\t\t}\n\t\telse if ( val === max ) {\n\t\t\tidx.push( i );\n\t\t}\n\t}\n\treturn idx;\n} // end FUNCTION argmax()\n\n\n// EXPORTS //\n\nmodule.exports = argmax;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// CHEBYSHEV DISTANCE //\n\n/**\n* FUNCTION: chebyshev( x, y[, accessor] )\n*\tComputes the Chebyshev distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Chebyshev distance or null\n*/\nfunction chebyshev( x, y, clbk ) {\n\tvar len,\n\t\td, v,\n\t\ti;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'chebyshev()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'chebyshev()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'chebyshev()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = x.length;\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'chebyshev()::invalid input arguments. Input arrays must have the same length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tv = clbk( x[0], 0, 0 ) - clbk( y[0], 0, 1 );\n\t\td = ( v < 0 ) ? -v : v;\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tv = clbk( x[i], i, 0 ) - clbk( y[i], i, 1 );\n\t\t\tif ( v < 0 ) {\n\t\t\t\tv = -v;\n\t\t\t}\n\t\t\tif ( v > d ) {\n\t\t\t\td = v;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = x[ 0 ] - y[ 0 ];\n\t\td = ( v < 0 ) ? -v : v;\n\t\tfor ( i = 1; i < len; i++ ) {\n\t\t\tv = x[ i ] - y[ i ];\n\t\t\tif ( v < 0 ) {\n\t\t\t\tv = -v;\n\t\t\t}\n\t\t\tif ( v > d ) {\n\t\t\t\td = v;\n\t\t\t}\n\t\t}\n\t}\n\treturn d;\n} // end FUNCTION chebyshev()\n\n\n// EXPORTS //\n\nmodule.exports = chebyshev;\n","'use strict';\n\n// MODULES //\n\nvar similarity = require( 'compute-cosine-similarity');\n\n\n// COSINE DISTANCE //\n\n/**\n* FUNCTION: distance( x, y[, accessor] )\n*\tComputes the cosine distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Cosine distance\n*/\nfunction distance( x, y, clbk ) {\n\tvar s;\n\tif ( arguments.length > 2 ) {\n\t\ts = similarity( x, y, clbk );\n\t} else {\n\t\ts = similarity( x, y );\n\t}\n\treturn ( s !== null ) ? 1 - s : s;\n} // end FUNCTION distance()\n\n\n// EXPORTS //\n\nmodule.exports = distance;\n","'use strict';\n\n// MODULES //\n\nvar dot = require( 'compute-dot' ),\n\tl2norm = require( 'compute-l2norm' ),\n\tisArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// FUNCTIONS //\n\n/**\n * FUNCTION: partial( fn, j )\n *\tPartially applied function from the right.\n *\n * @private\n * @param {Function} fn - input function\n * @param {Number} j - array index\n * @returns {Function} partially applied function\n */\nfunction partial( fn, j ) {\n\treturn function accessor( d, i ) {\n\t\treturn fn( d, i, j );\n\t};\n} // end FUNCTION partial()\n\n\n// COSINE SIMILARITY //\n\n/**\n* FUNCTION: similarity( x, y[, accessor] )\n*\tComputes the cosine similarity between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} cosine similarity or null\n*/\nfunction similarity( x, y, clbk ) {\n\tvar a, b, c;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'cosine-similarity()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tif ( x.length !== y.length ) {\n\t\tthrow new Error( 'cosine-similarity()::invalid input argument. Input arrays must have the same length.' );\n\t}\n\tif ( !x.length ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\ta = dot( x, y, clbk );\n\t\tb = l2norm( x, partial( clbk, 0 ) );\n\t\tc = l2norm( y, partial( clbk, 1 ) );\n\t} else {\n\t\ta = dot( x, y );\n\t\tb = l2norm( x );\n\t\tc = l2norm( y );\n\t}\n\treturn a / ( b*c );\n} // end FUNCTION similarity()\n\n\n// EXPORTS //\n\nmodule.exports = similarity;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// DOT PRODUCT //\n\n/**\n* FUNCTION: dot( x, y[, accessor] )\n*\tComputes the dot product between two arrays.\n*\n* @param {Array} x - input array\n* @param {Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} dot product\n*/\nfunction dot( x, y, clbk ) {\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'dot()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'dot()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = x.length,\n\t\tsum = 0,\n\t\ti;\n\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'dot()::invalid input argument. Arrays must be of equal length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += clbk( x[ i ], i, 0 ) * clbk( y[ i ], i, 1 );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tsum += x[ i ] * y[ i ];\n\t\t}\n\t}\n\treturn sum;\n} // end FUNCTION dot()\n\n\n// EXPORTS //\n\nmodule.exports = dot;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// EUCLIDEAN DISTANCE //\n\n/**\n* FUNCTION: euclidean( x, y[, accessor] )\n*\tComputes the Euclidean distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Euclidean distance or null\n*/\nfunction euclidean( x, y, clbk ) {\n\tvar len,\n\t\tval,\n\t\tabs,\n\t\tt,\n\t\ts,\n\t\tr,\n\t\ti;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'euclidean()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'euclidean()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'euclidean()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = x.length;\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'euclidean()::invalid input arguments. Input arrays must have the same length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tt = 0;\n\ts = 1;\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( x[ i ], i, 0 ) - clbk( y[ i ], i, 1 );\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts += r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = x[ i ] - y[ i ];\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts += r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn t * Math.sqrt( s );\n} // end FUNCTION euclidean()\n\n\n// EXPORTS //\n\nmodule.exports = euclidean;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisString = require( 'validate.io-string' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// HAMMING DISTANCE //\n\n/**\n* FUNCTION: hamming( a, b, accessor )\n*\tComputes the Hamming distance between two sequences.\n*\n* @param {String|Array} a - array or string sequence\n* @param {String|Array} b - array or string sequence\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number} Hamming distance\n*/\nfunction hamming( a, b, clbk ) {\n\tvar aType = isString( a ),\n\t\tbType = isString( b ),\n\t\tlen,\n\t\td, i;\n\n\tif ( !isArray( a ) && !aType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + a + '`.' );\n\t}\n\tif ( !isArray( b ) && !bType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input argument. Sequence must be either an array or a string. Value: `' + b + '`.' );\n\t}\n\tif ( aType !== bType ) {\n\t\tthrow new TypeError( 'hamming()::invalid input arguments. Sequences must be the same type; i.e., both strings or both arrays.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'hamming()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = a.length;\n\tif ( len !== b.length ) {\n\t\tthrow new Error( 'hamming()::invalid input arguments. Sequences must be the same length.' );\n\t}\n\td = 0;\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( clbk( a[i], i, 0 ) !== clbk( b[i], i, 1 ) ) {\n\t\t\t\td += 1;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\t\td += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn d;\n} // end FUNCTION hamming()\n\n\n// EXPORTS //\n\nmodule.exports = hamming;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// L2NORM //\n\n/**\n* FUNCTION: l2norm( arr[, accessor] )\n*\tCalculates the L2 norm (Euclidean norm) of an array.\n*\n* @param {Array} arr - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} L2 norm or null\n*/\nfunction l2norm( arr, clbk ) {\n\tif ( !isArray( arr ) ) {\n\t\tthrow new TypeError( 'l2norm()::invalid input argument. Must provide an array.  Value: `' + arr + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'l2norm()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tvar len = arr.length,\n\t\tt = 0,\n\t\ts = 1,\n\t\tr,\n\t\tval,\n\t\tabs,\n\t\ti;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = clbk( arr[ i ], i );\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = arr[ i ];\n\t\t\tabs = ( val < 0 ) ? -val : val;\n\t\t\tif ( abs > 0 ) {\n\t\t\t\tif ( abs > t ) {\n\t\t\t\t\tr = t / val;\n\t\t\t\t\ts = 1 + s*r*r;\n\t\t\t\t\tt = abs;\n\t\t\t\t} else {\n\t\t\t\t\tr = val / t;\n\t\t\t\t\ts = s + r*r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn t * Math.sqrt( s );\n} // end FUNCTION l2norm()\n\n\n// EXPORTS //\n\nmodule.exports = l2norm;\n","'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// MANHATTAN DISTANCE //\n\n/**\n* FUNCTION: manhattan( x, y[, accessor] )\n*\tComputes the Manhattan distance between two arrays.\n*\n* @param {Number[]|Array} x - input array\n* @param {Number[]|Array} y - input array\n* @param {Function} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} Manhattan distance or null\n*/\nfunction manhattan( x, y, clbk ) {\n\tvar len,\n\t\td, v,\n\t\ti;\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'manhattan()::invalid input argument. First argument must be an array. Value: `' + x + '`.' );\n\t}\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'manhattan()::invalid input argument. Second argument must be an array. Value: `' + y + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'manhattan()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\tlen = x.length;\n\tif ( len !== y.length ) {\n\t\tthrow new Error( 'manhattan()::invalid input arguments. Input arrays must have the same length.' );\n\t}\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\td = 0;\n\tif ( clbk ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = clbk( x[i], i, 0 ) - clbk( y[i], i, 1 );\n\t\t\td += ( v < 0 ) ? -v : v;\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = x[ i ] - y[ i ];\n\t\t\td += ( v < 0 ) ? -v : v;\n\t\t}\n\t}\n\treturn d;\n} // end FUNCTION manhattan()\n\n\n// EXPORTS //\n\nmodule.exports = manhattan;\n","/**\n* Code adapted from Nikita Rokotyan. MIT licensed. Source: http://bl.ocks.org/Rokotyan/0556f8facbaf344507cdc45dc3622177\n*/\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport round from '@stdlib/math/base/special/round';\n\n\n// FUNCTIONS //\n\nfunction appendCSS( cssText, element ) {\n\tconst styleElement = document.createElement( 'style' );\n\tstyleElement.setAttribute( 'type', 'text/css' );\n\tstyleElement.innerHTML = cssText;\n\tif ( isArray( element.children ) ) {\n\t\tconst refNode = element.children[ 0 ] || null;\n\t\telement.insertBefore( styleElement, refNode );\n\t}\n}\n\nfunction getCSSStyles( parentElement ) {\n\tconst selectorTextArr = [];\n\tselectorTextArr.push( '#'+parentElement.id );\n\tif ( isArray( parentElement.classList ) ) {\n\t\tfor ( let c = 0; c < parentElement.classList.length; c++ ) {\n\t\t\tif ( !contains( selectorTextArr, '.'+parentElement.classList[c] ) ) {\n\t\t\t\tselectorTextArr.push( '.'+parentElement.classList[c] );\n\t\t\t}\n\t\t}\n\t}\n\tconst nodes = parentElement.getElementsByTagName( '*' );\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tconst id = nodes[i].id;\n\t\tif ( !contains( selectorTextArr, '#'+id ) ) {\n\t\t\tselectorTextArr.push( '#'+id );\n\t\t}\n\t\tconst classes = nodes[i].classList;\n\t\tif ( isArray( classes ) ) {\n\t\t\tfor ( let c = 0; c < classes.length; c++) {\n\t\t\t\tif ( !contains( selectorTextArr, '.'+classes[c] ) ) {\n\t\t\t\t\tselectorTextArr.push( '.'+classes[c] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlet extractedCSSText = '';\n\tfor ( let i = 0; i < document.styleSheets.length; i++ ) {\n\t\tconst s = document.styleSheets[i];\n\t\ttry {\n\t\t\tif ( !s.cssRules ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\t\tif ( e.name !== 'SecurityError' ) {\n\t\t\t\t\tthrow e; // for Firefox\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\tconst cssRules = s.cssRules;\n\t\tfor ( let r = 0; r < cssRules.length; r++ ) {\n\t\t\tif ( contains( selectorTextArr, cssRules[r].selectorText ) ) {\n\t\t\t\textractedCSSText += cssRules[r].cssText;\n\t\t\t}\n\t\t}\n\t}\n\treturn extractedCSSText;\n}\n\n\n// MAIN //\n\nfunction getSVGString( svgNode ) {\n\tif ( !svgNode ) {\n\t\treturn '';\n\t}\n\tsvgNode.setAttribute( 'xlink', 'http://www.w3.org/1999/xlink' );\n\tsvgNode.setAttribute( 'style', 'background: white;' );\n\tconst cssStyleText = getCSSStyles( svgNode );\n\tappendCSS( cssStyleText, svgNode );\n\n\tconst serializer = new XMLSerializer();\n\tlet svgString = serializer.serializeToString( svgNode );\n\tsvgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n\tsvgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\treturn svgString;\n}\n\nfunction svgString2Image( svgString, width, height, callback ) {\n\tconst imgsrc = 'data:image/svg+xml;base64,'+ btoa( unescape( encodeURIComponent( svgString ) ) ); // Convert SVG string to data URL\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst context = canvas.getContext( '2d' );\n\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst image = new Image();\n\timage.onload = function onLoad() {\n\t\tcontext.clearRect( 0, 0, width, height );\n\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\tcanvas.toBlob( function onBlob( blob ) {\n\t\t\tconst filesize = round( blob.length/1024 ) + ' KB';\n\t\t\tif ( callback ) {\n\t\t\t\treturn callback( blob, filesize );\n\t\t\t}\n\t\t});\n\t};\n\timage.src = imgsrc;\n}\n\n\n// EXPORTS //\n\nexport { getSVGString, svgString2Image };\n","// MODULES //\n\nimport React, { Component } from 'react';\n\n\n// EXPORTS //\n\nexport default function D3blackbox(D3render) {\n\treturn class Blackbox extends Component {\n\t\tcomponentDidMount() {\n\t\t\tD3render(this.anchor, this.props, this.state);\n\t\t}\n\t\tcomponentDidUpdate() {\n\t\t\tD3render(this.anchor, this.props, this.state);\n\t\t}\n\n\t\tanchor = React.createRef();\n\n\t\trender() {\n\t\t\tconst { x, y } = this.props;\n\t\t\tconst Component = this.props.component || 'g';\n\n\t\t\treturn (\n\t\t\t\t<Component\n\t\t\t\t\ttransform={`translate(${x}, ${y})`}\n\t\t\t\t\tref={this.anchor}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n}\n","/**\n* Code by Micah Stubbs, Apache 2.0 licensed\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport * as d3 from 'd3';\nimport D3blackbox from './blackbox.js';\n\n\n// MAIN //\n\nconst Dendrogram = D3blackbox( ( anchor, props, state ) => {\n\t/* eslint-disable i18next/no-literal-string */\n\tconst svg = d3.select( anchor.current );\n\n\tconst { width, height, data } = props;\n\n\t// define some constants\n\tconst margin = { top: 40, left: 40, bottom: 0, right: 0 };\n\tconst innerWidth = width - margin.left - margin.right;\n\tconst innerHeight = height - margin.top - margin.bottom;\n\tconst fontSize = props.fontSize || 16;\n\tconst magicWidthDivisor = 1.35;\n\n\t// call the draw function\n\tdraw(data);\n\n\t// define the draw function\n\tfunction draw(data) {\n\t\t// define the tree layout function\n\t\tconst tree = data => {\n\t\t\tconst root = d3\n\t\t\t\t.hierarchy(data);\n\n\t\t\troot.dx = 15;\n\t\t\troot.dy = innerWidth / (root.height + 1);\n\t\t\treturn d3.cluster().size([innerHeight, innerWidth / magicWidthDivisor])(root);\n\t\t};\n\n\t\t// call the tree layout function on the data\n\t\tconst root = tree(data);\n\n\t\t// draw the visualization\n\t\tlet x0 = Infinity;\n\t\tlet x1 = -x0;\n\t\troot.each(d => {\n\t\t\tif (d.x > x1) x1 = d.x;\n\t\t\tif (d.x < x0) x0 = d.x;\n\t\t});\n\n\n\t\tfunction collapse( d ) {\n\t\t\tif ( d.children ) {\n\t\t\t\td._children = d.children;\n\t\t\t\td._children.forEach( collapse );\n\t\t\t\tif ( d.value < props.cutoff ) {\n\t\t\t\t\td.children = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\troot.children.forEach( collapse );\n\n\t\tconst magicXTranslateDivisor = 6;\n\t\tconst xTranslate = root.dy / magicXTranslateDivisor + margin.left;\n\t\tconst yTranslate = root.dx - x0 + margin.top;\n\t\tconst g = svg\n\t\t\t.append('g')\n\t\t\t.attr('font-family', 'sans-serif')\n\t\t\t.attr('font-size', fontSize)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t`translate(${xTranslate},${yTranslate})`\n\t\t\t);\n\n\t\tg.append('g')\n\t\t\t.attr('fill', 'none')\n\t\t\t.attr('stroke', '#555')\n\t\t\t.attr('stroke-opacity', 0.4)\n\t\t\t.attr('stroke-width', 1.0 )\n\t\t\t.selectAll('path')\n\t\t\t.data(root.links())\n\t\t\t.join('path')\n\t\t\t.attr(\n\t\t\t\t'd',\n\t\t\t\td => `\n\t\t\t\tM${d.target.y},${d.target.x}\n\t\t\t\tC${d.source.y + root.dy / 2},${d.target.x}\n\t\t\t\t ${d.source.y + root.dy / 2},${d.source.x}\n\t\t\t\t ${d.source.y},${d.source.x}\n\t\t\t`\n\t\t\t);\n\n\t\tconst node = g\n\t\t\t.append('g')\n\t\t\t.attr('stroke-linejoin', 'round')\n\t\t\t.attr('stroke-width', 0.1875 * fontSize )\n\t\t\t.selectAll('g')\n\t\t\t.data(root.descendants().reverse())\n\t\t\t.join( 'g' )\n\t\t\t.attr( 'transform', d => `translate(${d.y},${d.x})` );\n\n\t\tnode\n\t\t\t.append('circle')\n\t\t\t.attr('fill', d => (d.children ? '#555' : '#999'))\n\t\t\t.attr('r', fontSize * 0.15 )\n\t\t\t.on( 'click', d => {\n\t\t\t\td.children = d.children ? null : d._children;\n\t\t\t});\n\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('dy', '0.1em')\n\t\t\t.attr('x', d => (d.children ? -6 : 6))\n\t\t\t.attr('font-size', fontSize )\n\t\t\t.text(d => d.data.name)\n\t\t\t.filter(d => d.children)\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.clone(true)\n\t\t\t.lower()\n\t\t\t.attr('stroke', 'white');\n\t}\n\t/* eslint-enable i18next/no-literal-string */\n});\n\n\n// EXPORTS //\n\nexport default Dendrogram;\n","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Tooltip from '@isle-project/components/tooltip';\n\n\n// MAIN //\n\nclass FullscreenButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\ttoggleFullscreen = () => {\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Tooltip\n\t\t\t\t\tid=\"fullscreen_tooltip\"\n\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\ttooltip={t('toggle-fullscreen')}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\taria-label={t('toggle-fullscreen')}\n\t\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonClick={this.toggleFullscreen}\n\t\t\t\t\t\tstyle={{ position: 'absolute', top: '10px', right: '32px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"fa fa-window-maximize\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.fullscreen}\n\t\t\t\t\tonHide={this.toggleFullscreen}\n\t\t\t\t\tdialogClassName=\"modal-100w\"\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title as=\"h1\">\n\t\t\t\t\t\t\t{t('hierarchical-clustering')}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 0.75 * window.innerHeight,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\tfontSize: 32,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.dendrogram}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button onClick={this.toggleFullscreen}>{t('close')}</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFullscreenButton.propTypes = {\n\tdendrogram: PropTypes.node.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FullscreenButton;\n","// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\n\n\n// MAIN //\n\n/**\n* Represents a PriorityQueue. Elements queued will always be sorted in increasing order.\n*\n* @param {Array} values - input array of values\n* @constructor\n*/\nfunction PriorityQueue( values ) {\n\tif ( !isArray( values ) ) {\n\t\tthrow new TypeError( 'invalid argument. values must be an Array. Option: `' + values + '`.' );\n\t}\n\tconst _initial = values;\n\tthis._queue = [];\n\tif ( _initial ) {\n\t\tfor ( let i = 0; i < _initial.length; i++ ) {\n\t\t\tthis.insert( _initial[ i ] );\n\t\t}\n\t}\n}\n\n/**\n * Insert a new element to the queue. Elements are assumed to be objects with `sim` and `index` properties.\n */\nPriorityQueue.prototype.insert = function insert( elem ) {\n\tconst pos = this.search( elem );\n\tthis._queue.splice( pos, 0, elem );\n};\n\n/**\n* Returns the maximum element currently in the queue.\n*/\nPriorityQueue.prototype.max = function max() {\n\treturn this._queue[ this._queue.length - 1 ];\n};\n\n/**\n* Returns the maximum element currently in the queue and remove it.\n*/\nPriorityQueue.prototype.delMax = function delMax() {\n\treturn this._queue.pop();\n};\n\n/**\n* Delete the element passed to parameter `elem` from the queue, if present.\n*/\nPriorityQueue.prototype.delete = function del( elem ) {\n\tfor ( let i = 0; i < this.size(); i++ ) {\n\t\tif ( this._queue[i] === elem ) {\n\t\t\tthis._queue.splice(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n* Reset the queue to zero elements\n*/\nPriorityQueue.prototype.reset = function zero() {\n\tthis._queue = [];\n};\n\n/**\n* Return the number of elements currently in the queue\n*/\nPriorityQueue.prototype.size = function size() {\n\treturn this._queue.length;\n};\n\n/**\n* Binary search algorithm returning the index at which the element if inserted would be larger than all elements to the left and smaller than those to the right.\n*/\nPriorityQueue.prototype.search = function search( target ) {\n\tlet low = 0;\n\tlet high = this._queue.length;\n\twhile ( low !== high ) {\n\t\t// Calculate mid point:\n\t\tconst mid = high + low >>> 1;\n\t\tif ( ( this._queue[mid].sim - target.sim ) <= 0 ) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n};\n\n\n// EXPORTS //\n\nexport default PriorityQueue;\n","// MODULES //\n\nimport { i18n } from '@isle-project/locales';\nimport argmax from 'compute-argmax';\nimport chebyshev from 'compute-chebyshev-distance';\nimport cosine from 'compute-cosine-distance';\nimport euclidean from 'compute-euclidean-distance';\nimport hamming from 'compute-hamming';\nimport manhattan from 'compute-manhattan-distance';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isObject from '@stdlib/assert/is-object';\nimport isArrayArray from '@stdlib/assert/is-array-array';\nimport isInteger from '@stdlib/assert/is-integer';\nimport isNull from '@stdlib/assert/is-null';\nimport max from '@stdlib/math/base/special/max';\nimport min from '@stdlib/math/base/special/min';\nimport PriorityQueue from './queue.js';\n\n\n// FUNCTIONS //\n\n/**\n* Creates a two-dimensional array.\n*\n* @param {number} m - number of rows\n* @param {number} n - number of columns\n* @return {Array} an empty array of arrays\n*/\nfunction create2dArray( m, n ) {\n\tconst ret = [];\n\tfor ( let i = 0; i < m; i++ ) {\n\t\tret[ i ] = new Array( n );\n\t}\n\treturn ret;\n}\n\n/**\n* Returns a function which checks whether an element is equal to input.\n*\n* @param {string} input - the element the generated function should compare to\n* @return {Function} a function which when invoked checks whether its first argument is equal to input\n*/\nfunction isEqual( input ) {\n\treturn ( d ) => {\n\t\treturn d === input;\n\t};\n}\n\n/**\n* Algorithm adapted from Introduction to Information Retrieval by Manning et al., Cambridge University Press. 2008 [p.386].\n*\n* @param {Array} data - input data\n* @param {Function} linkage - used linkage function\n* @param {Function} distance - used distance metric\n* @return {Array} a list holding merge instructions\n*/\nexport function efficientHAC( data, linkage, distance ) {\n\tconst d = data;\n\tconst N = d.length;\n\tconst P = [];\n\tconst I = [];\n\tconst C = create2dArray( N, N );\n\tfor ( let n = 0; n < N; n++ ) {\n\t\tfor ( let i = 0; i < N; i++ ) {\n\t\t\tC[n][i] = {\n\t\t\t\t'sim': 1 / (1 + distance( d[n], d[i] ) ),\n\t\t\t\t'index': i\n\t\t\t};\n\t\t}\n\t\tI[n] = 1;\n\t\tP[n] = new PriorityQueue( C[n] );\n\t\tP[n].delete( C[n][n] );\n\t}\n\n\tconst A = [];\n\n\tfunction maxSim( q, i ){\n\t\treturn I[i] === 1 ? q.max().sim : 0;\n\t}\n\tfor ( let k = 0; k < N - 1; k++ ) {\n\t\tconst k1 = argmax( P.map( maxSim ) )[0];\n\t\tconst k2 = P[k1].max().index;\n\t\tA.push( [k1, k2] );\n\t\tI[k2] = 0;\n\t\tP[k1].reset();\n\t\tfor ( let i = 0; i < I.length; i++ ) {\n\t\t\tif ( I[i] === 1 && i !== k1 ) {\n\t\t\t\tP[i].delete( C[i][k1] );\n\t\t\t\tP[i].delete( C[i][k2] );\n\t\t\t\tC[i][k1].sim = linkage(i, k1, k2, C);\n\t\t\t\tP[i].insert(C[i][k1]);\n\t\t\t\tC[k1][i].sim = linkage(i, k1, k2, C);\n\t\t\t\tP[k1].insert(C[k1][i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn A;\n}\n\n\n// MAIN //\n\n/**\n* Hierarchical clustering based on priority-queue algorithm. Implements single-linkage and complete-linkage.\n*\n* @param {Array} data - two-dimensional array\n* @param {Object} [opts] - function options\n* @param {String} [opts.linkage='complete'] - accessor function for accessing array values\n* @param {String} [opts.distance='euclidean'] - boolean indicating whether to return a new array\n* @return {Object} an object exposing two functions, `getTree` and `getClusters(k)`, where `k` is the number of clusters\n*/\nfunction hclust( data, opts ) {\n\tlet allDistances;\n\tlet distanceFun;\n\tlet linkageFun;\n\tlet distance;\n\tlet linkage;\n\n\tif ( !isArrayArray( data ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Data must be passed as an array of arrays. Value: `' + data + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Options argument must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'linkage' ) ) {\n\t\t\tlinkage = opts.linkage;\n\t\t\tif ( linkage !== 'single' && linkage !== 'complete' ) {\n\t\t\t\tthrow new TypeError( 'invalid option. Linkage option must be either \"single\" or \"complete\". Option: `' + linkage + '`.' );\n\t\t\t}\n\t\t}\n\t\tif ( hasOwnProp( opts, 'distance' ) ) {\n\t\t\tdistance = opts.distance;\n\t\t\tallDistances = [ 'chebyshev', 'cosine', 'euclidean', 'hamming', 'manhattan' ];\n\t\t\tif ( !allDistances.some( isEqual( distance ) ) ) {\n\t\t\t\tthrow new TypeError( 'invalid option. Distance option must be \"chebyshev\", \"cosine\", \"euclidean\", \"hamming\" or \"manhattan\". Option: `' + distance + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\n\tswitch ( linkage ) {\n\t\tcase 'single':\n\t\t\tlinkageFun = function singleLinkage( i, k1, k2, C ) {\n\t\t\t\treturn max( C[i][k1].sim, C[i][k2].sim );\n\t\t\t};\n\t\tbreak;\n\t\tdefault:\n\t\t\tlinkageFun = function completeLinkage( i, k1, k2, C ) {\n\t\t\t\treturn min( C[i][k1].sim, C[i][k2].sim );\n\t\t\t};\n\t\tbreak;\n\t}\n\n\tswitch ( distance ) {\n\t\tcase 'chebyshev':\n\t\t\tdistanceFun = chebyshev;\n\t\tbreak;\n\t\tcase 'cosine':\n\t\t\tdistanceFun = cosine;\n\t\tbreak;\n\t\tcase 'hamming':\n\t\t\tdistanceFun = hamming;\n\t\tbreak;\n\t\tcase 'manhattan':\n\t\t\tdistanceFun = manhattan;\n\t\tbreak;\n\t\tdefault:\n\t\t\tdistanceFun = euclidean;\n\t\tbreak;\n\t}\n\tconst A = efficientHAC( data, linkageFun, distanceFun );\n\n\tfunction getClusters( k ) {\n\t\tif ( !isInteger( k ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. The number of desired clusters must be an integer. Option: `' + k + '`.' );\n\t\t}\n\t\tconst clusters = [];\n\t\tfor ( let i = 0; i < data.length; i++ ) {\n\t\t\tconst current = [ i ];\n\t\t\tclusters.push( current );\n\t\t}\n\t\tlet nClusters = clusters.length;\n\t\tlet j = 0;\n\n\t\twhile ( nClusters > k ) {\n\t\t\tconst merged = clusters[ A[ j ][ 0 ] ].concat( clusters[ A[j][1] ] );\n\t\t\tclusters[ A[j][0] ] = merged;\n\t\t\tclusters[ A[j][1] ] = null;\n\t\t\tnClusters--;\n\t\t\tj++;\n\t\t}\n\t\treturn clusters.filter( c => !isNull( c ) );\n\t}\n\n\tfunction getClusterAssignments( k ) {\n\t\tconst clusters = getClusters( k );\n\t\tconst out = new Array( data.length );\n\t\tfor ( let i = 0; i < clusters.length; i++ ) {\n\t\t\tconst cluster = clusters[ i ];\n\t\t\tfor ( let j = 0; j < cluster.length; j++ ) {\n\t\t\t\tconst idx = cluster[ j ];\n\t\t\t\tout[ idx ] = `${i18n.t('StatisticalModels:cluster')} ${i+1}`;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\tfunction getTree() {\n\t\tconst clusters = [];\n\t\tfor ( let i = 0; i < data.length; i++ ) {\n\t\t\tconst current = {};\n\t\t\tcurrent.name = data[ i ].join( ', ' );\n\t\t\tcurrent.value = 1;\n\t\t\tclusters.push( current );\n\t\t}\n\t\tlet j = 0;\n\t\twhile ( j < A.length ) {\n\t\t\tconst node = {\n\t\t\t\tchildren: [ clusters[ A[j][0] ], clusters[ A[j][1] ] ],\n\t\t\t\tvalue: clusters[ A[j][0] ].value + clusters[ A[j][1] ].value,\n\t\t\t\tname: clusters[ A[j][0] ].value + clusters[ A[j][1] ].value\n\t\t\t};\n\t\t\tclusters[ A[j][0] ] = node;\n\t\t\tclusters[ A[j][1] ] = null;\n\t\t\tj++;\n\t\t}\n\t\treturn clusters[ 0 ];\n\t}\n\n\treturn {\n\t\tgetClusterAssignments,\n\t\tgetClusters,\n\t\tgetTree\n\t};\n}\n\n\n// EXPORTS //\n\nexport default hclust;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport round from '@stdlib/math/base/special/round';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport { svgString2Image, getSVGString } from '@isle-project/utils/svg';\nimport html2clipboard from '@isle-project/utils/html-to-clipboard';\nimport blobToBase64 from '@isle-project/utils/blob-to-base64';\nimport Dendrogram from './hclust/dendrogram.js';\nimport FullscreenButton from './hclust/fullscreen_button.js';\nimport hclust from './hclust';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport './hierarchical_clustering.css';\n\n\n// FUNCTIONS //\n\nconst fitModel = ({ data, variables, linkage, distance }) => {\n\ttry {\n\t\tconst matrix = [];\n\t\tconst n = data[ variables[ 0 ] ].length;\n\t\tfor ( let i = 0; i < n; i++ ) {\n\t\t\tconst row = [];\n\t\t\tfor ( let j = 0; j < variables.length; j++ ) {\n\t\t\t\trow[ j ] = data[ variables[ j ] ][ i ];\n\t\t\t}\n\t\t\tmatrix.push( row );\n\t\t}\n\t\tconst result = hclust( matrix, {\n\t\t\tlinkage: linkage,\n\t\t\tdistance: distance\n\t\t});\n\t\tconst tree = result.getTree();\n\t\treturn {\n\t\t\tmatrix,\n\t\t\tresult,\n\t\t\ttree\n\t\t};\n\t} catch ( _ ) {\n\t\treturn {};\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Hierarchical Clustering.\n*\n* @property {Object} data - object of value arrays\n* @property {Array<string>} variables - names of variables used for clustering\n* @property {string} linkage - either `complete` or `single`\n* @property {string} distance - used distance (`euclidean`, `chebyshev`, `cosine`, `hamming`, or `manhattan`)\n* @property {Function} onResult - callback invoked with model object\n*/\nclass HierarchicalClustering extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst { data, variables, linkage, distance } = props;\n\t\tthis.state = {\n\t\t\t...fitModel({ data, variables, linkage, distance }),\n\t\t\t...props\n\t\t};\n\t\tprops.onResult( this.state.result );\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.variables !== prevState.variables ||\n\t\t\tnextProps.linkage !== prevState.linkage ||\n\t\t\tnextProps.distance !== prevState.distance\n\t\t) {\n\t\t\tconst { data, variables, linkage, distance } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel({ data, variables, linkage, distance }),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\tnextProps.onResult( newState.result );\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst { result } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !result ) {\n\t\t\treturn <Alert variant=\"danger\">{t('missing-attributes')}</Alert>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ overflowX: 'auto', width: '100%' }} >\n\t\t\t\t<span className=\"title\" >{t('hierarchical-clustering-summary')}</span>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"hierarchical-clustering-draggable-bar\"\n\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\tonDragStart={( ev ) => {\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/html', this.plotValue );\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/plain', this.plotKey );\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thtml2clipboard( this.plotValue );\n\t\t\t\t\t}}\n\t\t\t\t>{t('drag-plot')}</button>\n\t\t\t\t<FullscreenButton\n\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({ fullscreen: !this.state.fullscreen });\n\t\t\t\t\t}}\n\t\t\t\t\tdendrogram={<svg width={window.innerWidth} height={window.innerHeight}>\n\t\t\t\t\t\t<Dendrogram\n\t\t\t\t\t\t\tx={0} y={0} width={window.innerWidth} height={window.innerHeight-25} data={this.state.tree}\n\t\t\t\t\t\t\tcutoff={round( this.state.matrix.length / 20 )} fontSize={24}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t</svg>}\n\t\t\t\t\tt={t}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"fa fa-times\" />\n\t\t\t\t</FullscreenButton>\n\t\t\t\t<div>\n\t\t\t\t\t<svg width={650} height={375} ref={svg => {\n\t\t\t\t\t\tif ( !this.svg ) {\n\t\t\t\t\t\t\tthis.svg = svg;\n\t\t\t\t\t\t\tconst width = 650;\n\t\t\t\t\t\t\tconst height = 375;\n\t\t\t\t\t\t\tconst svgString = getSVGString( this.svg );\n\t\t\t\t\t\t\tsvgString2Image( svgString, 2.0*width, 2.0*height, ( dataBlob ) => {\n\t\t\t\t\t\t\t\tblobToBase64( dataBlob ).then( str => {\n\t\t\t\t\t\t\t\t\tconst value = `<img src=\"${str}\" style=\"display: block; margin: 0 auto; max-width: 100%; max-height: 100%\" />`;\n\t\t\t\t\t\t\t\t\tthis.plotKey = `<!--IMAGE_LOG:${randomstring( 6 )}_${randomstring( 6 )}-->`;\n\t\t\t\t\t\t\t\t\tthis.plotValue = value;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Dendrogram\n\t\t\t\t\t\t\tx={0} y={0} width={650} height={350} data={this.state.tree}\n\t\t\t\t\t\t\tcutoff={round( this.state.matrix.length / 20 )}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// PROPERTIES //\n\nHierarchicalClustering.defaultProps = {\n\tlinkage: 'complete',\n\tdistance: 'euclidean',\n\tonResult() {}\n};\n\nHierarchicalClustering.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tvariables: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tlinkage: PropTypes.oneOf([ 'complete', 'single' ]),\n\tdistance: PropTypes.oneOf([ 'euclidean', 'chebyshev', 'cosine', 'hamming', 'manhattan' ]),\n\tonResult: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( withPropCheck( HierarchicalClustering ) );\n","// MAIN //\n\n/**\n * Returns a promise resolving to a base64 string representing the blob.\n *\n * @param {Blob} blob - blob to convert\n * @returns {Promise} promise resolving to a base64 string representing the blob\n */\nconst blobToBase64 = ( blob ) => {\n\tconst { FileReader } = window;\n\tconst reader = new FileReader();\n\treader.readAsDataURL( blob );\n\treturn new Promise(resolve => {\n\t\treader.onloadend = () => {\n\t\t\tresolve(reader.result);\n\t\t};\n\t});\n};\n\n\n// EXPORTS //\n\nexport default blobToBase64;\n","/**\n*\n*\tVALIDATE: function\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a function.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isFunction( value )\n*\tValidates if a value is a function.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a function\n*/\nfunction isFunction( value ) {\n\treturn ( typeof value === 'function' );\n} // end FUNCTION isFunction()\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n*\n*\tVALIDATE: string\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a string.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isString( value )\n*\tValidates if a value is a string.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a string\n*/\nfunction isString( value ) {\n\treturn typeof value === 'string' || Object.prototype.toString.call( value ) === '[object String]';\n} // end FUNCTION isString()\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n"],"sourceRoot":""}