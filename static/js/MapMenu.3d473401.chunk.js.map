{"version":3,"file":"static/js/MapMenu.3d473401.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/map.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Map from '@isle-project/components/plots/map';\nimport { DATA_EXPLORER_SHARE_MAP, DATA_EXPLORER_MAP } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst SCOPES = [\n\t'world',\n\t'usa',\n\t'europe',\n\t'asia',\n\t'africa',\n\t'north america',\n\t'south america'\n];\nconst LOCATION_MODES = [\n\t'ISO-3',\n\t'USA-states',\n\t'country names'\n];\n\n\n// MAIN //\n\nconst MapMenu = ( props ) => {\n\tconst { variables, groupingVariables, t } = props;\n\tconst [ longitude, setLongitude ] = useState( null );\n\tconst [ latitude, setLatitude ] = useState( null );\n\tconst [ variable, setVariable ] = useState( null );\n\tconst [ locationmode, setLocationmode ] = useState( 'country names' );\n\tconst [ locations, setLocations ] = useState( null );\n\tconst [ scope, setScope ] = useState( 'world' );\n\tconst [ showLand, setShowLand ] = useState( false );\n\tconst generateMap = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable,\n\t\t\tlongitude,\n\t\t\tlatitude,\n\t\t\tlocations,\n\t\t\tscope,\n\t\t\tshowLand,\n\t\t\tplotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_MAP, action );\n\t\t};\n\t\tconst output = <Map\n\t\t\tdata={props.data} variable={variable} locations={locations}\n\t\t\tlongitude={longitude} latitude={latitude} locationmode={locationmode}\n\t\t\tscope={scope} showLand={showLand}\n\t\t\tid={plotId} action={action} onShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_MAP, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Map')}\n\t\t\t\t<QuestionButton title={t('Map')} content={t('Map-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('locations')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tvalue={locations}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetLocations( value );\n\t\t\t\t\t\t\t\tsetLongitude( null );\n\t\t\t\t\t\t\t\tsetLatitude( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('location-encoding')}\n\t\t\t\t\t\t\toptions={LOCATION_MODES}\n\t\t\t\t\t\t\tdefaultValue={locationmode}\n\t\t\t\t\t\t\tonChange={setLocationmode}\n\t\t\t\t\t\t\tdisabled={!locations}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('scope')}\n\t\t\t\t\t\t\tdefaultValue={scope}\n\t\t\t\t\t\t\toptions={SCOPES}\n\t\t\t\t\t\t\tonChange={setScope}\n\t\t\t\t\t\t\tdisabled={!locations}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('show-land')}\n\t\t\t\t\t\t\tdefaultValue={showLand}\n\t\t\t\t\t\t\tstyle={{ marginTop: 35 }}\n\t\t\t\t\t\t\tonChange={setShowLand}\n\t\t\t\t\t\t\tdisabled={!locations}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<h4 className=\"center\">{t('or')}</h4>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('longitude')}\n\t\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tvalue={longitude}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetLongitude( value );\n\t\t\t\t\t\t\t\tsetLocations( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('latitude')}\n\t\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tvalue={latitude}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetLatitude( value );\n\t\t\t\t\t\t\t\tsetLocations( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<hr />\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tclearable\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block onClick={generateMap}\n\t\t\t\t\tdisabled={( !longitude || !latitude ) && ( !locations || !variable )}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nMapMenu.defaultProps = {\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonCreated() {}\n};\n\nMapMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default MapMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"names":["SCOPES","LOCATION_MODES","MapMenu","props","variables","groupingVariables","t","useState","longitude","setLongitude","latitude","setLatitude","variable","setVariable","locationmode","setLocationmode","locations","setLocations","scope","setScope","showLand","setShowLand","style","fontSize","as","title","content","legend","options","clearable","value","onChange","defaultValue","disabled","marginTop","className","variant","block","onClick","plotId","randomstring","action","output","data","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_MAP","DATA_EXPLORER_MAP","onCreated","defaultProps","popover","trigger","placement","rootClose","overlay","size","uid","generateUID","CheckboxInput","bind","useRef","useContext","SessionContext","state","setValue","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","inline","tooltipPlacement","current","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop"],"sourceRoot":""}