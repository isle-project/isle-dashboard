{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/anova.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"names":[],"mappings":"wRAOA,KAAM,WAAY,8EAAU,IAAM,uLAKlC,sBAAe,W,4yBCCf,KAAM,WAAY,CAAC,CAAE,aAAc,YAAa,EAAG,KAAM,aAAc,UAAW,aAEhF,iDAAC,kEAAD,CACC,UAAW,GACX,MAAO,iDAAC,OAAD,KACL,EAAE,iBACH,iDAAC,mDAAD,CAAgB,MAAO,EAAE,iBAAkB,QAAS,EAAE,gCAEvD,MAAO,EAAE,aACT,WAAY,CAAE,SAAU,QAAW,CAClC,UAAW,mEAA2B,CACrC,SAAU,MAAO,eAElB,KAAM,QAAS,iDAAC,oEAAD,CAAO,KAAY,SAAoB,MAAc,eACpE,UAAW,SAEZ,cAAc,gBAEd,iDAAC,qEAAD,CACC,OAAQ,EAAE,YACV,aAAc,aAAc,GAC5B,QAAS,eAEV,iDAAC,qEAAD,CACC,OAAQ,EAAE,qBACV,aAAc,YAAa,GAC3B,QAAS,eASb,UAAU,UAAY,CACrB,YAAa,mEACb,aAAc,mEACd,KAAM,oEACN,UAAW,uDACX,UAAW,kEACX,aAAc,wDAGf,UAAU,aAAe,CACxB,WAAY,GACZ,aAAc,IAMf,4BAAe,W,+6CCpDf,KAAM,gBAAmB,OAAW,CACnC,KAAM,SAAU,iDAAC,+DAAD,CAAS,GAAG,4BAC3B,iDAAC,qEAAD,KAAgB,MAAM,OACtB,iDAAC,mEAAD,KAAc,MAAM,UAErB,MACC,kDAAC,sEAAD,CAAgB,QAAS,CAAE,QAAS,QAAS,SAAW,UAAU,OAAO,UAAS,GAAC,QAAS,SAC3F,iDAAC,8DAAD,CACC,aAAY,MAAM,MAClB,KAAK,KACL,QAAQ,oBACR,UAAU,mBAEV,iDAAC,MAAD,CAAK,UAAU,sBASnB,eAAe,UAAY,CAC1B,QAAW,4DAAoB,CAAE,yDAAkB,yDAAkB,WACrE,MAAS,qEAMV,sBAAe","file":"static/js/AnovaMenu.b41e72df.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport Anova from '@isle-project/components/tests/anova';\nimport { DATA_EXPLORER_TESTS_ANOVA } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst AnovaMenu = ({ quantitative, categorical, t, data, showDecision, logAction, onCreated }) => {\n\treturn (\n\t\t<Dashboard\n\t\t\tautoStart={false}\n\t\t\ttitle={<span>\n\t\t\t\t{t('One-Way ANOVA')}\n\t\t\t\t<QuestionButton title={t('One-Way ANOVA')} content={t('One-Way ANOVA-description')} />\n\t\t\t</span>}\n\t\t\tlabel={t('calculate')}\n\t\t\tonGenerate={( variable, group ) => {\n\t\t\t\tlogAction( DATA_EXPLORER_TESTS_ANOVA, {\n\t\t\t\t\tvariable, group, showDecision\n\t\t\t\t});\n\t\t\t\tconst output = <Anova data={data} variable={variable} group={group} showDecision={showDecision} />;\n\t\t\t\tonCreated( output );\n\t\t\t}}\n\t\t\tbodyClassName=\"d-grid gap-3\"\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('grouping-variable')}\n\t\t\t\tdefaultValue={categorical[ 0 ]}\n\t\t\t\toptions={categorical}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nAnovaMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\nAnovaMenu.defaultProps = {\n\tlogAction() {},\n\tshowDecision: true\n};\n\n\n// EXPORTS //\n\nexport default AnovaMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"sourceRoot":""}