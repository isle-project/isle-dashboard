{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/barchart.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js"],"names":[],"mappings":"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","file":"static/js/BarchartMenu.286398c3.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select, { components } from 'react-select';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport selectStyles from '@isle-project/components/input/select/styles';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport BarChart from '@isle-project/components/plots/barchart';\nimport { DATA_EXPLORER_SHARE_BARCHART, DATA_EXPLORER_BARCHART } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst STATS = [\n\t'Mean',\n\t'Median',\n\t'Min',\n\t'Max',\n\t'Sum'\n];\nconst MODES = [\n\t'Counts of distinct values',\n\t'Function evaluated for a variable'\n];\nconst Option = props => (\n\t<components.Option {...props} >\n\t\t{props.data.label}\n\t\t<br />\n\t\t<span style={{ fontVariant: 'small-caps' }} >{props.data.description}</span>\n\t</components.Option>\n);\nconst ORDER_OPTIONS = [\n\t{ label: 'Total', value: 'total', description: 'by total count of each category' },\n\t{ label: 'Alphabetically', value: 'category', description: 'by category name' },\n\t{ label: 'Min', value: 'min', description: 'by minimum count inside each category' },\n\t{ label: 'Max', value: 'max', description: 'by maximum count inside each category' },\n\t{ label: 'Mean', value: 'mean', description: 'by mean count inside each category' },\n\t{ label: 'Median', value: 'median', description: 'by median count inside each category' }\n];\n\n\n// MAIN //\n\nconst BarchartMenu = ( props ) => {\n\tconst { groupingVariables, variables, defaultValue, quantitative, t } = props;\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ yvar, setYVar ] = useState( quantitative[ 0 ] );\n\tconst [ direction, setDirection ] = useState( 'ascending' );\n\tconst [ summary, setSummary ] = useState( STATS[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ horizontal, setHorizontal ] = useState( false );\n\tconst [ mode, setMode ] = useState( MODES[ 0 ] );\n\tconst [ relative, setRelative ] = useState( false );\n\tconst [ stackBars, setStackBars ] = useState( false );\n\tconst [ totalPercent, setTotalPercent ] = useState( false );\n\tconst [ xOrder, setXOrder ] = useState( null );\n\n\tconst generateBarchart = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable, group, relative, totalPercent, xOrder, direction, stackBars, plotId\n\t\t};\n\t\tif ( mode === MODES[ 1 ] ) {\n\t\t\taction.summary = summary;\n\t\t\taction.yvar = yvar;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: props.t('plot-shared'),\n\t\t\t\tmessage: props.t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_BARCHART, action );\n\t\t};\n\t\tlet output;\n\t\tif ( mode === MODES[ 1 ] ) {\n\t\t\toutput = <BarChart\n\t\t\t\t{...props}\n\t\t\t\tvariable={variable} group={group}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\trelative={relative} totalPercent={totalPercent} xOrder={xOrder}\n\t\t\t\tdirection={direction} summary={summary} yvar={yvar} stackBars={stackBars}\n\t\t\t\tid={plotId}\n\t\t\t\taction={action}\n\t\t\t\tonShare={onShare}\n\t\t\t/>;\n\t\t} else {\n\t\t\toutput = <BarChart\n\t\t\t\t{...props}\n\t\t\t\tvariable={variable} group={group}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\trelative={relative} totalPercent={totalPercent} xOrder={xOrder}\n\t\t\t\tdirection={direction} stackBars={stackBars}\n\t\t\t\tid={plotId}\n\t\t\t\taction={action}\n\t\t\t\tonShare={onShare}\n\t\t\t/>;\n\t\t}\n\t\tprops.logAction( DATA_EXPLORER_BARCHART, action );\n\t\tprops.onCreated( output );\n\t};\n\tconst hideRelativeFrequencies = (\n\t\t!group || // not used without grouping\n\t\ttotalPercent || // overall percent\n\t\tmode === MODES[ 1 ] // when evaluating a function\n\t);\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Bar Chart')}\n\t\t\t\t<QuestionButton title={t('Bar Chart')} content={t('Bar Chart-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className=\"d-grid gap-3\" >\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('bars-represent')}\n\t\t\t\t\tdefaultValue={mode}\n\t\t\t\t\toptions={MODES}\n\t\t\t\t\tonChange={setMode}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t{ mode === MODES[ 1 ] ?\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\t\t\tdefaultValue={yvar}\n\t\t\t\t\t\t\t\toptions={props.quantitative}\n\t\t\t\t\t\t\t\tonChange={setYVar}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('summary-function')}\n\t\t\t\t\t\t\t\tdefaultValue={summary}\n\t\t\t\t\t\t\t\toptions={STATS}\n\t\t\t\t\t\t\t\tonChange={setSummary}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row> : null }\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tdefaultValue={group}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FormGroup controlId=\"barchart-order-select\">\n\t\t\t\t\t\t\t<FormLabel>{group ? t('order-outer-groups') : t('order-x-axis')}:</FormLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tdefaultValue={xOrder}\n\t\t\t\t\t\t\t\toptions={ORDER_OPTIONS}\n\t\t\t\t\t\t\t\tcomponents={{ Option }}\n\t\t\t\t\t\t\t\tisClearable={true}\n\t\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\t\tonChange={( elem ) => {\n\t\t\t\t\t\t\t\t\tsetXOrder( elem ? elem.value : null );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyles={selectStyles}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('order-direction')}\n\t\t\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t'ascending',\n\t\t\t\t\t\t\t\t'descending'\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDirection}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: xOrder ? 'inherit' : 'none'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{ mode === MODES[ 0 ] ? <CheckboxInput\n\t\t\t\t\t\t\tlegend={t('total-percentages')}\n\t\t\t\t\t\t\tdefaultValue={totalPercent}\n\t\t\t\t\t\t\tonChange={setTotalPercent}\n\t\t\t\t\t\t\tdisabled={relative}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: relative ? 0.2 : 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('flip-coordinates')}\n\t\t\t\t\t\t\tdefaultValue={horizontal}\n\t\t\t\t\t\t\tonChange={setHorizontal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('stack-bars')}\n\t\t\t\t\t\t\tdefaultValue={stackBars}\n\t\t\t\t\t\t\tonChange={setStackBars}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.2\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('relative-frequencies-inside-each-group')}\n\t\t\t\t\t\t\tdefaultValue={relative}\n\t\t\t\t\t\t\tdisabled={hideRelativeFrequencies}\n\t\t\t\t\t\t\tonChange={setRelative}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: hideRelativeFrequencies ? 0.2 : 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" onClick={generateBarchart}\n\t\t\t\t\tdisabled={!variable}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nBarchartMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonCreated() {},\n\tonSelected() {}\n};\n\nBarchartMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default BarchartMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleKeyPress = useCallback( ( event ) => {\n\t\tif ( event.which === 13 ) {\n\t\t\tonChange( !value );\n\t\t\tupdateValue( !value );\n\t\t}\n\t}, [ onChange, updateValue, value ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tonKeyPress={handleKeyPress}\n\t\tdisabled={disabled}\n\t\taria-label={props.legend}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\tif ( disabled ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{ color: 'darkgray' }}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"sourceRoot":""}