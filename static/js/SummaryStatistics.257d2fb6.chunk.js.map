{"version":3,"file":"static/js/SummaryStatistics.257d2fb6.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/summary-statistics/main.js","../node_modules/@stdlib/utils/papply-right/lib/index.js","../node_modules/@stdlib/utils/papply-right/lib/papply_right.js"],"sourcesContent":["// MODULES //\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport papplyRight from '@stdlib/utils/papply-right';\nimport round from '@stdlib/math/base/special/round';\nimport objectKeys from '@stdlib/utils/keys';\nimport isArray from '@stdlib/assert/is-array';\nimport entries from '@stdlib/utils/entries';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/assert/is-nan';\nimport extractUsedCategories from '@isle-project/utils/extract-used-categories';\nimport Table from '@isle-project/components/table';\nimport statistic from '@isle-project/utils/statistic';\nimport { Factor } from '@isle-project/utils/factor-variable';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\n\n\n// VARIABLES //\n\nconst N = 'N';\nconst IQR = 'IQR';\nconst SORT_OPTS = {\n\t'numeric': true // Use numeric collation such that \"1\" < \"2\" < \"10\"...\n};\n\n\n// FUNCTIONS //\n\nconst IQRTable = ({ e, t }) => {\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>{t('variable')}</th>\n\t\t\t\t<th>{IQR}</th>\n\t\t\t\t<th>{t('lower')}</th>\n\t\t\t\t<th>{t('upper')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res, idx ) => {\n\t\t\t\treturn ( <tr key={idx} >\n\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t{res[ 1 ].value[ 0 ].map( ( e, i ) =>\n\t\t\t\t\t\t<td key={i}>{e.toFixed( 3 )}</td>\n\t\t\t\t\t)}\n\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t</tr> );\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n};\n\nconst RangeTable = ({ e, t }) => {\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>{t('variable')}</th>\n\t\t\t\t<th>{t('range')}</th>\n\t\t\t\t<th>{t('min')}</th>\n\t\t\t\t<th>{t('max')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res, idx ) => {\n\t\t\t\treturn ( <tr key={idx} >\n\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t{res[ 1 ].value[ 0 ].map( ( e, i ) =>\n\t\t\t\t\t\t<td key={i}>{e.toFixed( 3 )}</td>\n\t\t\t\t\t)}\n\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t</tr> );\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n};\n\nconst CorrelationTable = ( props ) => {\n\tconst title = props.group ? props.group : 'Correlation Matrix';\n\tconst thead = <thead>\n\t\t<tr>\n\t\t\t<th>{title} (N={props.result.size})</th>\n\t\t\t{props.variables.map( ( x, i ) => <th key={i}>{x}</th> )}\n\t\t</tr>\n\t</thead>;\n\tconst tbody = <tbody>\n\t\t{props.variables.map( ( x, i ) => {\n\t\t\treturn (\n\t\t\t\t<tr key={i}>\n\t\t\t\t\t<th>{x}</th>\n\t\t\t\t\t{props.result.value[ i ].map( ( y, j ) => <td key={j}>{y.toFixed( 3 )}</td> )}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})}\n\t</tbody>;\n\treturn ( <Table bordered size=\"sm\" {...props} >\n\t\t{thead}\n\t\t{tbody}\n\t</Table> );\n};\n\nconst CorrelationMatrix = ({ e, t }) => {\n\tif ( e.group ) {\n\t\tconst tables = [];\n\t\tconst keys = objectKeys( e.result );\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\tconst key = keys[ i ];\n\t\t\tconst table = <CorrelationTable\n\t\t\t\tkey={key}\n\t\t\t\tgroup={key}\n\t\t\t\tresult={e.result[ key ]}\n\t\t\t\tvariables={e.variables}\n\t\t\t/>;\n\t\t\ttables.push( table );\n\t\t}\n\t\treturn tables;\n\t}\n\treturn <CorrelationTable result={e.result} variables={e.variables} />;\n};\n\n\nfunction byWithCount( arr, factor, funs, group ) {\n\tlet table = {};\n\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\tif ( !isArray( table[ factor[ i ] ]) ) {\n\t\t\ttable[ factor[ i ] ] = [];\n\t\t}\n\t\ttable[ factor[ i ] ].push( arr[ i ]);\n\t}\n\tlet keys = objectKeys( table );\n\tif ( group.length === 2 ) {\n\t\tconst cat1 = group[ 0 ].categories;\n\t\tconst cat2 = group[ 1 ].categories;\n\t\tif ( cat1 && cat2 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = cat1.indexOf( as[ 0 ] ) - cat1.indexOf( bs[ 0 ] );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\tdiff = cat2.indexOf( as[ 1 ] ) - cat2.indexOf( bs[ 1 ] );\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\t\telse if ( cat1 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = cat1.indexOf( as[ 0 ] ) - cat1.indexOf( bs[ 0 ] );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\treturn as[ 1 ].localeCompare( bs[ 1 ], void 0, SORT_OPTS );\n\t\t\t});\n\t\t}\n\t\telse if ( cat2 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = as[ 0 ].localeCompare( bs[ 0 ], void 0, SORT_OPTS );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\tdiff = cat2.indexOf( as[ 1 ] ) - cat2.indexOf( bs[ 1 ] );\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t\t}\n\t} else if ( group.length === 1 && group[ 0 ].categories ) {\n\t\tkeys = extractUsedCategories( table, group[ 0 ] );\n\t} else {\n\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t}\n\tconst out = {};\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tout[ key ] = {\n\t\t\tvalue: funs.map( f => f( table[ key ] ) ),\n\t\t\tsize: table[ key ].length\n\t\t};\n\t}\n\treturn out;\n}\n\nfunction by2WithCount( arr1, arr2, factor, funs, group ) {\n\tlet result = {};\n\tlet ret1 = {};\n\tlet ret2 = {};\n\tfor ( let i = 0; i < factor.length; i++ ) {\n\t\tif ( !isArray( ret1[ factor[ i ] ]) ) {\n\t\t\tret1[ factor[ i ] ] = [];\n\t\t\tret2[ factor[ i ] ] = [];\n\t\t}\n\t\tret1[ factor[ i ] ].push( arr1[ i ]);\n\t\tret2[ factor[ i ] ].push( arr2[ i ]);\n\t}\n\tlet keys;\n\tif ( group.length === 1 ) {\n\t\tkeys = extractUsedCategories( ret1, group[ 0 ] );\n\t} else {\n\t\tkeys = objectKeys( ret1 );\n\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t}\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tresult[ key ] = {\n\t\t\tvalue: funs.map( f => f( ret1[ key ], ret2[ key ]) ),\n\t\t\tsize: ret1[ key ].length\n\t\t};\n\t}\n\treturn { keys, result };\n}\n\nfunction groupedCompleteCases( arrs, groupData ) {\n\tconst indices = [];\n\tconst len = arrs[ 0 ].length;\n\tfor ( let j = 0; j < len; j++ ) {\n\t\tlet complete = true;\n\t\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\t\tconst x = arrs[ i ][ j ];\n\t\t\tif ( !isNumber( x ) || isnan( x ) ) {\n\t\t\t\tcomplete = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( complete ) {\n\t\t\tindices.push( j );\n\t\t}\n\t}\n\tconst out = {};\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tfor ( let j = 0; j < indices.length; j++ ) {\n\t\t\tconst group = groupData[ indices[ j ] ];\n\t\t\tif ( !out[ group ] ) {\n\t\t\t\tout[ group ] = new Array( arrs.length );\n\t\t\t\tfor ( let k = 0; k < arrs.length; k++ ) {\n\t\t\t\t\tout[ group ][ k ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst idx = indices[ j ];\n\t\t\tout[ group ][ i ].push( arrs[ i ][ idx ] );\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction groupedCases( arrs, groupData ) {\n\tconst out = {};\n\tconst len = arrs[ 0 ].length;\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tfor ( let j = 0; j < len; j++ ) {\n\t\t\tconst group = groupData[ j ];\n\t\t\tif ( !out[ group ] ) {\n\t\t\t\tout[ group ] = new Array( arrs.length );\n\t\t\t\tfor ( let k = 0; k < arrs.length; k++ ) {\n\t\t\t\t\tout[ group ][ k ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tout[ group ][ i ].push( arrs[ i ][ j ] );\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction completeCases( arrs ) {\n\tconst indices = [];\n\tconst len = arrs[ 0 ].length;\n\tfor ( let j = 0; j < len; j++ ) {\n\t\tlet complete = true;\n\t\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\t\tconst x = arrs[ i ][ j ];\n\t\t\tif ( !isNumber( x ) || isnan( x ) ) {\n\t\t\t\tcomplete = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( complete ) {\n\t\t\tindices.push( j );\n\t\t}\n\t}\n\tconst out = new Array( arrs.length );\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tconst arr = new Array( indices.length );\n\t\tfor ( let j = 0; j < indices.length; j++ ) {\n\t\t\tconst idx = indices[ j ];\n\t\t\tarr[ j ] = arrs[ i ][ idx ];\n\t\t}\n\t\tout[ i ] = arr;\n\t}\n\treturn out;\n}\n\nfunction generateStatistics({ data, t, statistics, variables, secondVariable, group, omit, quantiles }) {\n\tconst funs = [];\n\tconst statLabels = [];\n\tfor ( let i = 0; i < statistics.length; i++ ) {\n\t\tconst stat = statistics[ i ];\n\t\tif ( stat === 'Quantile' ) {\n\t\t\tfor ( let j = 0; j < quantiles.length; j++ ) {\n\t\t\t\tconst quantile = quantiles[ j ];\n\t\t\t\tfuns.push(\n\t\t\t\t\tpapplyRight( statistic( stat ), quantile, 5 )\n\t\t\t\t);\n\t\t\t\tstatLabels.push(\n\t\t\t\t\t`${round( quantile*100 )}% ${t('quantile')}`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tfuns.push( statistic( stat ) );\n\t\t\tstatLabels.push( stat );\n\t\t}\n\t}\n\tif ( statLabels[ 0 ] === 'Correlation Matrix' ) {\n\t\tlet arrs = variables.map( x => data[ x ] );\n\t\tif ( group ) {\n\t\t\tlet groupData;\n\t\t\tif ( group.length === 2 ) {\n\t\t\t\tgroupData = [];\n\t\t\t\tfor ( let i = 0; i < arrs[ 0 ].length; i++ ) {\n\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t}).join( ':' );\n\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgroupData = data[ group[ 0 ] ];\n\t\t\t}\n\t\t\tif ( omit ) {\n\t\t\t\tarrs = groupedCompleteCases( arrs, groupData );\n\t\t\t} else {\n\t\t\t\tarrs = groupedCases( arrs, groupData );\n\t\t\t}\n\t\t} else if ( omit ) {\n\t\t\tarrs = completeCases( arrs );\n\t\t}\n\t\tlet result;\n\t\tif ( group ) {\n\t\t\tresult = {};\n\t\t\tconst keys = objectKeys( arrs );\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tresult[ keys[ i ] ] = {\n\t\t\t\t\tvalue: funs.map( f => f.apply( null, arrs[ keys[ i ] ] ) )[ 0 ],\n\t\t\t\t\tsize: arrs[ keys[ i ] ][ 0 ].length\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tconst value = funs.map( f => f.apply( null, arrs ) );\n\t\t\tresult = {\n\t\t\t\tvalue: value[ 0 ],\n\t\t\t\tsize: arrs[ 0 ].length\n\t\t\t};\n\t\t}\n\t\tconst output = {\n\t\t\tvariables: variables,\n\t\t\tstatistics: statLabels,\n\t\t\ttype: 'Statistics',\n\t\t\tresult,\n\t\t\tgroup\n\t\t};\n\t\treturn output;\n\t}\n\tconst result = {};\n\tfor ( let i = 0; i < variables.length; i++ ) {\n\t\tlet groupData;\n\t\tlet res;\n\t\tlet x;\n\t\tlet y;\n\t\tconst variable = variables[ i ];\n\t\tif ( group ) {\n\t\t\tif ( omit ) {\n\t\t\t\t// Case: grouping variable selected, omit missing values\n\t\t\t\tx = [];\n\t\t\t\ty = [];\n\t\t\t\tgroupData = [];\n\t\t\t\tif ( variable && secondVariable ) {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tlet second = data[ secondVariable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) &&\n\t\t\t\t\t\t\t( isNumber( second[ i ] ) && !isnan( second[ i ] ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\ty.push( second[ i ] );\n\t\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif ( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Case: grouping variable(s) selected, do not omit missing values\n\t\t\t\tx = data[ variable ];\n\t\t\t\ty = data[ secondVariable ];\n\t\t\t\tif ( group.length === 2 ) {\n\t\t\t\t\tgroupData = [];\n\t\t\t\t\tfor ( let i = 0; i < data[ variable ].length; i++ ) {\n\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgroupData = data[ group[ 0 ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( statLabels[ 0 ] === 'Correlation' ) {\n\t\t\t\tconst out = by2WithCount( x, y, groupData, funs, group );\n\t\t\t\tres = out.result;\n\t\t\t\tconst keys = out.keys;\n\t\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\t\tconst key = keys[ i ];\n\n\t\t\t\t\t// Extract correlation coefficient from correlation matrix:\n\t\t\t\t\tres[ key ].value = res[ key ].value.map( mat => mat[ 0 ][ 1 ] );\n\t\t\t\t}\n\t\t\t\tvariable = `${variable} ${t('vs')} ${secondVariable}`;\n\t\t\t} else {\n\t\t\t\tres = byWithCount( x, groupData, funs, group );\n\t\t\t}\n\t\t} else {\n\t\t\t// Case: no grouping variable selected\n\t\t\tif ( omit ) {\n\t\t\t\tx = [];\n\t\t\t\ty = [];\n\t\t\t\tif ( variable && secondVariable ) {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tlet second = data[ secondVariable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) &&\n\t\t\t\t\t\t\t( isNumber( second[ i ] ) && !isnan( second[ i ] ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\ty.push( second[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif ( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = data[ variable ];\n\t\t\t\ty = data[ secondVariable ];\n\t\t\t}\n\t\t\tif ( statLabels[ 0 ] === 'Correlation' ) {\n\t\t\t\tconst value = funs.map( f => {\n\t\t\t\t\tconst r = f( x, y );\n\t\t\t\t\treturn r[ 0 ][ 1 ];\n\t\t\t\t});\n\n\t\t\t\t// Extract correlation coefficient from correlation matrix:\n\t\t\t\tres = {\n\t\t\t\t\tvalue,\n\t\t\t\t\tsize: x.length\n\t\t\t\t};\n\t\t\t\tvariable = `${variable} ${t('vs')} ${secondVariable}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = {\n\t\t\t\t\tvalue: funs.map( f => f( x ) ),\n\t\t\t\t\tsize: x.length\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tresult[ variable ] = res;\n\t}\n\tconst output = {\n\t\tvariables: variables,\n\t\tstatistics: statLabels,\n\t\ttype: 'Statistics',\n\t\tresult,\n\t\tgroup\n\t};\n\treturn output;\n}\n\n\n// MAIN //\n\nfunction SummaryStatistics({ variables, statistics, data, secondVariable, group, omit, quantiles }) {\n\tconst { t } = useTranslation( 'data-explorer' );\n\tconst e = useMemo( () => {\n\t\treturn generateStatistics({ data, t, statistics, variables, secondVariable, group, omit, quantiles });\n\t}, [ data, statistics, variables, group, omit, quantiles, secondVariable, t ] );\n\tif ( e.group ) {\n\t\tif ( e.statistics.length === 1 && e.statistics[0] === 'Correlation Matrix' ) {\n\t\t\treturn <CorrelationMatrix e={e} t={t} />;\n\t\t}\n\t\tconst variables = entries( e.result );\n\t\tlet header;\n\t\tif ( e.statistics.length === 1 && e.statistics[0] === 'Range' ) {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t<th>{t('range')}</th>\n\t\t\t\t<th>{t('min')}</th>\n\t\t\t\t<th>{t('max')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t} else if ( e.statistics.length === 1 && e.statistics[0] === 'Interquartile Range' ) {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t<th>{IQR}</th>\n\t\t\t\t<th>{t('lower')}</th>\n\t\t\t\t<th>{t('upper')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t} else {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{variables.length > 1 ? 'Variable' : variables[ 0 ][ 0 ]}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t{e.statistics.map( ( name, i ) => {\n\t\t\t\t\treturn <th key={i}>{name}</th>;\n\t\t\t\t})}\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t}\n\t\tconst table = <Table bordered size=\"sm\" >\n\t\t\t<thead>\n\t\t\t\t{header}\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{variables.map( ( res ) => {\n\t\t\t\t\tlet grouped = entries( res[ 1 ] );\n\t\t\t\t\tgrouped = grouped.map( ( arr, groupIndex ) => {\n\t\t\t\t\t\tlet cats;\n\t\t\t\t\t\tif ( e.group.length > 1 ) {\n\t\t\t\t\t\t\tcats = arr[ 0 ].split( ':' ).map( ( x, i ) => {\n\t\t\t\t\t\t\t\treturn <td key={i} >{x}</td>;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcats = <td>{arr[ 0 ]}</td>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={groupIndex} >\n\t\t\t\t\t\t\t\t<td>{variables.length > 1 ? res[ 0 ] : ''}</td>\n\t\t\t\t\t\t\t\t{cats}\n\t\t\t\t\t\t\t\t{arr[ 1 ].value.map( ( v, groupIndex ) => {\n\t\t\t\t\t\t\t\t\tif ( isArray( v ) ) {\n\t\t\t\t\t\t\t\t\t\tif ( e.statistics.length === 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line max-nested-callbacks\n\t\t\t\t\t\t\t\t\t\t\treturn v.map( ( elem, i ) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <td key={i} >{elem.toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn <td key={groupIndex} >{v[ 0 ].toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn <td key={groupIndex} >{v.toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t<td>{arr[ 1 ].size} </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\treturn grouped;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>;\n\t\treturn table;\n\t}\n\tif ( e.statistics.length === 1 ) {\n\t\tif ( e.statistics[0] === 'Range' ) {\n\t\t\treturn <RangeTable e={e} t={t} />;\n\t\t}\n\t\tif ( e.statistics[0] === 'Interquartile Range' ) {\n\t\t\treturn <IQRTable e={e} t={t} />;\n\t\t}\n\t\tif ( e.statistics[0] === 'Correlation Matrix' ) {\n\t\t\treturn <CorrelationMatrix e={e} t={t} />;\n\t\t}\n\t}\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.statistics.map( ( name, i ) => {\n\t\t\t\t\treturn <th key={i}>{name}</th>;\n\t\t\t\t})}\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={res[ 0 ]} >\n\t\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t\t{res[ 1 ].value.map( ( v, i ) => {\n\t\t\t\t\t\t\tif ( isArray( v ) ) {\n\t\t\t\t\t\t\t\t// Case: Range or IQR, use first element:\n\t\t\t\t\t\t\t\treturn <td key={i} >{v[ 0 ].toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <td key={i} >{v.toFixed( 3 )}</td>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t);\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n}\n\n\n// PROPERTIES //\n\nSummaryStatistics.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tvariables: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tstatistics: PropTypes.arrayOf( PropTypes.oneOf([\n\t\t'Mean',\n\t\t'Median',\n\t\t'Min',\n\t\t'Max',\n\t\t'Range',\n\t\t'Interquartile Range',\n\t\t'Standard Deviation',\n\t\t'Variance',\n\t\t'Correlation',\n\t\t'Correlation Matrix',\n\t\t'Skewness',\n\t\t'Excess Kurtosis',\n\t\t'First Quartile',\n\t\t'Third Quartile',\n\t\t'Quantile',\n\t\t'Five-Number Summary'\n\t]) ),\n\tsecondVariable: PropTypes.string,\n\tomit: PropTypes.bool,\n\tgroup: PropTypes.arrayOf( PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf( Factor )\n\t]) ),\n\tquantiles: PropTypes.array\n};\n\nSummaryStatistics.defaultProps = {\n\tsecondVariable: null,\n\tomit: false,\n\tgroup: null,\n\tquantiles: null\n};\n\n\n// EXPORTS //\n\n/**\n* Summary statistics\n*\n* @property {Object} data - object of value arrays\n* @property {Array<string>} statistics - statistics(s) to calculate for the selected variables (either 'Mean', `Median`, `Min`, `Max`, `Range`, `Interquartile Range`, `Standard Deviation`, `Variance`, `Correlation`, `Correlation Matrix`, `Skewness`, `Excess Kurtosis`, `First Quartile`, `Third Quartile`, or `Quantile`)\n* @property {Array<string>} variables - variable(s) for which to calculate statistics\n* @property {Array<(string|Factor)>} group - name of grouping variable(s)\n* @property {boolean} omit - controls whether to omit missing values\n* @property {string} secondVariable - second variable for correlation statistic\n* @property {Array<number>} quantiles - array of quantiles to calculate for `Quantile` statistic\n*/\nexport default withPropCheck( SummaryStatistics );\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Partially apply function arguments from the right.\n*\n* @module @stdlib/utils/papply-right\n*\n* @example\n* var papplyRight = require( '@stdlib/utils/papply-right' );\n*\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\n// MODULES //\n\nvar papplyRight = require('./papply_right.js'); // EXPORTS //\n\n\nmodule.exports = papplyRight;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isFunction = require('@stdlib/assert/is-function'); // MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments from the right.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\n\n\nfunction papplyRight(fcn) {\n  var pargs;\n  var len;\n  var i;\n\n  if (!isFunction(fcn)) {\n    throw new TypeError('invalid argument. First argument must be a function. Value: `' + fcn + '`.');\n  }\n\n  len = arguments.length - 1;\n  pargs = new Array(len);\n\n  for (i = 1; i < arguments.length; i++) {\n    pargs[i - 1] = arguments[i];\n  }\n\n  return pappliedRight;\n  /**\n  * Partially applied function.\n  *\n  * @private\n  * @param {...*} [args] - function arguments\n  * @returns {*} partially applied function result\n  */\n\n  function pappliedRight() {\n    var nargs;\n    var args;\n    var j;\n    nargs = arguments.length;\n    args = new Array(len + nargs);\n\n    for (j = 0; j < args.length; j++) {\n      if (j >= nargs) {\n        args[j] = pargs[j - nargs];\n      } else {\n        args[j] = arguments[j];\n      }\n    }\n\n    return fcn.apply(null, args);\n  }\n} // EXPORTS //\n\n\nmodule.exports = papplyRight;"],"names":["N","SORT_OPTS","IQRTable","e","t","table","bordered","size","entries","result","map","res","idx","key","value","i","toFixed","RangeTable","CorrelationTable","props","title","group","thead","variables","x","tbody","y","j","CorrelationMatrix","tables","keys","objectKeys","length","push","byWithCount","arr","factor","funs","isArray","cat1","categories","cat2","sort","a","b","as","split","bs","diff","indexOf","localeCompare","extractUsedCategories","out","f","by2WithCount","arr1","arr2","ret1","ret2","generateStatistics","data","statistics","secondVariable","omit","quantiles","statLabels","stat","quantile","papplyRight","statistic","round","arrs","groupData","groupLabel","g","join","indices","len","complete","isNumber","isnan","Array","k","groupedCompleteCases","groupedCases","completeCases","apply","type","variable","first","second","mat","SummaryStatistics","useTranslation","useMemo","header","className","name","grouped","groupIndex","cats","v","elem","propTypes","PropTypes","isRequired","Factor","defaultProps","withPropCheck","module","exports","isFunction","fcn","pargs","TypeError","arguments","pappliedRight","nargs","args"],"sourceRoot":""}