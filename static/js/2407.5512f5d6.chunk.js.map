{"version":3,"sources":["ev/components/admin-settings/user-fields/index.js","ev/components/admin-settings/branding/index.js","ev/components/admin-settings/texts/index.js","components/admin-settings/index.js","actions/backup.js","actions/role.js","containers/visible-admin-settings/index.js"],"names":[],"mappings":"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","file":"static/js/2407.5512f5d6.chunk.js","sourcesContent":["// MODULES //\r\n\r\nimport asyncComponent from 'components/async';\r\n\r\n\r\n// MAIN //\r\n\r\nconst UserFields = asyncComponent( () => import( './main.js' ) );\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default UserFields;\r\n","// MODULES //\r\n\r\nimport asyncComponent from 'components/async';\r\n\r\n\r\n// MAIN //\r\n\r\nconst Branding = asyncComponent( () => import( './main.js' ) );\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default Branding;\r\n","// MODULES //\r\n\r\nimport asyncComponent from 'components/async';\r\n\r\n\r\n// MAIN //\r\n\r\nconst Texts = asyncComponent( () => import( './main.js' ) );\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default Texts;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate, Route, Routes } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport asyncComponent from 'components/async';\r\nconst Configuration = asyncComponent( () => import( './configuration.js' ) );\r\nconst License = asyncComponent( () => import( './license.js' ) );\r\nconst Backups = asyncComponent( () => import( './backups.js' ) );\r\nconst Roles = asyncComponent( () => import( './roles.js' ) );\r\nimport UserFields from 'ev/components/admin-settings/user-fields';\r\nimport Branding from 'ev/components/admin-settings/branding';\r\nimport Texts from 'ev/components/admin-settings/texts';\r\nimport './admin_settings.css';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n * Renders the admin settings page.\r\n *\r\n * @param {Object} props - component properties\r\n * @returns {ReactElement} setting page\r\n */\r\nconst Settings = ( props ) => {\r\n\tconst [ activePage, setActivePage ] = useState( window.location.pathname );\r\n\tconst { t } = useTranslation( [ 'admin_settings', 'common' ] );\r\n\tconst navigate = useNavigate();\r\n\tconst handleSelect = ( selectedKey ) => {\r\n\t\tnavigate( selectedKey );\r\n\t\tsetActivePage( selectedKey );\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className=\"admin-settings-navbar\" >\r\n\t\t\t\t<Nav variant=\"pills\" activeKey={activePage} onSelect={handleSelect}>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/license\" title=\"License\" >{t('license')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/configuration\" title=\"Configuration\" >{t('configuration')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/branding\" title=\"Branding\" >{t('branding')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/texts\" title=\"Texts\" >{t('common:texts')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/credentials\" title=\"Roles\" >{t('roles')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link disabled eventKey=\"/admin/settings/badges\" title=\"Badges\" >{t('common:badges')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/user-fields\" title=\"User Fields\" >{t('user-fields')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"/admin/settings/backups\" title=\"Backups\" >{t('backups')}</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t</Nav>\r\n\t\t\t</div>\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"license\" element={<License\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tuploadLicense={props.uploadLicense}\r\n\t\t\t\t\tgetLicense={props.getLicense}\r\n\t\t\t\t\tuser={props.user}\r\n\t\t\t\t\tremoveLicense={props.removeLicense}\r\n\t\t\t\t\tgetUsers={props.getUsers} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"configuration\" element={<Configuration\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tuser={props.user}\r\n\t\t\t\t\tgetSettings={props.getSettings}\r\n\t\t\t\t\tupdateSettings={props.updateSettings} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"branding\" element={<Branding\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tuser={props.user}\r\n\t\t\t\t\tuploadLogo={props.uploadLogo}\r\n\t\t\t\t\tupdateSettings={props.updateSettings} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"texts\" element={<Texts\r\n\t\t\t\t\taddCustomTranslation={props.addCustomTranslation}\r\n\t\t\t\t\ttranslations={props.translations}\r\n\t\t\t\t\tremoveCustomTranslation={props.removeCustomTranslation} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"credentials\" element={<Roles\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tcreateRole={props.createRole}\r\n\t\t\t\t\tgetAllRoles={props.getAllRoles}\r\n\t\t\t\t\tdeleteRole={props.deleteRole}\r\n\t\t\t\t\tupdateRole={props.updateRole} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"user-fields\" element={<UserFields\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tuser={props.user}\r\n\t\t\t\t\tcreateCustomField={props.createCustomField}\r\n\t\t\t\t\tdeleteCustomField={props.deleteCustomField}\r\n\t\t\t\t\tgetCustomFields={props.getCustomFields}\r\n\t\t\t\t\tincrementFieldPosition={props.incrementFieldPosition}\r\n\t\t\t\t\tdecrementFieldPosition={props.decrementFieldPosition} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"backups\" element={<Backups\r\n\t\t\t\t\tadmin={props.admin}\r\n\t\t\t\t\tuser={props.user}\r\n\t\t\t\t\tcreateBackup={props.createBackup}\r\n\t\t\t\t\tgetBackups={props.getBackups}\r\n\t\t\t\t\tdeleteBackup={props.deleteBackup} />}\r\n\t\t\t\t/>\r\n\t\t\t</Routes>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// PROPERTIES //\r\n\r\nSettings.propTypes = {\r\n\taddCustomTranslation: PropTypes.func.isRequired,\r\n\tadmin: PropTypes.object.isRequired,\r\n\tcreateBackup: PropTypes.func.isRequired,\r\n\tcreateCustomField: PropTypes.func.isRequired,\r\n\tcreateRole: PropTypes.func.isRequired,\r\n\tdecrementFieldPosition: PropTypes.func.isRequired,\r\n\tdeleteBackup: PropTypes.func.isRequired,\r\n\tdeleteCustomField: PropTypes.func.isRequired,\r\n\tdeleteRole: PropTypes.func.isRequired,\r\n\tgetAllRoles: PropTypes.func.isRequired,\r\n\tgetBackups: PropTypes.func.isRequired,\r\n\tgetCustomFields: PropTypes.func.isRequired,\r\n\tgetLicense: PropTypes.func.isRequired,\r\n\tgetSettings: PropTypes.func.isRequired,\r\n\tgetUsers: PropTypes.func.isRequired,\r\n\tincrementFieldPosition: PropTypes.func.isRequired,\r\n\tremoveCustomTranslation: PropTypes.func.isRequired,\r\n\tremoveLicense: PropTypes.func.isRequired,\r\n\ttranslations: PropTypes.object.isRequired,\r\n\tupdateRole: PropTypes.func.isRequired,\r\n\tupdateSettings: PropTypes.func.isRequired,\r\n\tuploadLicense: PropTypes.func.isRequired,\r\n\tuploadLogo: PropTypes.func.isRequired,\r\n\tuser: PropTypes.object.isRequired\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default Settings;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport axios from 'axios';\r\nimport server from 'constants/server';\r\nimport i18next from 'i18next';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { CREATED_BACKUP, DELETED_BACKUP, GET_BACKUPS } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Makes a GET request to the server to get the list of backups.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getBackups = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_backups' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_BACKUPS,\r\n\t\t\tpayload: {\r\n\t\t\t\tbackups: res.data.backups\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a GET request to the server to get the list of backups with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function making a GET request to the server to get the list of backups\r\n */\r\nexport const getBackupsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getBackups( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to create a backup.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const createBackup = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/create_backup' );\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:created'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: CREATED_BACKUP,\r\n\t\t\tpayload: {\r\n\t\t\t\tbackup: res.data.backup\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request to the server to create a backup with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function making a POST request to the server to create a backup\r\n */\r\nexport const createBackupInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait createBackup( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - the id of the backup to delete\r\n */\r\nexport const deleteBackup = async ( dispatch, id ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/delete_backup', {\r\n\t\t\tid\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:deleted'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: DELETED_BACKUP,\r\n\t\t\tpayload: {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request to the server to delete a backup with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function making a POST request to the server to delete a backup\r\n */\r\nexport const deleteBackupInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait deleteBackup( dispatch, id );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport server from 'constants/server';\r\nimport i18next from 'i18next';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { globalAxios } from 'helpers/axios.js';\r\nimport { CREATED_ROLE, DELETED_ROLE, GET_ALL_ROLES, UPDATED_ROLE } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Makes a GET request to the server to get all roles.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getAllRoles = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await globalAxios.get( server+'/get_all_roles' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_ALL_ROLES,\r\n\t\t\tpayload: {\r\n\t\t\t\troles: res.data.roles\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to the server toe retrieve all roles with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function to make a GET request to the server to retrieve all roles\r\n */\r\nexport const getAllRolesInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getAllRoles( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to create a new role.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} role - the role to create\r\n * @param {string} role.title - the title of the role\r\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\r\n * @param {Object} role.permissions - the permissions of the role\r\n * @param {string} role.searchContext - the search context for the role governing where it can be used\r\n * @returns {(Object|Error)} result of the POST request or an error\r\n */\r\nexport const createRole = async ( dispatch, {\r\n\ttitle,\r\n\tauthorizedRoles,\r\n\tsearchContext,\r\n\tpermissions\r\n}) => {\r\n\ttry {\r\n\t\tconst res = await globalAxios.post( server + '/create_role', {\r\n\t\t\ttitle,\r\n\t\t\tauthorizedRoles,\r\n\t\t\tsearchContext,\r\n\t\t\tpermissions\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:created'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: CREATED_ROLE,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to create a new role with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function to make a POST request to the server to create a new role\r\n */\r\nexport const createRoleInjector = dispatch => {\r\n\treturn async ({\r\n\t\ttitle,\r\n\t\tauthorizedRoles,\r\n\t\tsearchContext,\r\n\t\tpermissions\r\n\t}) => {\r\n\t\tconst res = await createRole( dispatch, {\r\n\t\t\ttitle,\r\n\t\t\tauthorizedRoles,\r\n\t\t\tsearchContext,\r\n\t\t\tpermissions\r\n\t\t});\r\n\t\treturn res;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to update a role.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} role - the role to update\r\n * @param {string} role.id - the id of the role\r\n * @param {string} role.title - the new title of the role\r\n * @param {Array} role.authorizedRoles - the roles authorized to edit this role\r\n * @param {Object} role.permissions - the permissions of the role\r\n * @param {string} role.searchContext - the search context for the role governing where it can be used\r\n * @returns {(Object|Error)} result of the POST request or an error\r\n */\r\nexport const updateRole = async ( dispatch, {\r\n\tid,\r\n\ttitle,\r\n\tauthorizedRoles,\r\n\tsearchContext,\r\n\tpermissions\r\n}) => {\r\n\ttry {\r\n\t\tconst res = await globalAxios.post( server + '/update_role', {\r\n\t\t\tid,\r\n\t\t\ttitle,\r\n\t\t\tauthorizedRoles,\r\n\t\t\tsearchContext,\r\n\t\t\tpermissions\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:updated'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATED_ROLE,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to update a role with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function to make a POST request to the server to update a role\r\n */\r\nexport const updateRoleInjector = dispatch => {\r\n\treturn async ({\r\n\t\tid,\r\n\t\ttitle,\r\n\t\tauthorizedRoles,\r\n\t\tsearchContext,\r\n\t\tpermissions\r\n\t}) => {\r\n\t\tconst res = await updateRole( dispatch, {\r\n\t\t\tid,\r\n\t\t\ttitle,\r\n\t\t\tauthorizedRoles,\r\n\t\t\tsearchContext,\r\n\t\t\tpermissions\r\n\t\t});\r\n\t\treturn res;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to delete a role.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} id - the id of the role to delete\r\n * @returns {void}\r\n */\r\nexport const deleteRole = async ( dispatch, id ) => {\r\n\ttry {\r\n\t\tconst res = await globalAxios.post( server+'/delete_role', {\r\n\t\t\tid\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:deleted'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: DELETED_ROLE,\r\n\t\t\tpayload: {\r\n\t\t\t\tid\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to delete a role with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} a function to make a POST request to the server to delete a role\r\n */\r\nexport const deleteRoleInjector = dispatch => {\r\n\treturn async ( id ) => {\r\n\t\tawait deleteRole( dispatch, id );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AdminSettings from 'components/admin-settings';\r\nimport { getUsersInjector } from 'actions/user.js';\r\nimport { addNotificationInjector } from 'actions/notification.js';\r\nimport { getLicenseInjector, uploadLicenseInjector, removeLicenseInjector, uploadLogoInjector } from 'actions/file.js';\r\nimport { createCustomFieldInjector, deleteCustomFieldInjector, getCustomFieldsInjector,\r\n\tdecrementFieldPositionInjector, incrementFieldPositionInjector } from 'actions/custom_field.js';\r\nimport { createBackupInjector, deleteBackupInjector, getBackupsInjector } from 'actions/backup.js';\r\nimport { addCustomTranslationInjector, getSettingsInjector, removeCustomTranslationInjector, updateSettingsInjector } from 'actions/settings.js';\r\nimport { createRoleInjector, deleteRoleInjector, getAllRolesInjector, updateRoleInjector } from 'actions/role.js';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction mapStateToProps( state ) {\r\n\treturn {\r\n\t\tadmin: state.admin,\r\n\t\tuser: state.user,\r\n\t\ttranslations: state.translations\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps( dispatch ) {\r\n\treturn {\r\n\t\taddCustomTranslation: addCustomTranslationInjector( dispatch ),\r\n\t\taddNotification: addNotificationInjector( dispatch ),\r\n\t\tgetAllRoles: getAllRolesInjector( dispatch ),\r\n\t\tgetBackups: getBackupsInjector( dispatch ),\r\n\t\tgetUsers: getUsersInjector( dispatch ),\r\n\t\tcreateBackup: createBackupInjector( dispatch ),\r\n\t\tcreateCustomField: createCustomFieldInjector( dispatch ),\r\n\t\tcreateRole: createRoleInjector( dispatch ),\r\n\t\tdeleteBackup: deleteBackupInjector( dispatch ),\r\n\t\tdeleteRole: deleteRoleInjector( dispatch ),\r\n\t\tdeleteCustomField: deleteCustomFieldInjector( dispatch ),\r\n\t\tgetCustomFields: getCustomFieldsInjector( dispatch ),\r\n\t\tgetLicense: getLicenseInjector( dispatch ),\r\n\t\tgetSettings: getSettingsInjector( dispatch ),\r\n\t\tremoveCustomTranslation: removeCustomTranslationInjector( dispatch ),\r\n\t\tuploadLogo: uploadLogoInjector( dispatch ),\r\n\t\tupdateRole: updateRoleInjector( dispatch ),\r\n\t\tupdateSettings: updateSettingsInjector( dispatch ),\r\n\t\tuploadLicense: uploadLicenseInjector( dispatch ),\r\n\t\tremoveLicense: removeLicenseInjector( dispatch ),\r\n\t\tincrementFieldPosition: incrementFieldPositionInjector( dispatch ),\r\n\t\tdecrementFieldPosition: decrementFieldPositionInjector( dispatch )\r\n\t};\r\n}\r\n\r\n\r\n// MAIN //\r\n\r\nconst VisibleAdminSettings = connect( mapStateToProps, mapDispatchToProps )( AdminSettings );\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default VisibleAdminSettings;\r\n"],"sourceRoot":""}