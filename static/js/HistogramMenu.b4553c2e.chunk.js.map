{"version":3,"sources":["../node_modules/@isle-project/components/data-explorer/menu/histogram.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"names":[],"mappings":"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","file":"static/js/HistogramMenu.b4553c2e.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Histogram from '@isle-project/components/plots/histogram';\nimport { DATA_EXPLORER_SHARE_HISTOGRAM, DATA_EXPLORER_HISTOGRAM } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:histogram' );\nconst DEFAULT_XBINS = {\n\tstart: null,\n\tsize: 100,\n\tend: null\n};\nconst DISTRIBUTION_PARAMS = {\n\t'Exponential': [\n\t\t{\n\t\t\t'name': 'lambda',\n\t\t\t'description': 'rate',\n\t\t\t'min': 0,\n\t\t\t'step': 'any'\n\t\t}\n\t],\n\t'Normal': [\n\t\t{\n\t\t\t'name': 'mu',\n\t\t\t'description': 'mean',\n\t\t\t'step': 'any'\n\t\t},\n\t\t{\n\t\t\t'name': 'sigma',\n\t\t\t'description': 'standard-deviation',\n\t\t\t'min': 0,\n\t\t\t'step': 'any'\n\t\t}\n\t],\n\t'Uniform': [\n\t\t{\n\t\t\t'name': 'a',\n\t\t\t'description': 'minimum',\n\t\t\t'step': 'any'\n\t\t},\n\t\t{\n\t\t\t'name': 'b',\n\t\t\t'description': 'maximum',\n\t\t\t'step': 'any'\n\t\t}\n\t]\n};\n\n\n// MAIN //\n\nconst HistogramMenu = ( props ) => {\n\tconst [ displayDensity, setDisplayDensity ] = useState( false );\n\tconst [ densityType, setDensityType ] = useState( null );\n\tconst [ densityParams, setDensityParams ] = useState( [ 0.0, 1.0 ] );\n\tconst [ specifyParams, setSpecifyParams ] = useState( false );\n\tconst [ bandwidthAdjust, setBandwidthAdjust ] = useState( 1 );\n\tconst [ sameXRange, setSameXRange ] = useState( false );\n\tconst [ sameYRange, setSameYRange ] = useState( false );\n\tconst [ variable, setVariable ] = useState( props.defaultValue || props.variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ groupMode, setGroupMode ] = useState( 'Overlay' );\n\tconst [ nCols, setNCols ] = useState( 2 );\n\tconst [ nBins, setNBins ] = useState( 10 );\n\tconst [ xBins, setXBins ] = useState( DEFAULT_XBINS );\n\tconst [ binStrategy, setBinStrategy ] = useState( 'Automatic' );\n\tconst { variables, groupingVariables, t } = props;\n\n\tuseEffect( () => {\n\t\tsetXBins( DEFAULT_XBINS );\n\t}, [ binStrategy ] );\n\n\tconst generateHistogram = () => {\n\t\tdebug( `Generate a histogram with ${nBins} bins` );\n\t\tconst plotId = randomstring( 6 );\n\t\tconst state = {\n\t\t\tvariable,\n\t\t\tgroup,\n\t\t\tgroupMode,\n\t\t\tdisplayDensity,\n\t\t\tdensityType,\n\t\t\tbinStrategy,\n\t\t\tsameXRange,\n\t\t\tsameYRange\n\t\t};\n\t\tif ( binStrategy === 'Select # of bins' ) {\n\t\t\tstate.nBins = nBins;\n\t\t}\n\t\tstate.xBins = xBins;\n\t\tif ( groupMode === 'Facets' ) {\n\t\t\tstate.nCols = nCols;\n\t\t}\n\t\tif ( densityType === 'Data-driven' ) {\n\t\t\tstate.bandwidthAdjust = bandwidthAdjust;\n\t\t}\n\t\telse if ( densityType && specifyParams ) {\n\t\t\t// Case: densityType is not null but not 'Data-driven' (i.e., a parametric distribution)\n\t\t\tstate.densityParams = densityParams;\n\t\t}\n\t\tconst action = { ...state, plotId };\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HISTOGRAM, action );\n\t\t};\n\t\tconst output = <Histogram data={props.data} {...state} id={plotId} action={action} onShare={onShare} />;\n\t\tprops.logAction( DATA_EXPLORER_HISTOGRAM, action );\n\t\tprops.onCreated( output );\n\t};\n\tlet densityControls;\n\tif ( densityType === 'Data-driven' ) {\n\t\tdensityControls = <NumberInput\n\t\t\tlegend={t('bandwidth-adjustment')}\n\t\t\tdefaultValue={bandwidthAdjust}\n\t\t\tmin={0} step={0.1}\n\t\t\tonChange={setBandwidthAdjust}\n\t\t/>;\n\t}\n\telse if ( densityType ) {\n\t\tlet inputs;\n\t\tif ( specifyParams ) {\n\t\t\tinputs = DISTRIBUTION_PARAMS[ densityType ].map( ( x, idx ) => {\n\t\t\t\treturn ( <NumberInput\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tlegend={t( x.name )}\n\t\t\t\t\tdescription={t( x.description )}\n\t\t\t\t\tvalue={densityParams[ idx ]}\n\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\tconst newParams = densityParams.slice();\n\t\t\t\t\t\tnewParams[ idx ] = value;\n\t\t\t\t\t\tsetDensityParams( newParams );\n\t\t\t\t\t}}\n\t\t\t\t\tmax={x.max}\n\t\t\t\t\tmin={x.min}\n\t\t\t\t\tstep={x.step}\n\t\t\t\t\ttooltipPlacement=\"bottom\"\n\t\t\t\t/> );\n\t\t\t});\n\t\t}\n\t\tdensityControls = <Fragment>\n\t\t\t<CheckboxInput\n\t\t\t\tlegend={t('specify-parameters')}\n\t\t\t\ttooltip={t('specify-parameters-tooltip')}\n\t\t\t\tdefaultValue={specifyParams}\n\t\t\t\tonChange={setSpecifyParams}\n\t\t\t/>\n\t\t\t{inputs}\n\t\t</Fragment>;\n\t}\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Histogram')}\n\t\t\t\t<QuestionButton title={t('Histogram')} content={t('Histogram-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className=\"d-grid gap-3\" >\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\t\tonChange={setVariable}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} >\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} >\n\t\t\t\t\t\t{ group ? <SelectInput\n\t\t\t\t\t\t\tlegend={`${t('mode')}:`}\n\t\t\t\t\t\t\tdefaultValue={groupMode}\n\t\t\t\t\t\t\toptions={[ 'Overlay', 'Facets' ]}\n\t\t\t\t\t\t\tonChange={setGroupMode}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} >\n\t\t\t\t\t\t{ group && groupMode === 'Facets' ?\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('columns')}\n\t\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tonChange={setNCols}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: 30\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70,\n\t\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\t\tmarginTop: 2\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ group && groupMode === 'Facets' ? <Row>\n\t\t\t\t\t<Col md={6} >\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-x-axis')}\n\t\t\t\t\t\t\tdefaultValue={sameXRange}\n\t\t\t\t\t\t\tonChange={setSameXRange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} >\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('common-y-axis')}\n\t\t\t\t\t\t\tdefaultValue={sameYRange}\n\t\t\t\t\t\t\tonChange={setSameYRange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null }\n\t\t\t\t<div>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('binning-strategy')}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t'Automatic',\n\t\t\t\t\t\t\t'Select # of bins',\n\t\t\t\t\t\t\t'Set bin width'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdefaultValue={binStrategy}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tonChange={setBinStrategy}\n\t\t\t\t\t/>\n\t\t\t\t\t{ binStrategy !== 'Automatic' ?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('start')}\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.start}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.start = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ binStrategy === 'Select # of bins' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend={t('bins')}\n\t\t\t\t\t\t\t\t\tdefaultValue={nBins}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tonChange={setNBins}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ binStrategy === 'Set bin width' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend={t('size')}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tdefaultValue={xBins.size}\n\t\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\t\tnewXBins.size = val;\n\t\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('end')}\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.end}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.end = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div> : null }\n\t\t\t\t</div>\n\t\t\t\t{ props.showDensityOption ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('display-density')}\n\t\t\t\t\t\t\tdefaultValue={displayDensity}\n\t\t\t\t\t\t\tonChange={setDisplayDensity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-density-line')}\n\t\t\t\t\t\t\toptions={[ 'Data-driven', 'Normal', 'Uniform', 'Exponential' ]}\n\t\t\t\t\t\t\tdisabled={!displayDensity}\n\t\t\t\t\t\t\tdefaultValue={densityType}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDensityType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{densityControls}\n\t\t\t\t\t</div> : null }\n\t\t\t\t<Button variant=\"primary\" onClick={generateHistogram}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHistogramMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tshowDensityOption: true,\n\tonSelected() {}\n};\n\nHistogramMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDensityOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HistogramMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleKeyPress = useCallback( ( event ) => {\n\t\tif ( event.which === 13 ) {\n\t\t\tonChange( !value );\n\t\t\tupdateValue( !value );\n\t\t}\n\t}, [ onChange, updateValue, value ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tonKeyPress={handleKeyPress}\n\t\tdisabled={disabled}\n\t\taria-label={props.legend}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\tif ( disabled ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{ color: 'darkgray' }}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\n/**\n * Creates a tooltip for a number input.\n *\n * @param {Object} options - function options\n * @param {number} options.min - minimum value\n * @param {number} options.max - maximum value\n * @param {number} options.step - step size\n * @param {Function} options.t - translation function\n * @returns {string} tooltip\n */\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"sourceRoot":""}