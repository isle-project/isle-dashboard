{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/simple_linear_regression.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js"],"names":[],"mappings":"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","file":"static/js/SimpleLinearRegressionMenu.dadff508.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport SimpleLinearRegression from '@isle-project/components/models/simple-linear-regression';\nimport { DATA_EXPLORER_LINEAR_REGRESSION } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DESCRIPTION = 'Statistical model which estimates a best-fit line for a response variable of interest (Y) given exactly one predictor variable (X). The line is determined by its intercept (Y-value at X = 0) and slope (the increase in Y associated with a unit increase of X).';\n\n\n// MAIN //\n\nconst SimpleLinearRegressionMenu = ( props ) => {\n\tconst fitRegression = ( y, x, group, omitMissing ) => {\n\t\tconst output = <SimpleLinearRegression\n\t\t\ty={y} x={x}\n\t\t\tgroup={group} omitMissing={omitMissing}\n\t\t\tdata={props.data}\n\t\t\tonPredict={props.onPredict}\n\t\t\tonDiagnostics={props.onCreated}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_LINEAR_REGRESSION, {\n\t\t\ty, x, group, omitMissing\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst { quantitative, categorical, t } = props;\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{props.t('Simple Linear Regression')}\n\t\t\t\t<QuestionButton title={props.t('Simple Linear Regression')} content={DESCRIPTION} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={fitRegression}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('explanatory-variable')}\n\t\t\t\tdefaultValue={quantitative[ 1 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('group-by')}\n\t\t\t\toptions={categorical}\n\t\t\t\tclearable={true}\n\t\t\t\tmenuPlacement=\"top\"\n\t\t\t/>\n\t\t\t<CheckboxInput\n\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\tdefaultValue={false}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nSimpleLinearRegressionMenu.defaultProps = {\n\tcategorical: [],\n\tlogAction() {}\n};\n\nSimpleLinearRegressionMenu.propTypes = {\n\tcategorical: PropTypes.array,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tonPredict: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default SimpleLinearRegressionMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleKeyPress = useCallback( ( event ) => {\n\t\tif ( event.which === 13 ) {\n\t\t\tonChange( !value );\n\t\t\tupdateValue( !value );\n\t\t}\n\t}, [ onChange, updateValue, value ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tonKeyPress={handleKeyPress}\n\t\tdisabled={disabled}\n\t\taria-label={props.legend}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\tif ( disabled ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{ color: 'darkgray' }}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"sourceRoot":""}