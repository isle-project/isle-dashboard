{"version":3,"file":"static/js/ScatterplotMatrixMenu.d6994c1a.chunk.js","mappings":"qOAeMA,EAAwB,SAAEC,GAC/B,IAAQC,EAAYD,EAAZC,KAAMC,EAAMF,EAANE,EACd,GAAoCC,EAAAA,EAAAA,UAAU,MAA9C,eAAQC,EAAR,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAU,MAAtC,eAAQG,EAAR,KAAeC,EAAf,KA4BA,OACC,gBAAC,IAAD,KACC,gBAAC,WAAD,CAAaC,GAAG,MACdN,EAAE,sBAAsB,gBAAC,IAAD,CAAgBO,MAAOP,EAAE,sBAAuBQ,QAASR,EAAE,qCAErF,gBAAC,SAAD,KACC,gBAAC,IAAD,CACCS,OAAQT,EAAE,aACVU,QAASZ,EAAMI,UACfS,OAAK,EACLC,SAAUT,IAEX,gBAAC,IAAD,CACCM,OAAM,UAAKT,EAAE,SAAP,KACNU,QAASZ,EAAMe,kBACfC,WAAW,EACXF,SAAUP,IAEX,gBAAC,IAAD,CACCU,QAAQ,UAAUC,OAAK,EACvBC,QA9Ca,WAChB,IAAMC,GAASC,EAAAA,EAAAA,GAAc,GACvBC,EAAS,CACdlB,UAAAA,EAAWE,MAAAA,EAAOc,OAAAA,GAWbG,EAAS,gBAAC,IAAD,CACdC,GAAIJ,EACJnB,KAAMA,EACNG,UAAWA,EACXE,MAAOA,EACPgB,OAAQA,EACRG,QAfe,WACfzB,EAAM0B,QAAQC,gBAAgB,CAC7BlB,MAAOP,EAAE,eACT0B,QAAS1B,EAAE,uBACX2B,MAAO,UACPC,SAAU,OAEX9B,EAAM+B,UAAWC,EAAAA,GAA2BV,IAS5CW,WAAYjC,EAAMiC,aAEnBjC,EAAM+B,UAAWG,EAAAA,GAAqBZ,GACtCtB,EAAMmC,UAAWZ,IAuBda,UAAWhC,GAAaA,EAAUiC,OAAS,GAE1CnC,EAAE,gBAURH,EAAsBuC,aAAe,CACpCvB,kBAAmB,KACnBgB,UAFoC,aAGpCE,WAHoC,cAmBrC,a,4FC3DA,IA1BuB,SAAEjC,GACxB,IAAMuC,EAAU,gBAAC,IAAD,CAASf,GAAG,4BAC3B,gBAAC,IAAD,KAAexB,EAAMS,OACrB,gBAAC,IAAD,KAAiBT,EAAMU,UAExB,OACC,gBAAC,IAAD,CAAgB8B,QAAS,CAAE,QAAS,QAAS,SAAWC,UAAU,OAAOC,WAAS,EAACC,QAASJ,GAC3F,gBAAC,IAAD,CACCK,KAAK,KACL3B,QAAQ,oBACR4B,UAAU,mBAEV,uBAAKA,UAAU","sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot_matrix.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport SelectInput from '@isle-project/components/input/select';\nimport ScatterPlotMatrix from '@isle-project/components/plots/scatterplot-matrix';\nimport { DATA_EXPLORER_SHARE_SPLOM, DATA_EXPLORER_SPLOM } from '@isle-project/constants/actions.js';\nimport QuestionButton from '../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMatrixMenu = ( props ) => {\n\tconst { data, t } = props;\n\tconst [ variables, setVariables ] = useState( null );\n\tconst [ color, setColor ] = useState( null );\n\n\tconst generate = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariables, color, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SPLOM, action );\n\t\t};\n\t\tconst output = <ScatterPlotMatrix\n\t\t\tid={plotId}\n\t\t\tdata={data}\n\t\t\tvariables={variables}\n\t\t\tcolor={color}\n\t\t\taction={action}\n\t\t\tonShare={onShare}\n\t\t\tonSelected={props.onSelected}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SPLOM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot Matrix')}<QuestionButton title={t('Scatterplot Matrix')} content={t('Scatterplot Matrix-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variables')}\n\t\t\t\t\toptions={props.variables}\n\t\t\t\t\tmulti\n\t\t\t\t\tonChange={setVariables}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={`${t('color')}:`}\n\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tonChange={setColor}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={generate}\n\t\t\t\t\tdisabled={!variables || variables.length < 2}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMatrixMenu.defaultProps = {\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {}\n};\n\nScatterplotMatrixMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMatrixMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"names":["ScatterplotMatrixMenu","props","data","t","useState","variables","setVariables","color","setColor","as","title","content","legend","options","multi","onChange","groupingVariables","clearable","variant","block","onClick","plotId","randomstring","action","output","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_SPLOM","onSelected","DATA_EXPLORER_SPLOM","onCreated","disabled","length","defaultProps","popover","trigger","placement","rootClose","overlay","size","className"],"sourceRoot":""}