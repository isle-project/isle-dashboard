{"version":3,"file":"static/js/5161.0fdd5b26.chunk.js","mappings":"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","sources":["../node_modules/html-to-image/es/util.js","../node_modules/html-to-image/es/getBlobFromURL.js","../node_modules/html-to-image/es/clonePseudoElements.js","../node_modules/html-to-image/es/cloneNode.js","../node_modules/html-to-image/es/embedResources.js","../node_modules/html-to-image/es/embedImages.js","../node_modules/html-to-image/es/embedWebFonts.js","../node_modules/html-to-image/es/index.js","../node_modules/html-to-image/es/applyStyleWithOptions.js","../node_modules/@isle-project/components/models/decision-tree/fullscreen_button.js","../node_modules/@isle-project/components/models/decision-tree/tree_plot.js","../node_modules/@isle-project/components/models/decision-tree/split.js","../node_modules/@isle-project/components/models/decision-tree/tree.js"],"sourcesContent":["var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml'\n};\nexport function getExtension(url) {\n  const match = /\\.([^./]*?)$/g.exec(url);\n  return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n  const extension = getExtension(url).toLowerCase();\n  return mimes[extension] || '';\n}\nexport function resolveUrl(url, baseUrl) {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url;\n  } // url is absolute already, without protocol\n\n\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url;\n  } // dataURI, mailto:, tel:, etc.\n\n\n  if (url.match(/^[a-z]+:/i)) {\n    return url;\n  }\n\n  const doc = document.implementation.createHTMLDocument();\n  const base = doc.createElement('base');\n  const a = doc.createElement('a');\n  doc.head.appendChild(base);\n  doc.body.appendChild(a);\n\n  if (baseUrl) {\n    base.href = baseUrl;\n  }\n\n  a.href = url;\n  return a.href;\n}\nexport function isDataUrl(url) {\n  return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n  return `data:${mimeType};base64,${content}`;\n}\nexport function parseDataUrlContent(dataURL) {\n  return dataURL.split(/,/)[1];\n}\nexport const uuid = function uuid() {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0; // ref: http://stackoverflow.com/a/6248722/2519373\n\n  const random = () => // eslint-disable-next-line no-bitwise\n  `0000${(Math.random() * Math.pow(36, 4) << 0).toString(36)}`.slice(-4);\n\n  return () => {\n    counter += 1;\n    return `u${random()}${counter}`;\n  };\n}();\nexport const delay = ms => args => new Promise(resolve => setTimeout(() => resolve(args), ms));\nexport function toArray(arrayLike) {\n  const arr = [];\n\n  for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n    arr.push(arrayLike[i]);\n  }\n\n  return arr;\n}\n\nfunction px(node, styleProperty) {\n  const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n  return parseFloat(val.replace('px', ''));\n}\n\nexport function getNodeWidth(node) {\n  const leftBorder = px(node, 'border-left-width');\n  const rightBorder = px(node, 'border-right-width');\n  return node.clientWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n  const topBorder = px(node, 'border-top-width');\n  const bottomBorder = px(node, 'border-bottom-width');\n  return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n  let ratio;\n  let FINAL_PROCESS;\n\n  try {\n    FINAL_PROCESS = process;\n  } catch (e) {// pass\n  }\n\n  const val = FINAL_PROCESS && FINAL_PROCESS.env ? FINAL_PROCESS.env.devicePixelRatio : null;\n\n  if (val) {\n    ratio = parseInt(val, 10);\n\n    if (Number.isNaN(ratio)) {\n      ratio = 1;\n    }\n  }\n\n  return ratio || window.devicePixelRatio || 1;\n}\nexport function canvasToBlob(canvas) {\n  if (canvas.toBlob) {\n    return new Promise(resolve => canvas.toBlob(resolve));\n  }\n\n  return new Promise(resolve => {\n    const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n    const len = binaryString.length;\n    const binaryArray = new Uint8Array(len);\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i);\n    }\n\n    resolve(new Blob([binaryArray], {\n      type: 'image/png'\n    }));\n  });\n}\nexport function createImage(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = () => resolve(img);\n\n    img.onerror = reject;\n    img.crossOrigin = 'anonymous';\n    img.decoding = 'sync';\n    img.src = url;\n  });\n}\nexport function svgToDataURL(svg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return Promise.resolve().then(() => new XMLSerializer().serializeToString(svg)).then(encodeURIComponent).then(html => `data:image/svg+xml;charset=utf-8,${html}`);\n  });\n}\nexport function nodeToDataURL(node, width, height) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n  });\n}","import { parseDataUrlContent } from './util';\nconst cache = {};\n\nfunction getCacheKey(url) {\n  let key = url.replace(/\\?.*/, ''); // font resourse\n\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '');\n  }\n\n  return key;\n}\n\nexport function getBlobFromURL(url, options) {\n  const cacheKey = getCacheKey(url);\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey];\n  } // cache bypass so we dont have CORS issues with cached images\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n\n\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n  }\n\n  const failed = reason => {\n    let placeholder = '';\n\n    if (options.imagePlaceholder) {\n      const parts = options.imagePlaceholder.split(/,/);\n\n      if (parts && parts[1]) {\n        placeholder = parts[1];\n      }\n    }\n\n    let msg = `Failed to fetch resource: ${url}`;\n\n    if (reason) {\n      msg = typeof reason === 'string' ? reason : reason.message;\n    }\n\n    if (msg) {\n      console.error(msg);\n    }\n\n    return {\n      blob: placeholder,\n      contentType: ''\n    };\n  };\n\n  const deferred = window.fetch(url).then(res => // eslint-disable-next-line promise/no-nesting\n  res.blob().then(blob => ({\n    blob,\n    contentType: res.headers.get('Content-Type') || ''\n  }))).then(({\n    blob,\n    contentType\n  }) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => resolve({\n      contentType,\n      blob: reader.result\n    });\n\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  })).then(({\n    blob,\n    contentType\n  }) => ({\n    contentType,\n    blob: parseDataUrlContent(blob)\n  })) // on failed\n  .catch(failed); // cache result\n\n  cache[cacheKey] = deferred;\n  return deferred;\n}","import { uuid, toArray } from './util';\n\nfunction formatCSSText(style) {\n  const content = style.getPropertyValue('content');\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\n\nfunction formatCSSProperties(style) {\n  return toArray(style).map(name => {\n    const value = style.getPropertyValue(name);\n    const priority = style.getPropertyPriority(name);\n    return `${name}: ${value}${priority ? ' !important' : ''};`;\n  }).join(' ');\n}\n\nfunction getPseudoElementStyle(className, pseudo, style) {\n  const selector = `.${className}:${pseudo}`;\n  const cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(`${selector}{${cssText}}`);\n}\n\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n  const style = window.getComputedStyle(nativeNode, pseudo);\n  const content = style.getPropertyValue('content');\n\n  if (content === '' || content === 'none') {\n    return;\n  }\n\n  const className = uuid();\n\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`;\n  } catch (err) {\n    return;\n  }\n\n  const styleElement = document.createElement('style');\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n  clonedNode.appendChild(styleElement);\n}\n\nexport function clonePseudoElements(nativeNode, clonedNode) {\n  clonePseudoElement(nativeNode, clonedNode, ':before');\n  clonePseudoElement(nativeNode, clonedNode, ':after');\n}","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\n\nfunction cloneCanvasElement(node) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const dataURL = node.toDataURL();\n\n    if (dataURL === 'data:,') {\n      return Promise.resolve(node.cloneNode(false));\n    }\n\n    return createImage(dataURL);\n  });\n}\n\nfunction cloneVideoElement(node, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return Promise.resolve(node.poster).then(url => getBlobFromURL(url, options)).then(data => makeDataUrl(data.blob, getMimeType(node.poster) || data.contentType)).then(dataURL => createImage(dataURL));\n  });\n}\n\nfunction cloneSingleNode(node, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (node instanceof HTMLCanvasElement) {\n      return cloneCanvasElement(node);\n    }\n\n    if (node instanceof HTMLVideoElement && node.poster) {\n      return cloneVideoElement(node, options);\n    }\n\n    return Promise.resolve(node.cloneNode(false));\n  });\n}\n\nconst isSlotElement = node => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\n\nfunction cloneChildren(nativeNode, clonedNode, options) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function* () {\n    const children = isSlotElement(nativeNode) && nativeNode.assignedNodes ? toArray(nativeNode.assignedNodes()) : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n\n    if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n      return Promise.resolve(clonedNode);\n    }\n\n    return children.reduce((deferred, child) => deferred // eslint-disable-next-line no-use-before-define\n    .then(() => cloneNode(child, options)).then(clonedChild => {\n      // eslint-disable-next-line promise/always-return\n      if (clonedChild) {\n        clonedNode.appendChild(clonedChild);\n      }\n    }), Promise.resolve()).then(() => clonedNode);\n  });\n}\n\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n  const source = window.getComputedStyle(nativeNode);\n  const target = clonedNode.style;\n\n  if (!target) {\n    return;\n  }\n\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    toArray(source).forEach(name => {\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    });\n  }\n}\n\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\n\nfunction decorate(nativeNode, clonedNode) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!(clonedNode instanceof Element)) {\n      return Promise.resolve(clonedNode);\n    }\n\n    return Promise.resolve().then(() => cloneCSSStyle(nativeNode, clonedNode)).then(() => clonePseudoElements(nativeNode, clonedNode)).then(() => cloneInputValue(nativeNode, clonedNode)).then(() => clonedNode);\n  });\n}\n\nexport function cloneNode(node, options, isRoot) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!isRoot && options.filter && !options.filter(node)) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.resolve(node).then(clonedNode => cloneSingleNode(clonedNode, options)).then(clonedNode => cloneChildren(node, clonedNode, options)).then(clonedNode => decorate(node, clonedNode));\n  });\n}","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { getMimeType, isDataUrl, makeDataUrl, resolveUrl } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"'])([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nexport function toRegex(url) {\n  // eslint-disable-next-line no-useless-escape\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n  const result = [];\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\n    result.push(url);\n    return raw;\n  });\n  return result.filter(url => !isDataUrl(url));\n}\nexport function embed(cssText, resourceURL, baseURL, options, get) {\n  const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n  return Promise.resolve(resolvedURL).then(url => get ? get(url) : getBlobFromURL(url, options)).then(data => {\n    if (typeof data === 'string') {\n      return makeDataUrl(data, getMimeType(resourceURL));\n    }\n\n    return makeDataUrl(data.blob, getMimeType(resourceURL) || data.contentType);\n  }).then(dataURL => cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)).then(content => content, () => resolvedURL);\n}\n\nfunction filterPreferredFontFormat(str, {\n  preferredFontFormat\n}) {\n  return !preferredFontFormat ? str : str.replace(FONT_SRC_REGEX, match => {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const [src,, format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n\n      if (!format) {\n        return '';\n      }\n\n      if (format === preferredFontFormat) {\n        return `src: ${src};`;\n      }\n    }\n  });\n}\n\nexport function shouldEmbed(url) {\n  return url.search(URL_REGEX) !== -1;\n}\nexport function embedResources(cssText, baseUrl, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!shouldEmbed(cssText)) {\n      return Promise.resolve(cssText);\n    }\n\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    return Promise.resolve(filteredCSSText).then(parseURLs).then(urls => urls.reduce((deferred, url) => // eslint-disable-next-line promise/no-nesting\n    deferred.then(css => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText)));\n  });\n}","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\n\nfunction embedBackground(clonedNode, options) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function* () {\n    const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n\n    if (!background) {\n      return Promise.resolve(clonedNode);\n    }\n\n    return Promise.resolve(background).then(cssString => embedResources(cssString, null, options)).then(cssString => {\n      clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n      return clonedNode;\n    });\n  });\n}\n\nfunction embedImageNode(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) && !(clonedNode instanceof SVGImageElement && !isDataUrl(clonedNode.href.baseVal))) {\n      return Promise.resolve(clonedNode);\n    }\n\n    const src = clonedNode instanceof HTMLImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    return Promise.resolve(src).then(url => getBlobFromURL(url, options)).then(data => makeDataUrl(data.blob, getMimeType(src) || data.contentType)).then(dataURL => new Promise((resolve, reject) => {\n      clonedNode.onload = resolve;\n      clonedNode.onerror = reject;\n\n      if (clonedNode instanceof HTMLImageElement) {\n        clonedNode.srcset = '';\n        clonedNode.src = dataURL;\n      } else {\n        clonedNode.href.baseVal = dataURL;\n      }\n    })).then(() => clonedNode, () => clonedNode);\n  });\n}\n\nfunction embedChildren(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const children = toArray(clonedNode.childNodes); // eslint-disable-next-line no-use-before-define\n\n    const deferreds = children.map(child => embedImages(child, options));\n    return Promise.all(deferreds).then(() => clonedNode);\n  });\n}\n\nexport function embedImages(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!(clonedNode instanceof Element)) {\n      return Promise.resolve(clonedNode);\n    }\n\n    return Promise.resolve(clonedNode).then(node => embedBackground(node, options)).then(node => embedImageNode(node, options)).then(node => embedChildren(node, options));\n  });\n}","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nconst cssFetchCache = {};\n\nfunction fetchCSS(url) {\n  const cache = cssFetchCache[url];\n\n  if (cache != null) {\n    return cache;\n  }\n\n  const deferred = window.fetch(url).then(res => ({\n    url,\n    cssText: res.text()\n  }));\n  cssFetchCache[url] = deferred;\n  return deferred;\n}\n\nfunction embedFonts(meta) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return meta.cssText.then(raw => {\n      let cssText = raw;\n      const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n      const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n      const loadFonts = fontLocs.map(location => {\n        let url = location.replace(regexUrl, '$1');\n\n        if (!url.startsWith('https://')) {\n          url = new URL(url, meta.url).href;\n        } // eslint-disable-next-line promise/no-nesting\n\n\n        return window.fetch(url).then(res => res.blob()).then(blob => new Promise((resolve, reject) => {\n          const reader = new FileReader();\n\n          reader.onloadend = () => {\n            // Side Effect\n            cssText = cssText.replace(location, `url(${reader.result})`);\n            resolve([location, reader.result]);\n          };\n\n          reader.onerror = reject;\n          reader.readAsDataURL(blob);\n        }));\n      }); // eslint-disable-next-line promise/no-nesting\n\n      return Promise.all(loadFonts).then(() => cssText);\n    });\n  });\n}\n\nfunction parseCSS(source) {\n  if (source == null) {\n    return [];\n  }\n\n  const result = [];\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi; // strip out comments\n\n  let cssText = source.replace(commentsRegex, '');\n  const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi'); // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    const matches = keyframesRegex.exec(cssText);\n\n    if (matches === null) {\n      break;\n    }\n\n    result.push(matches[0]);\n  }\n\n  cssText = cssText.replace(keyframesRegex, '');\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi; // to match css & media queries together\n\n  const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' + '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'; // unified regex\n\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi'); // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    let matches = importRegex.exec(cssText);\n\n    if (matches === null) {\n      matches = unifiedRegex.exec(cssText);\n\n      if (matches === null) {\n        break;\n      } else {\n        importRegex.lastIndex = unifiedRegex.lastIndex;\n      }\n    } else {\n      unifiedRegex.lastIndex = importRegex.lastIndex;\n    }\n\n    result.push(matches[0]);\n  }\n\n  return result;\n}\n\nfunction getCSSRules(styleSheets) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const ret = [];\n    const deferreds = []; // First loop inlines imports\n\n    styleSheets.forEach(sheet => {\n      if ('cssRules' in sheet) {\n        try {\n          toArray(sheet.cssRules).forEach((item, index) => {\n            if (item.type === CSSRule.IMPORT_RULE) {\n              let importIndex = index + 1;\n              const url = item.href;\n              const deferred = fetchCSS(url).then(metadata => metadata ? embedFonts(metadata) : '').then(cssText => parseCSS(cssText).forEach(rule => {\n                try {\n                  sheet.insertRule(rule, rule.startsWith('@import') ? importIndex += 1 : sheet.cssRules.length);\n                } catch (error) {\n                  console.error('Error inserting rule from remote css', {\n                    rule,\n                    error\n                  });\n                }\n              })).catch(e => {\n                console.error('Error loading remote css', e.toString());\n              });\n              deferreds.push(deferred);\n            }\n          });\n        } catch (e) {\n          const inline = styleSheets.find(a => a.href == null) || document.styleSheets[0];\n\n          if (sheet.href != null) {\n            deferreds.push(fetchCSS(sheet.href).then(metadata => metadata ? embedFonts(metadata) : '').then(cssText => parseCSS(cssText).forEach(rule => {\n              inline.insertRule(rule, sheet.cssRules.length);\n            })).catch(err => {\n              console.error('Error loading remote stylesheet', err.toString());\n            }));\n          }\n\n          console.error('Error inlining remote css file', e.toString());\n        }\n      }\n    });\n    return Promise.all(deferreds).then(() => {\n      // Second loop parses rules\n      styleSheets.forEach(sheet => {\n        if ('cssRules' in sheet) {\n          try {\n            toArray(sheet.cssRules).forEach(item => {\n              ret.push(item);\n            });\n          } catch (e) {\n            console.error(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n          }\n        }\n      });\n      return ret;\n    });\n  });\n}\n\nfunction getWebFontRules(cssRules) {\n  return cssRules.filter(rule => rule.type === CSSRule.FONT_FACE_RULE).filter(rule => shouldEmbed(rule.style.getPropertyValue('src')));\n}\n\nfunction parseWebFontRules(node) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      if (node.ownerDocument == null) {\n        reject(new Error('Provided element is not within a Document'));\n      }\n\n      resolve(toArray(node.ownerDocument.styleSheets));\n    }).then(styleSheets => getCSSRules(styleSheets)).then(getWebFontRules);\n  });\n}\n\nexport function getWebFontCSS(node, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return parseWebFontRules(node).then(rules => Promise.all(rules.map(rule => {\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n      return embedResources(rule.cssText, baseUrl, options);\n    }))).then(cssTexts => cssTexts.join('\\n'));\n  });\n}\nexport function embedWebFonts(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return (options.fontEmbedCSS != null ? Promise.resolve(options.fontEmbedCSS) : getWebFontCSS(clonedNode, options)).then(cssText => {\n      const styleNode = document.createElement('style');\n      const sytleContent = document.createTextNode(cssText);\n      styleNode.appendChild(sytleContent);\n\n      if (clonedNode.firstChild) {\n        clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n      } else {\n        clonedNode.appendChild(styleNode);\n      }\n\n      return clonedNode;\n    });\n  });\n}","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { applyStyleWithOptions } from './applyStyleWithOptions';\nimport { embedWebFonts, getWebFontCSS } from './embedWebFonts';\nimport { getNodeWidth, getNodeHeight, getPixelRatio, createImage, canvasToBlob, nodeToDataURL } from './util';\n\nfunction getImageSize(node, options = {}) {\n  const width = options.width || getNodeWidth(node);\n  const height = options.height || getNodeHeight(node);\n  return {\n    width,\n    height\n  };\n}\n\nexport function toSvg(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      width,\n      height\n    } = getImageSize(node, options);\n    return Promise.resolve(node).then(nativeNode => cloneNode(nativeNode, options, true)).then(clonedNode => embedWebFonts(clonedNode, options)).then(clonedNode => embedImages(clonedNode, options)).then(clonedNode => applyStyleWithOptions(clonedNode, options)).then(clonedNode => nodeToDataURL(clonedNode, width, height));\n  });\n}\nconst dimensionCanvasLimit = 16384; // as per https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\n\nfunction checkCanvasDimensions(canvas) {\n  if (canvas.width > dimensionCanvasLimit || canvas.height > dimensionCanvasLimit) {\n    if (canvas.width > dimensionCanvasLimit && canvas.height > dimensionCanvasLimit) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= dimensionCanvasLimit / canvas.width;\n        canvas.width = dimensionCanvasLimit;\n      } else {\n        canvas.width *= dimensionCanvasLimit / canvas.height;\n        canvas.height = dimensionCanvasLimit;\n      }\n    } else if (canvas.width > dimensionCanvasLimit) {\n      canvas.height *= dimensionCanvasLimit / canvas.width;\n      canvas.width = dimensionCanvasLimit;\n    } else {\n      canvas.width *= dimensionCanvasLimit / canvas.height;\n      canvas.height = dimensionCanvasLimit;\n    }\n  }\n}\n\nexport function toCanvas(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return toSvg(node, options).then(createImage).then(img => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      const ratio = options.pixelRatio || getPixelRatio();\n      const {\n        width,\n        height\n      } = getImageSize(node, options);\n      const canvasWidth = options.canvasWidth || width;\n      const canvasHeight = options.canvasHeight || height;\n      canvas.width = canvasWidth * ratio;\n      canvas.height = canvasHeight * ratio;\n\n      if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n      }\n\n      canvas.style.width = `${canvasWidth}`;\n      canvas.style.height = `${canvasHeight}`;\n\n      if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    });\n  });\n}\nexport function toPixelData(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      width,\n      height\n    } = getImageSize(node, options);\n    return toCanvas(node, options).then(canvas => {\n      const ctx = canvas.getContext('2d');\n      return ctx.getImageData(0, 0, width, height).data;\n    });\n  });\n}\nexport function toPng(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return toCanvas(node, options).then(canvas => canvas.toDataURL());\n  });\n}\nexport function toJpeg(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return toCanvas(node, options).then(canvas => canvas.toDataURL('image/jpeg', options.quality || 1));\n  });\n}\nexport function toBlob(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return toCanvas(node, options).then(canvasToBlob);\n  });\n}\nexport function getFontEmbedCSS(node, options = {}) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return getWebFontCSS(node, options);\n  });\n}","export function applyStyleWithOptions(node, options) {\n  const {\n    style\n  } = node;\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor;\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`;\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`;\n  }\n\n  const manual = options.style;\n\n  if (manual != null) {\n    Object.keys(manual).forEach(key => {\n      style[key] = manual[key];\n    });\n  }\n\n  return node;\n}","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Tooltip from '@isle-project/components/tooltip';\n\n\n// MAIN //\n\nclass FullscreenButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\ttoggleFullscreen = () => {\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Tooltip\n\t\t\t\t\tid=\"fullscreen_tooltip\"\n\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\ttooltip={t('toggle-fullscreen')}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tonClick={this.toggleFullscreen}\n\t\t\t\t\t\tstyle={{ position: 'absolute', top: '10px', right: '32px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"fa fa-window-maximize\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.fullscreen}\n\t\t\t\t\tonHide={this.toggleFullscreen}\n\t\t\t\t\tdialogClassName=\"modal-100w\"\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title as=\"h1\">\n\t\t\t\t\t\t\t{t('decision-tree')}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 0.75 * window.innerHeight,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\tfontSize: 32,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"decision-tree decision-tree-fullscreen\">\n\t\t\t\t\t\t\t{this.props.tree}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button onClick={this.toggleFullscreen}>{t('close')}</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFullscreenButton.propTypes = {\n\ttree: PropTypes.node.isRequired\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( FullscreenButton );\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { toJpeg } from 'html-to-image';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isInteger from '@stdlib/assert/is-integer';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport html2clipboard from '@isle-project/utils/html-to-clipboard';\nimport FullscreenButton from './fullscreen_button';\nimport './tree.css';\n\n\n// VARIABLES //\n\nconst RE_NUMBER = /^[+-]?[\\d.]+e?[+-]?\\d*$/;\n\n\n// FUNCTIONS //\n\nfunction treeToHtml( tree, t ) {\n\tif ( !tree ) {\n\t\treturn null;\n\t}\n\tif ( tree.category ) {\n\t\tlet value = tree.category;\n\t\tif ( isNumber( value ) || RE_NUMBER.test( value ) ) {\n\t\t\tvalue = Number( value );\n\t\t\tif ( !isInteger( value ) ) {\n\t\t\t\tvalue = value.toFixed( 6 );\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t<li >\n\t\t\t\t\t<span className=\"decision-tree-leaf\" >{t('predict')}: {value} </span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n\treturn (\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<span><b> {tree.attribute} {tree.predicateName} {tree.pivot} ?</b></span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>{t('no')} ( {tree.notMatchedCount} {t('obs')}) </span>\n\t\t\t\t\t\t{treeToHtml( tree.notMatch, t )}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>{t('yes')} ( {tree.matchedCount} {t('obs')}) </span>\n\t\t\t\t\t\t{treeToHtml( tree.match, t )}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t);\n}\n\n\n// MAIN //\n\nclass TreePlot extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tplotValue: null,\n\t\t\tplotKey: null,\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( !this.tree ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.treeWrapper.scrollLeft = 0.4 * this.tree.clientWidth;\n\t\ttoJpeg( this.tree, {\n\t\t\tbackgroundColor: 'white',\n\t\t\tstyle: {\n\t\t\t\tfontSize: 22\n\t\t\t}\n\t\t}).then( ( data ) => {\n\t\t\tconst value = `<img src=\"${data}\" style=\"display: block; margin: 0 auto; max-width: 100%; max-height: 100%\" />`;\n\t\t\tthis.setState({\n\t\t\t\tplotKey: `<!--IMAGE_LOG:${randomstring( 6 )}_${randomstring( 6 )}-->`,\n\t\t\t\tplotValue: value\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\tconst tree = treeToHtml( this.props.tree, t );\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"decision-tree-wrapper\"\n\t\t\t\tref={( div ) => {\n\t\t\t\t\tthis.treeWrapper = div;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"decision-tree-draggable-bar\"\n\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\tonDragStart={( ev ) => {\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/html', this.state.plotValue );\n\t\t\t\t\t\tev.dataTransfer.setData( 'text/plain', this.state.plotKey );\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thtml2clipboard( this.state.plotValue );\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ float: 'left' }}\n\t\t\t\t>{t('drag-plot')}</button>\n\t\t\t\t<FullscreenButton\n\t\t\t\t\tvariant=\"outline-danger\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({ fullscreen: !this.state.fullscreen });\n\t\t\t\t\t}}\n\t\t\t\t\ttree={tree}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"fa fa-times\" />\n\t\t\t\t</FullscreenButton>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"decision-tree\"\n\t\t\t\t\tref={( div ) => {\n\t\t\t\t\t\tthis.tree = div;\n\t\t\t\t\t}}\n\t\t\t\t>{tree}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( TreePlot );\n","// MAIN //\n\n/**\n* Splitting observations using specific predicate and pivot.\n*/\nfunction split( data, indices, attr, predicate, pivot ) {\n\tconst match = [];\n\tconst notMatch = [];\n\tconst values = data[ attr ];\n\n\tfor ( let i = indices.length - 1; i >= 0; i-- ) {\n\t\tconst idx = indices[ i ];\n\t\tconst attrValue = values[ idx ];\n\t\tif ( predicate( attrValue, pivot ) ) {\n\t\t\tmatch.push( idx );\n\t\t} else {\n\t\t\tnotMatch.push( idx );\n\t\t}\n\t}\n\treturn {\n\t\tmatch: match,\n\t\tnotMatch: notMatch\n\t};\n}\n\n\n// EXPORTS //\n\nexport default split;\n","\n/**\n* Contains MIT-licensed code:\n*\n* The MIT License (MIT)\n*\n* Copyright (c) 2013 Yurii Lahodiuk\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy of\n* this software and associated documentation files (the \"Software\"), to deal in\n* the Software without restriction, including without limitation the rights to\n* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n* the Software, and to permit persons to whom the Software is furnished to do so,\n* subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// MODULES //\n\nimport sample from '@stdlib/random/sample';\nimport contains from '@stdlib/assert/contains';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport ln from '@stdlib/math/base/special/ln';\nimport round from '@stdlib/math/base/special/round';\nimport incrspace from '@stdlib/array/incrspace';\nimport Plot from './tree_plot.js';\nimport split from './split.js';\n\n\n// FUNCTIONS //\n\n/**\n* Calculating how many elements have the same\n* values\n*\n* @param values - array of values\n*/\nfunction countUniqueValues( values, indices ) {\n\tconst counter = {};\n\n\t// Detect different values of attribute:\n\tfor ( let i = indices.length - 1; i >= 0; i--) {\n\t\tconst idx = indices[ i ];\n\t\tcounter[ values[ idx ] ] = 0;\n\t}\n\n\t// Count number of occurrences of each of value:\n\tfor ( let i = indices.length - 1; i >= 0; i--) {\n\t\tconst idx = indices[ i ];\n\t\tcounter[ values[ idx ] ] += 1;\n\t}\n\treturn counter;\n}\n\n/**\n* Finding value which is most frequent in an array.\n*\n* @param values - array of values\n*/\nfunction mostFrequentValue( values, indices ) {\n\t// Counting number of occurrences:\n\tconst counter = countUniqueValues( values, indices );\n\n\tlet mostFrequentCount = 0;\n\tlet mostFrequentValue;\n\tfor ( let value in counter ) {\n\t\tif ( counter[ value ] > mostFrequentCount ) {\n\t\t\tmostFrequentCount = counter[ value ];\n\t\t\tmostFrequentValue = value;\n\t\t}\n\t}\n\treturn mostFrequentValue;\n}\n\nfunction gini( values, indices ) {\n\tconst counter = countUniqueValues( values, indices );\n\tlet out = 0;\n\tfor ( let i in counter ) {\n\t\tif ( hasOwnProp( counter, i ) ) {\n\t\t\tconst p = counter[i] / indices.length;\n\t\t\tout += p * (1-p);\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Calculating entropy of a variable.\n*\n* @param values - array of values\n*/\nfunction entropy( values, indices ) {\n\t// Count number of occurrences of each value:\n\tconst counter = countUniqueValues( values, indices );\n\tlet entropy = 0;\n\tfor ( let i in counter ) {\n\t\tif ( hasOwnProp( counter, i ) ) {\n\t\t\tconst p = counter[i] / indices.length;\n\t\t\tentropy += -p * ln(p);\n\t\t}\n\t}\n\treturn entropy;\n}\n\n/**\n* Calculates the variance of a variable.\n*\n* @param values - array of values\n*/\nfunction variance( values, indices ) {\n\tconst len = indices.length;\n\tlet delta = 0;\n\tlet mean = 0;\n\tlet M2 = 0;\n\tlet N = 0;\n\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tif ( len < 2 ) {\n\t\treturn 0;\n\t}\n\tfor ( let i = 0; i < len; i++ ) {\n\t\tconst idx = indices[ i ];\n\t\tconst x = values[ idx ];\n\t\tN += 1;\n\t\tdelta = x - mean;\n\t\tmean += delta / N;\n\t\tM2 += delta * ( x - mean );\n\t}\n\treturn M2 / ( N - 1 );\n}\n\n/**\n* Calculates the mean of a variable.\n*\n* @param values - array of values\n*/\nfunction mean( values, indices ) {\n\tconst len = indices.length;\n\tif ( !len ) {\n\t\treturn null;\n\t}\n\tlet mu = 0;\n\tfor ( let i = 0; i < len; i++ ) {\n\t\tconst idx = indices[ i ];\n\t\tconst delta = values[ idx ] - mu;\n\t\tmu += delta / (i+1);\n\t}\n\treturn mu;\n}\n\n// VARIABLES //\n\nconst predicates = {\n\t'==': ( a, b ) => a == b, // eslint-disable-line eqeqeq\n\t'>=': ( a, b ) => a >= b\n};\n\n\n// MAIN //\n\n/**\n* Creates an instance of a decision tree for classification problems.\n*\n* @constructor\n* @param opts - contains training set and some configuration parameters\n*/\nfunction ClassificationTreeConstructor( opts ) {\n\tconst nobs = opts.data[ opts.response ].length;\n\n\tthis.importances = {};\n\tfor ( let j = 0; j < opts.predictors.length; j++ ) {\n\t\tthis.importances[ opts.predictors[ j ] ] = 0;\n\t}\n\tthis.root = buildClassificationTree({\n\t\tdata: opts.data,\n\t\tresponse: opts.response,\n\t\tpredictors: opts.predictors,\n\t\tindices: opts.indices ? opts.indices : incrspace( 0, nobs, 1 ),\n\t\tminItemsCount: opts.minItemsCount || 50,\n\t\tminBucket: opts.minBucket || ( round( ( opts.minItemsCount || 50 ) / 3 )),\n\t\tscoreThreshold: opts.scoreThreshold || 0.01,\n\t\tmaxTreeDepth: opts.maxTreeDepth || 20,\n\t\tquantitative: opts.quantitative,\n\t\tcriterion: opts.criterion === 'gini' ? gini : entropy\n\t}, this.importances );\n\n\tthis.predict = ( data, idx ) => {\n\t\tif ( idx === void 0 ) {\n\t\t\tconst nobs = data[ opts.predictors[ 0 ] ].length;\n\t\t\tconst out = new Array( nobs );\n\t\t\tfor ( let i = 0; i < nobs; i++ ) {\n\t\t\t\tout[ i ] = predict( this.root, data, i );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn predict( this.root, data, idx );\n\t};\n}\n\n/**\n * Creates an instance of DecisionTree\n *\n * @constructor\n * @param builder - contains training set and\n *                  some configuration parameters\n */\nfunction RegressionTreeConstructor( opts ) {\n\tconst nobs = opts.data[ opts.response ].length;\n\n\tthis.root = buildRegressionTree({\n\t\tdata: opts.data,\n\t\tresponse: opts.response,\n\t\tpredictors: opts.predictors,\n\t\tindices: opts.indices ? opts.indices : incrspace( 0, nobs, 1 ),\n\t\tminItemsCount: opts.minItemsCount || 50,\n\t\tminBucket: opts.minBucket || ( round( ( opts.minItemsCount || 50 ) / 3 )),\n\t\tscoreThreshold: opts.scoreThreshold || 0.01,\n\t\tmaxTreeDepth: opts.maxTreeDepth || 20,\n\t\tquantitative: opts.quantitative\n\t});\n\n\tthis.predict = ( data, idx ) => {\n\t\tif ( idx === void 0 ) {\n\t\t\tconst nobs = data[ opts.predictors[ 0 ] ].length;\n\t\t\tconst out = new Array( nobs );\n\t\t\tfor ( let i = 0; i < nobs; i++ ) {\n\t\t\t\tout[ i ] = Number( predict( this.root, data, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn Number( predict( this.root, data, idx ) );\n\t};\n}\n\n/**\n* Creates an instance of RandomForest with specific number of trees.\n*\n* @constructor\n* @param opts - contains configuration parameters for building decision trees\n*/\nfunction RandomForestClassifierConstructor( opts ) {\n\tthis.trees = buildRandomForestClassifier( opts );\n\tthis.importances = {};\n\tfor ( let i = 0; i < opts.predictors.length; i++ ) {\n\t\tconst attr = opts.predictors[ i ];\n\t\tthis.importances[ attr ] = 0;\n\t\tfor ( let j = 0; j < this.trees.length; j++ ) {\n\t\t\tthis.importances[ attr ] += this.trees[ j ].importances[ attr ];\n\t\t}\n\t\tthis.importances[ attr ] /= this.trees.length;\n\t}\n\tthis.predict = ( data, idx ) => {\n\t\tif ( idx === void 0 ) {\n\t\t\tconst nobs = data[ opts.predictors[ 0 ] ].length;\n\t\t\tconst out = new Array( nobs );\n\t\t\tfor ( let i = 0; i < nobs; i++ ) {\n\t\t\t\tout[ i ] = predictRandomForest( this.trees, data, i );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn predictRandomForest( this.trees, data, idx );\n\t};\n}\n\n/**\n* Function for building classification decision tree.\n*/\nfunction buildClassificationTree( opts, importances ) {\n\tconst {\n\t\tdata, predictors, indices, response,\n\t\tminItemsCount, scoreThreshold, maxTreeDepth,\n\t\tquantitative, criterion, minBucket, nTry\n\t} = opts;\n\tconst nobs = indices.length;\n\tif ( ( maxTreeDepth === 0 ) || ( nobs <= minItemsCount ) ) {\n\t\t// Restriction by maximal depth of tree or size of training set is to small so we have to terminate process of building tree...\n\t\treturn {\n\t\t\tcategory: mostFrequentValue( data[ response ], indices )\n\t\t};\n\t}\n\tconst initialScore = criterion( data[ response ], indices );\n\n\t// Used as hash-set for avoiding the checking of split by rules with the same 'attribute-predicate-pivot' more than once\n\tconst alreadyChecked = {};\n\n\tlet bestSplit = {\n\t\tgain: 0\n\t};\n\tif ( nTry ) {\n\t\tpredictors = sample( predictors, { size: nTry });\n\t}\n\tfor ( let i = nobs - 1; i >= 0; i-- ) {\n\t\tconst idx = indices[ i ];\n\t\tfor ( let j = 0; j < predictors.length; j++ ) {\n\t\t\tconst attr = predictors[ j ];\n\n\t\t\t// Let the value of current attribute be the pivot:\n\t\t\tconst pivot = data[ attr ][ idx ];\n\n\t\t\t// Pick the predicate depending on the type of the attribute value...\n\t\t\tlet predicateName;\n\t\t\tif ( contains( quantitative, attr ) ) {\n\t\t\t\tpredicateName = '>=';\n\t\t\t} else {\n\t\t\t\t// No sense to compare non-numeric attributes so we will check only equality of such attributes...\n\t\t\t\tpredicateName = '==';\n\t\t\t}\n\n\t\t\tconst attrPredPivot = attr + predicateName + pivot;\n\t\t\tif ( alreadyChecked[attrPredPivot] ) {\n\t\t\t\t// Skip such pairs of 'attribute-predicate-pivot' which have been already checked...\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\talreadyChecked[ attrPredPivot ] = true;\n\t\t\tconst predicate = predicates[ predicateName ];\n\n\t\t\t// Splitting training set by given 'attribute-predicate-value':\n\t\t\tconst currSplit = split( data, indices, attr, predicate, pivot );\n\n\t\t\t// Recursively calculating for subsets:\n\t\t\tconst matchEntropy = criterion( data[ response ], currSplit.match );\n\t\t\tconst notMatchEntropy = criterion( data[ response ], currSplit.notMatch );\n\n\t\t\t// Calculating gain:\n\t\t\tlet newScore = 0;\n\t\t\tnewScore += matchEntropy * currSplit.match.length;\n\t\t\tnewScore += notMatchEntropy * currSplit.notMatch.length;\n\t\t\tnewScore /= nobs;\n\t\t\tconst currGain = initialScore - newScore;\n\t\t\tif (\n\t\t\t\tcurrGain > bestSplit.gain &&\n\t\t\t\tcurrSplit.match.length > minBucket &&\n\t\t\t\tcurrSplit.notMatch.length > minBucket\n\t\t\t) {\n\t\t\t\t// Remember pairs 'attribute-predicate-value' which provide gain...\n\t\t\t\tbestSplit = currSplit;\n\t\t\t\tbestSplit.predicateName = predicateName;\n\t\t\t\tbestSplit.predicate = predicate;\n\t\t\t\tbestSplit.attribute = attr;\n\t\t\t\tbestSplit.pivot = pivot;\n\t\t\t\tbestSplit.gain = currGain;\n\t\t\t}\n\t\t}\n\t}\n\tif ( !bestSplit.gain || ( bestSplit.gain / initialScore ) < scoreThreshold ) {\n\t\treturn { category: mostFrequentValue( data[ response ], indices ) };\n\t}\n\t// Building sub-trees:\n\topts.maxTreeDepth = maxTreeDepth - 1;\n\n\timportances[ bestSplit.attribute ] += bestSplit.gain;\n\n\topts.indices = bestSplit.match;\n\tconst matchSubTree = buildClassificationTree( opts, importances );\n\n\topts.indices = bestSplit.notMatch;\n\tconst notMatchSubTree = buildClassificationTree( opts, importances );\n\n\treturn {\n\t\tattribute: bestSplit.attribute,\n\t\tpredicate: bestSplit.predicate,\n\t\tpredicateName: bestSplit.predicateName,\n\t\tpivot: bestSplit.pivot,\n\t\tmatch: matchSubTree,\n\t\tnotMatch: notMatchSubTree,\n\t\tmatchedCount: bestSplit.match.length,\n\t\tnotMatchedCount: bestSplit.notMatch.length\n\t};\n}\n\n/**\n* Function for building classification decision tree.\n*/\nfunction buildRegressionTree( opts ) {\n\tconst {\n\t\tdata, predictors, indices, response,\n\t\tminItemsCount, scoreThreshold, maxTreeDepth,\n\t\tquantitative, minBucket, nTry\n\t} = opts;\n\n\tconst nobs = indices.length;\n\tif ((maxTreeDepth === 0) || ( nobs <= minItemsCount)) {\n\t\t// restriction by maximal depth of tree\n\t\t// or size of training set is to small\n\t\t// so we have to terminate process of building tree\n\t\treturn {\n\t\t\tcategory: mean( data[ response ], indices )\n\t\t};\n\t}\n\n\tconst initialScore = variance( data[ response ], indices );\n\n\t// used as hash-set for avoiding the checking of split by rules\n\t// with the same 'attribute-predicate-pivot' more than once\n\tconst alreadyChecked = {};\n\n\t// this variable expected to contain rule, which splits training set\n\t// into subsets with smaller values of entropy (produces informational gain)\n\tlet bestSplit = {\n\t\tgain: 0\n\t};\n\n\tif ( nTry ) {\n\t\tpredictors = sample( predictors, { size: nTry });\n\t}\n\tfor ( let i = nobs - 1; i >= 0; i-- ) {\n\t\tconst idx = indices[ i ];\n\n\t\t// iterating over all attributes of item\n\t\tfor ( let j = 0; j < predictors.length; j++ ) {\n\t\t\tconst attr = predictors[ j ];\n\n\t\t\t// let the value of current attribute be the pivot\n\t\t\tconst pivot = data[ attr ][ idx ];\n\n\t\t\t// Pick the predicate depending on the type of the attribute value:\n\t\t\tlet predicateName;\n\t\t\tif ( contains( quantitative, attr ) ) {\n\t\t\t\tpredicateName = '>=';\n\t\t\t} else {\n\t\t\t\t// There is no sense to compare non-numeric attributes so we will check only equality of such attributes...\n\t\t\t\tpredicateName = '==';\n\t\t\t}\n\n\t\t\tconst attrPredPivot = attr + predicateName + pivot;\n\t\t\tif ( alreadyChecked[attrPredPivot] ) {\n\t\t\t\t// skip such pairs of 'attribute-predicate-pivot',\n\t\t\t\t// which been already checked\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\talreadyChecked[ attrPredPivot ] = true;\n\n\t\t\tconst predicate = predicates[ predicateName ];\n\n\t\t\t// splitting training set by given 'attribute-predicate-value'\n\t\t\tconst currSplit = split( data, indices, attr, predicate, pivot );\n\n\t\t\t// calculating for subsets:\n\t\t\tconst matchEntropy = variance( data[ response ], currSplit.match );\n\t\t\tconst notMatchEntropy = variance( data[ response ], currSplit.notMatch );\n\n\t\t\t// calculating informational gain\n\t\t\tlet newScore = 0;\n\t\t\tnewScore += matchEntropy * currSplit.match.length;\n\t\t\tnewScore += notMatchEntropy * currSplit.notMatch.length;\n\t\t\tnewScore /= nobs;\n\t\t\tconst currGain = initialScore - newScore;\n\t\t\tif (\n\t\t\t\tcurrGain > bestSplit.gain &&\n\t\t\t\tcurrSplit.match.length > minBucket &&\n\t\t\t\tcurrSplit.notMatch.length > minBucket\n\t\t\t) {\n\t\t\t\tbestSplit = currSplit;\n\t\t\t\tbestSplit.predicateName = predicateName;\n\t\t\t\tbestSplit.predicate = predicate;\n\t\t\t\tbestSplit.attribute = attr;\n\t\t\t\tbestSplit.pivot = pivot;\n\t\t\t\tbestSplit.gain = currGain;\n\t\t\t}\n\t\t}\n\t}\n\tif ( !bestSplit.gain || ( bestSplit.gain / initialScore ) < scoreThreshold ) {\n\t\treturn { category: mean( data[ response ], indices ) };\n\t}\n\n\t// Building sub-trees:\n\topts.maxTreeDepth = maxTreeDepth - 1;\n\n\topts.indices = bestSplit.match;\n\tconst matchSubTree = buildRegressionTree( opts );\n\n\topts.indices = bestSplit.notMatch;\n\tconst notMatchSubTree = buildRegressionTree( opts );\n\n\treturn {\n\t\tattribute: bestSplit.attribute,\n\t\tpredicate: bestSplit.predicate,\n\t\tpredicateName: bestSplit.predicateName,\n\t\tpivot: bestSplit.pivot,\n\t\tmatch: matchSubTree,\n\t\tnotMatch: notMatchSubTree,\n\t\tmatchedCount: bestSplit.match.length,\n\t\tnotMatchedCount: bestSplit.notMatch.length\n\t};\n}\n\n/**\n* Returns the predicted value for the i-th observation using the decision tree.\n*/\nfunction predict( tree, data, i ) {\n\t// Traversing tree from the root to leaf:\n\twhile ( true ) {\n\t\tif ( tree.category ) {\n\t\t\t// Only leafs contains predicted category...\n\t\t\treturn tree.category;\n\t\t}\n\t\tconst attr = tree.attribute;\n\t\tconst value = data[ attr ][ i ];\n\t\tconst predicate = tree.predicate;\n\t\tconst pivot = tree.pivot;\n\n\t\t// Move to one of the sub-trees:\n\t\tif ( predicate( value, pivot ) ) {\n\t\t\ttree = tree.match;\n\t\t} else {\n\t\t\ttree = tree.notMatch;\n\t\t}\n\t}\n}\n\n/**\n* Building array of decision trees.\n*/\nfunction buildRandomForestClassifier( opts ) {\n\t// Creating training sets for each tree:\n\tconst trainingSets = [];\n\tconst nobs = opts.data[ opts.response ].length;\n\tconst indices = incrspace( 0, nobs, 1 );\n\tfor ( let t = 0; t < opts.nTrees; t++ ) {\n\t\ttrainingSets[ t ] = sample( indices );\n\t}\n\tconst forest = [];\n\tfor ( let t = 0; t < opts.nTrees; t++ ) {\n\t\topts.indices = trainingSets[ t ];\n\t\tconst tree = new ClassificationTreeConstructor( opts );\n\t\tforest.push( tree );\n\t}\n\treturn forest;\n}\n\n/**\n* Returns the majority vote prediction for the chosen item.\n*/\nfunction predictRandomForest( forest, data, idx ) {\n\tconst result = {};\n\tfor ( let i = 0; i < forest.length; i++ ) {\n\t\tconst tree = forest[ i ];\n\t\tconst prediction = tree.predict( data, idx );\n\t\tresult[ prediction ] = result[ prediction ] ? result[ prediction ] + 1 : 1;\n\t}\n\tlet max = -1;\n\tlet out;\n\tfor ( let key in result ) {\n\t\tif ( hasOwnProp( result, key ) ) {\n\t\t\tif ( result[ key ] > max ) {\n\t\t\t\tmax = result[ key ];\n\t\t\t\tout = key;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport const ClassificationTree = ClassificationTreeConstructor;\nexport const RegressionTree = RegressionTreeConstructor;\nexport const RandomForestClassifier = RandomForestClassifierConstructor;\nexport const TreePlot = Plot;\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","getMimeType","url","extension","match","exec","getExtension","toLowerCase","isDataUrl","search","makeDataUrl","content","mimeType","uuid","counter","Math","random","pow","toString","slice","toArray","arrayLike","arr","i","l","length","push","px","node","styleProperty","val","window","getComputedStyle","getPropertyValue","parseFloat","replace","createImage","img","Image","onload","onerror","crossOrigin","decoding","src","nodeToDataURL","width","height","this","xmlns","document","createElementNS","foreignObject","setAttribute","appendChild","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","cache","getBlobFromURL","options","cacheKey","key","test","getCacheKey","cacheBust","Date","getTime","deferred","fetch","res","blob","contentType","headers","get","reader","FileReader","onloadend","readAsDataURL","dataURL","split","catch","reason","placeholder","imagePlaceholder","parts","msg","message","console","error","getPseudoElementStyle","className","pseudo","style","selector","cssText","formatCSSText","map","name","getPropertyPriority","join","formatCSSProperties","createTextNode","clonePseudoElement","nativeNode","clonedNode","err","styleElement","createElement","cloneSingleNode","HTMLCanvasElement","toDataURL","cloneNode","cloneCanvasElement","HTMLVideoElement","poster","data","cloneVideoElement","decorate","Element","source","target","forEach","setProperty","cloneCSSStyle","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","cloneInputValue","isRoot","filter","_a","children","tagName","toUpperCase","assignedNodes","shadowRoot","childNodes","reduce","child","clonedChild","cloneChildren","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","parseURLs","raw","quotation","resourceURL","baseURL","resolvedURL","baseUrl","location","protocol","doc","implementation","createHTMLDocument","base","a","head","body","href","resolveUrl","escaped","RegExp","toRegex","shouldEmbed","embedResources","filteredCSSText","str","preferredFontFormat","format","filterPreferredFontFormat","urls","css","embedImages","background","cssString","embedBackground","HTMLImageElement","SVGImageElement","baseVal","srcset","embedImageNode","deferreds","all","embedChildren","cssFetchCache","fetchCSS","text","embedFonts","meta","regexUrl","loadFonts","startsWith","URL","parseCSS","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","getWebFontRules","cssRules","rule","type","CSSRule","FONT_FACE_RULE","parseWebFontRules","ownerDocument","Error","styleSheets","ret","sheet","item","index","IMPORT_RULE","importIndex","metadata","insertRule","inline","find","getCSSRules","embedWebFonts","fontEmbedCSS","rules","parentStyleSheet","cssTexts","styleNode","sytleContent","firstChild","insertBefore","getImageSize","leftBorder","rightBorder","clientWidth","getNodeWidth","topBorder","bottomBorder","clientHeight","getNodeHeight","toSvg","backgroundColor","manual","Object","keys","applyStyleWithOptions","dimensionCanvasLimit","toCanvas","canvas","context","getContext","ratio","pixelRatio","FINAL_PROCESS","process","env","devicePixelRatio","parseInt","Number","isNaN","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","fillStyle","fillRect","drawImage","FullscreenButton","Component","constructor","super","setState","fullscreen","state","render","t","props","Fragment","id","placement","tooltip","Button","variant","size","onClick","toggleFullscreen","position","top","right","Modal","show","onHide","dialogClassName","closeButton","as","innerHeight","fontSize","overflow","tree","propTypes","PropTypes","withTranslation","RE_NUMBER","treeToHtml","category","isNumber","isInteger","toFixed","attribute","predicateName","pivot","notMatchedCount","notMatch","matchedCount","TreePlot","plotValue","plotKey","componentDidMount","treeWrapper","scrollLeft","quality","toJpeg","randomstring","ref","div","draggable","onDragStart","ev","dataTransfer","setData","html2clipboard","float","indices","attr","predicate","values","idx","countUniqueValues","mostFrequentValue","mostFrequentCount","gini","out","hasOwnProp","p","entropy","ln","variance","len","delta","mean","M2","N","x","mu","predicates","b","ClassificationTreeConstructor","opts","nobs","response","importances","j","predictors","root","buildClassificationTree","incrspace","minItemsCount","minBucket","round","scoreThreshold","maxTreeDepth","quantitative","criterion","predict","Array","nTry","initialScore","alreadyChecked","bestSplit","gain","sample","contains","attrPredPivot","currSplit","matchEntropy","notMatchEntropy","newScore","currGain","matchSubTree","notMatchSubTree","buildRegressionTree","predictRandomForest","forest","prediction","max","ClassificationTree","RegressionTree","RandomForestClassifier","trees","trainingSets","nTrees","buildRandomForestClassifier","Plot"],"sourceRoot":""}