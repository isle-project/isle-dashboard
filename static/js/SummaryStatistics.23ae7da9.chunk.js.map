{"version":3,"file":"static/js/SummaryStatistics.23ae7da9.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/summary-statistics/main.js","../node_modules/@stdlib/utils/papply-right/lib/index.js","../node_modules/@stdlib/utils/papply-right/lib/papply_right.js"],"sourcesContent":["// MODULES //\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport papplyRight from '@stdlib/utils/papply-right';\nimport round from '@stdlib/math/base/special/round';\nimport objectKeys from '@stdlib/utils/keys';\nimport isArray from '@stdlib/assert/is-array';\nimport entries from '@stdlib/utils/entries';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/assert/is-nan';\nimport extractUsedCategories from '@isle-project/utils/extract-used-categories';\nimport Table from '@isle-project/components/table';\nimport statistic from '@isle-project/utils/statistic';\nimport { Factor } from '@isle-project/utils/factor-variable';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\n\n\n// VARIABLES //\n\nconst N = 'N';\nconst IQR = 'IQR';\nconst SORT_OPTS = {\n\t'numeric': true // Use numeric collation such that \"1\" < \"2\" < \"10\"...\n};\n\n\n// FUNCTIONS //\n\nconst IQRTable = ({ e, t }) => {\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>{t('variable')}</th>\n\t\t\t\t<th>{IQR}</th>\n\t\t\t\t<th>{t('lower')}</th>\n\t\t\t\t<th>{t('upper')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res, idx ) => {\n\t\t\t\treturn ( <tr key={idx} >\n\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t{res[ 1 ].value[ 0 ].map( ( e, i ) =>\n\t\t\t\t\t\t<td key={i}>{e.toFixed( 3 )}</td>\n\t\t\t\t\t)}\n\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t</tr> );\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n};\n\nconst RangeTable = ({ e, t }) => {\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>{t('variable')}</th>\n\t\t\t\t<th>{t('range')}</th>\n\t\t\t\t<th>{t('min')}</th>\n\t\t\t\t<th>{t('max')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res, idx ) => {\n\t\t\t\treturn ( <tr key={idx} >\n\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t{res[ 1 ].value[ 0 ].map( ( e, i ) =>\n\t\t\t\t\t\t<td key={i}>{e.toFixed( 3 )}</td>\n\t\t\t\t\t)}\n\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t</tr> );\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n};\n\nconst CorrelationTable = ( props ) => {\n\tconst title = props.group ? props.group : 'Correlation Matrix';\n\tconst thead = <thead>\n\t\t<tr>\n\t\t\t<th>{title} (N={props.result.size})</th>\n\t\t\t{props.variables.map( ( x, i ) => <th key={i}>{x}</th> )}\n\t\t</tr>\n\t</thead>;\n\tconst tbody = <tbody>\n\t\t{props.variables.map( ( x, i ) => {\n\t\t\treturn (\n\t\t\t\t<tr key={i}>\n\t\t\t\t\t<th>{x}</th>\n\t\t\t\t\t{props.result.value[ i ].map( ( y, j ) => <td key={j}>{y.toFixed( 3 )}</td> )}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})}\n\t</tbody>;\n\treturn ( <Table bordered size=\"sm\" {...props} >\n\t\t{thead}\n\t\t{tbody}\n\t</Table> );\n};\n\nconst CorrelationMatrix = ({ e, t }) => {\n\tif ( e.group ) {\n\t\tconst tables = [];\n\t\tconst keys = objectKeys( e.result );\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\tconst key = keys[ i ];\n\t\t\tconst table = <CorrelationTable\n\t\t\t\tkey={key}\n\t\t\t\tgroup={key}\n\t\t\t\tresult={e.result[ key ]}\n\t\t\t\tvariables={e.variables}\n\t\t\t/>;\n\t\t\ttables.push( table );\n\t\t}\n\t\treturn tables;\n\t}\n\treturn <CorrelationTable result={e.result} variables={e.variables} />;\n};\n\n\nfunction byWithCount( arr, factor, funs, group ) {\n\tlet table = {};\n\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\tif ( !isArray( table[ factor[ i ] ]) ) {\n\t\t\ttable[ factor[ i ] ] = [];\n\t\t}\n\t\ttable[ factor[ i ] ].push( arr[ i ]);\n\t}\n\tlet keys = objectKeys( table );\n\tif ( group.length === 2 ) {\n\t\tconst cat1 = group[ 0 ].categories;\n\t\tconst cat2 = group[ 1 ].categories;\n\t\tif ( cat1 && cat2 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = cat1.indexOf( as[ 0 ] ) - cat1.indexOf( bs[ 0 ] );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\tdiff = cat2.indexOf( as[ 1 ] ) - cat2.indexOf( bs[ 1 ] );\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\t\telse if ( cat1 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = cat1.indexOf( as[ 0 ] ) - cat1.indexOf( bs[ 0 ] );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\treturn as[ 1 ].localeCompare( bs[ 1 ], void 0, SORT_OPTS );\n\t\t\t});\n\t\t}\n\t\telse if ( cat2 ) {\n\t\t\tkeys.sort( ( a, b ) => {\n\t\t\t\tconst as = a.split( ':' );\n\t\t\t\tconst bs = b.split( ':' );\n\t\t\t\tlet diff = as[ 0 ].localeCompare( bs[ 0 ], void 0, SORT_OPTS );\n\t\t\t\tif ( diff !== 0 ) {\n\t\t\t\t\treturn diff;\n\t\t\t\t}\n\t\t\t\tdiff = cat2.indexOf( as[ 1 ] ) - cat2.indexOf( bs[ 1 ] );\n\t\t\t\treturn diff;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t\t}\n\t} else if ( group.length === 1 && group[ 0 ].categories ) {\n\t\tkeys = extractUsedCategories( table, group[ 0 ] );\n\t} else {\n\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t}\n\tconst out = {};\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tout[ key ] = {\n\t\t\tvalue: funs.map( f => f( table[ key ] ) ),\n\t\t\tsize: table[ key ].length\n\t\t};\n\t}\n\treturn out;\n}\n\nfunction by2WithCount( arr1, arr2, factor, funs, group ) {\n\tlet result = {};\n\tlet ret1 = {};\n\tlet ret2 = {};\n\tfor ( let i = 0; i < factor.length; i++ ) {\n\t\tif ( !isArray( ret1[ factor[ i ] ]) ) {\n\t\t\tret1[ factor[ i ] ] = [];\n\t\t\tret2[ factor[ i ] ] = [];\n\t\t}\n\t\tret1[ factor[ i ] ].push( arr1[ i ]);\n\t\tret2[ factor[ i ] ].push( arr2[ i ]);\n\t}\n\tlet keys;\n\tif ( group.length === 1 ) {\n\t\tkeys = extractUsedCategories( ret1, group[ 0 ] );\n\t} else {\n\t\tkeys = objectKeys( ret1 );\n\t\tkeys.sort( ( a, b ) => a.localeCompare( b, void 0, SORT_OPTS ) );\n\t}\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tresult[ key ] = {\n\t\t\tvalue: funs.map( f => f( ret1[ key ], ret2[ key ]) ),\n\t\t\tsize: ret1[ key ].length\n\t\t};\n\t}\n\treturn { keys, result };\n}\n\nfunction groupedCompleteCases( arrs, groupData ) {\n\tconst indices = [];\n\tconst len = arrs[ 0 ].length;\n\tfor ( let j = 0; j < len; j++ ) {\n\t\tlet complete = true;\n\t\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\t\tconst x = arrs[ i ][ j ];\n\t\t\tif ( !isNumber( x ) || isnan( x ) ) {\n\t\t\t\tcomplete = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( complete ) {\n\t\t\tindices.push( j );\n\t\t}\n\t}\n\tconst out = {};\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tfor ( let j = 0; j < indices.length; j++ ) {\n\t\t\tconst group = groupData[ indices[ j ] ];\n\t\t\tif ( !out[ group ] ) {\n\t\t\t\tout[ group ] = new Array( arrs.length );\n\t\t\t\tfor ( let k = 0; k < arrs.length; k++ ) {\n\t\t\t\t\tout[ group ][ k ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst idx = indices[ j ];\n\t\t\tout[ group ][ i ].push( arrs[ i ][ idx ] );\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction groupedCases( arrs, groupData ) {\n\tconst out = {};\n\tconst len = arrs[ 0 ].length;\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tfor ( let j = 0; j < len; j++ ) {\n\t\t\tconst group = groupData[ j ];\n\t\t\tif ( !out[ group ] ) {\n\t\t\t\tout[ group ] = new Array( arrs.length );\n\t\t\t\tfor ( let k = 0; k < arrs.length; k++ ) {\n\t\t\t\t\tout[ group ][ k ] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\tout[ group ][ i ].push( arrs[ i ][ j ] );\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction completeCases( arrs ) {\n\tconst indices = [];\n\tconst len = arrs[ 0 ].length;\n\tfor ( let j = 0; j < len; j++ ) {\n\t\tlet complete = true;\n\t\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\t\tconst x = arrs[ i ][ j ];\n\t\t\tif ( !isNumber( x ) || isnan( x ) ) {\n\t\t\t\tcomplete = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( complete ) {\n\t\t\tindices.push( j );\n\t\t}\n\t}\n\tconst out = new Array( arrs.length );\n\tfor ( let i = 0; i < arrs.length; i++ ) {\n\t\tconst arr = new Array( indices.length );\n\t\tfor ( let j = 0; j < indices.length; j++ ) {\n\t\t\tconst idx = indices[ j ];\n\t\t\tarr[ j ] = arrs[ i ][ idx ];\n\t\t}\n\t\tout[ i ] = arr;\n\t}\n\treturn out;\n}\n\nfunction generateStatistics({ data, t, statistics, variables, secondVariable, group, omit, quantiles }) {\n\tconst funs = [];\n\tconst statLabels = [];\n\tfor ( let i = 0; i < statistics.length; i++ ) {\n\t\tconst stat = statistics[ i ];\n\t\tif ( stat === 'Quantile' ) {\n\t\t\tfor ( let j = 0; j < quantiles.length; j++ ) {\n\t\t\t\tconst quantile = quantiles[ j ];\n\t\t\t\tfuns.push(\n\t\t\t\t\tpapplyRight( statistic( stat ), quantile, 5 )\n\t\t\t\t);\n\t\t\t\tstatLabels.push(\n\t\t\t\t\t`${round( quantile*100 )}% ${t('quantile')}`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tfuns.push( statistic( stat ) );\n\t\t\tstatLabels.push( stat );\n\t\t}\n\t}\n\tif ( statLabels[ 0 ] === 'Correlation Matrix' ) {\n\t\tlet arrs = variables.map( x => data[ x ] );\n\t\tif ( group ) {\n\t\t\tlet groupData;\n\t\t\tif ( group.length === 2 ) {\n\t\t\t\tgroupData = [];\n\t\t\t\tfor ( let i = 0; i < arrs[ 0 ].length; i++ ) {\n\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t}).join( ':' );\n\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgroupData = data[ group[ 0 ] ];\n\t\t\t}\n\t\t\tif ( omit ) {\n\t\t\t\tarrs = groupedCompleteCases( arrs, groupData );\n\t\t\t} else {\n\t\t\t\tarrs = groupedCases( arrs, groupData );\n\t\t\t}\n\t\t} else if ( omit ) {\n\t\t\tarrs = completeCases( arrs );\n\t\t}\n\t\tlet result;\n\t\tif ( group ) {\n\t\t\tresult = {};\n\t\t\tconst keys = objectKeys( arrs );\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tresult[ keys[ i ] ] = {\n\t\t\t\t\tvalue: funs.map( f => f.apply( null, arrs[ keys[ i ] ] ) )[ 0 ],\n\t\t\t\t\tsize: arrs[ keys[ i ] ][ 0 ].length\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tconst value = funs.map( f => f.apply( null, arrs ) );\n\t\t\tresult = {\n\t\t\t\tvalue: value[ 0 ],\n\t\t\t\tsize: arrs[ 0 ].length\n\t\t\t};\n\t\t}\n\t\tconst output = {\n\t\t\tvariables: variables,\n\t\t\tstatistics: statLabels,\n\t\t\ttype: 'Statistics',\n\t\t\tresult,\n\t\t\tgroup\n\t\t};\n\t\treturn output;\n\t}\n\tconst result = {};\n\tfor ( let i = 0; i < variables.length; i++ ) {\n\t\tlet groupData;\n\t\tlet res;\n\t\tlet x;\n\t\tlet y;\n\t\tconst variable = variables[ i ];\n\t\tif ( group ) {\n\t\t\tif ( omit ) {\n\t\t\t\t// Case: grouping variable selected, omit missing values\n\t\t\t\tx = [];\n\t\t\t\ty = [];\n\t\t\t\tgroupData = [];\n\t\t\t\tif ( variable && secondVariable ) {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tlet second = data[ secondVariable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) &&\n\t\t\t\t\t\t\t( isNumber( second[ i ] ) && !isnan( second[ i ] ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\ty.push( second[ i ] );\n\t\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif ( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Case: grouping variable(s) selected, do not omit missing values\n\t\t\t\tx = data[ variable ];\n\t\t\t\ty = data[ secondVariable ];\n\t\t\t\tif ( group.length === 2 ) {\n\t\t\t\t\tgroupData = [];\n\t\t\t\t\tfor ( let i = 0; i < data[ variable ].length; i++ ) {\n\t\t\t\t\t\tconst groupLabel = group.map( g => {\n\t\t\t\t\t\t\treturn data[ g ][ i ];\n\t\t\t\t\t\t}).join( ':' );\n\t\t\t\t\t\tgroupData.push( groupLabel );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tgroupData = data[ group[ 0 ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( statLabels[ 0 ] === 'Correlation' ) {\n\t\t\t\tconst out = by2WithCount( x, y, groupData, funs, group );\n\t\t\t\tres = out.result;\n\t\t\t\tconst keys = out.keys;\n\t\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\t\tconst key = keys[ i ];\n\n\t\t\t\t\t// Extract correlation coefficient from correlation matrix:\n\t\t\t\t\tres[ key ].value = res[ key ].value.map( mat => mat[ 0 ][ 1 ] );\n\t\t\t\t}\n\t\t\t\tvariable = `${variable} ${t('vs')} ${secondVariable}`;\n\t\t\t} else {\n\t\t\t\tres = byWithCount( x, groupData, funs, group );\n\t\t\t}\n\t\t} else {\n\t\t\t// Case: no grouping variable selected\n\t\t\tif ( omit ) {\n\t\t\t\tx = [];\n\t\t\t\ty = [];\n\t\t\t\tif ( variable && secondVariable ) {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tlet second = data[ secondVariable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) &&\n\t\t\t\t\t\t\t( isNumber( second[ i ] ) && !isnan( second[ i ] ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t\ty.push( second[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet first = data[ variable ];\n\t\t\t\t\tfor ( let i = 0; i < first.length; i++ ) {\n\t\t\t\t\t\tif ( isNumber( first[ i ] ) && !isnan( first[ i ] ) ) {\n\t\t\t\t\t\t\tx.push( first[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = data[ variable ];\n\t\t\t\ty = data[ secondVariable ];\n\t\t\t}\n\t\t\tif ( statLabels[ 0 ] === 'Correlation' ) {\n\t\t\t\tconst value = funs.map( f => {\n\t\t\t\t\tconst r = f( x, y );\n\t\t\t\t\treturn r[ 0 ][ 1 ];\n\t\t\t\t});\n\n\t\t\t\t// Extract correlation coefficient from correlation matrix:\n\t\t\t\tres = {\n\t\t\t\t\tvalue,\n\t\t\t\t\tsize: x.length\n\t\t\t\t};\n\t\t\t\tvariable = `${variable} ${t('vs')} ${secondVariable}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = {\n\t\t\t\t\tvalue: funs.map( f => f( x ) ),\n\t\t\t\t\tsize: x.length\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tresult[ variable ] = res;\n\t}\n\tconst output = {\n\t\tvariables: variables,\n\t\tstatistics: statLabels,\n\t\ttype: 'Statistics',\n\t\tresult,\n\t\tgroup\n\t};\n\treturn output;\n}\n\n\n// MAIN //\n\nfunction SummaryStatistics({ variables, statistics, data, secondVariable, group, omit, quantiles }) {\n\tconst { t } = useTranslation( 'data-explorer' );\n\tconst e = useMemo( () => {\n\t\treturn generateStatistics({ data, t, statistics, variables, secondVariable, group, omit, quantiles });\n\t}, [ data, statistics, variables, group, omit, quantiles, secondVariable, t ] );\n\tif ( e.group ) {\n\t\tif ( e.statistics.length === 1 && e.statistics[0] === 'Correlation Matrix' ) {\n\t\t\treturn <CorrelationMatrix e={e} t={t} />;\n\t\t}\n\t\tconst variables = entries( e.result );\n\t\tlet header;\n\t\tif ( e.statistics.length === 1 && e.statistics[0] === 'Range' ) {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t<th>{t('range')}</th>\n\t\t\t\t<th>{t('min')}</th>\n\t\t\t\t<th>{t('max')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t} else if ( e.statistics.length === 1 && e.statistics[0] === 'Interquartile Range' ) {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t<th>{IQR}</th>\n\t\t\t\t<th>{t('lower')}</th>\n\t\t\t\t<th>{t('upper')}</th>\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t} else {\n\t\t\theader = <tr>\n\t\t\t\t<th className=\"not-sortable\" >{variables.length > 1 ? 'Variable' : variables[ 0 ][ 0 ]}</th>\n\t\t\t\t{e.group.map( ( x, i ) => <th key={i} >{x}</th> )}\n\t\t\t\t{e.statistics.map( ( name, i ) => {\n\t\t\t\t\treturn <th key={i}>{name}</th>;\n\t\t\t\t})}\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>;\n\t\t}\n\t\tconst table = <Table bordered size=\"sm\" >\n\t\t\t<thead>\n\t\t\t\t{header}\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{variables.map( ( res ) => {\n\t\t\t\t\tlet grouped = entries( res[ 1 ] );\n\t\t\t\t\tgrouped = grouped.map( ( arr, groupIndex ) => {\n\t\t\t\t\t\tlet cats;\n\t\t\t\t\t\tif ( e.group.length > 1 ) {\n\t\t\t\t\t\t\tcats = arr[ 0 ].split( ':' ).map( ( x, i ) => {\n\t\t\t\t\t\t\t\treturn <td key={i} >{x}</td>;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcats = <td>{arr[ 0 ]}</td>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={groupIndex} >\n\t\t\t\t\t\t\t\t<td>{variables.length > 1 ? res[ 0 ] : ''}</td>\n\t\t\t\t\t\t\t\t{cats}\n\t\t\t\t\t\t\t\t{arr[ 1 ].value.map( ( v, groupIndex ) => {\n\t\t\t\t\t\t\t\t\tif ( isArray( v ) ) {\n\t\t\t\t\t\t\t\t\t\tif ( e.statistics.length === 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line max-nested-callbacks\n\t\t\t\t\t\t\t\t\t\t\treturn v.map( ( elem, i ) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <td key={i} >{elem.toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn <td key={groupIndex} >{v[ 0 ].toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn <td key={groupIndex} >{v.toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t<td>{arr[ 1 ].size} </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\treturn grouped;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>;\n\t\treturn table;\n\t}\n\tif ( e.statistics.length === 1 ) {\n\t\tif ( e.statistics[0] === 'Range' ) {\n\t\t\treturn <RangeTable e={e} t={t} />;\n\t\t}\n\t\tif ( e.statistics[0] === 'Interquartile Range' ) {\n\t\t\treturn <IQRTable e={e} t={t} />;\n\t\t}\n\t\tif ( e.statistics[0] === 'Correlation Matrix' ) {\n\t\t\treturn <CorrelationMatrix e={e} t={t} />;\n\t\t}\n\t}\n\tconst table = <Table bordered size=\"sm\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th className=\"not-sortable\" >{t('variable')}</th>\n\t\t\t\t{e.statistics.map( ( name, i ) => {\n\t\t\t\t\treturn <th key={i}>{name}</th>;\n\t\t\t\t})}\n\t\t\t\t<th>{N}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{entries( e.result ).map( ( res ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={res[ 0 ]} >\n\t\t\t\t\t\t<td>{res[ 0 ]}</td>\n\t\t\t\t\t\t{res[ 1 ].value.map( ( v, i ) => {\n\t\t\t\t\t\t\tif ( isArray( v ) ) {\n\t\t\t\t\t\t\t\t// Case: Range or IQR, use first element:\n\t\t\t\t\t\t\t\treturn <td key={i} >{v[ 0 ].toFixed( 3 )}</td>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn <td key={i} >{v.toFixed( 3 )}</td>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<td>{res[ 1 ].size}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t);\n\t\t\t})}\n\t\t</tbody>\n\t</Table>;\n\treturn table;\n}\n\n\n// PROPERTIES //\n\nSummaryStatistics.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tvariables: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tstatistics: PropTypes.arrayOf( PropTypes.oneOf([\n\t\t'Mean',\n\t\t'Median',\n\t\t'Min',\n\t\t'Max',\n\t\t'Range',\n\t\t'Interquartile Range',\n\t\t'Standard Deviation',\n\t\t'Variance',\n\t\t'Correlation',\n\t\t'Correlation Matrix',\n\t\t'Skewness',\n\t\t'Excess Kurtosis',\n\t\t'First Quartile',\n\t\t'Third Quartile',\n\t\t'Quantile',\n\t\t'Five-Number Summary'\n\t]) ),\n\tsecondVariable: PropTypes.string,\n\tomit: PropTypes.bool,\n\tgroup: PropTypes.arrayOf( PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf( Factor )\n\t]) ),\n\tquantiles: PropTypes.array\n};\n\nSummaryStatistics.defaultProps = {\n\tsecondVariable: null,\n\tomit: false,\n\tgroup: null,\n\tquantiles: null\n};\n\n\n// EXPORTS //\n\n/**\n* Summary statistics\n*\n* @property {Object} data - object of value arrays\n* @property {Array<string>} statistics - statistics(s) to calculate for the selected variables (either 'Mean', `Median`, `Min`, `Max`, `Range`, `Interquartile Range`, `Standard Deviation`, `Variance`, `Correlation`, `Correlation Matrix`, `Skewness`, `Excess Kurtosis`, `First Quartile`, `Third Quartile`, or `Quantile`)\n* @property {Array<string>} variables - variable(s) for which to calculate statistics\n* @property {Array<(string|Factor)>} group - name of grouping variable(s)\n* @property {boolean} omit - controls whether to omit missing values\n* @property {string} secondVariable - second variable for correlation statistic\n* @property {Array<number>} quantiles - array of quantiles to calculate for `Quantile` statistic\n*/\nexport default withPropCheck( SummaryStatistics );\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Partially apply function arguments from the right.\n*\n* @module @stdlib/utils/papply-right\n*\n* @example\n* var papplyRight = require( '@stdlib/utils/papply-right' );\n*\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\n// MODULES //\n\nvar papplyRight = require('./papply_right.js'); // EXPORTS //\n\n\nmodule.exports = papplyRight;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isFunction = require('@stdlib/assert/is-function'); // MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments from the right.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function say( text, name ) {\n*     return text + ', ' + name + '.';\n* }\n*\n* var toGrace = papplyRight( say, 'Grace Hopper' );\n*\n* var str = toGrace( 'Hello' );\n* // returns 'Hello, Grace Hopper.'\n*\n* str = toGrace( 'Thank you' );\n* // returns 'Thank you, Grace Hopper.'\n*/\n\n\nfunction papplyRight(fcn) {\n  var pargs;\n  var len;\n  var i;\n\n  if (!isFunction(fcn)) {\n    throw new TypeError('invalid argument. First argument must be a function. Value: `' + fcn + '`.');\n  }\n\n  len = arguments.length - 1;\n  pargs = new Array(len);\n\n  for (i = 1; i < arguments.length; i++) {\n    pargs[i - 1] = arguments[i];\n  }\n\n  return pappliedRight;\n  /**\n  * Partially applied function.\n  *\n  * @private\n  * @param {...*} [args] - function arguments\n  * @returns {*} partially applied function result\n  */\n\n  function pappliedRight() {\n    var nargs;\n    var args;\n    var j;\n    nargs = arguments.length;\n    args = new Array(len + nargs);\n\n    for (j = 0; j < args.length; j++) {\n      if (j >= nargs) {\n        args[j] = pargs[j - nargs];\n      } else {\n        args[j] = arguments[j];\n      }\n    }\n\n    return fcn.apply(null, args);\n  }\n} // EXPORTS //\n\n\nmodule.exports = papplyRight;"],"names":["N","SORT_OPTS","IQRTable","e","t","bordered","size","entries","result","map","res","idx","key","value","i","toFixed","RangeTable","CorrelationTable","props","title","group","thead","variables","x","tbody","y","j","CorrelationMatrix","tables","keys","objectKeys","length","table","push","generateStatistics","data","statistics","secondVariable","omit","quantiles","funs","statLabels","stat","quantile","papplyRight","statistic","round","arrs","groupData","groupLabel","g","join","indices","len","complete","isNumber","isnan","out","Array","k","groupedCompleteCases","groupedCases","arr","completeCases","f","apply","type","variable","first","second","arr1","arr2","factor","ret1","ret2","isArray","extractUsedCategories","sort","a","b","localeCompare","by2WithCount","mat","cat1","categories","cat2","as","split","bs","diff","indexOf","byWithCount","SummaryStatistics","useTranslation","useMemo","header","className","name","grouped","groupIndex","cats","v","elem","defaultProps","withPropCheck","module","exports","isFunction","fcn","pargs","TypeError","arguments","pappliedRight","nargs","args"],"sourceRoot":""}