{"version":3,"sources":["../node_modules/@stdlib/utils/omit-by/lib/index.js","../node_modules/@stdlib/utils/omit-by/lib/omit_by.js","../node_modules/@isle-project/components/internal/spinner/index.js","../node_modules/@isle-project/components/image/index.js","../node_modules/@isle-project/components/r/plot/main.js","../node_modules/@isle-project/components/r/utils/create-prepend-code/index.js"],"names":[],"mappings":"qKA2CA,IAAI,OAAS,oBAAS,KAAe,EAKrC,OAAO,QAAU,M,sEC1BjB,IAAI,WAAa,oBAAS,KAAe,EACrC,WAAa,oBAAS,IAA6B,EA2BvD,SAAS,OAAQ,IAAK,UAAY,CACjC,IAAI,KACA,IACA,IACA,EACJ,GAAK,OAAO,KAAQ,UAAY,MAAQ,KACvC,MAAM,IAAI,UAAW,+DAA+D,IAAI,IAAK,EAE9F,GAAK,CAAC,WAAY,SAAU,EAC3B,MAAM,IAAI,UAAW,iEAAiE,UAAU,IAAK,EAItG,IAFA,IAAM,CAAC,EACP,KAAO,WAAY,GAAI,EACjB,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC7B,IAAM,KAAM,GACN,UAAW,IAAK,IAAK,IAAM,IAChC,IAAK,KAAQ,IAAK,MAGpB,OAAO,GACR,CAKA,OAAO,QAAU,M,kvCCxDjB,MAAM,gBAAgB,4CAAU,CAC/B,YAAa,MAAQ,CACpB,MAAO,KAAM,EAad,kCAAe,IAAM,CAEpB,MAAM,S,EADS,oDAAa,IAAK,EACV,WAAY,IAAK,EACxC,KAAK,QAAU,QACf,MAAM,MAAQ,IAAI,KACZ,MAAQ,KAAK,MAAM,MACnB,GAAK,QAAQ,OAAO,MACpB,GAAK,QAAQ,OAAO,OAEpB,KAAO,IAAM,CAClB,MAAM,KAAU,IAAI,KAAS,OAAU,IAAS,MAC1C,SAAW,SAAU,IAAK,EAAG,EAAI,MACvC,QAAQ,KAAK,EACb,QAAQ,UAAW,EAAG,EAAG,GAAI,EAAG,EAChC,QAAQ,UAAW,GAAK,EAAK,GAAK,CAAI,EACtC,QAAQ,OAAQ,oEAAK,EAAI,QAAS,EAClC,QAAU,EAAI,EAAG,EAAI,MAAO,IAC3B,QAAQ,UAAU,EAClB,QAAQ,OAAQ,oEAAK,EAAM,KAAM,EACjC,QAAQ,OAAQ,GAAK,GAAI,CAAE,EAC3B,QAAQ,OAAQ,GAAK,EAAG,CAAE,EAC1B,QAAQ,UAAY,GAAK,GACzB,QAAQ,YAAc,gBAAkB,EAAI,MAAQ,IACpD,QAAQ,OAAO,EAEhB,QAAQ,QAAQ,CACjB,EACA,KAAK,cAAgB,OAAO,YAAa,KAAM,EAAG,CACnD,CAAC,CAxCD,CAEA,oBAAqB,CACf,KAAK,eAAiB,KAAK,QAAQ,SACvC,cAAe,KAAK,aAAc,EAClC,KAAK,QAAQ,UAAW,EAAG,EAAG,KAAK,QAAQ,OAAO,MAAO,KAAK,QAAQ,OAAO,MAAO,GAEhF,KAAK,MAAM,UAAY,IAC3B,KAAK,aAAa,CAEpB,CAgCA,QAAS,CACR,OACC,iDAAC,UACA,MAAO,gBACN,MAAO,KAAK,MAAM,MAClB,OAAQ,KAAK,MAAM,OACnB,QAAS,KAAK,MAAM,QAAU,KAAK,MAAM,QAAU,OACnD,OAAQ,QACL,KAAK,MAAM,KAAK,CAAL,CAEhB,CAEF,CACD,CAKA,QAAQ,aAAe,CACtB,QAAS,QACT,OAAQ,GACR,MAAO,GACP,MAAO,CAAC,EACR,MAAO,GACR,EAEA,QAAQ,UAAY,CACnB,QAAS,yDACT,OAAQ,yDACR,MAAO,yDACP,QAAS,kEACT,MAAO,yDACP,MAAO,wDACR,EAKA,sBAAe,O,2qBC1Ff,kB,EALc,YAAU,IAAM,gIAAsD,E,k+BCsBpF,SAAS,cAAc,CAAE,GAAI,KAAM,IAAK,EAAG,CAC1C,IAAI,IACJ,OAAM,MAGL,KAAO,cAAQ,KAAM,CAAE,EAAG,QAClB,sBAAQ,KAAM,CACrB,EACD,KAAO,aAAa,IAAK,EACzB,IAAM,aAAa,+DAA+D,uBAAuB,gBANzG,IAAM,aAAa,gEAQb,GACR,CAkBA,MAAM,MAAS,IAAgG,CAAhG,UAAE,MAAM,UAAW,UAAW,GAAI,UAAW,YAAa,SAAU,KAAM,MA3DzF,EA2De,GAAqF,eAArF,GAAqF,CAAnF,OAAM,YAAW,YAAW,KAAI,YAAW,cAAa,WAAU,OAAM,WACxF,KAAM,CAAE,CAAE,G,EAAI,aAAgB,GAAI,EAC5B,CAAE,QAAS,UAAW,G,EAAI,gBAAU,EAAM,EAC1C,CAAE,KAAM,OAAQ,G,EAAI,gBAAS,CAAE,IAAK,KAAM,KAAM,IAAK,CAAC,EACtD,S,EAAU,kBAAY,SAAe,G,EAC3C,iBAAW,IAAM,CAChB,WAAY,EAAK,EAEjB,MAAM,U,EADY,uBAAmB,UAAW,YAAa,OAAQ,EACxC,KAC7B,QAAQ,SAAU,SAAU,SAAU,CAAE,MAAO,IAAK,OAAU,CACxD,MACJ,OAAQ,KAAM,GAEd,QAAQ,CAAE,IAAK,IAAK,CAAC,EACrB,WAAY,EAAM,EAClB,OAAQ,KAAM,IAAK,IAAK,EAE1B,CAAC,CACF,EAAG,CAAE,KAAM,SAAU,UAAW,YAAa,QAAS,MAAO,CAAE,EAE/D,IAAI,aAAe,KACnB,OAAK,YACJ,aAAe,oBAAC,UACf,UAAU,sBACV,UAAW,GACX,YAAe,IAAQ,CACtB,MAAM,IAAM,cAAc,CAAE,GAAI,KAAM,KAAM,KAAK,IAAK,CAAC,EACvD,GAAG,aAAa,QAAS,YAAa,GAAI,CAC3C,EACA,QAAS,IAAM,CACd,MAAM,IAAM,cAAc,CAAE,GAAI,KAAM,KAAM,KAAK,IAAK,CAAC,G,EACvD,qBAAgB,GAAI,CACrB,GACC,EAAE,WAAW,CAAE,GAGjB,oBAAC,OAAI,UAAW,SAAS,YAAa,MAAO,CAAE,UAAW,IAAK,OAAQ,SAAU,GAChF,oBAAC,UAAO,CAAC,QAAS,QAAS,MAAO,IAAK,OAAQ,IAAK,EAClD,QACD,oBAAC,WAAK,EACN,oBAAC,eAAQ,KACP,aACD,oBAAC,iBAAK,gBACL,IAAK,KAAK,IACV,KAAM,KAAK,KACX,MAAO,EAAE,QAAQ,GACb,IAAI,CACT,CACD,CAEF,CAEF,EAKA,MAAM,UAAY,CACjB,KAAM,4BACN,MAAO,+BAAoB,CAC1B,4BACA,2BACD,CAAC,EACD,OAAQ,+BAAoB,CAC3B,4BACA,2BACD,CAAC,EACD,UAAW,0BACX,SAAU,4BACV,UAAW,2BACX,YAAa,+BAAoB,CAChC,4BACA,0BACD,CAAC,EACD,KAAM,4BACN,UAAW,4BACX,OAAQ,yBACT,EAEA,MAAM,aAAe,CACpB,KAAM,GACN,MAAO,IACP,OAAQ,OACR,UAAW,GACX,SAAU,MACV,UAAW,CAAC,EACZ,YAAa,GACb,KAAM,KACN,UAAW,GACX,QAAS,CAAC,CACX,EAKA,U,EAAe,cAAe,KAAM,C,+SCnJpC,MAAM,YAAgB,MACd,KAAK,IAAK,GAAK,WAAa,EAAI,IAAK,EAC1C,KAAM,GAAI,EAcb,SAAS,kBAAmB,KAAM,YAAa,QAAU,CACxD,KAAM,CAAE,MAAO,EAAI,QAAQ,OACtB,QAAU,OAAO,YACrB,KAAO,KAAK,OAAQ,OAAO,SAAU,GAEtC,IAAI,IAAM,YAAa,IAAK,EAC5B,OAAK,QAAU,OAAO,SACrB,KAAO,OAAO,OAAS;AAAA,GAExB,YAAc,+DAAS,WAAY,EAClC,YAAY,KAAM;AAAA,CAAK,EACvB,YACD,aAAe;AAAA,EACf,KAAO,YACA,GACR,CAKA,sBAAe,iB","file":"static/js/RPlot.bec71316.chunk.js","sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a partial object copy excluding properties for which a predicate (function) returns a truthy value.\n*\n* @module @stdlib/utils/omit-by\n*\n* @example\n* var omitBy = require( '@stdlib/utils/omit-by' );\n*\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omitBy( obj1, predicate );\n* // returns { 'a': 1 }\n*/\n\n// MODULES //\n\nvar omitBy = require( './omit_by.js' );\n\n\n// EXPORTS //\n\nmodule.exports = omitBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( './../../keys' );\nvar isFunction = require( '@stdlib/assert/is-function' );\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omitBy( obj1, predicate );\n* // returns { 'a': 1 }\n*/\nfunction omitBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `'+obj+'`.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+predicate+'`.' );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( !predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = omitBy;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport PI from '@stdlib/constants/float64/pi';\n\n\n// MAIN //\n\n/**\n* Spinner to visualize load times.\n*\n* @property {string} display - CSS display property\n* @property {number} height - height (in px)\n* @property {number} width - width (in px)\n* @property {number} lines - number of lines\n* @property {Object} style - CSS inline styles\n*/\nclass Spinner extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif ( this.activeSpinner && this.context.canvas ) {\n\t\t\tclearInterval( this.activeSpinner );\n\t\t\tthis.context.clearRect( 0, 0, this.context.canvas.width, this.context.canvas.height );\n\t\t}\n\t\tif ( this.props.running === true ) {\n\t\t\tthis.startSpinner();\n\t\t}\n\t}\n\n\tstartSpinner = () => {\n\t\tconst canvas = findDOMNode( this );\n\t\tconst context = canvas.getContext( '2d' );\n\t\tthis.context = context;\n\t\tconst start = new Date();\n\t\tconst lines = this.props.lines;\n\t\tconst cW = context.canvas.width;\n\t\tconst cH = context.canvas.height;\n\n\t\tconst draw = () => {\n\t\t\tconst num = ( ( new Date() - start ) / 1000 ) * lines;\n\t\t\tconst rotation = parseInt( num, 10 ) / lines;\n\t\t\tcontext.save();\n\t\t\tcontext.clearRect( 0, 0, cW, cH );\n\t\t\tcontext.translate( cW / 2.0, cH / 2.0 );\n\t\t\tcontext.rotate( PI * 2 * rotation );\n\t\t\tfor ( let i = 0; i < lines; i++ ) {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.rotate( PI * 2.0 / lines );\n\t\t\t\tcontext.moveTo( cW / 10, 0 );\n\t\t\t\tcontext.lineTo( cW / 4, 0 );\n\t\t\t\tcontext.lineWidth = cW / 30;\n\t\t\t\tcontext.strokeStyle = 'rgba(0, 0, 0,' + i / lines + ')';\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t\tcontext.restore();\n\t\t};\n\t\tthis.activeSpinner = window.setInterval( draw, 50 );\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<canvas\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: this.props.width,\n\t\t\t\t\theight: this.props.height,\n\t\t\t\t\tdisplay: this.props.running ? this.props.display : 'none',\n\t\t\t\t\tmargin: 'auto',\n\t\t\t\t\t...this.props.style\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nSpinner.defaultProps = {\n\tdisplay: 'block',\n\theight: 64,\n\tlines: 16,\n\tstyle: {},\n\twidth: 128\n};\n\nSpinner.propTypes = {\n\tdisplay: PropTypes.string,\n\theight: PropTypes.number,\n\tlines: PropTypes.number,\n\trunning: PropTypes.bool.isRequired,\n\tstyle: PropTypes.object,\n\twidth: PropTypes.number\n};\n\n\n// EXPORTS //\n\nexport default Spinner;\n","// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Image = Loadable( () => import( /* webpackChunkName: \"Image\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Image;\n","// MODULES //\n\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport jsyaml from 'js-yaml';\nimport omitBy from '@stdlib/utils/omit-by';\nimport isNull from '@stdlib/assert/is-null';\nimport createPrependCode from '@isle-project/components/r/utils/create-prepend-code';\nimport Spinner from '@isle-project/components/internal/spinner';\nimport Image from '@isle-project/components/image';\nimport SessionContext from '@isle-project/session/context.js';\nimport html2clipboard from '@isle-project/utils/html-to-clipboard';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport './plot.css';\n\n\n// FUNCTIONS //\n\n/**\n * Creates an image tag for a plot.\n *\n * @private\n * @param {Object} options - function options\n * @param {string} options.id - identifier\n * @param {Object} options.metadata - plot metadata\n * @param {string} options.plot - base64-encoded string of plot\n * @returns {string} image tag\n */\nfunction createImgHTML({ id, meta, plot }) {\n\tlet img;\n\tif ( !meta ) {\n\t\timg = `<img src=\"${plot}\" alt=\"R Plot\" style=\"display: block; margin: 0 auto;\" />`;\n\t} else {\n\t\tmeta = omitBy( meta, ( _, value ) => {\n\t\t\treturn isNull( value );\n\t\t});\n\t\tmeta = jsyaml.dump( meta );\n\t\timg = `<img src=\"${plot}\" style=\"display: block; margin: 0 auto;\" data-plot-id=\"${id}\" data-plot-meta=\"${meta}\"></img>`;\n\t}\n\treturn img;\n}\n\n// MAIN //\n\n/**\n* Component for rendering an R plot inside an ISLE lesson.\n*\n* @property {string} code - R code to generate the plot\n* @property {number} width - width of the plot (in px)\n* @property {number} height - height of the plot (in px)\n* @property {boolean} draggable - controls whether the plot should be draggable\n* @property {string} fileType - file type of the plot (`png` or `svg`)\n* @property {Array} libraries - R libraries that should be loaded automatically when the input `code` is executed\n* @property {(string|Array<string>)} prependCode - `string` or an `array` of R code snippets to be prepended to the code stored in `code` when evaluating\n* @property {Object} meta - plot meta-information\n* @property {string} className - class name\n* @property {Function} onDone - callback invoked with `err`, `img` and `body` arguments once a plot is created\n*/\nconst RPlot = ({ code, className, draggable, id, libraries, prependCode, fileType, meta, onDone, ...rest }) => {\n\tconst { t } = useTranslation( 'r' );\n\tconst [ waiting, setWaiting ] = useState( false );\n\tconst [ plot, setPlot ] = useState({ img: null, body: null });\n\tconst session = useContext( SessionContext );\n\tuseEffect( () => {\n\t\tsetWaiting( true );\n\t\tconst prepended = createPrependCode( libraries, prependCode, session );\n\t\tconst fullCode = prepended + code;\n\t\tsession.getRPlot( fullCode, fileType, ( error, img, body ) => {\n\t\t\tif ( error ) {\n\t\t\t\tonDone( error );\n\t\t\t} else {\n\t\t\t\tsetPlot({ img, body });\n\t\t\t\tsetWaiting( false );\n\t\t\t\tonDone( null, img, body );\n\t\t\t}\n\t\t});\n\t}, [ code, fileType, libraries, prependCode, session, onDone ] );\n\n\tlet draggableBar = null;\n\tif ( draggable ) {\n\t\tdraggableBar = <button\n\t\t\tclassName=\"rplot-draggable-bar\"\n\t\t\tdraggable={true}\n\t\t\tonDragStart={( ev ) => {\n\t\t\t\tconst img = createImgHTML({ id, meta, plot: plot.body });\n\t\t\t\tev.dataTransfer.setData( 'text/html', img );\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tconst img = createImgHTML({ id, meta, plot: plot.body });\n\t\t\t\thtml2clipboard( img );\n\t\t\t}}\n\t\t>{t('drag-plot')}</button>;\n\t}\n\treturn (\n\t\t<div className={`rplot ${className}`} style={{ minHeight: 128, cursor: 'pointer' }}>\n\t\t\t<Spinner running={waiting} width={256} height={128} />\n\t\t\t{ waiting ?\n\t\t\t\t<span /> :\n\t\t\t\t<Fragment>\n\t\t\t\t\t{draggableBar}\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsrc={plot.img}\n\t\t\t\t\t\tbody={plot.body}\n\t\t\t\t\t\ttitle={t('r-plot')}\n\t\t\t\t\t\t{...rest}\n\t\t\t\t\t/>\n\t\t\t\t</Fragment>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\n\n// PROPERTIES //\n\nRPlot.propTypes = {\n\tcode: PropTypes.string,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tdraggable: PropTypes.bool,\n\tfileType: PropTypes.string,\n\tlibraries: PropTypes.array,\n\tprependCode: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.array\n\t]),\n\tmeta: PropTypes.object,\n\tclassName: PropTypes.string,\n\tonDone: PropTypes.func\n};\n\nRPlot.defaultProps = {\n\tcode: '',\n\twidth: 600,\n\theight: 'auto',\n\tdraggable: false,\n\tfileType: 'svg',\n\tlibraries: [],\n\tprependCode: '',\n\tmeta: null,\n\tclassName: '',\n\tonDone() {}\n};\n\n\n// EXPORTS //\n\nexport default withPropCheck( RPlot );\n","// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\n\n\n// FUNCTIONS //\n\nconst requireLibs = ( libs ) => {\n\treturn libs.map( x => 'library(' + x + ');' )\n\t\t.join( ' ' );\n};\n\n\n// MAIN //\n\n/**\n* Create code to be added in front of user-supplied R code.\n*\n* @param {Array} libs - array of libraries to requireLibs\n* @param {(Array|string)} prependCode - array of strings or single string of code to prepend\n* @param {Object} session - session object\n* @param {string} generated code\n*/\nfunction createPrependCode( libs, prependCode, session ) {\n\tconst { rshell } = session.config;\n\tif ( rshell && rshell.libraries ) {\n\t\tlibs = libs.concat( rshell.libraries );\n\t}\n\tlet ret = requireLibs( libs );\n\tif ( rshell && rshell.global ) {\n\t\tret += rshell.global + '\\n';\n\t}\n\tprependCode = isArray( prependCode ) ?\n\t\tprependCode.join( '\\n' ) :\n\t\tprependCode;\n\tprependCode += '\\n';\n\tret += prependCode;\n\treturn ret;\n}\n\n\n// EXPORTS //\n\nexport default createPrependCode;\n"],"sourceRoot":""}