{"version":3,"file":"static/js/ScatterplotMenu.ee43c435.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/scatterplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/slider/main.js","../node_modules/@isle-project/components/input/slider/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport ScatterPlot from '@isle-project/components/plots/scatterplot';\nimport { DATA_EXPLORER_SHARE_SCATTERPLOT, DATA_EXPLORER_SCATTERPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ xval, setXval ] = useState( defaultX || variables[ 0 ] );\n\tconst [ yval, setYval ] = useState( defaultY || variables[ 1 ] );\n\tconst [ color, setColor ] = useState( null );\n\tconst [ type, setType ] = useState( null );\n\tconst [ size, setSize ] = useState( null );\n\tconst [ text, setText ] = useState( null );\n\tconst [ regressionLine, setRegressionLine ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState([ 'linear' ]);\n\tconst [ lineBy, setLineBy ] = useState( null );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\n\tconst generateScatterplot = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = { xval, yval, plotId };\n\t\tif ( color ) {\n\t\t\taction.color = color;\n\t\t}\n\t\tif ( type ) {\n\t\t\taction.type = type;\n\t\t}\n\t\tif ( size ) {\n\t\t\taction.size = size;\n\t\t}\n\t\tif ( text ) {\n\t\t\taction.text = text;\n\t\t}\n\t\tif ( regressionLine ) {\n\t\t\taction.regressionLine = regressionLine;\n\t\t\taction.regressionMethod = regressionMethod;\n\t\t}\n\t\tif ( contains( regressionMethod, 'smooth' ) ) {\n\t\t\taction.smoothSpan = smoothSpan;\n\t\t}\n\t\tif ( lineBy ) {\n\t\t\taction.lineBy = lineBy;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SCATTERPLOT, action );\n\t\t};\n\t\tconst output = <ScatterPlot\n\t\t\tdata={props.data}\n\t\t\txval={xval} yval={yval} color={color} type={type} size={size} text={text}\n\t\t\tregressionLine={regressionLine} regressionMethod={regressionMethod}\n\t\t\tlineBy={lineBy} smoothSpan={smoothSpan}\n\t\t\tid={plotId}\n\t\t\taction={action}\n\t\t\tonSelected={props.onSelected}\n\t\t\tonShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SCATTERPLOT, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card style={{ minWidth: 650 }} >\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot')}\n\t\t\t\t<QuestionButton title={t('Scatterplot')} content={t('Scatterplot-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('x-axis')}\n\t\t\t\t\t\tdefaultValue={xval}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setXval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\tdefaultValue={yval}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setYval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('labels')}:`}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tonChange={setText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('color')}:`}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setColor}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('type')}:`}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setType}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('size')}:`}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setSize}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<div style={{\n\t\t\t\t\topacity: props.showRegressionOption ? 1.0 : 0.0\n\t\t\t\t}}>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend={t('show-regression-model')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetRegressionLine( !regressionLine );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={`${t('method')}:`}\n\t\t\t\t\t\t\tdefaultValue=\"linear\"\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={`${t('split-by')}:`}\n\t\t\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={setLineBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains( regressionMethod, 'smooth' )}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={0.66}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<Button variant=\"primary\" block onClick={generateScatterplot}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {},\n\tshowRegressionOption: true\n};\n\nScatterplotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowRegressionOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport Badge from 'react-bootstrap/Badge';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nconst SliderInput = ( props ) => {\n\tconst { bind, defaultValue, legend, disabled, hideTooltip, inline, min, max, onChange, precision, step,\n\t\tminLabel, maxLabel, numberInputStyle, rangeInputStyle, style } = props;\n\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ] : defaultValue\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ]);\n\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if ( step === 1.0 && newValue !== '' ) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, max, min, step, value, onChange ] );\n\n\tconst handleInputChange = useCallback( ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tsetValue( newValue );\n\n\t\tif ( valid && newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, value, onChange ] );\n\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}:`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}:`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\tlet roundedValue;\n\tif ( value !== '' ) {\n\t\troundedValue = roundn( value, ( -1.0 )*precision );\n\t} else {\n\t\troundedValue = value;\n\t}\n\tconst rangeInput = <input\n\t\ttype=\"range\"\n\t\tclassName=\"slider-range-input\"\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tdisabled={disabled}\n\t\tonChange={handleInputChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t...rangeInputStyle\n\t\t}}\n\t/>;\n\tconst numberInput = <input\n\t\ttype=\"number\"\n\t\tname=\"input\"\n\t\tclassName=\"slider-number-input\"\n\t\tdisabled={disabled}\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tonChange={handleInputChange}\n\t\tonBlur={finishChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t...numberInputStyle\n\t\t}}\n\t\tautoComplete=\"off\"\n\t/>;\n\tif ( inline ) {\n\t\treturn (\n\t\t\t<span className=\"input\" style={{\n\t\t\t\tpadding: '5px',\n\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t...style\n\t\t\t}}>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge variant=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge variant=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t</span>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip\n\t\t\tid=\"sliderTooltip\"\n\t\t\tplacement=\"top\"\n\t\t\tshow={!hideTooltip}\n\t\t\ttooltip={disabled ? t('slider-disabled') : tooltip}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\tstyle={{\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...style\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<br />\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge variant=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"names":["ScatterplotMenu","props","variables","groupingVariables","defaultX","defaultY","t","xval","setXval","useState","yval","setYval","color","setColor","type","setType","size","setSize","text","setText","regressionLine","setRegressionLine","regressionMethod","setRegressionMethod","lineBy","setLineBy","smoothSpan","setSmoothSpan","style","minWidth","as","title","content","width","legend","defaultValue","options","float","paddingRight","onChange","paddingLeft","clearable","clear","opacity","showRegressionOption","inline","multi","disabled","value","isArray","contains","min","max","step","variant","block","onClick","plotId","randomstring","action","output","data","id","onSelected","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_SCATTERPLOT","DATA_EXPLORER_SCATTERPLOT","onCreated","defaultProps","propTypes","PropTypes","QuestionButton","popover","trigger","placement","rootClose","overlay","className","isRequired","uid","generateUID","CheckboxInput","bind","useRef","useContext","SessionContext","setValue","state","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","tooltip","tooltipPlacement","current","marginLeft","role","tabIndex","onKeyPress","onSpanChange","noop","debug","logger","SliderInput","hideTooltip","precision","minLabel","maxLabel","numberInputStyle","rangeInputStyle","useTranslation","finishChange","parseFloat","handleInputChange","valid","validity","roundedValue","PINF","NINF","roundn","rangeInput","display","numberInput","name","onBlur","marginTop","autoComplete","padding","Badge","show"],"sourceRoot":""}