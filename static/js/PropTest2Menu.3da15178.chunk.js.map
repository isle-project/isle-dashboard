{"version":3,"file":"static/js/PropTest2Menu.3da15178.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/get_binary_vars.js","../node_modules/@isle-project/components/data-explorer/menu/proptest2.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@stdlib/utils/memoize/lib/index.js","../node_modules/@stdlib/utils/memoize/lib/memoize.js"],"sourcesContent":["// MODULES //\n\nimport isnan from '@stdlib/assert/is-nan';\nimport isNull from '@stdlib/assert/is-null';\n\n\n// MAIN //\n\nfunction getBinaryVars( vars, data ) {\n\tconst out = [];\n\tfor ( let i = 0; i < vars.length; i++ ) {\n\t\tlet vals = data[ vars[ i ] ];\n\t\tif ( vals ) {\n\t\t\tconst encountered = new Set();\n\t\t\tfor ( let j = 0; j < vals.length; j++ ) {\n\t\t\t\tlet v = vals[ j ];\n\t\t\t\tif ( !isNull( v ) && !isnan( v ) && v !== '' ) {\n\t\t\t\t\tencountered.add( v );\n\t\t\t\t}\n\t\t\t\tif ( encountered.size > 2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( j === vals.length - 1 ) {\n\t\t\t\t\tout.push( vars[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default getBinaryVars;\n","// MODULES //\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport contains from '@stdlib/assert/contains';\nimport memoize from '@stdlib/utils/memoize';\nimport isArray from '@stdlib/assert/is-array';\nimport unique from 'uniq';\nimport PropTest2 from '@isle-project/components/tests/proptest2';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport { DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\nimport getBinaryVars from './../get_binary_vars.js';\n\n\n// VARIABLES //\n\nconst extractCategories = memoize( extractCategoriesFromValues, ( args ) => {\n\treturn args[ 1 ];\n});\n\n\n// MAIN //\n\nconst PropTest2Menu = ( props ) => {\n\tconst { categorical, data, showDecision, t } = props;\n\tconst [ categories, setCategories ] = useState( [] );\n\tconst [ var1, setVar1 ] = useState( categorical[ 0 ] );\n\tconst [ success, setSuccess ] = useState( categories[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ var2, setVar2 ] = useState( null );\n\tconst [ diff, setDiff ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\n\tuseEffect( () => {\n\t\tif ( isArray( categorical ) && categorical.length > 0 ) {\n\t\t\tconst values = data[ categorical[ 0 ] ];\n\t\t\tif ( values ) {\n\t\t\t\tconst newCategories = extractCategories( values, categorical[ 0 ] );\n\t\t\t\tsetCategories( newCategories );\n\t\t\t\tsetSuccess( newCategories[ 0 ] );\n\t\t\t} else {\n\t\t\t\tsetCategories();\n\t\t\t}\n\t\t}\n\t}, [ categorical, data ] );\n\n\tconst calculateTwoSamplePropTest = () => {\n\t\tif ( var1 === group || var1 === var2 ) {\n\t\t\treturn props.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('group-variable-must-be-different'),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tif ( !group && !var2 ) {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('action-required'),\n\t\t\t\tmessage: t('select-grouping-or-second-variable', { var: var1 }),\n\t\t\t\tlevel: 'warning',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tconst output = <PropTest2\n\t\t\tdata={data} showDecision={showDecision}\n\t\t\tvar1={var1} var2={var2} group={group}\n\t\t\tdiff={diff} direction={direction} alpha={alpha} success={success}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST, {\n\t\t\tvar1, group, var2, success, diff, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst binary = getBinaryVars( categorical, data );\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Two-Sample Proportion Test')}\n\t\t\t\t<QuestionButton title={t('Two-Sample Proportion Test')} content={t('Two-Sample Proportion Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\t\t\tdefaultValue={categorical[ 0 ]}\n\t\t\t\t\t\t\toptions={categorical}\n\t\t\t\t\t\t\tonChange={( variable ) => {\n\t\t\t\t\t\t\t\tconst values = data[ variable ];\n\t\t\t\t\t\t\t\tconst newCategories = extractCategoriesFromValues( values, variable );\n\t\t\t\t\t\t\t\tunique( newCategories );\n\t\t\t\t\t\t\t\tsetVar1( variable );\n\t\t\t\t\t\t\t\tsetCategories( newCategories );\n\t\t\t\t\t\t\t\tsetSuccess( newCategories[ 0 ] );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('success')}\n\t\t\t\t\t\t\tdefaultValue={categories[ 0 ]}\n\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\tonChange={setSuccess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('groups')}\n\t\t\t\t\t\t\toptions={binary}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( value );\n\t\t\t\t\t\t\t\tsetVar2( null );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={2}><p>{t('or')}</p></Col>\n\t\t\t\t\t<Col md={5}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('second-variable')}\n\t\t\t\t\t\t\toptions={categorical.filter( elem =>\n\t\t\t\t\t\t\t\tcontains( categories, elem )\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tsetGroup( null );\n\t\t\t\t\t\t\t\tsetVar2( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={t('difference-h0')}\n\t\t\t\t\tdefaultValue={diff}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={1}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setDiff}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t/>\n\t\t\t\t<NumberInput\n\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\tmin={0.0}\n\t\t\t\t\tmax={1.0}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block\n\t\t\t\t\tonClick={calculateTwoSamplePropTest}\n\t\t\t\t\tdisabled={!var2 && !group}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nPropTest2Menu.defaultProps = {\n\tcategorical: null,\n\tlogAction() {},\n\tshowDecision: true\n};\n\nPropTest2Menu.propTypes = {\n\tcategorical: PropTypes.array,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default PropTest2Menu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Memoize a function.\n*\n* @module @stdlib/utils/memoize\n*\n* @example\n* var memoize = require( '@stdlib/utils/memoize' );\n*\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\n// MODULES //\n\nvar memoize = require('./memoize.js'); // EXPORTS //\n\n\nmodule.exports = memoize;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar setReadOnly = require('./../../define-nonenumerable-read-only-property');\n\nvar identity = require('./../../identity-function');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property'); // MAIN //\n\n/**\n* Returns a memoized function.\n*\n* @param {Function} fcn - function to memoize\n* @param {Function} [hashFunction] - function to map a set of arguments to a single value identifying that set\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} memoized function\n*\n* @example\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\n\n\nfunction memoize(fcn, hashFunction) {\n  var toKey;\n  var cache;\n\n  if (!isFunction(fcn)) {\n    throw new TypeError('invalid argument. First argument must be a function. Value: `' + fcn + '`.');\n  }\n\n  if (arguments.length < 2) {\n    toKey = identity;\n  } else {\n    toKey = hashFunction;\n\n    if (!isFunction(toKey)) {\n      throw new TypeError('invalid argument. Hash function argument must be a function. Value: `' + toKey + '`.');\n    }\n  }\n\n  cache = {};\n  setReadOnly(memoized, 'cache', cache);\n  return memoized;\n  /**\n  * Memoized function.\n  *\n  * @private\n  * @param {...*} args - function arguments\n  * @returns {*} memoized function result\n  */\n\n  function memoized() {\n    var args;\n    var out;\n    var key;\n    var i;\n    args = new Array(arguments.length);\n\n    for (i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    key = toKey(args).toString();\n\n    if (hasOwnProp(cache, key)) {\n      return cache[key];\n    }\n\n    out = fcn.apply(null, args);\n    cache[key] = out;\n    return out;\n  }\n} // EXPORTS //\n\n\nmodule.exports = memoize;"],"names":["vars","data","out","i","length","vals","encountered","Set","j","v","isNull","isnan","add","size","push","extractCategories","memoize","extractCategoriesFromValues","args","PropTest2Menu","props","categorical","showDecision","t","useState","categories","setCategories","var1","setVar1","success","setSuccess","group","setGroup","var2","setVar2","diff","setDiff","direction","setDirection","alpha","setAlpha","useEffect","isArray","values","newCategories","binary","getBinaryVars","style","fontSize","as","title","content","md","legend","defaultValue","options","onChange","variable","unique","clearable","value","filter","elem","contains","min","max","step","raw","variant","block","onClick","session","addNotification","message","level","position","var","output","logAction","DATA_EXPLORER_TESTS_TWO_SAMPLE_PROPTEST","onCreated","disabled","defaultProps","popover","id","trigger","placement","rootClose","overlay","className","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","useRef","bind","propValue","onBlur","useTranslation","useContext","SessionContext","state","setValue","globalValue","global","lesson","isNumber","handleChange","useCallback","event","valid","target","validity","newValue","parseFloat","setState","finishChange","splitted","split","createTooltip","inline","input","padding","htmlFor","current","type","numbersOnly","name","width","paddingLeft","marginLeft","inputStyle","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString","tooltipPlacement","module","exports","isFunction","setReadOnly","identity","hasOwnProp","fcn","hashFunction","toKey","cache","TypeError","arguments","memoized","key","Array","toString","apply"],"sourceRoot":""}