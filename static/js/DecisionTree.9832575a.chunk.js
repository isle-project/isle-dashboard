"use strict";(self.webpackChunkisle_dashboard=self.webpackChunkisle_dashboard||[]).push([[61],{47506:function(e,t,r){r.r(t);var i=r(38603),s=r(91532),a=r.n(s),n=r(58651),o=r(79174),u=r(93918),p=r(22949),m=r.n(p),c=r(94123),d=r(65161),h=r(76798),l=r(32921);let y=0;const T=({x:e,y:t,data:r,type:i,quantitative:s,impurityMeasure:a,scoreThreshold:n,maxTreeDepth:o,minItemsCount:u})=>{let p;p=m()(e)?e:[e];try{let e;return e="Classification"===i?new d.DV({response:t,predictors:p,data:r,quantitative:s,criterion:a,scoreThreshold:n,maxTreeDepth:o,minItemsCount:u}):new d.tC({response:t,predictors:p,data:r,quantitative:s,scoreThreshold:n,maxTreeDepth:o,minItemsCount:u}),e}catch(c){return null}};class f extends i.Component{constructor(e){var t,r,i;super(e),i=()=>{this.props.onPredict(this.state.tree,y)},(r="handlePredict")in(t=this)?Object.defineProperty(t,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[r]=i,y+=1;const{x:s,y:a,data:n,type:o,quantitative:u,impurityMeasure:p,scoreThreshold:m,maxTreeDepth:c,minItemsCount:d}=this.props;this.state={tree:T({x:s,y:a,data:n,type:o,quantitative:u,impurityMeasure:p,scoreThreshold:m,maxTreeDepth:c,minItemsCount:d}),...e}}static getDerivedStateFromProps(e,t){if(e.y!==t.y||e.x!==t.x||e.type!==t.type||e.impurityMeasure!==t.impurityMeasure||e.data!==t.data||e.quantitative!==t.quantitative||e.scoreThreshold!==t.scoreThreshold||e.maxTreeDepth!==t.maxTreeDepth||e.minItemsCount!==t.minItemsCount){const{x:t,y:r,data:i,type:s,quantitative:a,impurityMeasure:n,scoreThreshold:o,maxTreeDepth:u,minItemsCount:p}=e;return{tree:T({x:t,y:r,data:i,type:s,quantitative:a,impurityMeasure:n,scoreThreshold:o,maxTreeDepth:u,minItemsCount:p}),...e}}return null}render(){const{tree:e}=this.state,{t:t}=this.props;return e?i.createElement("div",{style:{overflowX:"auto",width:"100%"}},i.createElement("span",{className:"title"},t("decision-tree-for",{y:this.props.y,counter:y})),i.createElement(d.fA,{tree:e.root}),this.props.onPredict?i.createElement(c.Z,{tooltip:t("predictions-attached")},i.createElement(u.Z,{variant:"secondary",size:"sm",style:{marginTop:10},onClick:this.handlePredict},this.props.t("use-model-to-predict"))):null):i.createElement(o.Z,{variant:"danger"},t("missing-attributes"))}}f.defaultProps={impurityMeasure:"gini",scoreThreshold:.0075,maxTreeDepth:5,minItemsCount:50,onPredict:null},f.propTypes={data:a().object.isRequired,y:a().oneOfType([a().string,a().instanceOf(l.E)]).isRequired,x:a().oneOfType([a().arrayOf(a().oneOfType([a().string,a().instanceOf(l.E)])),a().string,a().instanceOf(l.E)]).isRequired,type:a().oneOf(["Classification","Regression"]).isRequired,quantitative:a().arrayOf(a().string).isRequired,impurityMeasure:a().oneOf(["gini","entropy"]),scoreThreshold:a().number,maxTreeDepth:a().number,minItemsCount:a().number,onPredict:a().func},t.default=(0,n.Z)("models")((0,h.W)(f))}}]);
//# sourceMappingURL=DecisionTree.9832575a.chunk.js.map