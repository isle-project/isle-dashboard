{"version":3,"sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/qqplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js"],"names":[],"mappings":"wRAOA,KAAM,WAAY,8EAAU,IAAM,uLAKlC,sBAAe,W,k5BCEf,KAAM,YAAa,CAAC,CAAE,KAAM,UAAW,aAAc,EAAG,QAAS,UAAW,UAAW,cAAiB,CACvG,MACC,kDAAC,kEAAD,CACC,MAAO,iDAAC,OAAD,KACL,EAAE,WACH,iDAAC,mDAAD,CAAgB,MAAO,EAAE,WAAY,QAAS,EAAE,0BAEjD,UAAW,GACX,WAAY,gBAEZ,iDAAC,qEAAD,CACC,OAAQ,EAAE,YACV,aAAc,cAAgB,UAAW,GACzC,QAAS,aAKZ,wBAAyB,SAAW,CACnC,KAAM,QAAS,iFAAc,GACvB,OAAS,CACd,SAAU,QAEL,QAAU,IAAM,CACrB,QAAQ,gBAAgB,CACvB,MAAO,EAAE,eACT,QAAS,EAAE,uBACX,MAAO,UACP,SAAU,OAEX,UAAW,mEAA4B,SAElC,OAAS,iDAAC,qEAAD,CAAQ,KAAY,SAAoB,GAAI,OAAQ,OAAgB,QAAkB,aACrG,UAAW,mEAAsB,QACjC,UAAW,UAOb,WAAW,aAAe,CACzB,aAAc,KACd,WAAY,IAGb,WAAW,UAAY,CACtB,KAAM,oEACN,aAAc,yDACd,UAAW,uDACX,UAAW,kEACX,QAAS,oEACT,UAAW,oEAMZ,4BAAe,Y,+6CC3Df,KAAM,gBAAmB,OAAW,CACnC,KAAM,SAAU,iDAAC,+DAAD,CAAS,GAAG,4BAC3B,iDAAC,qEAAD,KAAgB,MAAM,OACtB,iDAAC,mEAAD,KAAc,MAAM,UAErB,MACC,kDAAC,sEAAD,CAAgB,QAAS,CAAE,QAAS,QAAS,SAAW,UAAU,OAAO,UAAS,GAAC,QAAS,SAC3F,iDAAC,8DAAD,CACC,aAAY,MAAM,MAClB,KAAK,KACL,QAAQ,oBACR,UAAU,mBAEV,iDAAC,MAAD,CAAK,UAAU,sBASnB,eAAe,UAAY,CAC1B,QAAW,4DAAoB,CAAE,yDAAkB,yDAAkB,WACrE,MAAS,qEAMV,sBAAe","file":"static/js/QQPlotMenu.e90ed761.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport QQPlot from '@isle-project/components/plots/qqplot';\nimport { DATA_EXPLORER_SHARE_QQPLOT, DATA_EXPLORER_QQPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from '../question_button.js';\n\n\n// MAIN //\n\nconst QQPlotMenu = ({ data, variables, defaultValue, t, session, logAction, onCreated, onSelected }) => {\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={<span>\n\t\t\t\t{t('QQ Plot')}\n\t\t\t\t<QuestionButton title={t('QQ Plot')} content={t('QQ Plot-description')} />\n\t\t\t</span>}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={generateQQPlot}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={defaultValue || variables[ 0 ]}\n\t\t\t\toptions={variables}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n\n\tfunction generateQQPlot( variable ) {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable, plotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tsession.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tlogAction( DATA_EXPLORER_SHARE_QQPLOT, action );\n\t\t};\n\t\tconst output = <QQPlot data={data} variable={variable} id={plotId} action={action} onShare={onShare} onSelected={onSelected} />;\n\t\tlogAction( DATA_EXPLORER_QQPLOT, action );\n\t\tonCreated( output );\n\t}\n};\n\n\n// PROPERTIES //\n\nQQPlotMenu.defaultProps = {\n\tdefaultValue: null,\n\tlogAction() {}\n};\n\nQQPlotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QQPlotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n"],"sourceRoot":""}