{"version":3,"file":"static/js/MeanTestMenu.a81dee28.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/meantest.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TeX from '@isle-project/components/tex';\nimport MeanTest from '@isle-project/components/tests/meantest';\nimport { DATA_EXPLORER_TESTS_MEAN } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst MeanTestMenu = ( props ) => {\n\tconst { data, showDecision, quantitative, t } = props;\n\tconst [ type, setType ] = useState( 'T Test' );\n\tconst [ variable, setVariable ] = useState( null );\n\tconst [ mu0, setMu0 ] = useState( 0 );\n\tconst [ direction, setDirection ] = useState( 'two-sided' );\n\tconst [ alpha, setAlpha ] = useState( 0.05 );\n\tconst [ stdev, setStdev ] = useState( null );\n\n\tconst calculateMeanTest = () => {\n\t\tconst output = <MeanTest\n\t\t\tdata={data}\n\t\t\tvariable={variable}\n\t\t\tshowDecision={showDecision}\n\t\t\tmu0={mu0}\n\t\t\tdirection={direction}\n\t\t\tstdev={stdev}\n\t\t\ttype={type}\n\t\t\talpha={alpha}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_MEAN, {\n\t\t\tvariable, mu0, direction, alpha, type, stdev, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card\n\t\t\tstyle={{ fontSize: '14px' }}\n\t\t>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('One-Sample Mean Test')}\n\t\t\t\t<QuestionButton title={t('One-Sample Mean Test')} content={t('One-Sample Mean Test-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('type-of-test')}\n\t\t\t\t\tdefaultValue={type}\n\t\t\t\t\toptions={[ 'T Test', 'Z Test' ]}\n\t\t\t\t\tonChange={setType}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={null}\n\t\t\t\t\toptions={quantitative}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t{ type === 'Z Test' ?\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={t('Standard Deviation')}\n\t\t\t\t\t\tdefaultValue={stdev}\n\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tonChange={setStdev}\n\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\twidth: 140\n\t\t\t\t\t\t}}\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={<span><TeX raw=\"H_0\" /> mean value (<TeX raw=\"\\mu_0\" />)</span>}\n\t\t\t\t\t\t\tdefaultValue={mu0}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setMu0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\t\t\t\tdefaultValue={alpha}\n\t\t\t\t\t\t\tmin={0.0}\n\t\t\t\t\t\t\tmax={1.0}\n\t\t\t\t\t\t\ttooltipPlacement=\"left\"\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tonChange={setAlpha}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('direction')}\n\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t\t\tonChange={setDirection}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block onClick={calculateMeanTest}\n\t\t\t\t\tdisabled={!variable}\n\t\t\t\t>\n\t\t\t\t\t{t('calculate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nMeanTestMenu.defaultProps = {\n\tlogAction() {},\n\tshowDecision: true\n};\n\nMeanTestMenu.propTypes = {\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\n\n// EXPORTS //\n\nexport default MeanTestMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["MeanTestMenu","props","data","showDecision","quantitative","t","type","setType","useState","variable","setVariable","mu0","setMu0","direction","setDirection","alpha","setAlpha","stdev","setStdev","style","fontSize","as","title","content","legend","defaultValue","options","onChange","step","min","inputStyle","width","raw","max","tooltipPlacement","menuPlacement","variant","block","onClick","output","logAction","DATA_EXPLORER_TESTS_MEAN","onCreated","disabled","defaultProps","propTypes","PropTypes","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","className","isRequired","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","useRef","bind","value","propValue","onBlur","useTranslation","session","useContext","SessionContext","setValue","state","useEffect","globalValue","global","lesson","isNumber","handleChange","useCallback","event","valid","target","validity","newValue","parseFloat","isnan","setState","finishChange","contains","splitted","split","isNull","createTooltip","inline","input","padding","htmlFor","current","numbersOnly","name","paddingLeft","marginLeft","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString"],"sourceRoot":""}