{"version":3,"file":"static/js/LogisticRegressionMenu.e3420c5d.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/logistic_regression.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@stdlib/utils/memoize/lib/index.js","../node_modules/@stdlib/utils/memoize/lib/memoize.js"],"sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniq from 'uniq';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport isArray from '@stdlib/assert/is-array';\nimport contains from '@stdlib/assert/contains';\nimport copy from '@stdlib/utils/copy';\nimport memoize from '@stdlib/utils/memoize';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport { DATA_EXPLORER_LOGISTIC_REGRESSION } from '@isle-project/constants/actions.js';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport LogisticRegression from '@isle-project/components/models/logistic-regression';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DESCRIPTION = 'Predict a categorical response variable using one or more explanatory variables.';\nconst extractCategories = memoize( extractCategoriesFromValues, ( args ) => {\n\treturn args[ 1 ];\n});\n\n\n// MAIN //\n\nclass LogisticRegressionMenu extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tcategories: [],\n\t\t\ty: null,\n\t\t\tsuccess: null,\n\t\t\tx: props.quantitative[ 0 ],\n\t\t\tintercept: true,\n\t\t\tomitMissing: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tlet categories;\n\t\tlet success;\n\t\tlet y;\n\t\tconst { categorical, data } = this.props;\n\t\tif ( isArray( categorical ) && categorical.length > 0 ) {\n\t\t\ty = categorical[ 0 ];\n\t\t\tcategories = extractCategories( data[ y ], y );\n\t\t\tsuccess = categories[ categories.length-1 ];\n\t\t} else {\n\t\t\tcategories = [];\n\t\t\tsuccess = null;\n\t\t}\n\n\t\t// eslint-disable-next-line react/no-did-mount-set-state\n\t\tthis.setState({\n\t\t\ty,\n\t\t\tsuccess,\n\t\t\tcategories\n\t\t});\n\t}\n\n\tcompute = () => {\n\t\tconst { y, success, x, intercept, omitMissing } = this.state;\n\t\tconst output = <LogisticRegression\n\t\t\tdata={this.props.data}\n\t\t\tx={x} y={y}\n\t\t\tsuccess={success}\n\t\t\tintercept={intercept}\n\t\t\tomitMissing={omitMissing}\n\t\t\tquantitative={this.props.quantitative}\n\t\t\tonPredict={( yhat, probs, resid, counter ) => {\n\t\t\t\tconst newData = copy( this.props.data, 1 );\n\t\t\t\tconst newQuantitative = this.props.quantitative.slice();\n\t\t\t\tconst newCategorical = this.props.categorical.slice();\n\t\t\t\tlet name = 'probs_logis' + counter;\n\t\t\t\tnewData[ name ] = probs;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'pred_logis' + counter;\n\t\t\t\tnewData[ name ] = yhat;\n\t\t\t\tif ( !contains( newCategorical, name ) ) {\n\t\t\t\t\tnewCategorical.push( name );\n\t\t\t\t}\n\t\t\t\tname = 'resid_logis' + counter;\n\t\t\t\tif ( !contains( newQuantitative, name ) ) {\n\t\t\t\t\tnewQuantitative.push( name );\n\t\t\t\t}\n\t\t\t\tnewData[ name ] = resid;\n\t\t\t\tthis.props.onGenerate( newQuantitative, newCategorical, newData );\n\t\t\t}}\n\t\t/>;\n\t\tthis.props.logAction( DATA_EXPLORER_LOGISTIC_REGRESSION, {\n\t\t\ty, x, intercept\n\t\t});\n\t\tthis.props.onCreated( output );\n\t}\n\n\trender() {\n\t\tconst { categorical, quantitative, data, t } = this.props;\n\t\tconst { x, y, categories, success, intercept } = this.state;\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tstyle={{ fontSize: '14px', maxWidth: 500 }}\n\t\t\t>\n\t\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t\t{t('Logistic Regression')}\n\t\t\t\t\t<QuestionButton title={t('Logistic Regression')} content={DESCRIPTION} />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('outcome-y')}\n\t\t\t\t\t\t\t\toptions={categorical}\n\t\t\t\t\t\t\t\tdefaultValue={y}\n\t\t\t\t\t\t\t\tonChange={( y ) => {\n\t\t\t\t\t\t\t\t\tconst categories = extractCategoriesFromValues( data[ y ], y );\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tcategories,\n\t\t\t\t\t\t\t\t\t\tsuccess: categories[ categories.length-1 ],\n\t\t\t\t\t\t\t\t\t\ty\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={`${t('success')} (Y = 1):`}\n\t\t\t\t\t\t\t\tdefaultValue={success}\n\t\t\t\t\t\t\t\toptions={categories}\n\t\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tsuccess: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('predictors-x')} multi\n\t\t\t\t\t\toptions={uniq( quantitative.concat( categorical ) )}\n\t\t\t\t\t\tdefaultValue={x || ''}\n\t\t\t\t\t\tonChange={( x ) => this.setState({ x })}\n\t\t\t\t\t\tcloseMenuOnSelect={false}\n\t\t\t\t\t\tselectAllOption\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('include-intercept')}\n\t\t\t\t\t\tdefaultValue={intercept}\n\t\t\t\t\t\tonChange={( intercept ) => this.setState({ intercept })}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tlegend={t('omit-missing')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={( omitMissing ) => this.setState({ omitMissing })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button disabled={!x || x.length === 0} variant=\"primary\" block onClick={this.compute}>\n\t\t\t\t\t\t{t('calculate')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nLogisticRegressionMenu.defaultProps = {\n\tlogAction() {}\n};\n\nLogisticRegressionMenu.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func.isRequired,\n\tonCreated: PropTypes.func.isRequired\n};\n\n\n// EXPORTS //\n\nexport default LogisticRegressionMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Memoize a function.\n*\n* @module @stdlib/utils/memoize\n*\n* @example\n* var memoize = require( '@stdlib/utils/memoize' );\n*\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\n// MODULES //\n\nvar memoize = require('./memoize.js'); // EXPORTS //\n\n\nmodule.exports = memoize;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar setReadOnly = require('./../../define-nonenumerable-read-only-property');\n\nvar identity = require('./../../identity-function');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property'); // MAIN //\n\n/**\n* Returns a memoized function.\n*\n* @param {Function} fcn - function to memoize\n* @param {Function} [hashFunction] - function to map a set of arguments to a single value identifying that set\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} memoized function\n*\n* @example\n* function factorial( n ) {\n*     var prod;\n*     var i;\n*     prod = 1;\n*     for ( i = n; i > 1; i-- ) {\n*         prod *= i;\n*     }\n*     return prod;\n* }\n*\n* var memoized = memoize( factorial );\n*\n* var v = memoized( 5 );\n* // returns 120\n*\n* v = memoized( 5 );\n* // returns 120\n*/\n\n\nfunction memoize(fcn, hashFunction) {\n  var toKey;\n  var cache;\n\n  if (!isFunction(fcn)) {\n    throw new TypeError('invalid argument. First argument must be a function. Value: `' + fcn + '`.');\n  }\n\n  if (arguments.length < 2) {\n    toKey = identity;\n  } else {\n    toKey = hashFunction;\n\n    if (!isFunction(toKey)) {\n      throw new TypeError('invalid argument. Hash function argument must be a function. Value: `' + toKey + '`.');\n    }\n  }\n\n  cache = {};\n  setReadOnly(memoized, 'cache', cache);\n  return memoized;\n  /**\n  * Memoized function.\n  *\n  * @private\n  * @param {...*} args - function arguments\n  * @returns {*} memoized function result\n  */\n\n  function memoized() {\n    var args;\n    var out;\n    var key;\n    var i;\n    args = new Array(arguments.length);\n\n    for (i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    key = toKey(args).toString();\n\n    if (hasOwnProp(cache, key)) {\n      return cache[key];\n    }\n\n    out = fcn.apply(null, args);\n    cache[key] = out;\n    return out;\n  }\n} // EXPORTS //\n\n\nmodule.exports = memoize;"],"names":["extractCategories","memoize","extractCategoriesFromValues","args","LogisticRegressionMenu","props","state","y","success","x","intercept","omitMissing","output","data","quantitative","onPredict","yhat","probs","resid","counter","newData","copy","newQuantitative","slice","newCategorical","categorical","name","contains","push","onGenerate","logAction","DATA_EXPLORER_LOGISTIC_REGRESSION","onCreated","categories","this","isArray","length","setState","t","style","fontSize","maxWidth","as","title","content","md","legend","options","defaultValue","onChange","value","multi","uniq","concat","closeMenuOnSelect","selectAllOption","disabled","variant","block","onClick","compute","Component","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","className","uid","generateUID","CheckboxInput","bind","useRef","session","useContext","SessionContext","useState","setValue","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","inline","tooltipPlacement","current","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop","module","exports","isFunction","setReadOnly","identity","hasOwnProp","fcn","hashFunction","toKey","cache","TypeError","arguments","memoized","out","key","i","Array","toString","apply"],"sourceRoot":""}