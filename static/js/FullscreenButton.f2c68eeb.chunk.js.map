{"version":3,"sources":["../node_modules/@isle-project/components/internal/fullscreen-button/main.js"],"names":[],"mappings":"g8DAcA,MAAM,yBAAyB,4CAAU,CACxC,aAAc,CACb,MAAM,EAOP,sCAAmB,IAAM,CACxB,KAAK,SAAS,CACb,WAAY,CAAC,KAAK,MAAM,UACzB,CAAC,CACF,CAAC,EATA,KAAK,MAAQ,CACZ,WAAY,EACb,CACD,CAQA,QAAS,CACR,OACC,iDAAC,4CAAQ,KACR,iDAAC,6DAAI,gBAAC,OAAQ,MAAU,KAAK,KAAK,EACjC,iDAAC,gEAAO,CACP,GAAG,qBACH,UAAU,SACV,QAAS,KAAK,MAAM,EAAE,oBAAoB,GAE1C,iDAAC,8DAAM,CACN,QAAQ,oBACR,KAAK,KACL,QAAS,KAAK,iBACd,MAAO,gBACN,SAAU,WACV,IAAK,EACL,MAAO,EACP,SAAU,IACP,KAAK,MAAM,KAAK,EAEpB,aAAY,KAAK,MAAM,EAAE,oBAAoB,GAE7C,iDAAC,QAAK,UAAU,wBAAwB,CACzC,CACD,CACD,EACC,KAAK,MAAM,WAAa,iDAAC,6DAAK,CAC9B,KAAM,KAAK,MAAM,WACjB,OAAQ,KAAK,iBACb,gBAAgB,cAEhB,iDAAC,qEAAa,YAAW,IACxB,iDAAC,oEAAY,GAAG,MACd,KAAK,MAAM,QAAU,KAAK,MAAM,EAAE,mBAAmB,CACvD,CACD,EACA,iDAAC,mEACA,MAAO,CACN,OAAQ,IAAO,OAAO,WACvB,GAEC,KAAK,MAAM,WAAa,iDAAC,4DAAI,CAAC,KAAI,GAClC,UAAW,GAAG,KAAK,MAAM,mCAExB,KAAK,MAAM,IACb,EAAU,KAAK,MAAM,IACtB,EACA,iDAAC,yEACC,KAAK,MAAM,OACZ,iDAAC,8DAAM,CAAC,QAAS,KAAK,kBACpB,KAAK,MAAM,EAAE,OAAO,CACtB,CACD,CACD,EAAW,IACZ,CAEF,CACD,CAKA,iBAAiB,UAAY,CAC5B,UAAW,yDACX,OAAQ,yDACR,KAAM,kEACN,WAAY,uDACZ,MAAO,wDACR,EAEA,iBAAiB,aAAe,CAC/B,UAAW,GACX,OAAQ,KACR,WAAY,GACZ,MAAO,CAAC,CACT,EAKA,6B,EAAe,+CAAiB,4BAA6B,EAAG,gBAAiB,C","file":"static/js/FullscreenButton.f2c68eeb.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Tooltip from '@isle-project/components/tooltip';\nimport Gate from '@isle-project/components/gate';\n\n\n// MAIN //\n\nclass FullscreenButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\ttoggleFullscreen = () => {\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Gate banner={null} {...this.props} >\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tid=\"fullscreen_tooltip\"\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\ttooltip={this.props.t('fullscreen-tooltip')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tonClick={this.toggleFullscreen}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label={this.props.t('fullscreen-tooltip')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"fa fa-window-maximize\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Gate>\n\t\t\t\t{this.state.fullscreen ? <Modal\n\t\t\t\t\tshow={this.state.fullscreen}\n\t\t\t\t\tonHide={this.toggleFullscreen}\n\t\t\t\t\tdialogClassName=\"modal-100w\"\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title as=\"h1\">\n\t\t\t\t\t\t\t{this.props.header || this.props.t('fullscreen-header')}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 0.75 * window.innerHeight\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.wrapInCard ? <Card body\n\t\t\t\t\t\t\tclassName={`${this.props.className} panel-fullscreen-view`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t</Card> : this.props.body}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t{this.props.footer}\n\t\t\t\t\t\t<Button onClick={this.toggleFullscreen}>\n\t\t\t\t\t\t\t{this.props.t('close')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal> : null}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFullscreenButton.propTypes = {\n\tclassName: PropTypes.string,\n\theader: PropTypes.string,\n\tbody: PropTypes.node.isRequired,\n\twrapInCard: PropTypes.bool,\n\tstyle: PropTypes.object\n};\n\nFullscreenButton.defaultProps = {\n\tclassName: '',\n\theader: null,\n\twrapInCard: true,\n\tstyle: {}\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'internal/fullscreen-button' )( FullscreenButton );\n"],"sourceRoot":""}