{"version":3,"sources":["../node_modules/@isle-project/components/collapse/index.js","../node_modules/@isle-project/components/data-explorer/menu/scatterplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/slider/main.js","../node_modules/@isle-project/components/input/slider/index.js"],"names":[],"mappings":"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","file":"static/js/ScatterplotMenu.11bb8d1b.chunk.js","sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Collapse = Loadable( () => import( /* webpackChunkName: \"Collapse\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Collapse;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport contains from '@stdlib/assert/contains';\nimport isArray from '@stdlib/assert/is-array';\nimport Collapse from '@isle-project/components/collapse';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport SliderInput from '@isle-project/components/input/slider';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport ScatterPlot from '@isle-project/components/plots/scatterplot';\nimport { DATA_EXPLORER_SHARE_SCATTERPLOT, DATA_EXPLORER_SCATTERPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst ScatterplotMenu = ( props ) => {\n\tconst { variables, groupingVariables, defaultX, defaultY, t } = props;\n\n\tconst [ xval, setXval ] = useState( defaultX || variables[ 0 ] );\n\tconst [ yval, setYval ] = useState( defaultY || variables[ 1 ] );\n\tconst [ color, setColor ] = useState( null );\n\tconst [ type, setType ] = useState( null );\n\tconst [ size, setSize ] = useState( null );\n\tconst [ text, setText ] = useState( null );\n\tconst [ regressionLine, setRegressionLine ] = useState( false );\n\tconst [ regressionMethod, setRegressionMethod ] = useState([ 'linear' ]);\n\tconst [ lineBy, setLineBy ] = useState( null );\n\tconst [ smoothSpan, setSmoothSpan ] = useState( 0.66 );\n\tconst [ jitterX, setJitterX ] = useState( false );\n\tconst [ jitterY, setJitterY ] = useState( false );\n\n\tconst generateScatterplot = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = { xval, yval, plotId };\n\t\tif ( color ) {\n\t\t\taction.color = color;\n\t\t}\n\t\tif ( type ) {\n\t\t\taction.type = type;\n\t\t}\n\t\tif ( size ) {\n\t\t\taction.size = size;\n\t\t}\n\t\tif ( text ) {\n\t\t\taction.text = text;\n\t\t}\n\t\tif ( regressionLine ) {\n\t\t\taction.regressionLine = regressionLine;\n\t\t\taction.regressionMethod = regressionMethod;\n\t\t}\n\t\tif ( contains( regressionMethod, 'smooth' ) ) {\n\t\t\taction.smoothSpan = smoothSpan;\n\t\t}\n\t\tif ( lineBy ) {\n\t\t\taction.lineBy = lineBy;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_SCATTERPLOT, action );\n\t\t};\n\t\tconst output = <ScatterPlot\n\t\t\tdata={props.data}\n\t\t\txval={xval} yval={yval} color={color} type={type} size={size} text={text}\n\t\t\tregressionLine={regressionLine} regressionMethod={regressionMethod}\n\t\t\tlineBy={lineBy} smoothSpan={smoothSpan} jitterX={jitterX} jitterY={jitterY}\n\t\t\tid={plotId}\n\t\t\taction={action}\n\t\t\tonSelected={props.onSelected}\n\t\t\tonShare={onShare}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_SCATTERPLOT, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card style={{ minWidth: 650 }} >\n\t\t\t<Card.Header as=\"h4\" >\n\t\t\t\t{t('Scatterplot')}\n\t\t\t\t<QuestionButton title={t('Scatterplot')} content={t('Scatterplot-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className=\"d-grid gap-3\" >\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('x-axis')}\n\t\t\t\t\t\tdefaultValue={xval}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setXval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\tdefaultValue={yval}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tonChange={setYval}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('labels')}:`}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tonChange={setText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('color')}:`}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setColor}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('type')}:`}\n\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, paddingRight: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setType}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={`${t('size')}:`}\n\t\t\t\t\t\toptions={variables}\n\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\tstyle={{ float: 'left', paddingLeft: 10, width: '33.3%' }}\n\t\t\t\t\t\tonChange={setSize}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<div style={{\n\t\t\t\t\topacity: props.showRegressionOption ? 1.0 : 0.0\n\t\t\t\t}}>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend={t('show-regression-model')}\n\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetRegressionLine( !regressionLine );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={`${t('method')}:`}\n\t\t\t\t\t\t\tdefaultValue=\"linear\"\n\t\t\t\t\t\t\tmulti={true}\n\t\t\t\t\t\t\toptions={[ 'linear', 'smooth' ]}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={( value ) => {\n\t\t\t\t\t\t\t\tif ( !isArray( value ) ) {\n\t\t\t\t\t\t\t\t\tvalue = [ value ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetRegressionMethod( value );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={`${t('split-by')}:`}\n\t\t\t\t\t\t\toptions={props.groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tstyle={{ float: 'right', paddingLeft: 10, width: '45%' }}\n\t\t\t\t\t\t\tdisabled={!regressionLine}\n\t\t\t\t\t\t\tonChange={setLineBy}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t\t<SliderInput\n\t\t\t\t\t\t\tlegend={t('smoothing-parameter')}\n\t\t\t\t\t\t\tdisabled={!contains( regressionMethod, 'smooth' ) || !regressionLine}\n\t\t\t\t\t\t\tmin={0.01}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tdefaultValue={0.66}\n\t\t\t\t\t\t\tonChange={setSmoothSpan}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ clear: 'both' }}></div>\n\t\t\t\t<Collapse header={t('more')} headerStyle={{ fontSize: '1rem' }} >\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend={t('jitter-x-axis')}\n\t\t\t\t\t\tdefaultValue={jitterX}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetJitterX( !jitterX );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tlegend={t('jitter-y-axis')}\n\t\t\t\t\t\tdefaultValue={jitterY}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetJitterY( !jitterY );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Collapse>\n\t\t\t\t<Button variant=\"primary\" onClick={generateScatterplot}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nScatterplotMenu.defaultProps = {\n\tdefaultX: null,\n\tdefaultY: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonSelected() {},\n\tshowRegressionOption: true\n};\n\nScatterplotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultX: PropTypes.string,\n\tdefaultY: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowRegressionOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ScatterplotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverHeader from 'react-bootstrap/PopoverHeader';\nimport PopoverBody from 'react-bootstrap/PopoverBody';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverHeader>{props.title}</PopoverHeader>\n\t\t<PopoverBody>{props.content}</PopoverBody>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\taria-label={props.title}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\n\n// PROPERTIES //\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleKeyPress = useCallback( ( event ) => {\n\t\tif ( event.which === 13 ) {\n\t\t\tonChange( !value );\n\t\t\tupdateValue( !value );\n\t\t}\n\t}, [ onChange, updateValue, value ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tonKeyPress={handleKeyPress}\n\t\tdisabled={disabled}\n\t\taria-label={props.legend}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\tif ( disabled ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{ color: 'darkgray' }}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</div>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport Badge from 'react-bootstrap/Badge';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport './slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:slider-input' );\n\n\n// MAIN //\n\n/**\n* A slider input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} legend - caption of the input\n* @property {number} defaultValue - The starting value of the slider\n* @property {number} min - The minimum value of the slider\n* @property {number} max - The maximum value of the slider\n* @property {(number|string)} step - step size of the slider\n* @property {boolean} inline - controls whether to place the slider inline with text or outside\n* @property {number} precision - rounding of the input. The value will be rounded to have no more significant digits than the precision. For example, if one wishes to only use integers, a precision of 10 would be used, while if one wishes to round to the hundreds place, one would use a precision of 0.001\n* @property {boolean} disabled - controls whether the slider input is active or not. If set to true, the slider will be present on the screen, albeit grayed-out\n* @property {string} minLabel - label to be displayed to the left of slider instead of minimum value\n* @property {string} maxLabel - label to be displayed to the right of slider instead of maximum value\n* @property {boolean} hideTooltip - controls whether to hide tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} numberInputStyle - CSS inline styles for number input component\n* @property {Object} rangeInputStyle - CSS inline style for range input component\n* @property {Function} onChange - callback invoked with the new value when the slider value changes\n*/\nconst SliderInput = ( props ) => {\n\tconst { bind, defaultValue, legend, disabled, hideTooltip, inline, min, max, onChange, precision, step,\n\t\tminLabel, maxLabel, numberInputStyle, rangeInputStyle, style } = props;\n\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ] : defaultValue\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ]);\n\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finalizing change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if ( step === 1.0 && newValue !== '' ) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tdebug( `Setting state value to: ${value}...` );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, max, min, step, value, onChange ] );\n\n\tconst handleInputChange = useCallback( ( event ) => {\n\t\tconst valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tdebug( `Input value changed to ${value}` );\n\t\tsetValue( newValue );\n\n\t\tif ( valid && newValue !== '' ) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, value, onChange ] );\n\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}:`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}:`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}:`;\n\t} else {\n\t\ttooltip += ':';\n\t}\n\tlet roundedValue;\n\tif ( value !== '' ) {\n\t\troundedValue = roundn( value, ( -1.0 )*precision );\n\t} else {\n\t\troundedValue = value;\n\t}\n\tconst rangeInput = <input\n\t\ttype=\"range\"\n\t\tclassName=\"slider-range-input\"\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tdisabled={disabled}\n\t\tonChange={handleInputChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'left',\n\t\t\tdisplay: inline ? 'inline' : 'block',\n\t\t\t...rangeInputStyle\n\t\t}}\n\t/>;\n\tconst numberInput = <input\n\t\ttype=\"number\"\n\t\tname=\"input\"\n\t\tclassName=\"slider-number-input\"\n\t\tdisabled={disabled}\n\t\tmin={min}\n\t\tmax={max}\n\t\tstep={step}\n\t\tvalue={roundedValue}\n\t\tonChange={handleInputChange}\n\t\tonBlur={finishChange}\n\t\tstyle={{\n\t\t\tfloat: inline ? 'none' : 'right',\n\t\t\tmarginTop: legend && !inline ? -22 : 0,\n\t\t\t...numberInputStyle\n\t\t}}\n\t\tautoComplete=\"off\"\n\t/>;\n\tif ( inline ) {\n\t\treturn (\n\t\t\t<span className=\"input\" style={{\n\t\t\t\tpadding: '5px',\n\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t...style\n\t\t\t}}>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge bg=\"secondary\" >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge bg=\"secondary\" >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t</span>\n\t\t);\n\t}\n\treturn (\n\t\t<Tooltip\n\t\t\tid=\"sliderTooltip\"\n\t\t\tplacement=\"top\"\n\t\t\tshow={!hideTooltip}\n\t\t\ttooltip={disabled ? t('slider-disabled') : tooltip}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"slider-outer-div input\"\n\t\t\t\tstyle={{\n\t\t\t\t\topacity: disabled ? 0.2 : 1.0,\n\t\t\t\t\t...style\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ legend ?\n\t\t\t\t\t<label>{legend}:</label> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<br />\n\t\t\t\t<span className=\"slider-range-wrapper\" >\n\t\t\t\t\t<Badge bg=\"secondary\" style={{ float: 'left' }} >{minLabel || min}</Badge>\n\t\t\t\t\t{rangeInput}\n\t\t\t\t\t<Badge bg=\"secondary\" style={{ float: 'left' }} >{maxLabel || max}</Badge>\n\t\t\t\t</span>\n\t\t\t\t{numberInput}\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nSliderInput.defaultProps = {\n\tinline: false,\n\tlegend: null,\n\tmin: 0,\n\tminLabel: null,\n\tmax: 100,\n\tmaxLabel: null,\n\tstep: 1,\n\tdefaultValue: 10,\n\tonChange() {},\n\tprecision: 10,\n\tdisabled: false,\n\thideTooltip: false,\n\tstyle: {},\n\tnumberInputStyle: {},\n\trangeInputStyle: {}\n};\n\nSliderInput.propTypes = {\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmaxLabel: PropTypes.string,\n\tmin: PropTypes.number,\n\tminLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tprecision: PropTypes.number,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\thideTooltip: PropTypes.bool,\n\tstyle: PropTypes.object,\n\tnumberInputStyle: PropTypes.object,\n\trangeInputStyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default SliderInput;\n","// MODULES //\n\nimport SliderInput from './main.js';\n\n\n// EXPORTS //\n\nexport default SliderInput;\n"],"sourceRoot":""}