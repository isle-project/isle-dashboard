{"version":3,"file":"static/js/ViolinplotMenu.0049c00e.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/violinplot.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js"],"sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport Dashboard from '@isle-project/components/dashboard';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport ViolinPlot from '@isle-project/components/plots/violinplot';\nimport { DATA_EXPLORER_SHARE_VIOLINPLOT, DATA_EXPLORER_VIOLINPLOT } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst DESCRIPTION = '';\n\n\n// MAIN //\n\nconst ViolinPlotMenu = ({ data, variables, defaultValue, groupingVariables, t, session, logAction, onCreated }) => {\n\tconst [ showBox, setShowBox ] = useState( false );\n\treturn (\n\t\t<Dashboard\n\t\t\tautoStart={false}\n\t\t\ttitle={<span>\n\t\t\t\t{t('Violin Plot')}\n\t\t\t\t<QuestionButton title={t('Violin Plot')} content={DESCRIPTION} />\n\t\t\t</span>}\n\t\t\tonGenerate={generateViolinplot}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={defaultValue || variables[ 0 ]}\n\t\t\t\toptions={variables}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('group-by')}\n\t\t\t\toptions={groupingVariables}\n\t\t\t\tclearable={true}\n\t\t\t/>\n\t\t\t<CheckboxInput\n\t\t\t\tlegend={t('show-boxplot')}\n\t\t\t\tdefaultValue={showBox}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetShowBox( !showBox );\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n\n\tfunction generateViolinplot( variable, group ) {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable,\n\t\t\tgroup,\n\t\t\tplotId\n\t\t};\n\t\tconst onShare = () => {\n\t\t\tsession.addNotification({\n\t\t\t\ttitle: t('plot-shared'),\n\t\t\t\tmessage: t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tlogAction( DATA_EXPLORER_SHARE_VIOLINPLOT, action );\n\t\t};\n\t\tconst output = <ViolinPlot\n\t\t\tid={plotId} variable={variable} group={group}\n\t\t\tdata={data} onShare={onShare} action={action}\n\t\t\tshowBox={showBox}\n\t\t/>;\n\t\tlogAction( DATA_EXPLORER_VIOLINPLOT, action );\n\t\tonCreated( output );\n\t}\n};\n\n\n// PROPERTIES //\n\nViolinPlotMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonCreated() {}\n};\n\nViolinPlotMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default ViolinPlotMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"names":["Dashboard","Loadable","ViolinPlotMenu","data","variables","defaultValue","groupingVariables","t","session","logAction","onCreated","showBox","setShowBox","useState","autoStart","title","content","onGenerate","variable","group","plotId","randomstring","action","output","id","onShare","addNotification","message","level","position","DATA_EXPLORER_SHARE_VIOLINPLOT","DATA_EXPLORER_VIOLINPLOT","legend","options","clearable","onChange","defaultProps","propTypes","PropTypes","QuestionButton","props","popover","trigger","placement","rootClose","overlay","size","variant","className","isRequired","uid","generateUID","CheckboxInput","bind","disabled","useRef","useContext","SessionContext","value","setValue","state","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","inline","tooltipPlacement","current","style","marginLeft","role","tabIndex","color","onClick","onKeyPress","onSpanChange","noop"],"sourceRoot":""}