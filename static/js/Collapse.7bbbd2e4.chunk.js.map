{"version":3,"sources":["../node_modules/@isle-project/components/collapse/vs-header.js","../node_modules/@isle-project/components/collapse/create_class.js","../node_modules/@isle-project/components/collapse/main.js"],"names":[],"mappings":"8pBAYA,MAAM,gBAAiB,gBAAU,CAChC,QAAS,CACR,MACC,qBAAC,UACA,QAAS,KAAK,MAAM,QACpB,aAAW,qBACX,UAAW,0BAA0B,KAAK,MAAM,YAChD,MAAO,KAAK,MAAM,OAEjB,KAAK,MAAM,QACb,CAEF,CACD,CAKA,SAAS,UAAY,CACpB,QAAS,qCACT,UAAW,4BACX,MAAO,2BACR,EAEA,SAAS,aAAe,CACvB,UAAW,GACX,MAAO,CAAC,CACT,EAKA,cAAe,SCnCd,qBAAsB,IAAM,CAC5B,MAAK,OAAQ,GACL,oBAED,oBACR,CAKA,iBAAe,Y,kQCJf,KAAM,OAAQ,kBAAQ,sBAAuB,EAiB7C,MAAM,gBAAiB,gBAAU,CAChC,YAAa,MAAQ,CACpB,MAAO,KAAM,EAoBd,sCAAmB,IAAM,CACxB,GAAM,oBAAW,KAAK,MAAM,OAAQ,EAQnC,KAAK,MAAM,QAAS,KAAK,MAAM,OAAQ,MARA,CACvC,KAAM,GAAI,CAAC,KAAK,MAAM,QACtB,KAAK,MAAM,QAAS,CAAE,EACtB,KAAK,SAAS,CACb,QAAS,EACT,UAAW,aAAa,CAAE,CAC3B,CAAC,CACF,CAGD,CAAC,EA9BA,KAAM,SAAU,MAAM,SAAW,MAAM,eACvC,KAAK,MAAQ,CACZ,QACA,UAAW,aAAa,OAAQ,CACjC,CACD,CAEA,MAAO,0BAA0B,UAAW,UAAY,CACvD,MAAK,CAAC,sBAAQ,UAAU,OAAQ,GAAK,UAAU,UAAY,UAAU,QACpE,OAAO,2BAA4B,EAClB,CAChB,QAAS,UAAU,QACnB,UAAW,aAAa,UAAU,OAAQ,CAC3C,GAGM,IACR,CAeA,cAAe,CACd,MAAK,MAAK,MAAM,kBAAoB,KAElC,oBAAC,UAAQ,CACR,QAAS,KAAK,iBACd,UAAW,KAAK,MAAM,gBACtB,MAAO,KAAK,MAAM,aAEjB,KAAK,MAAM,MACb,EAID,oBAAC,UAAQ,CACR,QAAS,KAAK,iBACd,MAAO,KAAK,MAAM,aAEjB,KAAK,MAAM,MACb,CAEF,CAEA,QAAS,CACR,MACC,qBAAC,OAAI,UAAW,GAAG,KAAK,MAAM,4BAA6B,MAAO,KAAK,MAAM,OAC1E,KAAK,aAAa,EACpB,oBAAC,OAAI,UAAW,KAAK,MAAM,WACzB,KAAK,MAAM,QACb,CACD,CAEF,CACD,CAKA,SAAS,UAAY,CACpB,OAAQ,+BAAoB,CAAE,4BAAkB,yBAAe,CAAC,EAChE,YAAa,4BACb,gBAAiB,4BACjB,eAAgB,0BAChB,QAAS,0BACT,UAAW,4BACX,MAAO,4BACP,QAAS,yBACV,EAEA,SAAS,aAAe,CACvB,OAAQ,SACR,gBAAiB,KACjB,YAAa,KACb,eAAgB,GAChB,QAAS,KACT,UAAW,GACX,MAAO,CAAC,EACR,SAAU,CAAC,CACZ,EAKA,SAAe,iBAAe,QAAS,C","file":"static/js/Collapse.7bbbd2e4.chunk.js","sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './vertical-slider.css';\n\n\n// MAIN //\n\n/**\n* An ISLE component that allows to slideDown and slideUp - JQuery style - the header section.\n*/\nclass VSHeader extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t\taria-label=\"Collapsable Header\"\n\t\t\t\tclassName={`vertical-slider-header ${this.props.className}`}\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</button>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nVSHeader.propTypes = {\n\tonClick: PropTypes.func.isRequired,\n\tclassName: PropTypes.string,\n\tstyle: PropTypes.object\n};\n\nVSHeader.defaultProps = {\n\tclassName: '',\n\tstyle: {}\n};\n\n\n// EXPORTS //\n\nexport default VSHeader;\n","// MAIN //\n\n/**\n * Returns a class given the current visibility.\n *\n * @private\n * @param {boolean} val - current visibility status\n * @returns {boolean} collapse classes depending on visibility status\n */\n function createClass( val ) {\n\tif ( val === false ) {\n\t\treturn 'vs-body vs-hidden';\n\t}\n\treturn 'vs-body vs-display';\n}\n\n\n// EXPORTS //\n\nexport default createClass;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isNull from '@stdlib/assert/is-null';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport VSHeader from './vs-header.js';\nimport createClass from './create_class.js';\nimport './vertical-slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:vertical-slider' );\n\n\n// MAIN //\n\n/**\n* An ISLE component that allows to slideDown and slideUp - JQuery style.\n*\n* @property {boolean} defaultVisible - if set, the body is visible right from the start\n* @property {boolean} visible - controls whether slider is visible; turns it into a controlled component where state needs to be handled externally\n* @property {(string|node)} header - header content\n* @property {string} headerClassName - this overrules the given class name of the header\n* @property {Object} headerStyle - one may also assign a style to the header bar\n* @property {string} className - class name\n* @property {Object} style - inline CSS styles for outer container\n* @property {Function} onClick - event handler invoked when header is clicked\n*/\nclass Collapse extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tconst visible = props.visible || props.defaultVisible;\n\t\tthis.state = {\n\t\t\tvisible: visible,\n\t\t\tclassName: createClass( visible )\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif ( !isNull( nextProps.visible ) && nextProps.visible !== prevState.visible ) {\n\t\t\tdebug( 'Override visible state...' );\n\t\t\tconst newState = {\n\t\t\t\tvisible: nextProps.visible,\n\t\t\t\tclassName: createClass( nextProps.visible )\n\t\t\t};\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoggleVisibility = () => {\n\t\tif ( !isBoolean( this.props.visible ) ) {\n\t\t\tconst v = !this.state.visible;\n\t\t\tthis.props.onClick( v );\n\t\t\tthis.setState({\n\t\t\t\tvisible: v,\n\t\t\t\tclassName: createClass( v )\n\t\t\t});\n\t\t} else {\n\t\t\tthis.props.onClick( this.props.visible );\n\t\t}\n\t};\n\n\trenderHeader() {\n\t\tif ( this.props.headerClassName !== null ) {\n\t\t\treturn (\n\t\t\t\t<VSHeader\n\t\t\t\t\tonClick={this.toggleVisibility}\n\t\t\t\t\tclassName={this.props.headerClassName}\n\t\t\t\t\tstyle={this.props.headerStyle}\n\t\t\t\t>\n\t\t\t\t\t{this.props.header}\n\t\t\t\t</VSHeader>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<VSHeader\n\t\t\t\tonClick={this.toggleVisibility}\n\t\t\t\tstyle={this.props.headerStyle}\n\t\t\t>\n\t\t\t\t{this.props.header}\n\t\t\t</VSHeader>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={`${this.props.className} vertical-slider`} style={this.props.style} >\n\t\t\t\t{ this.renderHeader() }\n\t\t\t\t<div className={this.state.className}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCollapse.propTypes = {\n\theader: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\theaderStyle: PropTypes.object,\n\theaderClassName: PropTypes.string,\n\tdefaultVisible: PropTypes.bool,\n\tvisible: PropTypes.bool,\n\tclassName: PropTypes.string,\n\tstyle: PropTypes.object,\n\tonClick: PropTypes.func\n};\n\nCollapse.defaultProps = {\n\theader: 'Header',\n\theaderClassName: null,\n\theaderStyle: null,\n\tdefaultVisible: false,\n\tvisible: null,\n\tclassName: '',\n\tstyle: {},\n\tonClick() {}\n};\n\n\n// EXPORTS //\n\nexport default withPropCheck( Collapse );\n"],"sourceRoot":""}