{"version":3,"file":"static/js/BarchartMenu.8d151a91.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/barchart.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select, { components } from 'react-select';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport selectStyles from '@isle-project/components/input/select/styles';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport BarChart from '@isle-project/components/plots/barchart';\nimport { DATA_EXPLORER_SHARE_BARCHART, DATA_EXPLORER_BARCHART } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst STATS = [\n\t'Mean',\n\t'Median',\n\t'Min',\n\t'Max',\n\t'Sum'\n];\nconst MODES = [\n\t'Counts of distinct values',\n\t'Function evaluated for a variable'\n];\nconst Option = props => (\n\t<components.Option {...props} >\n\t\t{props.data.label}\n\t\t<br />\n\t\t<span style={{ fontVariant: 'small-caps' }} >{props.data.description}</span>\n\t</components.Option>\n);\nconst ORDER_OPTIONS = [\n\t{ label: 'Total', value: 'total', description: 'by total count of each category' },\n\t{ label: 'Alphabetically', value: 'category', description: 'by category name' },\n\t{ label: 'Min', value: 'min', description: 'by minimum count inside each category' },\n\t{ label: 'Max', value: 'max', description: 'by maximum count inside each category' },\n\t{ label: 'Mean', value: 'mean', description: 'by mean count inside each category' },\n\t{ label: 'Median', value: 'median', description: 'by median count inside each category' }\n];\n\n\n// MAIN //\n\nconst BarchartMenu = ( props ) => {\n\tconst { groupingVariables, variables, defaultValue, quantitative, t } = props;\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ yvar, setYVar ] = useState( quantitative[ 0 ] );\n\tconst [ direction, setDirection ] = useState( 'ascending' );\n\tconst [ summary, setSummary ] = useState( STATS[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ horizontal, setHorizontal ] = useState( false );\n\tconst [ mode, setMode ] = useState( MODES[ 0 ] );\n\tconst [ relative, setRelative ] = useState( false );\n\tconst [ stackBars, setStackBars ] = useState( false );\n\tconst [ totalPercent, setTotalPercent ] = useState( false );\n\tconst [ xOrder, setXOrder ] = useState( null );\n\n\tconst generateBarchart = () => {\n\t\tconst plotId = randomstring( 6 );\n\t\tconst action = {\n\t\t\tvariable, group, relative, totalPercent, xOrder, direction, stackBars, plotId\n\t\t};\n\t\tif ( mode === MODES[ 1 ] ) {\n\t\t\taction.summary = summary;\n\t\t\taction.yvar = yvar;\n\t\t}\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: props.t('plot-shared'),\n\t\t\t\tmessage: props.t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_BARCHART, action );\n\t\t};\n\t\tlet output;\n\t\tif ( mode === MODES[ 1 ] ) {\n\t\t\toutput = <BarChart\n\t\t\t\t{...props}\n\t\t\t\tvariable={variable} group={group}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\trelative={relative} totalPercent={totalPercent} xOrder={xOrder}\n\t\t\t\tdirection={direction} summary={summary} yvar={yvar} stackBars={stackBars}\n\t\t\t\tid={plotId}\n\t\t\t\taction={action}\n\t\t\t\tonShare={onShare}\n\t\t\t/>;\n\t\t} else {\n\t\t\toutput = <BarChart\n\t\t\t\t{...props}\n\t\t\t\tvariable={variable} group={group}\n\t\t\t\thorizontal={horizontal}\n\t\t\t\trelative={relative} totalPercent={totalPercent} xOrder={xOrder}\n\t\t\t\tdirection={direction} stackBars={stackBars}\n\t\t\t\tid={plotId}\n\t\t\t\taction={action}\n\t\t\t\tonShare={onShare}\n\t\t\t/>;\n\t\t}\n\t\tprops.logAction( DATA_EXPLORER_BARCHART, action );\n\t\tprops.onCreated( output );\n\t};\n\tconst hideRelativeFrequencies = (\n\t\t!group || // not used without grouping\n\t\ttotalPercent || // overall percent\n\t\tmode === MODES[ 1 ] // when evaluating a function\n\t);\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Bar Chart')}\n\t\t\t\t<QuestionButton title={t('Bar Chart')} content={t('Bar Chart-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('bars-represent')}\n\t\t\t\t\tdefaultValue={mode}\n\t\t\t\t\toptions={MODES}\n\t\t\t\t\tonChange={setMode}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t{ mode === MODES[ 1 ] ?\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('y-axis')}\n\t\t\t\t\t\t\t\tdefaultValue={yvar}\n\t\t\t\t\t\t\t\toptions={props.quantitative}\n\t\t\t\t\t\t\t\tonChange={setYVar}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('summary-function')}\n\t\t\t\t\t\t\t\tdefaultValue={summary}\n\t\t\t\t\t\t\t\toptions={STATS}\n\t\t\t\t\t\t\t\tonChange={setSummary}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row> : null }\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tdefaultValue={group}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FormGroup controlId=\"barchart-order-select\">\n\t\t\t\t\t\t\t<FormLabel>{group ? t('order-outer-groups') : t('order-x-axis')}:</FormLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tdefaultValue={xOrder}\n\t\t\t\t\t\t\t\toptions={ORDER_OPTIONS}\n\t\t\t\t\t\t\t\tcomponents={{ Option }}\n\t\t\t\t\t\t\t\tisClearable={true}\n\t\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\t\tonChange={( elem ) => {\n\t\t\t\t\t\t\t\t\tsetXOrder( elem ? elem.value : null );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyles={selectStyles}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('order-direction')}\n\t\t\t\t\t\t\tdefaultValue={direction}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t'ascending',\n\t\t\t\t\t\t\t\t'descending'\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDirection}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: xOrder ? 'inherit' : 'none'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{ mode === MODES[ 0 ] ? <CheckboxInput\n\t\t\t\t\t\t\tlegend={t('total-percentages')}\n\t\t\t\t\t\t\tdefaultValue={totalPercent}\n\t\t\t\t\t\t\tonChange={setTotalPercent}\n\t\t\t\t\t\t\tdisabled={relative}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: relative ? 0.2 : 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('flip-coordinates')}\n\t\t\t\t\t\t\tdefaultValue={horizontal}\n\t\t\t\t\t\t\tonChange={setHorizontal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('stack-bars')}\n\t\t\t\t\t\t\tdefaultValue={stackBars}\n\t\t\t\t\t\t\tonChange={setStackBars}\n\t\t\t\t\t\t\tdisabled={!group}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: group ? 1.0 : 0.2\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('relative-frequencies-inside-each-group')}\n\t\t\t\t\t\t\tdefaultValue={relative}\n\t\t\t\t\t\t\tdisabled={hideRelativeFrequencies}\n\t\t\t\t\t\t\tonChange={setRelative}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: hideRelativeFrequencies ? 0.2 : 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\" block onClick={generateBarchart}\n\t\t\t\t\tdisabled={!variable}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nBarchartMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tonCreated() {},\n\tonSelected() {}\n};\n\nBarchartMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tsession: PropTypes.object.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default BarchartMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n"],"names":["STATS","MODES","Option","props","c","data","label","style","fontVariant","description","ORDER_OPTIONS","value","BarchartMenu","groupingVariables","variables","defaultValue","quantitative","t","useState","variable","setVariable","yvar","setYVar","direction","setDirection","summary","setSummary","group","setGroup","horizontal","setHorizontal","mode","setMode","relative","setRelative","stackBars","setStackBars","totalPercent","setTotalPercent","xOrder","setXOrder","hideRelativeFrequencies","as","title","content","legend","options","onChange","clearable","menuPlacement","controlId","components","isClearable","elem","styles","selectStyles","display","disabled","opacity","variant","block","onClick","plotId","randomstring","action","output","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_BARCHART","id","DATA_EXPLORER_BARCHART","onCreated","defaultProps","onSelected","popover","trigger","placement","rootClose","overlay","size","className","uid","generateUID","CheckboxInput","bind","useRef","useContext","SessionContext","state","setValue","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","inline","tooltipPlacement","current","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop"],"sourceRoot":""}