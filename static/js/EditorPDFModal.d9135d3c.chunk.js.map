{"version":3,"file":"static/js/EditorPDFModal.d9135d3c.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js","../node_modules/@isle-project/components/text-editor/pdf_modal.js"],"sourcesContent":["// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport pageSizes from './page_sizes.json';\nimport './pdf_modal.css';\n\n\n// VARIABLES //\n\nconst DEFAULT_STATE = {\n\topenPDF: false,\n\tpageSize: 'LETTER',\n\tcustomSize: true,\n\tshowPageOptions: false,\n\tpageOptionConfig: 'Predefined',\n\tcustomWidth: 8.5 * 72,\n\tcustomHeight: 11 * 72,\n\tuseString: true,\n\tpageOrientation: 'portrait',\n\tvisibleWidth: 8.5,\n\tvisibleHeight: 11\n};\n\n\n// MAIN //\n\nclass SaveModal extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\ttogglePDFMenu = () => {\n\t\tif ( this.state.openPDF && this.state.showPageOptions ) {\n\t\t\tthis.setState({\n\t\t\t\topenPDF: !this.state.openPDF,\n\t\t\t\tshowPageOptions: !this.state.showPageOptions\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\topenPDF: !this.state.openPDF\n\t\t\t});\n\t\t}\n\t}\n\n\tsavePDF = () => {\n\t\tconst config = {};\n\t\tconst pageDims = {};\n\t\tif ( this.state.useString ) {\n\t\t\t// If we use the string make page dimension the string:\n\t\t\tpageDims.width = 72 * pageSizes[this.state.pageSize].width;\n\t\t\tpageDims.height = 72 * pageSizes[this.state.pageSize].height;\n\t\t}\n\t\tif ( !this.state.useString || this.state.pageSize === 'POSTER' ) {\n\t\t\tif ( this.state.pageOptionOrientation === 'landscape' ) {\n\t\t\t\tpageDims.height = this.state.customWidth;\n\t\t\t\tpageDims.width = this.state.customHeight;\n\t\t\t} else {\n\t\t\t\tpageDims.height = this.state.customHeight;\n\t\t\t\tpageDims.width = this.state.customWidth;\n\t\t\t}\n\t\t}\n\t\tconfig.pageSize = pageDims;\n\t\tconfig.pageOrientation = this.state.pageOrientation;\n\t\tthis.props.exportPDF( config );\n\t}\n\n\tclickHide = () => {\n\t\tthis.setState( DEFAULT_STATE );\n\t\tthis.props.onHide();\n\t}\n\n\trender() {\n\t\treturn ( <Modal\n\t\t\tonHide={this.clickHide}\n\t\t\tshow={this.props.show}\n\t\t\tid=\"save-modal\"\n\t\t>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>{this.props.t('pdf-modal-title')}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Card border=\"primary\" id=\"export-pdf-panel\" >\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Row className=\"predefined-letter-button\">\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-predefined-value')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.pageSize}\n\t\t\t\t\t\t\t\toptions={['LETTER', 'LEGAL', 'A4', 'B5', 'TABLOID', 'EXECUTIVE', 'POSTER', 'CUSTOM']}\n\t\t\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\t\t\tif ( value !== 'CUSTOM' ) {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tpageSize: value,\n\t\t\t\t\t\t\t\t\t\t\tuseString: true,\n\t\t\t\t\t\t\t\t\t\t\tvisibleHeight: pageSizes[value].height,\n\t\t\t\t\t\t\t\t\t\t\tvisibleWidth: pageSizes[value].width,\n\t\t\t\t\t\t\t\t\t\t\tcustomHeight: pageSizes[value].height * 72,\n\t\t\t\t\t\t\t\t\t\t\tcustomWidth: pageSizes[value].width * 72,\n\t\t\t\t\t\t\t\t\t\t\tpageOrientation: 'portrait'\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tpageSize: value,\n\t\t\t\t\t\t\t\t\t\t\tuseString: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"dimension-select\">\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-width')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.visibleWidth}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\tonChange={( value ) =>{\n\t\t\t\t\t\t\t\t\t// Make it custom if changed\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tpageSize: 'CUSTOM',\n\t\t\t\t\t\t\t\t\t\tcustomWidth: 72 * value,\n\t\t\t\t\t\t\t\t\t\tuseString: false,\n\t\t\t\t\t\t\t\t\t\tvisibleWidth: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('pick-height')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.visibleHeight}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tstep={0.5}\n\t\t\t\t\t\t\t\tonChange={( value ) =>{\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tpageSize: 'CUSTOM',\n\t\t\t\t\t\t\t\t\t\tcustomHeight: 72 * value,\n\t\t\t\t\t\t\t\t\t\tuseString: false,\n\t\t\t\t\t\t\t\t\t\tvisibleHeight: value\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"showDimensions\">\n\t\t\t\t\t\t\t<Col xs={6} md={6}>\n\t\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\t\tlegend={this.props.t('orientation')}\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.pageOrientation}\n\t\t\t\t\t\t\t\t\toptions={['portrait', 'landscape']}\n\t\t\t\t\t\t\t\t\tonChange={( value )=>{\n\t\t\t\t\t\t\t\t\t\tif ( value !== this.state.pageOrientation ) {\n\t\t\t\t\t\t\t\t\t\t\tconst oldWidth = this.state.visibleWidth;\n\t\t\t\t\t\t\t\t\t\t\tconst oldHeight = this.state.visibleHeight;\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tpageOrientation: value,\n\t\t\t\t\t\t\t\t\t\t\t\tvisibleWidth: oldHeight,\n\t\t\t\t\t\t\t\t\t\t\t\tvisibleHeight: oldWidth,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomWidth: 72 * oldHeight,\n\t\t\t\t\t\t\t\t\t\t\t\tcustomHeight: 72 * oldWidth\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Button onClick={this.savePDF} block>{this.props.t('save')}</Button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</Modal.Body>\n\t\t</Modal> );\n\t}\n}\n\n\n// PROPERTIES //\n\nSaveModal.propTypes = {\n\texportPDF: PropTypes.func,\n\tonHide: PropTypes.func,\n\tshow: PropTypes.bool.isRequired\n};\n\nSaveModal.defaultProps = {\n\texportPDF() {},\n\tonHide() {}\n};\n\n\n// EXPORTS //\n\nexport default SaveModal;\n"],"names":["min","max","step","t","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","props","id","useRef","bind","defaultValue","propValue","value","onBlur","onChange","useTranslation","session","useContext","SessionContext","useState","state","setValue","useEffect","globalValue","global","lesson","isNumber","handleChange","useCallback","event","valid","target","validity","newValue","parseFloat","isnan","setState","finishChange","contains","splitted","split","isNull","createTooltip","inline","input","className","style","padding","legend","htmlFor","current","type","numbersOnly","name","disabled","width","paddingLeft","marginLeft","inputStyle","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","placement","show","marginBottom","marginTop","isString","tooltipPlacement","defaultProps","DEFAULT_STATE","openPDF","pageSize","customSize","showPageOptions","pageOptionConfig","customWidth","customHeight","useString","pageOrientation","visibleWidth","visibleHeight","SaveModal","config","pageDims","pageSizes","height","pageOptionOrientation","exportPDF","onHide","Modal","this","clickHide","closeButton","Card","border","Row","options","Col","xs","md","oldWidth","oldHeight","Button","onClick","savePDF","block","Component"],"sourceRoot":""}