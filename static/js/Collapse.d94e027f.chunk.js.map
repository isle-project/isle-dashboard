{"version":3,"file":"static/js/Collapse.d94e027f.chunk.js","mappings":"qQAYA,MAAMA,UAAiBC,EAAAA,UACtBC,SACC,OACC,0BACCC,QAASC,KAAKC,MAAMF,QACpB,aAAW,qBACXG,UAAY,0BAAyBF,KAAKC,MAAMC,YAChDC,MAAOH,KAAKC,MAAME,OAEjBH,KAAKC,MAAMG,WAShBR,EAASS,UAAY,CACpBN,QAASO,IAAAA,KAAAA,WACTJ,UAAWI,IAAAA,OACXH,MAAOG,IAAAA,QAGRV,EAASW,aAAe,CACvBL,UAAW,GACXC,MAAO,IAMR,QC9BA,MAAMK,EAAQC,GAAAA,CAAQ,wBAKtB,SAASC,EAAcC,GACtB,OAAa,IAARA,EACG,oBAED,qBAkBR,MAAMC,UAAiBf,EAAAA,UACtBgB,YAAaZ,G,UACZa,MAAOb,G,EAoBW,KAClB,IAAMc,EAAAA,EAAAA,aAAWf,KAAKC,MAAMe,SAQ3BhB,KAAKC,MAAMF,QAASC,KAAKC,MAAMe,aARQ,CACvC,MAAMC,GAAKjB,KAAKkB,MAAMF,QACtBhB,KAAKC,MAAMF,QAASkB,GACpBjB,KAAKmB,SAAS,CACbH,QAASC,EACTf,UAAWQ,EAAcO,Q,EA3BP,sB,EAAA,M,sFAEpB,MAAMD,EAAUf,EAAMe,SAAWf,EAAMmB,eACvCpB,KAAKkB,MAAQ,CACZF,QAASA,EACTd,UAAWQ,EAAcM,IAII,gCAAEK,EAAWC,GAC3C,IAAMC,GAAAA,CAAQF,EAAUL,UAAaK,EAAUL,UAAYM,EAAUN,QAAU,CAC9ER,EAAO,6BAKP,MAJiB,CAChBQ,QAASK,EAAUL,QACnBd,UAAWQ,EAAcW,EAAUL,UAIrC,OAAO,KAgBRQ,eACC,OAAoC,OAA/BxB,KAAKC,MAAMwB,gBAEd,gBAAC,EAAD,CACC1B,QAASC,KAAK0B,iBACdxB,UAAWF,KAAKC,MAAMwB,gBACtBtB,MAAOH,KAAKC,MAAM0B,aAEjB3B,KAAKC,MAAM2B,QAKd,gBAAC,EAAD,CACC7B,QAASC,KAAK0B,iBACdvB,MAAOH,KAAKC,MAAM0B,aAEjB3B,KAAKC,MAAM2B,QAKf9B,SACC,OACC,uBAAKI,UAAY,GAAEF,KAAKC,MAAMC,4BAA6BC,MAAOH,KAAKC,MAAME,OAC1EH,KAAKwB,eACP,uBAAKtB,UAAWF,KAAKkB,MAAMhB,WACzBF,KAAKC,MAAMG,YAUjBQ,EAASP,UAAY,CACpBuB,OAAQtB,IAAAA,UAAoB,CAAEA,IAAAA,OAAkBA,IAAAA,OAChDqB,YAAarB,IAAAA,OACbmB,gBAAiBnB,IAAAA,OACjBc,eAAgBd,IAAAA,KAChBU,QAASV,IAAAA,KACTJ,UAAWI,IAAAA,OACXH,MAAOG,IAAAA,OACPP,QAASO,IAAAA,MAGVM,EAASL,aAAe,CACvBqB,OAAQ,SACRH,gBAAiB,KACjBE,YAAa,KACbP,gBAAgB,EAChBJ,QAAS,KACTd,UAAW,GACXC,MAAO,GACPJ,aAMD,OAAe8B,EAAAA,EAAAA,GAAejB","sources":["../node_modules/@isle-project/components/collapse/vs-header.js","../node_modules/@isle-project/components/collapse/main.js"],"sourcesContent":["// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './vertical-slider.css';\n\n\n// MAIN //\n\n/**\n* An ISLE component that allows to slideDown and slideUp - JQuery style - the header section.\n*/\nclass VSHeader extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t\taria-label=\"Collapsable Header\"\n\t\t\t\tclassName={`vertical-slider-header ${this.props.className}`}\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</button>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nVSHeader.propTypes = {\n\tonClick: PropTypes.func.isRequired,\n\tclassName: PropTypes.string,\n\tstyle: PropTypes.object\n};\n\nVSHeader.defaultProps = {\n\tclassName: '',\n\tstyle: {}\n};\n\n\n// EXPORTS //\n\nexport default VSHeader;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport isNull from '@stdlib/assert/is-null';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport VSHeader from './vs-header.js';\nimport './vertical-slider.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:vertical-slider' );\n\n\n// FUNCTIONS //\n\nfunction getClassName( val ) {\n\tif ( val === false ) {\n\t\treturn 'vs-body vs-hidden';\n\t}\n\treturn 'vs-body vs-display';\n}\n\n\n// MAIN //\n\n/**\n* An ISLE component that allows to slideDown and slideUp - JQuery style.\n*\n* @property {boolean} defaultVisible - if set, the body is visible right from the start\n* @property {boolean} visible - controls whether slider is visible; turns it into a controlled component where state needs to be handled externally\n* @property {(string|node)} header - header content\n* @property {string} headerClassName - this overrules the given class name of the header\n* @property {Object} headerStyle - one may also assign a style to the header bar\n* @property {string} className - class name\n* @property {Object} style - inline CSS styles for outer container\n* @property {Function} onClick - event handler invoked when header is clicked\n*/\nclass Collapse extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tconst visible = props.visible || props.defaultVisible;\n\t\tthis.state = {\n\t\t\tvisible: visible,\n\t\t\tclassName: getClassName( visible )\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif ( !isNull( nextProps.visible ) && nextProps.visible !== prevState.visible ) {\n\t\t\tdebug( 'Override visible state...' );\n\t\t\tconst newState = {\n\t\t\t\tvisible: nextProps.visible,\n\t\t\t\tclassName: getClassName( nextProps.visible )\n\t\t\t};\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoggleVisibility = () => {\n\t\tif ( !isBoolean( this.props.visible ) ) {\n\t\t\tconst v = !this.state.visible;\n\t\t\tthis.props.onClick( v );\n\t\t\tthis.setState({\n\t\t\t\tvisible: v,\n\t\t\t\tclassName: getClassName( v )\n\t\t\t});\n\t\t} else {\n\t\t\tthis.props.onClick( this.props.visible );\n\t\t}\n\t}\n\n\trenderHeader() {\n\t\tif ( this.props.headerClassName !== null ) {\n\t\t\treturn (\n\t\t\t\t<VSHeader\n\t\t\t\t\tonClick={this.toggleVisibility}\n\t\t\t\t\tclassName={this.props.headerClassName}\n\t\t\t\t\tstyle={this.props.headerStyle}\n\t\t\t\t>\n\t\t\t\t\t{this.props.header}\n\t\t\t\t</VSHeader>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<VSHeader\n\t\t\t\tonClick={this.toggleVisibility}\n\t\t\t\tstyle={this.props.headerStyle}\n\t\t\t>\n\t\t\t\t{this.props.header}\n\t\t\t</VSHeader>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={`${this.props.className} vertical-slider`} style={this.props.style} >\n\t\t\t\t{ this.renderHeader() }\n\t\t\t\t<div className={this.state.className}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCollapse.propTypes = {\n\theader: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\theaderStyle: PropTypes.object,\n\theaderClassName: PropTypes.string,\n\tdefaultVisible: PropTypes.bool,\n\tvisible: PropTypes.bool,\n\tclassName: PropTypes.string,\n\tstyle: PropTypes.object,\n\tonClick: PropTypes.func\n};\n\nCollapse.defaultProps = {\n\theader: 'Header',\n\theaderClassName: null,\n\theaderStyle: null,\n\tdefaultVisible: false,\n\tvisible: null,\n\tclassName: '',\n\tstyle: {},\n\tonClick() {}\n};\n\n\n// EXPORTS //\n\nexport default withPropCheck( Collapse );\n"],"names":["VSHeader","Component","render","onClick","this","props","className","style","children","propTypes","PropTypes","defaultProps","debug","logger","getClassName","val","Collapse","constructor","super","isBoolean","visible","v","state","setState","defaultVisible","nextProps","prevState","isNull","renderHeader","headerClassName","toggleVisibility","headerStyle","header","withPropCheck"],"sourceRoot":""}