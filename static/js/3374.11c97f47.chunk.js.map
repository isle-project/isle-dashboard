{"version":3,"file":"static/js/3374.11c97f47.chunk.js","mappings":"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","sources":["actions/badge.js","actions/file.js","actions/ticket.js","components/ticket-modal/index.js","utils/format_time.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport i18next from 'i18next';\nimport contains from '@stdlib/assert/contains';\nimport server from 'constants/server';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { RETRIEVED_BADGES, USER_RECEIVED_BADGES } from 'constants/action_types.js';\n\n\n// FUNCTIONS //\n\n/**\n * Create a badge notification object for use in the `react-notification-system` component.\n *\n * @param {Object} opts - options\n * @param {string} opts.name - name of the badge\n * @param {string} opts.description - description of the badge\n * @param {string} opts.picture - URL with icon of the badge\n * @returns {Object} `react-notification-system` component configuration\n */\nfunction createBadgeNotification({ name, description, picture }) {\n\tconst pic = server + '/badges/' + picture;\n\treturn {\n\t\tchildren: (\n\t\t\t<div>\n\t\t\t\t<h3>{i18next.t('common:received-badge')}{name}</h3>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"received-badge-before\" />\n\t\t\t\t\t\t<img className=\"received-badge\" src={pic} alt=\"Received Badge\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<p style={{ marginTop: 15 }}>{i18next.t('common:received-badge-for')}<b>{description}</b></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t),\n\t\tlevel: 'info',\n\t\tposition: 'tc',\n\t\tdismissible: 'button',\n\t\tautoDismiss: 0\n\t};\n}\n\n\n// FUNCTIONS //\n\n/**\n * Returns an action for retrieving the user's badges.\n *\n * @param {Array} badges - retrieved user badges\n * @returns {Object} action\n */\nexport function receivedUserBadges( badges ) {\n\treturn {\n\t\ttype: USER_RECEIVED_BADGES,\n\t\tpayload: {\n\t\t\tbadges\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieved available badges.\n *\n * @param {Array} badges - retrieved available badges\n * @returns {Object} action\n */\nexport function retrievedBadges( badges ) {\n\treturn {\n\t\ttype: RETRIEVED_BADGES,\n\t\tpayload: {\n\t\t\tbadges\n\t\t}\n\t};\n}\n\n/**\n * Makes a GET request to retrieve the user's badges.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getUserBadges = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_user_badges' );\n\t\tconst { badges, addedBadges } = res.data;\n\t\tdispatch( receivedUserBadges( badges ) );\n\t\tif ( addedBadges.length > 0 ) {\n\t\t\tfor ( let i = 0; i < badges.length; i++ ) {\n\t\t\t\tconst item = badges[i];\n\t\t\t\tif ( contains( addedBadges, item.name ) ) {\n\t\t\t\t\taddNotification( dispatch, createBadgeNotification( item ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve the user's badges.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve the user's badges\n */\nexport const getUserBadgesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getUserBadges( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to retrieve the available badges.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getAvailableBadges = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_available_badges' );\n\t\tdispatch( retrievedBadges( res.data ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve the available badges.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve the available badges\n */\nexport const getAvailableBadgesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAvailableBadges( dispatch );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport copyToClipboard from 'clipboard-copy';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Button from 'react-bootstrap/Button';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { DELETED_FILE, GET_ALL_FILES, RECEIVED_FILES, RECEIVED_LICENSE, RECEIVED_NAMESPACE_FILES, REMOVED_LICENSE, UPDATED_SETTINGS } from 'constants/action_types.js';\n\n\n// FUNCTIONS //\n\nasync function getFilesRequest( dispatch, { namespaceName, owner = false }) {\n\ttry {\n\t\tconst url = `${server}/get_files?${qs.stringify({\n\t\t\tnamespaceName,\n\t\t\towner\n\t\t})}`;\n\t\tconst res = await axios.get( url );\n\t\tconst files = res.data.files;\n\t\tdispatch( receivedNamespaceFiles({ files, owner }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n}\n\n\n// EXPORTS //\n\n\nexport function receivedFiles( files ) {\n\treturn {\n\t\ttype: RECEIVED_FILES,\n\t\tpayload: {\n\t\t\tfiles\n\t\t}\n\t};\n}\n\nexport function receivedLicense( license ) {\n\treturn {\n\t\ttype: RECEIVED_LICENSE,\n\t\tpayload: {\n\t\t\tlicense\n\t\t}\n\t};\n}\n\nexport function removedLicense() {\n\treturn {\n\t\ttype: REMOVED_LICENSE\n\t};\n}\n\nexport function receivedNamespaceFiles({ files, owner }) {\n\treturn {\n\t\ttype: RECEIVED_NAMESPACE_FILES,\n\t\tpayload: {\n\t\t\tfiles,\n\t\t\towner\n\t\t}\n\t};\n}\n\nexport const getUserFiles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_user_files' );\n\t\tdispatch( receivedFiles( res.data.files ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getUserFilesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getUserFiles( dispatch );\n\t};\n};\n\nexport const deleteFile = async ( dispatch, _id, namespaceName, owner ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/delete_file`, { _id });\n\t\tif ( namespaceName ) {\n\t\t\tgetFilesRequest( dispatch, { namespaceName, owner });\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: DELETED_FILE,\n\t\t\t\tpayload: {\n\t\t\t\t\tid: _id\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:delete-file-title'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const deleteFileInjector = ( dispatch ) => {\n\treturn async ( _id, namespaceName, owner ) => {\n\t\tawait deleteFile( dispatch, _id, namespaceName, owner );\n\t};\n};\n\nexport const uploadFile = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\n\t\t\towner: formData.get( 'owner' ),\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_file?'+ query, formData );\n\t\tgetFilesRequest( dispatch, {\n\t\t\tnamespaceName: formData.get( 'namespaceName' ),\n\t\t\towner: formData.get( 'owner' )\n\t\t});\n\t\tconst msg = {\n\t\t\ttitle: i18next.t('common:file-upload-title'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 10\n\t\t};\n\t\tmsg.children = <div style={{ marginBottom: 30 }}>\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\n\t\t\t\t{i18next.t('common:copy-link')}\n\t\t\t</Tooltip>}>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tcopyToClipboard( server+'/'+res.data.filename );\n\t\t\t\t\t\taddNotification( dispatch, {\n\t\t\t\t\t\t\ttitle: i18next.t('common:copied-title'),\n\t\t\t\t\t\t\tmessage: i18next.t('common:link-copied'),\n\t\t\t\t\t\t\tlevel: 'success',\n\t\t\t\t\t\t\tposition: 'tl'\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"fa fa-clipboard\"></i>\n\t\t\t\t</Button>\n\t\t\t</OverlayTrigger>\n\t\t\t<OverlayTrigger placement=\"bottom\" overlay={<Tooltip id=\"ownerTooltip\">\n\t\t\t\t{i18next.t('common:open-uploaded-file')}\n\t\t\t</Tooltip>}>\n\t\t\t\t<a\n\t\t\t\t\thref={server+'/'+res.data.filename}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tstyle={{ float: 'right', marginRight: '10px' }}\n\t\t\t\t>\n\t\t\t\t\t<Button size=\"sm\" variant=\"outline-secondary\">\n\t\t\t\t\t\t<i className=\"fa fa-external-link-alt\"></i>\n\t\t\t\t\t</Button>\n\t\t\t\t</a>\n\t\t\t</OverlayTrigger>\n\t\t</div>;\n\t\treturn addNotification( dispatch, msg );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\nexport const uploadFileInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tawait uploadFile( dispatch, { formData, user } );\n\t};\n};\n\nexport const getFilesInjector = ( dispatch ) => {\n\treturn async ({ namespaceName }) => {\n\t\tawait getFilesRequest( dispatch, { namespaceName });\n\t};\n};\n\nexport const getOwnerFilesInjector = ( dispatch ) => {\n\treturn async ({ namespaceName }) => {\n\t\tawait getFilesRequest( dispatch, { namespaceName, owner: true });\n\t};\n};\n\nexport const getAllFiles = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_files' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_FILES,\n\t\t\tpayload: {\n\t\t\t\tfiles: res.data.files\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getAllFilesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllFiles( dispatch );\n\t};\n};\n\nexport const uploadLicense = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_license?'+ query, formData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:uploaded'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5\n\t\t});\n\t\tdispatch( receivedLicense( res.data.license ) );\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const uploadLicenseInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tawait uploadLicense( dispatch, { formData, user } );\n\t};\n};\n\nexport const getLicense = async ( dispatch, user ) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.get( server+'/get_license?'+ query );\n\t\tdispatch( receivedLicense( res.data.license ) );\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const getLicenseInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait getLicense( dispatch, user );\n\t};\n};\n\nexport const removeLicense = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/remove_license' );\n\t\tif ( res.data.message === 'ok' ) {\n\t\t\tdispatch( removedLicense() );\n\t\t}\n\t} catch ( err ) {\n\t\tif ( err.message.includes( '404' ) ) {\n\t\t\t// Case: License file has already been removed\n\t\t\tdispatch( removedLicense() );\n\t\t}\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const removeLicenseInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait removeLicense( dispatch );\n\t};\n};\n\nexport const uploadLogo = async ( dispatch, { formData, user }) => {\n\ttry {\n\t\tconst query = qs.stringify({\n\t\t\tjwt: user.token\n\t\t});\n\t\tconst res = await axios.post( server+'/upload_logo?'+ query, formData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:uploaded'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res.data;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\nexport const uploadLogoInjector = ( dispatch ) => {\n\treturn async ({ formData, user }) => {\n\t\tconst res = await uploadLogo( dispatch, { formData, user } );\n\t\treturn res;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { CREATED_TICKET, DELETED_TICKET, GET_ALL_TICKETS,\n\tGET_COURSE_TICKETS, GET_USER_TICKETS, TICKET_CLOSED,\n\tTICKET_OPENED, TICKET_MESSAGE_ADDED, TICKET_PRIORITY_UPDATED } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to get all tickets.\n *\n * @param {Function} dispatch - dispatch object\n * @returns {void}\n */\nexport const getAllTickets = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_tickets' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_TICKETS,\n\t\t\tpayload: {\n\t\t\t\ttickets: res.data.tickets\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a GET request to get all tickets with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a GET request to get all tickets\n */\nexport const getAllTicketsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getAllTickets( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to get all tickets for the given course.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} namespaceID - course id\n * @returns {void}\n */\nexport const getCourseTickets = async ( dispatch, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_course_tickets?'+qs.stringify({ namespaceID }) );\n\t\tdispatch({\n\t\t\ttype: GET_COURSE_TICKETS,\n\t\t\tpayload: {\n\t\t\t\ttickets: res.data.tickets\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a GET request to get all tickets for the given course with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a GET request to get all tickets for the given course\n */\nexport const getCourseTicketsInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait getCourseTickets( dispatch, id );\n\t};\n};\n\n/**\n * Makes a GET request to get all tickets for the user making the request.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getUserTickets = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_user_tickets' );\n\t\tdispatch({\n\t\t\ttype: GET_USER_TICKETS,\n\t\t\tpayload: {\n\t\t\t\ttickets: res.data.tickets\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a GET request to get tickets for the user making the request with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a GET request to get tickets for the user making the request\n */\nexport const getUserTicketsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getUserTickets( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to delete a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - ticket id\n * @returns {void}\n */\nexport const deleteTicket = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_ticket', {\n\t\t\tid\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_TICKET,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to delete a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to delete a ticket\n */\nexport const deleteTicketInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait deleteTicket( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to create a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} ticket - ticket object\n * @param {string} ticket.title - ticket title\n * @param {string} ticket.description - ticket description\n * @param {Object} ticket.platform - user platform\n * @param {Object} ticket.namespace - namespace object\n * @param {Array} ticket.files - array of files\n * @returns {void}\n */\nexport const createTicket = async ( dispatch, {\n\ttitle,\n\tdescription,\n\tplatform,\n\tnamespace,\n\tfiles\n}) => {\n\ttry {\n\t\tlet res;\n\t\tlet attachments;\n\t\tif ( !files || files.length === 0 ) {\n\t\t\tres = await axios.post( server + '/create_ticket', {\n\t\t\t\ttitle,\n\t\t\t\tdescription,\n\t\t\t\tplatform,\n\t\t\t\tnamespaceID: namespace._id\n\t\t\t});\n\t\t\tattachments = [];\n\t\t} else {\n\t\t\tconst formData = new FormData();\n\t\t\tfor ( let i = 0; i < files.length; i++ ) {\n\t\t\t\tformData.append( 'attachment', files[ i ] );\n\t\t\t}\n\t\t\tformData.append( 'title', title );\n\t\t\tformData.append( 'description', description );\n\t\t\tformData.append( 'platform', JSON.stringify( platform ) );\n\t\t\tformData.append( 'namespaceID', namespace._id );\n\t\t\tres = await axios.post( server + '/create_ticket', formData );\n\t\t\tattachments = res.data.attachments;\n\t\t}\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:created'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: CREATED_TICKET,\n\t\t\tpayload: {\n\t\t\t\ttitle,\n\t\t\t\tdescription,\n\t\t\t\tplatform,\n\t\t\t\tnamespace,\n\t\t\t\tattachments\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to create a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to create a ticket\n */\nexport const createTicketInjector = dispatch => {\n\treturn async ({\n\t\ttitle,\n\t\tdescription,\n\t\tplatform,\n\t\tnamespace,\n\t\tfiles\n\t}) => {\n\t\tawait createTicket( dispatch, {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\tplatform,\n\t\t\tnamespace,\n\t\t\tfiles\n\t\t});\n\t};\n};\n\n/**\n * Makes a POST request to send a message to a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} opts - message options\n * @param {string} opts.message - message content\n * @param {string} opts.ticketID - ticket id\n * @param {Object} opts.user - user object\n * @returns {void}\n */\nexport const sendTicketMessage = async ( dispatch, { message, ticketID, user } ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/add_ticket_message', {\n\t\t\tbody: message,\n\t\t\tticketID\n\t\t});\n\t\tconst msgObj = {\n\t\t\tbody: message,\n\t\t\tauthor: user.name,\n\t\t\temail: user.email,\n\t\t\tpicture: user.picture,\n\t\t\tcreatedAt: new Date().getTime()\n\t\t};\n\t\tdispatch({\n\t\t\ttype: TICKET_MESSAGE_ADDED,\n\t\t\tpayload: {\n\t\t\t\tid: ticketID,\n\t\t\t\tmessage: msgObj\n\t\t\t}\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:added'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to send a message to a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to send a message to a ticket\n */\nexport const sendTicketMessageInjector = dispatch => {\n\treturn async ({ message, ticketID, user }) => {\n\t\tawait sendTicketMessage( dispatch, { message, ticketID, user } );\n\t};\n};\n\n/**\n * Makes a POST request to close a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - ticket id\n * @returns {void}\n */\nexport const closeTicket = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/close_ticket', {\n\t\t\tticketID: id\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:closed'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: TICKET_CLOSED,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to close a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to close a ticket\n */\nexport const closeTicketInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait closeTicket( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to update priority of a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - ticket id\n * @param {string} priority - new priority\n * @returns {void}\n */\nexport const updatePriority = async ( dispatch, id, priority ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_ticket_priority', {\n\t\t\tticketID: id,\n\t\t\tpriority\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: TICKET_PRIORITY_UPDATED,\n\t\t\tpayload: {\n\t\t\t\tid,\n\t\t\t\tpriority\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to update priority of a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to update priority of a ticket\n */\nexport const updatePriorityInjector = dispatch => {\n\treturn async ( id, priority ) => {\n\t\tawait updatePriority( dispatch, id, priority );\n\t};\n};\n\n/**\n * Makes a POST request to open a ticket.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - ticket id\n * @returns {void}\n */\nexport const openTicket = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/open_ticket', {\n\t\t\tticketID: id\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:opened'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: TICKET_OPENED,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function that makes a POST request to open a ticket with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function that makes a POST request to open a ticket\n */\nexport const openTicketInjector = dispatch => {\n\treturn async ( id ) => {\n\t\tawait openTicket( dispatch, id );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Modal from 'react-bootstrap/Modal';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport server from 'constants/server';\nimport './ticket_modal.css';\n\n\n// FUNCTIONS //\n\nconst createTooltip = ( str ) => {\n\treturn <Tooltip id=\"tooltip\">{str}</Tooltip>;\n};\n\n\n// MAIN //\n\nclass TicketModal extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tresponse: ''\n\t\t};\n\t}\n\n\thandleResponseChange = ( event ) => {\n\t\tthis.setState({\n\t\t\tresponse: event.target.value\n\t\t});\n\t};\n\n\thandleResponseSubmit = () => {\n\t\tthis.props.submitTicketMessage({\n\t\t\tmessage: this.state.response,\n\t\t\tticketID: this.props.ticket._id\n\t\t});\n\t\tthis.setState({\n\t\t\tresponse: ''\n\t\t});\n\t};\n\n\ttoggleCompletion = () => {\n\t\tif ( this.props.ticket.done ) {\n\t\t\tthis.props.openTicket( this.props.ticket._id );\n\t\t} else {\n\t\t\tthis.props.closeTicket( this.props.ticket._id );\n\t\t}\n\t};\n\n\trenderMessage = ( val, idx ) => {\n\t\tconst t = this.props.t;\n\t\tconst createdAt = new Date( val.createdAt );\n\t\treturn (\n\t\t\t<div className=\"message-container\" key={idx} >\n\t\t\t\t<div className=\"message-data\">\n\t\t\t\t\t<div className=\"message-profile-pic\">\n\t\t\t\t\t\t<img src={`${server}/thumbnail/${val.picture}`} alt=\"User Profile Pic\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"message-author-line\">\n\t\t\t\t\t\t<span className=\"message-author\">{ val.author }</span>\n\t\t\t\t\t\t&nbsp;{t('common:wrote-on', { date: `${createdAt.toLocaleTimeString()} ${createdAt.toLocaleDateString()}` })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message-body\">\n\t\t\t\t\t{val.body}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst t = this.props.t;\n\t\tconst { ticket } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Modal show={this.props.show} onHide={this.props.onHide} dialogClassName=\"modal-60w\" >\n\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t<Modal.Title as=\"h3\" style={{ width: '100%' }}>\n\t\t\t\t\t\t\t{t('common:title')}: {ticket.title}\n\t\t\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={createTooltip( t('close-ticket-modal') )}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={this.props.onHide}\n\t\t\t\t\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\t\t\taria-label={t('close-ticket-modal')}\n\t\t\t\t\t\t\t\t\tclassName=\"modal-close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">x</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body style={{ height: '60vh', overflowY: 'auto' }}>\n\t\t\t\t\t\t<span className=\"title\">{t('common:description')}:</span>\n\t\t\t\t\t\t<p style={{ whiteSpace: 'pre-wrap' }}>\n\t\t\t\t\t\t\t{ticket.description}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t{ticket.namespace.title ?\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:course')}: `}</span>\n\t\t\t\t\t\t\t\t<span>{ticket.namespace.title}</span>\n\t\t\t\t\t\t\t\t{' | '}\n\t\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ticket.lesson ?\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:lesson')}: `}</span>\n\t\t\t\t\t\t\t\t<span>{ticket.lesson.title}</span>\n\t\t\t\t\t\t\t\t{' | '}\n\t\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ticket.component ?\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:component')}: `}</span>\n\t\t\t\t\t\t\t\t<span>{ticket.component}</span>\n\t\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ticket.attachments.length > 0 ?\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span className=\"title\">{`${t('common:attachments')}: `}</span>\n\t\t\t\t\t\t\t\t{ticket.attachments.map( ( file, idx ) => {\n\t\t\t\t\t\t\t\t\treturn ( <a aria-label={t('common:attachments')} href={`${server}/attachments/${file.filename}`} key={idx} style={{ marginLeft: 6 }} target=\"_blank\" rel=\"noopener noreferrer\" >\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-link\" style={{ marginRight: 2 }} ></i>\n\t\t\t\t\t\t\t\t\t\t{file.title}\n\t\t\t\t\t\t\t\t\t</a> );\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Fragment> :\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<span className=\"title\">{t('common:messages')}:</span>\n\t\t\t\t\t\t{ticket.messages.map( this.renderMessage )}\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer style={{ background: 'ghostwhite' }} >\n\t\t\t\t\t\t<FormGroup controlId=\"form-text\" style={{ width: 'calc(100% - 200px)' }} >\n\t\t\t\t\t\t\t<FormLabel>{t('enter-response')}</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tname=\"body\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tas=\"textarea\" rows=\"5\"\n\t\t\t\t\t\t\t\tvalue={this.state.response}\n\t\t\t\t\t\t\t\tplaceholder={ticket.done ? t('require-open-ticket') : t('response-comes-here')}\n\t\t\t\t\t\t\t\tonChange={this.handleResponseChange}\n\t\t\t\t\t\t\t\tdisabled={ticket.done}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<div style={{ float: 'right', width: '180px' }} >\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tonClick={this.handleResponseSubmit}\n\t\t\t\t\t\t\t\tdisabled={!this.state.response || ticket.done}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t('submit-response')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tonClick={this.toggleCompletion}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ticket.done ? t('common:open-ticket') : t('common:close-ticket')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tonClick={this.props.onHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t('common:hide')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nTicketModal.propTypes = {\n\tcloseTicket: PropTypes.func.isRequired,\n\tonHide: PropTypes.func.isRequired,\n\topenTicket: PropTypes.func.isRequired,\n\tshow: PropTypes.bool.isRequired,\n\tsubmitTicketMessage: PropTypes.func.isRequired,\n\tticket: PropTypes.object.isRequired\n};\n\nTicketModal.defaultProps = {};\n\n\n// EXPORTS\n\nexport default withTranslation( [ 'ticket_modal', 'common' ] )( TicketModal );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// MAIN //\n\n/**\n* Formats a timestamp in a human readable format.\n*\n* @param {number} timestamp - timestamp\n* @param {Object} [opts] - options\n* @param {string} [opts.hours] - hours\n* @param {string} [opts.minutes] - minutes\n* @param {string} [opts.seconds] - seconds\n* @returns {string} formatted timestamp\n*/\nconst formatTime = ( time, opts = { hours: true, minutes: true, seconds: true }) => {\n\ttime = time / 1000;\n\tconst hours = floor( time / ( 60*60 ) );\n\ttime = time % ( 60*60 );\n\tlet minutes = floor( time / 60 );\n\tif ( minutes < 10 ) {\n\t\tminutes = '0'+minutes;\n\t}\n\ttime = time % 60;\n\tlet seconds = floor( time );\n\tif ( seconds < 10 ) {\n\t\tseconds = '0'+seconds;\n\t}\n\tlet out = '';\n\tif ( opts.hours ) {\n\t\tout += hours;\n\t}\n\tif ( opts.minutes ) {\n\t\tif ( out ) {\n\t\t\tout += ':';\n\t\t}\n\t\tout += minutes;\n\t}\n\tif ( opts.seconds ) {\n\t\tif ( out ) {\n\t\t\tout += ':';\n\t\t}\n\t\tout += seconds;\n\t}\n\treturn out;\n};\n\n\n// EXPORTS //\n\nexport default formatTime;\n"],"names":["createBadgeNotification","name","description","picture","pic","server","children","i18next","className","src","alt","style","marginTop","level","position","dismissible","autoDismiss","getUserBadges","async","res","axios","badges","addedBadges","data","dispatch","type","USER_RECEIVED_BADGES","payload","receivedUserBadges","length","i","item","contains","addNotification","err","addErrorNotification","getUserBadgesInjector","getAvailableBadges","RETRIEVED_BADGES","getAvailableBadgesInjector","getFilesRequest","namespaceName","owner","url","qs","files","RECEIVED_NAMESPACE_FILES","receivedNamespaceFiles","receivedLicense","license","RECEIVED_LICENSE","removedLicense","REMOVED_LICENSE","getUserFiles","RECEIVED_FILES","getUserFilesInjector","deleteFileInjector","_id","DELETED_FILE","id","title","message","deleteFile","uploadFileInjector","formData","user","query","get","jwt","token","msg","marginBottom","placement","overlay","size","variant","float","marginRight","onClick","copyToClipboard","filename","href","target","rel","uploadFile","getFilesInjector","getOwnerFilesInjector","getAllFilesInjector","GET_ALL_FILES","getAllFiles","uploadLicenseInjector","uploadLicense","getLicenseInjector","getLicense","removeLicenseInjector","includes","removeLicense","uploadLogoInjector","UPDATED_SETTINGS","uploadLogo","getAllTicketsInjector","GET_ALL_TICKETS","tickets","getAllTickets","getCourseTicketsInjector","namespaceID","GET_COURSE_TICKETS","getCourseTickets","getUserTicketsInjector","GET_USER_TICKETS","getUserTickets","deleteTicketInjector","DELETED_TICKET","deleteTicket","createTicketInjector","platform","namespace","attachments","FormData","append","JSON","stringify","CREATED_TICKET","createTicket","sendTicketMessageInjector","ticketID","body","msgObj","author","email","createdAt","Date","getTime","TICKET_MESSAGE_ADDED","sendTicketMessage","closeTicketInjector","TICKET_CLOSED","closeTicket","updatePriorityInjector","priority","TICKET_PRIORITY_UPDATED","updatePriority","openTicketInjector","TICKET_OPENED","openTicket","TicketModal","Component","constructor","props","super","event","this","setState","response","value","submitTicketMessage","state","ticket","done","val","idx","t","key","date","toLocaleTimeString","toLocaleDateString","render","Fragment","Modal","show","onHide","dialogClassName","as","width","OverlayTrigger","str","Tooltip","Button","height","overflowY","whiteSpace","lesson","component","map","file","marginLeft","messages","renderMessage","background","FormGroup","controlId","FormLabel","FormControl","rows","placeholder","onChange","handleResponseChange","disabled","block","handleResponseSubmit","toggleCompletion","propTypes","PropTypes","defaultProps","withTranslation","time","opts","hours","minutes","seconds","floor","out"],"sourceRoot":""}