{"version":3,"sources":["actions/authentication.js","actions/cohort.js","actions/lesson.js","actions/notification.js","actions/settings.js","actions/user.js","components/spinner/index.js","constants/action_types.js","constants/languages.js","constants/server.js","helpers/axios.js","helpers/i18n.js","hooks/use-mount-effect/index.js","reducers/admin.js","reducers/badges.js","reducers/cohorts.js","reducers/namespace.js","reducers/notification.js","reducers/translations.js","reducers/settings.js","reducers/gallery.js","reducers/search.js","reducers/user.js","reducers/index.js","hooks/use-previous/index.js","containers/notification.js","components/language-switcher/index.js","components/footer-bar/index.js","containers/visible-footer-bar/index.js","containers/app.js","service_worker.js","index.js"],"names":[],"mappings":"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","file":"static/js/main.c9db4a8f.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport server from 'constants/server';\nimport { addErrorNotification } from 'actions/notification.js';\nimport { loggedIn } from 'actions/user';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:authentication' );\n\n\n// FUNCTIONS //\n\n/**\n * Sanitizes the user object.\n *\n * @param {Object} user - user object\n * @returns {Array} sanitized user object and a boolean indicating whether the user object needs sanitizing on the server\n */\nconst sanitizeUser = ( user ) => {\n\t// Check for duplicated enrolled and owned namespaces:\n\tconst ownedNamespaces = user.ownedNamespaces;\n\tconst newOwnedNamespaces = [];\n\tlet ids = new Set();\n\tfor ( let i = 0; i < ownedNamespaces.length; i++ ) {\n\t\tif ( !ids.has( ownedNamespaces[ i ]._id ) ) {\n\t\t\tids.add( ownedNamespaces[ i ]._id );\n\t\t\tnewOwnedNamespaces.push( ownedNamespaces[ i ] );\n\t\t}\n\t}\n\tconst enrolledNamespaces = user.enrolledNamespaces;\n\tconst newEnrolledNamespaces = [];\n\tids = new Set();\n\tfor ( let i = 0; i < enrolledNamespaces.length; i++ ) {\n\t\tif ( !ids.has( enrolledNamespaces[ i ]._id ) ) {\n\t\t\tids.add( enrolledNamespaces[ i ]._id );\n\t\t\tnewEnrolledNamespaces.push( enrolledNamespaces[ i ] );\n\t\t}\n\t}\n\tconst needsSanitizing = newOwnedNamespaces.length !== ownedNamespaces.length ||\n\t\tnewEnrolledNamespaces.length !== enrolledNamespaces.length;\n\n\tif ( needsSanitizing ) {\n\t\tuser.ownedNamespaces = newOwnedNamespaces;\n\t\tuser.enrolledNamespaces = newEnrolledNamespaces;\n\t}\n\tdebug( 'Does user need sanitizing? '+needsSanitizing );\n\treturn [ user, needsSanitizing ];\n};\n\n\n// MAIN //\n\n/**\n * Makes a POST request to the server to sanitize the user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n * @returns {(Promise|null)} promise or null\n */\nexport const sanitizeRequest = ( dispatch, user ) => {\n\ttry {\n\t\treturn axios.post( server+'/sanitize_user', {\n\t\t\tid: user.id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to sanitize the user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to sanitize the user\n */\nexport const sanitizeRequestInjector = dispatch => {\n\treturn async ( user ) => {\n\t\tconst result = await sanitizeRequest( dispatch, user );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to fetch the user's credentials.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} obj - object with a `id` property and a `token` property\n * @returns {(Object|null)} user object or null\n */\nexport const fetchCredentials = async ( dispatch, obj ) => {\n\tif ( !obj.id || !obj.token ) {\n\t\treturn null;\n\t}\n\tdebug( 'Fetch user credentials...' );\n\tlocalStorage.setItem( 'ISLE_USER_'+server, JSON.stringify( obj ) );\n\ttry {\n\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\tid: obj.id\n\t\t});\n\t\tdebug( 'Fetched user credentials...' );\n\t\tlet user = res.data;\n\t\tif ( user.picture ) {\n\t\t\tuser.picture = server + '/avatar/' + user.picture;\n\t\t}\n\t\tuser = {\n\t\t\t...obj,\n\t\t\t...user\n\t\t};\n\t\tlet [ sanitizedUser, needsSanitizing ] = sanitizeUser( user );\n\t\tdispatch( loggedIn( user ) );\n\t\tif ( needsSanitizing ) {\n\t\t\tsanitizeRequest( dispatch, obj );\n\t\t}\n\t\treturn sanitizedUser;\n\t} catch ( err ) {\n\t\tdebug( 'Failed to fetch user credentials...' );\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to fetch the user's credentials with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to fetch the user's credentials\n */\nexport const fetchCredentialsInjector = dispatch => {\n\treturn async ( obj ) => {\n\t\tconst result = await fetchCredentials( dispatch, obj );\n\t\treturn result;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport logger from 'debug';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport { getLessons } from 'actions/lesson';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { ADD_ENROLLED_NAMESPACE, GET_ALL_COHORTS, RETRIEVED_COHORTS, RETRIEVED_ENROLLABLE_COHORTS } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:cohorts' );\n\n\n// MAIN //\n\n/**\n * Returns an action for a new enrolled namespace.\n *\n * @param {Object} namespace - namespace object\n * @param {string} namespace._id - namespace ID\n * @param {string} namespace.title - namespace title\n * @param {string} namespace.description - namespace description\n * @param {Array} namespace.owners - namespace owners\n * @returns {Object} action\n */\nexport function addEnrolledNamespace({ title, owners, description, _id }) {\n\treturn {\n\t\ttype: ADD_ENROLLED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieving all enrollable cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function retrievedEnrollableCohorts( cohorts, user ) {\n\treturn {\n\t\ttype: RETRIEVED_ENROLLABLE_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts,\n\t\t\tuser\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieved cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function retrievedCohorts( cohorts, user ) {\n\treturn {\n\t\ttype: RETRIEVED_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts,\n\t\t\tuser\n\t\t}\n\t};\n}\n\n/**\n * Returns an action for retrieving all cohorts.\n *\n * @param {Array} cohorts - cohorts\n * @returns {Object} action\n */\nexport function retrievedAllCohorts( cohorts ) {\n\treturn {\n\t\ttype: GET_ALL_COHORTS,\n\t\tpayload: {\n\t\t\tcohorts\n\t\t}\n\t};\n}\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request for retrieving all enrollable cohorts.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const getEnrollableCohorts = async ( dispatch, user ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_enrollable_cohorts' );\n\t\tconst cohorts = res.data.cohorts;\n\t\tdebug( 'Retrieved '+cohorts.length+' cohorts...' );\n\t\tdispatch( retrievedEnrollableCohorts( cohorts, user ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request for retrieving all enrollable cohorts with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make GET request for retrieving all enrollable cohorts\n */\nexport const getEnrollableCohortsInjector = dispatch => {\n\treturn async ( user ) => {\n\t\tawait getEnrollableCohorts( dispatch, user );\n\t};\n};\n\n/**\n * Makes a GET request for retrieving all cohorts for the selected course.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - course ID\n */\nexport const getCohorts = async ( dispatch, { namespaceID }) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_cohorts?'+qs.stringify({ namespaceID }) );\n\t\tdispatch( retrievedCohorts( res.data.cohorts ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a GET request for retrieving all cohorts for the selected course with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make GET request for retrieving all cohorts for the selected course\n */\nexport const getCohortsInjector = ( dispatch ) => {\n\treturn async ({ namespaceID, userToken }) => {\n\t\tawait getCohorts( dispatch, { namespaceID, userToken });\n\t};\n};\n\n/**\n * Makes a POST request for adding the user to the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} cohortID - cohort ID\n * @param {Object} namespace - namespace object\n */\nexport const addUserToCohort = async ( dispatch, cohortID, namespace ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/add_to_cohort', { cohortID });\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( addEnrolledNamespace( namespace ) );\n\t\tconst namespaceName = namespace.title;\n\t\tgetLessons( dispatch, namespaceName );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for adding the user to the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for adding the user to the selected cohort\n */\nexport const addUserToCohortInjector = ( dispatch ) => {\n\treturn async ( cohortID, namespace ) => {\n\t\tawait addUserToCohort( dispatch, cohortID, namespace );\n\t};\n};\n\n/**\n * Makes a POST request for deleting the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} _id - cohort ID\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const deleteCohort = async ( dispatch, _id, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_cohort', { _id });\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tif ( namespaceID ) {\n\t\t\tgetCohorts( dispatch, {\n\t\t\t\tnamespaceID\n\t\t\t});\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for deleting the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for deleting the selected cohort\n */\nexport const deleteCohortInjector = ( dispatch ) => {\n\treturn async ( _id, namespaceID ) => {\n\t\tawait deleteCohort( dispatch, _id, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for creating a new cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} cohort - cohort object\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const createCohort = async ( dispatch, cohort, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_cohort', cohort );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tgetCohorts( dispatch, { namespaceID });\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for creating a new cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for creating a new cohort\n */\nexport const createCohortInjector = ( dispatch ) => {\n\treturn async ( cohort, namespaceID ) => {\n\t\tawait createCohort( dispatch, cohort, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for updating the selected cohort.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} cohort - cohort object\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\n */\nexport const updateCohort = async ( dispatch, cohort, namespaceID ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_cohort', { cohort });\n\t\tlet msg = res.data.message;\n\t\tlet notification;\n\t\tif ( res.data.newEmails && res.data.newEmails.length > 0 ) {\n\t\t\tnotification = {\n\t\t\t\tchildren: <div>\n\t\t\t\t\t<p>{msg}</p>\n\t\t\t\t\t<p>{i18next.t('common:email-invitations-sent')}</p>\n\t\t\t\t\t<p>{res.data.newEmails.join( '\\n' )}</p>\n\t\t\t\t</div>,\n\t\t\t\tlevel: 'success',\n\t\t\t\tautoDismiss: 0,\n\t\t\t\tdismissible: 'button'\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tnotification = {\n\t\t\t\tmessage: msg,\n\t\t\t\tlevel: 'success'\n\t\t\t};\n\t\t}\n\t\taddNotification( dispatch, notification );\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\n\t\tgetCohorts( dispatch, { namespaceID });\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for updating the selected cohort with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for updating the selected cohort\n */\nexport const updateCohortInjector = ( dispatch ) => {\n\treturn async ( cohort, namespaceID ) => {\n\t\tawait updateCohort( dispatch, cohort, namespaceID );\n\t};\n};\n\n/**\n * Makes a POST request for retrieving the list of cohorts.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getAllCohorts = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_cohorts' );\n\t\tdispatch( retrievedAllCohorts( res.data.cohorts ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function making a POST request for retrieving the list of all cohorts with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST request for retrieving the list of all cohorts\n */\nexport const getAllCohortsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllCohorts( dispatch );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport qs from 'querystring';\nimport server from 'constants/server';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { DELETED_LESSON, GET_ALL_LESSONS, GET_TEMPLATE_LESSONS, GET_ROOMS, UPDATED_LESSON, RETRIEVED_LESSONS, RETRIEVED_PUBLIC_LESSONS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Returns an action signifying a lesson has been deleted.\n *\n * @param {string} lessonName - name of the lesson\n * @returns {Object} action\n */\nexport function deletedLesson( lessonName ) {\n\treturn {\n\t\ttype: DELETED_LESSON,\n\t\tpayload: {\n\t\t\tlessonName\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that a lesson has been updated.\n *\n * @param {string} lessonName - name of the lesson\n * @param {Object} props - properties of the lesson\n * @returns {Object} action\n */\nexport function updatedLesson( lessonName, props ) {\n\treturn {\n\t\ttype: UPDATED_LESSON,\n\t\tpayload: {\n\t\t\tlessonName,\n\t\t\tprops\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that lessons have been retrieved.\n *\n * @param {Array} lessons - lessons\n * @param {string} namespaceName - namespace name\n * @returns {Object} action\n */\nexport function retrievedLessons({ lessons, namespaceName }) {\n\treturn {\n\t\ttype: RETRIEVED_LESSONS,\n\t\tpayload: {\n\t\t\tlessons,\n\t\t\tnamespaceName\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all lessons have been retrieved for an admin user.\n *\n * @param {Array} lessons - lessons\n * @returns {Object} action\n */\nexport function retrievedAllLessons( lessons ) {\n\treturn {\n\t\ttype: GET_ALL_LESSONS,\n\t\tpayload: {\n\t\t\tlessons\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all lessons that may serve as templates have been retrieved.\n *\n * @param {Array} templateLessons - lessons that may serve as templates\n * @returns {Object} action\n */\nexport function retrievedTemplateLessons( templateLessons ) {\n\treturn {\n\t\ttype: GET_TEMPLATE_LESSONS,\n\t\tpayload: {\n\t\t\ttemplateLessons\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all chat rooms have been retrieved.\n *\n * @param {Array} rooms - chat rooms\n * @returns {Object} action\n */\nexport function retrievedRooms( rooms ) {\n\treturn {\n\t\ttype: GET_ROOMS,\n\t\tpayload: {\n\t\t\trooms\n\t\t}\n\t};\n}\n\n/**\n * Returns an action indicating that all public lessons have been retrieved.\n *\n * @param {Array} lessons - lessons\n * @returns {Object} action\n */\nexport function retrievedPublicLessons( lessons ) {\n\treturn {\n\t\ttype: RETRIEVED_PUBLIC_LESSONS,\n\t\tpayload: {\n\t\t\tlessons\n\t\t}\n\t};\n}\n\n/**\n * Makes a POST request to retrieve all public lessons.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getPublicLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_public_lessons' );\n\t\tdispatch( retrievedPublicLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to retrieve all public lessons.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to retrieve all public lessons\n */\nexport const getPublicLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getPublicLessons( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to retrieve the ISLE file for a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - name of the lesson\n * @param {string} options.namespaceName - namespace name\n * @returns {(Object|null)} file data or null if the file does not exist\n */\nexport const getIsleFile = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_isle_file?'+qs.stringify({\n\t\t\tlessonName,\n\t\t\tnamespaceName\n\t\t}) );\n\t\treturn res.data;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve the ISLE file for a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve the ISLE file for a lesson\n */\nexport const getIsleFileInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tconst file = await getIsleFile( dispatch, { lessonName, namespaceName });\n\t\treturn file;\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all lessons for a given namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} namespaceName - namespace name\n */\nexport const getLessons = async ( dispatch, namespaceName ) => {\n\tif ( namespaceName ) {\n\t\ttry {\n\t\t\tconsole.log( 'Retrieve lessons for namespace: ', namespaceName );\n\t\t\tconst res = await axios.get( server+'/get_lessons?'+qs.stringify({\n\t\t\t\tnamespaceName\n\t\t\t}) );\n\t\t\tlet lessons = res.data.lessons;\n\n\t\t\tconsole.log( 'Retrieved %s lessons.', lessons.length );\n\t\t\tlessons = lessons.map(( lesson, index ) => {\n\t\t\t\tlesson.colorIndex = index % 20;\n\t\t\t\tlesson.url = server+'/'+namespaceName+'/'+lesson.title;\n\t\t\t\tif ( lesson.lockUntil ) {\n\t\t\t\t\tlesson.lockUntil = new Date( lesson.lockUntil.time );\n\t\t\t\t}\n\t\t\t\tif ( !lesson.createdAt ) {\n\t\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\n\t\t\t\t}\n\t\t\t\tif ( !lesson.updatedAt ) {\n\t\t\t\t\tlesson.updatedAt = lesson.createdAt;\n\t\t\t\t}\n\t\t\t\treturn lesson;\n\t\t\t});\n\t\t\tdispatch( retrievedLessons({ lessons, namespaceName }) );\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t}\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all lessons for a given namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all lessons for a given namespace\n */\nexport const getLessonsInjector = ( dispatch ) => {\n\treturn async ( namespaceName ) => {\n\t\tawait getLessons( dispatch, namespaceName );\n\t};\n};\n\n/**\n * Makes a POST request to copy a lesson from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.sourceName - source lesson name\n * @param {string} options.targetName - target lesson name\n * @param {string} options.source - source namespace name\n * @param {string} options.target - target namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const copyLesson = async ( dispatch, { sourceName, target, targetName, source }) => {\n\tif ( sourceName && target && source ) {\n\t\ttry {\n\t\t\tconst res = await axios.post( server+'/copy_lesson', {\n\t\t\t\ttarget,\n\t\t\t\tsource,\n\t\t\t\tsourceName,\n\t\t\t\ttargetName\n\t\t\t});\n\t\t\taddNotification( dispatch, {\n\t\t\t\tmessage: res.data.message,\n\t\t\t\tlevel: 'success'\n\t\t\t});\n\t\t\treturn res;\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t\treturn err;\n\t\t}\n\t}\n};\n\n/**\n * Returns a function to make a POST request to copy a lesson from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to copy a lesson from a source namespace to a target namespace\n */\nexport const copyLessonInjector = ( dispatch ) => {\n\treturn async ({ sourceName, target, targetName, source }) => {\n\t\tawait copyLesson( dispatch, { sourceName, target, targetName, source } );\n\t};\n};\n\n/**\n * Makes a POST request to copy all lessons from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.source - source namespace name\n * @param {string} options.target - target namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const copyNamespaceLessons = async ( dispatch, { target, source }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/copy_namespace_lessons', {\n\t\t\ttarget,\n\t\t\tsource\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to copy all lessons from a source namespace to a target namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to copy all lessons from a source namespace to a target namespace\n */\nexport const copyNamespaceLessonsInjector = ( dispatch ) => {\n\treturn async ({ target, source }) => {\n\t\tconst res = await copyNamespaceLessons( dispatch, { target, source } );\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to delete a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n * @returns {(Object|Error)} response data or an error if encountered\n */\nexport const deleteLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\tif ( !namespaceName || !lessonName ) {\n\t\tconst err = new Error( 'Missing `namespaceName` or `lessonName`.' );\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\tdispatch( deletedLesson( lessonName ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to delete a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to delete a lesson\n */\nexport const deleteLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait deleteLesson( dispatch, { lessonName, namespaceName } );\n\t};\n};\n\n/**\n * Makes a POST request to show a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const showLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/show_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { public: true }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to show a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to show a lesson in the gallery of the dashboard\n */\nexport const showLessonInGalleryInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait showLessonInGallery( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n\n/**\n * Makes a POST request to hide a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const hideLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/hide_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { public: false }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to hide a lesson in the gallery of the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to hide a lesson in the gallery of the dashboard\n */\nexport const hideLessonInGalleryInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait hideLessonInGallery( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to make a lesson available to users, i.e. set it to being active.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const activateLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/activate_lesson?', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { active: true }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to make a lesson available to users, i.e. set it to being active.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to make a lesson available to users, i.e. set it to being active\n */\nexport const activateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait activateLesson( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to make a lesson hidden from users, i.e. set it to being inactive.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n */\nexport const deactivateLesson = async ( dispatch, { lessonName, namespaceName }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/deactivate_lesson', {\n\t\t\tnamespaceName,\n\t\t\tlessonName\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedLesson( lessonName, { active: false }) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive\n */\nexport const deactivateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName }) => {\n\t\tawait deactivateLesson( dispatch, { lessonName, namespaceName });\n\t};\n};\n\n/**\n * Makes a POST request to update a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.lessonName - lesson name\n * @param {string} options.namespaceName - namespace name\n * @param {string} options.newTitle - new title\n * @param {string} options.newDescription - new description\n * @param {string} options.lockAfter - date on which the lesson should be made unavailable to users\n * @param {string} options.lockUntil - date on which the lesson should be made available to users\n * @param {boolean} options.template - controls whether the lesson shall be a template or not\n * @param {boolean} options.hideFromDashboard - controls whether the lesson shall be hidden from the dashboard (but may still be active and accessible)\n * @returns {boolean} true if the lesson was updated, false otherwise\n */\nexport const updateLesson = async ( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, template, hideFromDashboard }) => {\n\tif ( namespaceName && lessonName ) {\n\t\ttry {\n\t\t\tconst query = {\n\t\t\t\tnamespaceName,\n\t\t\t\tlessonName,\n\t\t\t\tnewTitle,\n\t\t\t\tnewDescription,\n\t\t\t\tlockAfter,\n\t\t\t\tlockUntil,\n\t\t\t\thideFromDashboard\n\t\t\t};\n\t\t\tif ( isBoolean( template ) ) {\n\t\t\t\tquery.template = template;\n\t\t\t}\n\t\t\tconst res = await axios.post( server+'/update_lesson', query );\n\t\t\tdispatch( deletedLesson( lessonName ) );\n\t\t\taddNotification( dispatch, {\n\t\t\t\tmessage: res.data.message,\n\t\t\t\tlevel: 'success'\n\t\t\t});\n\t\t\tgetLessons( dispatch, namespaceName );\n\t\t\treturn true;\n\t\t} catch ( err ) {\n\t\t\taddErrorNotification( dispatch, err );\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n * Returns a function to make a POST request to update a lesson.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to update a lesson\n */\nexport const updateLessonInjector = ( dispatch ) => {\n\treturn async ({ lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, hideFromDashboard, template }) => {\n\t\tconst bool = await updateLesson( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, hideFromDashboard, template });\n\t\treturn bool;\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all lessons for an admin user.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getAllLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_lessons' );\n\t\tdispatch( retrievedAllLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all lessons for an admin user.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all lessons for an admin user\n */\nexport const getAllLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllLessons( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to retrieve all template lessons.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getTemplateLessons = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_template_lessons' );\n\t\tdispatch( retrievedTemplateLessons( res.data.lessons ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all template lessons.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all template lessons\n */\nexport const getTemplateLessonsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getTemplateLessons( dispatch );\n\t};\n};\n\n\n/**\n * Makes a GET request to retrieve all chat rooms\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const getRooms = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_open_rooms' );\n\t\tdispatch( retrievedRooms( res.data.rooms ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to retrieve all chat rooms\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to retrieve all chat rooms\n */\nexport const getRoomsInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getRooms( dispatch );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { ADD_NOTIFICATION, ADD_ERROR_NOTIFICATION } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Dispatches an action object to add a notification.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} notification - Notification object\n */\nexport function addNotification( dispatch, notification ) {\n\tdispatch({\n\t\ttype: ADD_NOTIFICATION,\n\t\tpayload: notification\n\t});\n}\n\n/**\n * Returns a function to dispatch an action object to add a notification.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to dispatch action object to add a notification\n */\nexport const addNotificationInjector = dispatch => {\n\treturn notification => {\n\t\taddNotification( dispatch, notification );\n\t};\n};\n\n/**\n * Dispatches an action object to add an error notification.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Error} err - error object\n */\nexport function addErrorNotification( dispatch, err ) {\n\tlet msg;\n\tif ( err.response ) {\n\t\tmsg = 'Server response: ' + err.response.status + '.\\n';\n\t\tmsg += err.response.data;\n\t} else {\n\t\tmsg = err.message;\n\t}\n\tdispatch({\n\t\ttype: ADD_ERROR_NOTIFICATION,\n\t\tpayload: msg\n\t});\n}\n\n/**\n * Returns a function to dispatch an action object to add an error notification with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to dispatch action object to add an error notification\n */\nexport const addErrorNotificationInjector = dispatch => {\n\treturn message => {\n\t\taddErrorNotification( dispatch, message );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport axios from 'axios';\nimport server from 'constants/server';\nimport i18next from 'i18next';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { UPDATED_SETTINGS, UPDATED_TRANSLATIONS, GET_CUSTOM_TRANSLATIONS, GET_SETTINGS_PUBLIC, GET_SETTINGS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Makes a GET request to the server to retrieve the server instance settings.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getSettings = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_settings' );\n\t\tdispatch({\n\t\t\ttype: GET_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve the server instance settings with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve the server instance settings\n */\nexport const getSettingsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getSettings( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to the server to retrieve the server instance's public settings.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getPublicSettings = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_public_settings' );\n\t\tdispatch({\n\t\t\ttype: GET_SETTINGS_PUBLIC,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve the server instance's public settings with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve the server instance's public settings\n */\nexport const getPublicSettingsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getPublicSettings( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a server instance setting.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} name - name of the setting to update\n * @param {string} value - value of the setting to update\n * @returns {void}\n */\nexport const updateSettings = async ( dispatch, name, value ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_settings', {\n\t\t\tname, value\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_SETTINGS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a server instance setting with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to update a server instance setting\n */\nexport const updateSettingsInjector = dispatch => {\n\treturn async ( name, value ) => {\n\t\tawait updateSettings( dispatch, name, value );\n\t};\n};\n\n/**\n * Makes a POST request to the server to add a custom translation.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} translation - the translation to add\n * @param {string} translation.language - the locale of the translation\n * @param {string} translation.ns - the namespace of the translation\n * @param {string} translation.key - the translation's key\n * @param {string} translation.value - the translation's value\n * @returns {(Object|Error)} the translation added or an error\n */\nexport const addCustomTranslation = async ( dispatch, { language, ns, key, value }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/add_custom_translation', {\n\t\t\tlanguage, ns, key, value\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:updated'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to add a custom translation with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to add a custom translation\n */\nexport const addCustomTranslationInjector = dispatch => {\n\treturn async ({ language, ns, key, value }) => {\n\t\tconst res = await addCustomTranslation( dispatch, { language, ns, key, value });\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to get all custom translations.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getCustomTranslations = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_translations' );\n\t\tdispatch({\n\t\t\ttype: GET_CUSTOM_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to get all custom translations with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to get all custom translations\n */\nexport const getCustomTranslationsInjector = dispatch => {\n\treturn async () => {\n\t\tawait getCustomTranslations( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to remove a custom translation.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} translation - the translation to remove\n * @param {string} translation.language - the locale of the translation\n * @param {string} translation.ns - the namespace of the translation\n * @param {string} translation.key - the translation's key\n * @returns {(Object|Error)} the server response or an error\n */\nexport const removeCustomTranslation = async ( dispatch, { language, ns, key }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/remove_custom_translation', {\n\t\t\tlanguage, ns, key\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:removed'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATED_TRANSLATIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to remove a custom translation with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to remove a custom translation\n */\nexport const removeCustomTranslationInjector = dispatch => {\n\treturn async ({ language, ns, key }) => {\n\t\tconst res = await removeCustomTranslation( dispatch, { language, ns, key });\n\t\treturn res;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport { fetchCredentials } from 'actions/authentication.js';\nimport { getEnrollableCohorts } from 'actions/cohort.js';\nimport { addNotification, addErrorNotification } from 'actions/notification.js';\nimport { AUTHENTICATED, USER_PICTURE_MODIFIED, DELETED_USER, GET_USERS, LOGGED_IN, LOGGED_OUT, RECEIVED_TOKEN, REQUEST_TFA, USER_UPDATED, USER_UPDATED_BY_ADMIN } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:user' );\n\n\n// EXPORTS //\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function loggedIn( user ) {\n\treturn {\n\t\ttype: LOGGED_IN,\n\t\tpayload: {\n\t\t\temail: user.email,\n\t\t\tverifiedEmail: user.verifiedEmail,\n\t\t\tname: user.name,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t\tpreferredName: user.preferredName,\n\t\t\tpronouns: user.pronouns,\n\t\t\tenrolledNamespaces: user.enrolledNamespaces,\n\t\t\townedNamespaces: user.ownedNamespaces,\n\t\t\torganization: user.organization,\n\t\t\twriteAccess: user.writeAccess,\n\t\t\tadministrator: user.administrator,\n\t\t\tlessonData: user.lessonData,\n\t\t\tpicture: user.picture,\n\t\t\tcreatedAt: user.createdAt,\n\t\t\tupdatedAt: user.updatedAt,\n\t\t\tscore: user.score,\n\t\t\tspentTime: user.spentTime,\n\t\t\tlicensed: user.licensed,\n\t\t\tcustomFields: user.customFields,\n\t\t\tavailableCustomFields: user.availableCustomFields,\n\t\t\ttwoFactorAuth: user.twoFactorAuth\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has logged-in and a JSON web token has been received.\n *\n * @param {Object} options - function options\n * @param {string} options.token - JSON web token\n * @param {string} options.id - user id\n * @returns {Object} action\n */\nexport function receivedToken({ token, id }) {\n\treturn {\n\t\ttype: RECEIVED_TOKEN,\n\t\tpayload: {\n\t\t\ttoken,\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n* Returns an action signaling that a request for a two-factor authentication token has been made.\n*\n* @param {Object} options - function options\n* @param {string} options.email - user email\n* @param {string} options.password - user password\n* @returns {Object} action\n*/\nexport function requestTFA({ email, password }) {\n\treturn {\n\t\ttype: REQUEST_TFA,\n\t\tpayload: {\n\t\t\temail,\n\t\t\tpassword\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been logged-out.\n *\n * @returns {Object} action\n */\nexport function loggedOut() {\n\treturn {\n\t\ttype: LOGGED_OUT\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @returns {Object} action\n */\nexport function authenticated() {\n\treturn {\n\t\ttype: AUTHENTICATED\n\t};\n}\n\n/**\n * Returns an action signaling that the user's picture has been updated.\n *\n * @param {Object} picture - user picture\n * @returns {Object} action\n */\nexport function updateUserPicture( picture ) {\n\treturn {\n\t\ttype: USER_PICTURE_MODIFIED,\n\t\tpayload: {\n\t\t\tpicture\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user's name or organization has been updated.\n *\n * @param {Object} user - user object\n * @param {string} user.name - user name\n * @param {string} user.organization - user organization\n * @returns {Object} action\n */\nexport const updatedUser = ({ name, organization }) => {\n\treturn {\n\t\ttype: USER_UPDATED,\n\t\tpayload: {\n\t\t\tname,\n\t\t\torganization\n\t\t}\n\t};\n};\n\n/**\n * Returns an action signaling that a user has been updated by an administrator.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport const updatedUserByAdmin = ( user ) => {\n\treturn {\n\t\ttype: USER_UPDATED_BY_ADMIN,\n\t\tpayload: user\n\t};\n};\n\n/**\n * Makes a GET request to the server to retrieve list of users.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getUsers = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_users' );\n\t\tdispatch({\n\t\t\ttype: GET_USERS,\n\t\t\tpayload: {\n\t\t\t\tusers: res.data.users\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve list of users with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve list of users\n */\nexport const getUsersInjector = dispatch => {\n\treturn async () => {\n\t\tawait getUsers( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to impersonate a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n * @param {string} options.password - user password\n */\nexport const impersonateUser = async ( dispatch, { id, password }) => {\n\tdebug( 'Impersonating user with id '+id );\n\ttry {\n\t\tconst res = await axios.post( server+'/impersonate', { id, password });\n\t\tconst user = await fetchCredentials( dispatch, {\n\t\t\tid: res.data.id\n\t\t});\n\t\t// Save user token to local storage:\n\t\tconst JWT = {\n\t\t\ttoken: res.data.token,\n\t\t\tid: res.data.id\n\t\t};\n\t\tconst userVal = 'ISLE_USER_' + server;\n\t\tlocalStorage.setItem( userVal, JSON.stringify( JWT ) );\n\t\tif ( user ) {\n\t\t\tgetEnrollableCohorts( dispatch, user );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to impersonate a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to impersonate a user\n */\nexport const impersonateUserInjector = dispatch => {\n\treturn async ({ id, password }) => {\n\t\tawait impersonateUser( dispatch, { id, password } );\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n */\nexport const deleteUser = async ( dispatch, { id }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_user', { id });\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_USER,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to delete a user\n */\nexport const deleteUserInjector = dispatch => {\n\treturn async ({ id }) => {\n\t\tawait deleteUser( dispatch, { id } );\n\t};\n};\n\n/**\n * Makes POST requests to the server to upload a user's profile picture.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Object} options.avatarData - user avatar picture data\n * @param {Object} options.thumbnailData - user thumbnail picture data\n */\nexport const uploadProfilePic = async ( dispatch, { avatarData, thumbnailData }) => {\n\ttry {\n\t\tlet res = await axios.post( server+'/upload_profile_pic', avatarData );\n\t\tconst message = res.data.message;\n\t\tlet filename = res.data.filename;\n\t\tfilename = server + '/avatar/' + filename;\n\t\tdispatch( updateUserPicture( filename ) );\n\n\t\tres = await axios.post( server+'/upload_thumbnail_pic', thumbnailData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('profile-pic-title'),\n\t\t\tmessage,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make POST requests to the server to upload a user's profile picture with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST requests to the server to upload a user's profile picture\n */\nexport const uploadProfilePicInjector = ( dispatch ) => {\n\treturn async ({ avatarData, thumbnailData }) => {\n\t\tawait uploadProfilePic( dispatch, { avatarData, thumbnailData });\n\t};\n};\n\n/**\n * Makes a POST request to the server to authenticate a user as an instructor.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.writeAccessToken - write access token to enable instructor access\n * @returns {boolean} true if the user is now an instructor, false otherwise\n */\nexport const authenticate = async ( dispatch, { writeAccessToken }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/set_write_access', { token: writeAccessToken });\n\t\tdispatch( authenticated() );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message+' You can now create your own courses on ISLE and have access to the gallery of public lessons.',\n\t\t\tlevel: 'success',\n\t\t\tautoDismiss: 10\n\t\t});\n\t\treturn true;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn false;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to authenticate a user as an instructor with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to authenticate a user as an instructor\n */\nexport const authenticateInjector = ( dispatch ) => {\n\treturn async ({ writeAccessToken }) => {\n\t\tconst result = await authenticate( dispatch, { writeAccessToken });\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to trigger an email to be sent to the user to change their password.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.email - user email\n */\nexport const forgotPassword = async ( dispatch, { email }) => {\n\ttry {\n\t\tawait axios.get( server+'/forgot_password?'+qs.stringify({ email }) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: 'Check your email inbox for a link to choose a new password.',\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger an email to be sent to the user to change their password with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger an email to be sent to the user to change their password\n */\nexport const forgotPasswordInjector = ( dispatch ) => {\n\treturn async ({ email }) => {\n\t\tawait forgotPassword( dispatch, { email });\n\t};\n};\n\n/**\n * Makes a POST request to the server to change a user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @param {string} form.name - user name\n * @param {string} form.organization- user organization\n * @param {Object} form.customFields - user custom fields\n */\nexport const updateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_user', form );\n\t\tdispatch( updatedUser({\n\t\t\tname: form.name,\n\t\t\torganization: form.organization,\n\t\t\tcustomFields: form.customFields\n\t\t}) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to change a user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to change a user's data\n */\nexport const updateUserInjector = ( dispatch ) => {\n\treturn async ({ name, organization, password, customFields }) => {\n\t\tawait updateUser( dispatch, { name, organization, password, customFields });\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new user.\n *\n * @param {Object} form - form data\n * @returns {Promise} promise that resolves to the server response\n */\nexport const createUser = ( form ) => {\n\treturn axios.post( server+'/create_user', form );\n};\n\n/**\n * Makes a POST request to the server to login a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {Object} server response\n */\nexport const handleLogin = async ( dispatch, form ) => {\n\tconst res = await axios.post( server+'/login', form );\n\tif ( res.data.message === 'finish-login-via-tfa' ) {\n\t\tdispatch( requestTFA( res.data ) );\n\t} else {\n\t\tdispatch( receivedToken( res.data ) );\n\t}\n\treturn res;\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user\n */\nexport const handleLoginInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLogin( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to login a user with a TFA code.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {(Object|Error)} server response or an error if the TFA code is invalid\n */\nexport const handleLoginTFA = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/login_tfa', form );\n\t\tdispatch( receivedToken( res.data ) );\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a TFA code with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user with a TFA code\n */\nexport const handleLoginTFAInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLoginTFA( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Restores a users' login session.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const restoreLogin = ( dispatch, user ) => {\n\tdispatch( loggedIn( user ) );\n};\n\n/**\n * Returns a function to restore a users' login session with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to restore a users' login session\n */\nexport const restoreLoginInjector = ( dispatch ) => {\n\treturn ( user ) => {\n\t\trestoreLogin( dispatch, user );\n\t};\n};\n\n/**\n * Logs a user out.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const logout = async ( dispatch ) => {\n\tdebug( 'Logging out the current user...' );\n\ttry {\n\t\tawait axios.post( server+'/invalidate_session' );\n\t} catch ( err ) {\n\t\tdebug( err.message );\n\t}\n\tlocalStorage.removeItem( 'ISLE_USER_'+server );\n\tdispatch( loggedOut() );\n};\n\n/**\n * Returns a function to log a user out with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to log a user out\n */\nexport const logoutInjector = ( dispatch ) => {\n\treturn () => {\n\t\tlogout( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to the server to check whether a user's locally stored data has to be updated.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const userUpdateCheck = async ( dispatch, user ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/user_update_check?'+qs.stringify({\n\t\t\tupdatedAt: user.updatedAt\n\t\t}) );\n\t\tdebug( 'Received response: '+res.data );\n\t\tif ( !res.data.hasMostRecent ) {\n\t\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\t\tid: user.id\n\t\t\t});\n\t\t\tlet newUser = res.data;\n\t\t\tif ( newUser.picture ) {\n\t\t\t\tnewUser.picture = server + '/avatar/' + newUser.picture;\n\t\t\t}\n\t\t\tnewUser = {\n\t\t\t\tid: user.id,\n\t\t\t\ttoken: user.token,\n\t\t\t\t...newUser\n\t\t\t};\n\t\t\tdebug( 'Updated user data...' );\n\t\t\tdispatch( loggedIn( newUser ) );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to check whether a user's locally stored data has to be updated with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to check whether a user's locally stored data has to be updated\n */\nexport const userUpdateCheckInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait userUpdateCheck( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server to confirm a user's email address.\n *\n * @param {string} token - user token\n * @returns {string} server response message or error message\n */\nexport const confirmEmail = async ( token ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/confirm_email', {\n\t\t\ttoken\n\t\t});\n\t\treturn res.data.message;\n\t} catch ( err ) {\n\t\tif ( err.response && err.response.data ) {\n\t\t\treturn err.response.data;\n\t\t}\n\t\treturn err.message;\n\t}\n};\n\n/**\n * Make a POST request to the server to trigger a new email for confirming a user's email address.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const resendConfirmEmail = async ( dispatch, user ) => {\n\ttry {\n\t\tawait axios.post( server+'/resend_confirm_email' );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: 'Email sent',\n\t\t\tmessage: i18next.t('common:verification-email-sent'),\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger a new email for confirming a user's email address with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger a new email for confirming a user's email address\n */\nexport const resendConfirmEmailInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait resendConfirmEmail( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server by an administrator to update an arbitrary user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form object with new user data\n * @param {string} [form.password] - user password\n * @param {boolean} [form.writeAccess] - boolean indicating whether the user should have instructor access\n * @param {boolean} [form.administrator] - boolean indicating whether the user should be an administrator\n * @param {boolean} [form.twoFactorAuth] - boolean indicating whether the user should have two factor authentication enabled\n * @param {boolean} [form.loginWithoutPassword] - boolean indicating whether the user should be able to login without a password\n * @param {string} [form.name] - user name\n * @param {string} [form.organization] - user organization\n * @param {Object} [form.customFields] - user custom fields\n */\nexport const adminUpdateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/admin_update_user', form );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedUserByAdmin( form ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server by an administrator to update an arbitrary user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server by an administrator to update an arbitrary user's data\n */\nexport const adminUpdateUserInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tawait adminUpdateUser( dispatch, form );\n\t};\n};\n","/**\n* The MIT License (MIT)\n*\n* Copyright (c) 2015 Tobias Ahlin\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy of\n* this software and associated documentation files (the \"Software\"), to deal in\n* the Software without restriction, including without limitation the rights to\n* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n* the Software, and to permit persons to whom the Software is furnished to do so,\n* subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// MODULES //\n\nimport React from 'react';\n\n\n// MAIN //\n\nconst Spinner = ({ className }) => {\n\treturn ( <div className={`sk-cube-grid ${className}`} >\n\t\t<div className=\"sk-cube sk-cube1\"></div>\n\t\t<div className=\"sk-cube sk-cube2\"></div>\n\t\t<div className=\"sk-cube sk-cube3\"></div>\n\t\t<div className=\"sk-cube sk-cube4\"></div>\n\t\t<div className=\"sk-cube sk-cube5\"></div>\n\t\t<div className=\"sk-cube sk-cube6\"></div>\n\t\t<div className=\"sk-cube sk-cube7\"></div>\n\t\t<div className=\"sk-cube sk-cube8\"></div>\n\t\t<div className=\"sk-cube sk-cube9\"></div>\n\t</div> );\n};\n\n\n// EXPORTS //\n\nexport default Spinner;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// EXPORTS //\n\nexport const ADD_ENROLLED_NAMESPACE = 'ADD_ENROLLED_NAMESPACE';\nexport const ADD_ERROR_NOTIFICATION = 'ADD_ERROR_NOTIFICATION';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const APPEND_CREATED_NAMESPACE = 'APPEND_CREATED_NAMESPACE';\nexport const AUTHENTICATED = 'AUTHENTICATED';\nexport const CHANGED_NAMESPACE = 'CHANGED_NAMESPACE';\nexport const CREATED_ANNOUNCEMENT = 'CREATED_ANNOUNCEMENT';\nexport const CREATED_CUSTOM_FIELD = 'CREATED_CUSTOM_FIELD';\nexport const CREATED_BACKUP = 'CREATED_BACKUP';\nexport const CREATED_ROLE = 'CREATED_ROLE';\nexport const CREATED_TICKET = 'CREATED_TICKET';\nexport const DELETED_BACKUP = 'DELETED_BACKUP';\nexport const DELETED_CURRENT_NAMESPACE = 'DELETED_CURRENT_NAMESPACE';\nexport const DELETED_CUSTOM_FIELD = 'DELETED_CUSTOM_FIELD';\nexport const DELETED_EVENT = 'DELETED_EVENT';\nexport const DELETED_FILE = 'DELETED_FILE';\nexport const DELETED_LESSON = 'DELETED_LESSON';\nexport const DELETED_ROLE = 'DELETED_ROLE';\nexport const DELETED_TICKET = 'DELETED_TICKET';\nexport const DELETED_USER = 'DELETED_USER';\nexport const DELETED_ANNOUNCEMENT = 'DELETED_ANNOUNCEMENT';\nexport const DISABLED_TFA = 'DISABLED_TFA';\nexport const EDITED_ANNOUNCEMENT = 'EDITED_ANNOUNCEMENT';\nexport const ENABLED_TFA = 'ENABLED_TFA';\nexport const FIELD_POSITION_DECREMENTED = 'FIELD_POSITION_DECREMENTED';\nexport const FIELD_POSITION_INCREMENTED = 'FIELD_POSITION_INCREMENTED';\nexport const GET_ALL_COHORTS = 'GET_ALL_COHORTS';\nexport const GET_ALL_FILES = 'GET_ALL_FILES';\nexport const GET_ALL_LESSONS = 'GET_ALL_LESSONS';\nexport const GET_ALL_NAMESPACES = 'GET_ALL_NAMESPACES';\nexport const GET_ALL_ROLES = 'GET_ALL_ROLES';\nexport const GET_BACKUPS = 'GET_BACKUPS';\nexport const GET_EVENTS = 'GET_EVENTS';\nexport const GET_ALL_TICKETS = 'GET_ALL_TICKETS';\nexport const GET_COURSE_TICKETS = 'GET_COURSE_TICKETS';\nexport const GET_CUSTOM_FIELDS = 'GET_CUSTOM_FIELDS';\nexport const GET_CUSTOM_TRANSLATIONS = 'GET_CUSTOM_TRANSLATIONS';\nexport const GET_OVERVIEW_STATISTICS = 'GET_OVERVIEW_STATISTICS';\nexport const GET_HISTORICAL_OVERVIEW_STATISTICS = 'GET_HISTORICAL_OVERVIEW_STATISTICS';\nexport const GET_REQUEST_STATISTICS = 'GET_REQUEST_STATISTICS';\nexport const GET_ROOMS = 'GET_ROOMS';\nexport const GET_SETTINGS = 'GET_SETTINGS';\nexport const GET_SETTINGS_PUBLIC = 'GET_SETTINGS_PUBLIC';\nexport const GET_TEMPLATE_LESSONS = 'GET_TEMPLATE_LESSONS';\nexport const GET_TFA_QRCODE = 'GET_TFA_QRCODE';\nexport const GET_USERS = 'GET_USERS';\nexport const GET_USER_TICKETS = 'GET_USER_TICKETS';\nexport const LESSON_ORDER = 'LESSON_ORDER';\nexport const LESSON_ORDER_DIRECTION = 'LESSON_ORDER_DIRECTION';\nexport const RECEIVED_FILES = 'RECEIVED_FILES';\nexport const RECEIVED_LICENSE = 'RECEIVED_LICENSE';\nexport const RECEIVED_NAMESPACE_FILES = 'RECEIVED_NAMESPACE_FILES';\nexport const RECEIVED_TOKEN = 'RECEIVED_TOKEN';\nexport const REMOVED_LICENSE = 'REMOVED_LICENSE';\nexport const REQUEST_TFA = 'REQUEST_TFA';\nexport const RETRIEVED_BADGES = 'RETRIEVED_BADGES';\nexport const RETRIEVED_COHORTS = 'RETRIEVED_COHORTS';\nexport const RETRIEVED_LESSONS = 'RETRIEVED_LESSONS';\nexport const RETRIEVED_PUBLIC_LESSONS = 'RETRIEVED_PUBLIC_LESSONS';\nexport const SEARCH_PHRASE_SET = 'SEARCH_PHRASE_SET';\nexport const TICKET_CLOSED = 'TICKET_CLOSED';\nexport const TICKET_OPENED = 'TICKET_OPENED';\nexport const TICKET_MESSAGE_ADDED = 'TICKET_MESSAGE_ADDED';\nexport const TICKET_PRIORITY_UPDATED = 'TICKET_PRIORITY_UPDATED';\nexport const TRIGGERED_EVENT = 'TRIGGERED_EVENT';\nexport const UPDATED_LESSON = 'UPDATED_LESSON';\nexport const UPDATED_OWNED_NAMESPACE = 'UPDATED_OWNED_NAMESPACE';\nexport const LOGGED_IN = 'LOGGED_IN';\nexport const LOGGED_OUT = 'LOGGED_OUT';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const USER_UPDATED_BY_ADMIN = 'USER_UPDATED_BY_ADMIN';\nexport const USER_PICTURE_MODIFIED = 'USER_PICTURE_MODIFIED';\nexport const USER_RECEIVED_BADGES = 'USER_RECEIVED_BADGES';\nexport const UPDATED_CUSTOM_FIELD = 'UPDATED_CUSTOM_FIELD';\nexport const UPDATED_ROLE = 'UPDATED_ROLE';\nexport const UPDATED_SETTINGS = 'UPDATED_SETTINGS';\nexport const UPDATED_STUDENT_PROGRESS = 'UPDATED_STUDENT_PROGRESS';\nexport const UPDATED_TRANSLATIONS = 'UPDATED_TRANSLATIONS';\nexport const RETRIEVED_ENROLLABLE_COHORTS = 'RETRIEVED_ENROLLABLE_COHORTS';\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// EXPORTS //\n\nexport const LANGUAGES = [\n\t{ value: 'en', label: 'english' },\n\t{ value: 'bg', label: 'bulgarian' },\n\t{ value: 'cs', label: 'czech' },\n\t{ value: 'da', label: 'danish' },\n\t{ value: 'de', label: 'german' },\n\t{ value: 'el', label: 'greek' },\n\t{ value: 'es', label: 'spanish' },\n\t{ value: 'et', label: 'estonian' },\n\t{ value: 'fi', label: 'finnish' },\n\t{ value: 'fr', label: 'french' },\n\t{ value: 'hu', label: 'hungarian' },\n\t{ value: 'it', label: 'italian' },\n\t{ value: 'ja', label: 'japanese' },\n\t{ value: 'lt', label: 'lithuanian' },\n\t{ value: 'lv', label: 'latvian' },\n\t{ value: 'nl', label: 'dutch' },\n\t{ value: 'pl', label: 'polish' },\n\t{ value: 'pt', label: 'portuguese' },\n\t{ value: 'ro', label: 'romanian' },\n\t{ value: 'ru', label: 'russian' },\n\t{ value: 'sk', label: 'slovak' },\n\t{ value: 'sl', label: 'slovenian' },\n\t{ value: 'sv', label: 'swedish' },\n\t{ value: 'zh', label: 'chinese' }\n];\n\nexport const LANGUAGE_CODES = [ 'en', 'bg', 'cs', 'da', 'de', 'el', 'es', 'et', 'fi', 'fr', 'hu', 'it', 'ja', 'lt', 'lv', 'nl', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'sv', 'zh' ];\n\nexport const languageLabel = ( code ) => {\n\tswitch ( code ) {\n\tcase 'en':\n\tdefault:\n\t\treturn 'english';\n\tcase 'bg':\n\t\treturn 'bulgarian';\n\tcase 'cs':\n\t\treturn 'czech';\n\tcase 'da':\n\t\treturn 'danish';\n\tcase 'de':\n\t\treturn 'german';\n\tcase 'el':\n\t\treturn 'greek';\n\tcase 'es':\n\t\treturn 'spanish';\n\tcase 'et':\n\t\treturn 'estonian';\n\tcase 'fi':\n\t\treturn 'finnish';\n\tcase 'fr':\n\t\treturn 'french';\n\tcase 'hu':\n\t\treturn 'hungarian';\n\tcase 'it':\n\t\treturn 'italian';\n\tcase 'ja':\n\t\treturn 'japanese';\n\tcase 'lt':\n\t\treturn 'lithuanian';\n\tcase 'lv':\n\t\treturn 'latvian';\n\tcase 'nl':\n\t\treturn 'dutch';\n\tcase 'pl':\n\t\treturn 'polish';\n\tcase 'pt':\n\t\treturn 'portuguese';\n\tcase 'ro':\n\t\treturn 'romanian';\n\tcase 'ru':\n\t\treturn 'russian';\n\tcase 'sk':\n\t\treturn 'slovak';\n\tcase 'sl':\n\t\treturn 'slovenian';\n\tcase 'sv':\n\t\treturn 'swedish';\n\tcase 'zh':\n\t\treturn 'chinese';\n\t}\n};\n\n/**\n* Returns the language description for a given language code.\n*\n* @param {string} code - the language code\n* @returns {string} the language description\n*/\nexport const languageDescription = ( code ) => {\n\tswitch ( code ) {\n\tcase 'en':\n\tdefault:\n\t\treturn 'English - EN';\n\tcase 'bg':\n\t\treturn 'Български - BG';\n\tcase 'cs':\n\t\treturn 'Česky - CS';\n\tcase 'da':\n\t\treturn 'Dansk - DA';\n\tcase 'el':\n\t\treturn 'Ελληνική - EL';\n\tcase 'es':\n\t\treturn 'Español - ES';\n\tcase 'et':\n\t\treturn 'Eesti - ET';\n\tcase 'de':\n\t\treturn 'Deutsch - DE';\n\tcase 'fi':\n\t\treturn 'Suomalainen - FI';\n\tcase 'fr':\n\t\treturn 'Français - FR';\n\tcase 'hu':\n\t\treturn 'Hungarian - HU';\n\tcase 'it':\n\t\treturn 'Italiano - IT';\n\tcase 'ja':\n\t\treturn 'にほんご - JA';\n\tcase 'lt':\n\t\treturn 'Lietuvių kalba - LT';\n\tcase 'lv':\n\t\treturn 'Latviešu - LV';\n\tcase 'nl':\n\t\treturn 'Nederlands - NL';\n\tcase 'pl':\n\t\treturn 'Polski - PL';\n\tcase 'pt':\n\t\treturn 'Porgtugês - PT';\n\tcase 'ro':\n\t\treturn 'Românesc - RO';\n\tcase 'ru':\n\t\treturn 'русский - RU';\n\tcase 'sk':\n\t\treturn 'Slovenská - SK';\n\tcase 'sl':\n\t\treturn 'Slovenski - SL';\n\tcase 'sv':\n\t\treturn 'Svenska - SV';\n\tcase 'zh':\n\t\treturn '中文 - ZH';\n\t}\n};\n\nexport default LANGUAGES;\n","\n/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport serverJSON from './../../config/server.json';\n\n\n// VARIABLES //\n\nexport const REMOTE = serverJSON.publicUrl;\nexport const LOCAL = 'http://localhost:17777';\n\n\n// MAIN //\n\nlet server;\nif ( process.env.NODE_ENV === 'development' ) { // eslint-disable-line no-process-env\n\tserver = process.env.REACT_APP_SERVER === 'remote' ? REMOTE : LOCAL; // eslint-disable-line no-process-env\n} else {\n\tserver = window.location.origin;\n}\n\n\n// EXPORTS //\n\nexport default server;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport i18next from './i18n';\nimport { store } from './../index.js';\n\n\n// MAIN //\n\naxios.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\treturn config;\n});\n\nconst namespaceClient = axios.create();\nnamespaceClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'namespace';\n\n\tconst target = config.data.namespaceID || config.params.namespaceID || state.namespace._id;\n\tconfig.headers[ 'X-Context-Target' ] = target;\n\treturn config;\n});\n\nconst programClient = axios.create();\n\nconst lessonClient = axios.create();\nlessonClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst state = store.getState();\n\tconst token = state.user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'lesson';\n\n\tlet target = config.data.lessonID || config.params.lessonID;\n\ttarget += state.namespace._id;\n\tconfig.headers[ 'X-Context-Target' ] = target;\n\n\treturn config;\n});\n\nconst globalClient = axios.create();\nglobalClient.interceptors.request.use( ( config ) => {\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\n\tconst token = store.getState().user.token;\n\tif ( token ) {\n\t\tconfig.headers.Authorization = `JWT ${token}`;\n\t}\n\tconfig.headers[ 'X-Context-Level' ] = 'global';\n\tconfig.headers[ 'X-Context-Target' ] = true;\n\treturn config;\n});\n\n\n// EXPORTS //\n\nexport const namespaceAxios = namespaceClient;\nexport const programAxios = programClient;\nexport const lessonAxios = lessonClient;\nexport const globalAxios = globalClient;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend/cjs';\nimport Backend from 'i18next-chained-backend';\nimport server from 'constants/server';\nimport { store } from './../index.js';\n\n\n// MAIN //\n\ni18n.use( Backend )\n\t.use( LanguageDetector )\n\t.use( initReactI18next )\n\t.init({\n\t\tdebug: false,\n\t\tlng: localStorage.getItem( 'i18nextLng' ) || 'en',\n\t\tfallbackLng: 'en',\n\t\tbackend: {\n\t\t\tbackends: [\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi\n\t\t\t],\n\t\t\tbackendOptions: [\n\t\t\t\t{\n\t\t\t\t\tloadPath: server+'/dashboard/locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: server+'/locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: 'https://cdn.jsdelivr.net/npm/@isle-project/locales/components/{{ns}}/{{lng}}.json'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\treact: {\n\t\t\tuseSuspense: false\n\t\t},\n\t\tinterpolation: {\n\t\t\tescapeValue: false // Not needed for React!\n\t\t}\n\t});\n\n\ni18n.store.on( 'added', function onLoaded( lng, ns ) {\n\tconst state = store.getState();\n\tconst translations = state.translations;\n\tconst custom = translations[ lng ][ ns ];\n\tif ( custom ) {\n\t\tconst keys = Object.keys( custom );\n\t\tif ( !i18n.store.data[ lng ][ ns+'_ORIGINAL' ] ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ] = {};\n\t\t}\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ][ keys[ i ] ] = i18n.store.data[ lng ][ ns ][ keys[ i ] ];\n\t\t\ti18n.store.data[ lng ][ ns ][ keys[ i ] ] = custom[ keys[ i ] ];\n\t\t}\n\t}\n});\n\n\n// EXPORTS //\n\nexport default i18n;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { useEffect } from 'react';\n\n\n// MAIN //\n\n/**\n * A custom React hook that calls `useEffect` with a callback that is invoked once when the component is mounted.\n *\n * @param {Function} callback - callback to invoke once the component has mounted\n * @returns {void}\n */\nconst useMountEffect = ( callback ) => useEffect( callback, [] ); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n// EXPORTS //\n\nexport default useMountEffect;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tcohorts: [],\n\tevents: [],\n\tfiles: [],\n\tlessons: [],\n\tlessonsMap: {},\n\tnamespaces: [],\n\troles: [],\n\trooms: [],\n\ttickets: [],\n\tusers: [],\n\tstatistics: {},\n\trequestStatistics: [],\n\thistoricalStatistics: [],\n\tbackups: [],\n\tlicense: null,\n\tsettings: {}\n};\n\n\n// EXPORTS //\n\nexport default function admin( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.GET_USERS: {\n\t\tlet users = action.payload.users;\n\t\tusers = users.map( x => {\n\t\t\tconst keys = objectKeys( x.lessonData );\n\t\t\tlet chatMessages = 0;\n\t\t\tlet nActions = 0;\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tconst key = keys[ i ];\n\t\t\t\tchatMessages += x.lessonData[ key ].chatMessages;\n\t\t\t\tconst types = objectKeys( x.lessonData[ key ].actionTypes );\n\t\t\t\tfor ( let j = 0; j < types.length; j++ ) {\n\t\t\t\t\tnActions += x.lessonData[ key ].actionTypes[ types[ j ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tx.nActions = nActions;\n\t\t\tx.chatMessages = chatMessages;\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.GET_ALL_COHORTS: {\n\t\tlet cohorts = action.payload.cohorts;\n\t\tcohorts = cohorts.map( x => {\n\t\t\tx.startDate = new Date( x.startDate );\n\t\t\tx.endDate = new Date( x.endDate );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tcohorts\n\t\t});\n\t}\n\tcase types.GET_ALL_FILES: {\n\t\tlet files = action.payload.files;\n\t\tfiles = files.map( x => {\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles\n\t\t});\n\t}\n\tcase types.DELETED_FILE: {\n\t\tconst files = state.files.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles\n\t\t});\n\t}\n\tcase types.GET_ALL_LESSONS: {\n\t\tlet lessons = action.payload.lessons;\n\t\tconst lessonsMap = { ...state.lessonsMap };\n\t\tlessons = lessons.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\tlessonsMap[ x._id ] = x.title;\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons,\n\t\t\tlessonsMap\n\t\t});\n\t}\n\tcase types.GET_ALL_NAMESPACES: {\n\t\tlet namespaces = action.payload.namespaces;\n\t\tnamespaces = namespaces.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tnamespaces\n\t\t});\n\t}\n\tcase types.GET_EVENTS: {\n\t\tlet events = action.payload.events;\n\t\tevents = events.map( x => {\n\t\t\tx.time = new Date( x.time );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.GET_ROOMS: {\n\t\tlet rooms = action.payload.rooms;\n\t\trooms = rooms.map( x => {\n\t\t\tx.startTime = new Date( x.startTime );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\trooms\n\t\t});\n\t}\n\tcase types.DELETED_EVENT: {\n\t\tconst events = state.events.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.DELETED_USER: {\n\t\tconst users = state.users.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.TRIGGERED_EVENT: {\n\t\tconst events = state.events.slice();\n\t\tfor ( let i = 0; i < events.length; i++ ) {\n\t\t\tif ( events[ i ]._id === action.payload.id ) {\n\t\t\t\tevents[ i ].done = true;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tevents\n\t\t});\n\t}\n\tcase types.USER_UPDATED_BY_ADMIN: {\n\t\tlet users = state.users.slice();\n\t\tfor ( let i = 0; i < users.length; i++ ) {\n\t\t\tconst user = users[ i ];\n\t\t\tif ( user._id === action.payload.id ) {\n\t\t\t\tconst keys = objectKeys( action.payload );\n\t\t\t\tfor ( let j = 0; j < keys.length; j++ ) {\n\t\t\t\t\tconst key = keys[ j ];\n\t\t\t\t\tif ( key !== 'id' ) {\n\t\t\t\t\t\tuser[ key ] = action.payload[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tusers\n\t\t});\n\t}\n\tcase types.GET_OVERVIEW_STATISTICS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tstatistics: action.payload.statistics\n\t\t});\n\t}\n\tcase types.GET_ALL_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\tx.updatedAt = new Date( x.updatedAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.DELETED_TICKET: {\n\t\tconst tickets = state.tickets.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_PRIORITY_UPDATED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.priority = action.payload.priority;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.RECEIVED_LICENSE:\n\t\treturn Object.assign({}, state, {\n\t\t\tlicense: action.payload.license\n\t\t});\n\tcase types.REMOVED_LICENSE:\n\t\treturn Object.assign({}, state, {\n\t\t\tlicense: null\n\t\t});\n\tcase types.GET_HISTORICAL_OVERVIEW_STATISTICS: {\n\t\tconst statistics = action.payload.statistics.map( x => {\n\t\t\tx.createdAt = x.createdAt.substring( 0, x.createdAt.indexOf( 'T' ) );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\thistoricalStatistics: statistics\n\t\t});\n\t}\n\tcase types.GET_REQUEST_STATISTICS: {\n\t\treturn Object.assign({}, state, {\n\t\t\trequestStatistics: action.payload.statistics\n\t\t});\n\t}\n\tcase types.GET_BACKUPS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups: action.payload.backups\n\t\t});\n\t}\n\tcase types.CREATED_BACKUP: {\n\t\tconst backups = state.backups.slice();\n\t\tbackups.push( action.payload.backup );\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups\n\t\t});\n\t}\n\tcase types.DELETED_BACKUP: {\n\t\tconst backups = state.backups.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\tbackups\n\t\t});\n\t}\n\tcase types.GET_SETTINGS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tsettings: action.payload\n\t\t});\n\t}\n\tcase types.UPDATED_SETTINGS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tsettings: action.payload.settings\n\t\t});\n\t}\n\tcase types.GET_ALL_ROLES: {\n\t\tconst roles = action.payload.roles;\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.CREATED_ROLE: {\n\t\tconst roles = state.roles.slice();\n\t\troles.push( action.payload.role );\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.DELETED_ROLE: {\n\t\tconst roles = state.roles.filter( x => x._id !== action.payload.id );\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tcase types.UPDATED_ROLE: {\n\t\tconst { role } = action.payload;\n\t\tconst roles = state.roles.map( x => {\n\t\t\tif ( role._id === x._id ) {\n\t\t\t\treturn role;\n\t\t\t}\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\troles\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// EXPORTS //\n\nexport default function badges( state = null, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_BADGES: {\n\t\treturn action.payload.badges;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\nimport isArray from '@stdlib/assert/is-array';\nimport isRegExpString from '@stdlib/assert/is-regexp-string';\nimport reFromString from '@stdlib/utils/regexp-from-string';\nimport contains from '@stdlib/assert/contains';\n\n\n// FUNCTIONS //\n\nfunction titleCompare( a, b ) {\n\treturn ( '' + a.title ).localeCompare( b.title );\n}\n\n\n// EXPORTS //\n\nexport default function cohorts( state = null, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_ENROLLABLE_COHORTS: {\n\t\tlet cohorts = action.payload.cohorts;\n\t\tif ( !isArray( cohorts ) ) {\n\t\t\treturn cohorts;\n\t\t}\n\t\tcohorts = cohorts.filter( elem => {\n\t\t\tlet emailFilter = elem.emailFilter || '';\n\t\t\tif ( isRegExpString( emailFilter ) ) {\n\t\t\t\temailFilter = reFromString( emailFilter );\n\t\t\t\treturn emailFilter.test( action.payload.user.email );\n\t\t\t}\n\t\t\treturn contains( action.payload.user.email, emailFilter || '' );\n\t\t});\n\t\treturn cohorts.sort( titleCompare );\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport * as types from 'constants/action_types.js';\n\n\n// FUNCTIONS //\n\nfunction titleCompare( a, b ) {\n\treturn ( '' + a.title ).localeCompare( b.title );\n}\n\n\n// VARIABLES //\n\nconst initialState = {\n\t_id: null,\n\ttitle: '',\n\tdescription: '',\n\towners: '',\n\tenableTicketing: false,\n\tannouncements: [],\n\tlessons: [],\n\tcohorts: [],\n\tfiles: [],\n\townerFiles: [],\n\ttickets: []\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.CHANGED_NAMESPACE: {\n\t\treturn Object.assign({}, state, {\n\t\t\t_id: action.payload._id,\n\t\t\ttitle: action.payload.title,\n\t\t\tdescription: action.payload.description,\n\t\t\tannouncements: action.payload.announcements,\n\t\t\tenableTicketing: action.payload.enableTicketing,\n\t\t\towners: action.payload.owners,\n\t\t\tcohorts: action.payload.cohorts\n\t\t});\n\t}\n\tcase types.DELETED_CURRENT_NAMESPACE: {\n\t\treturn initialState;\n\t}\n\tcase types.UPDATED_STUDENT_PROGRESS: {\n\t\tconst { cohort, email, lessonID, progress } = action.payload;\n\t\tconst cohorts = state.cohorts;\n\t\tfor ( let i = 0; i < cohorts.length; i++ ) {\n\t\t\tif ( cohorts[ i ].title === cohort ) {\n\t\t\t\tconst members = cohorts[ i ].members;\n\t\t\t\tfor ( let j = 0; j < members.length; j++ ) {\n\t\t\t\t\tif ( members[ j ].email === email ) {\n\t\t\t\t\t\tconst member = members[ j ];\n\t\t\t\t\t\tmember.lessonData[ lessonID ].progress = progress / 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, { cohorts });\n\t}\n\tcase types.RETRIEVED_LESSONS: {\n\t\tif ( action.payload.namespaceName === state.title ) {\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tlessons: action.payload.lessons\n\t\t\t});\n\t\t}\n\t\treturn state;\n\t}\n\tcase types.RETRIEVED_COHORTS: {\n\t\treturn Object.assign({}, state, {\n\t\t\tcohorts: action.payload.cohorts.sort( titleCompare )\n\t\t});\n\t}\n\tcase types.DELETED_LESSON: {\n\t\tlet lessons = state.lessons.slice();\n\t\tlessons = lessons.filter( x => x.title !== action.payload.lessonName );\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tcase types.UPDATED_LESSON: {\n\t\tlet lessons = state.lessons.slice();\n\t\tconst { props, lessonName } = action.payload;\n\t\tfor ( let i = 0; i < lessons.length; i++ ) {\n\t\t\tif ( lessons[ i ].title === lessonName ) {\n\t\t\t\tfor ( let key in props ) {\n\t\t\t\t\tif ( hasOwnProp( props, key ) ) {\n\t\t\t\t\t\tlessons[ i ][ key ] = props[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tcase types.RECEIVED_NAMESPACE_FILES: {\n\t\tlet lessons = state.lessons;\n\t\tlet files = action.payload.files;\n\t\tfiles = files.map( file => {\n\t\t\tfile.updatedAt = new Date( file.updatedAt );\n\t\t\tfor ( let i = 0; i < lessons.length; i++ ) {\n\t\t\t\tif ( lessons[ i ]._id === file.lesson ) {\n\t\t\t\t\tfile.lesson = lessons[ i ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn file;\n\t\t});\n\t\tconst newState = {};\n\t\tif ( action.payload.owner ) {\n\t\t\tnewState.ownerFiles = files;\n\t\t} else {\n\t\t\tnewState.files = files;\n\t\t}\n\t\treturn Object.assign({}, state, newState );\n\t}\n\tcase types.EDITED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tfor (let i = 0; i < announcements.length; i++) {\n\t\t\tif (announcements[i].createdAt === action.payload.announcement.createdAt) {\n\t\t\t\tannouncements[i] = action.payload.announcement;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.CREATED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tannouncements.unshift(action.payload.announcement);\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.DELETED_ANNOUNCEMENT: {\n\t\tconst announcements = state.announcements.slice();\n\t\tannouncements.splice(action.payload.index, 1);\n\n\t\treturn Object.assign({}, state, {\n\t\t\tannouncements: announcements\n\t\t});\n\t}\n\tcase types.GET_COURSE_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_PRIORITY_UPDATED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.priority = action.payload.priority;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tmessage: '',\n\tlevel: '',\n\tposition: 'tl',\n\tchildren: null,\n\ttime: null,\n\tautoDismiss: 5\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.ADD_NOTIFICATION: {\n\t\treturn Object.assign({}, initialState, {\n\t\t\t...action.payload,\n\t\t\ttime: new Date()\n\t\t});\n\t}\n\tcase types.ADD_ERROR_NOTIFICATION: {\n\t\treturn {\n\t\t\ttitle: 'Error encountered',\n\t\t\tmessage: action.payload,\n\t\t\tlevel: 'error',\n\t\t\tposition: 'tl',\n\t\t\tautoDismiss: 5,\n\t\t\ttime: new Date()\n\t\t};\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {};\n\n\n// EXPORTS //\n\nexport default function translations( state = initialState, action ) {\n\tswitch ( action.type ) {\n\t\tcase types.GET_CUSTOM_TRANSLATIONS: {\n\t\t\treturn Object.assign( {}, state, action.payload );\n\t\t}\n\t\tcase types.UPDATED_TRANSLATIONS: {\n\t\t\treturn Object.assign( {}, state, action.payload.translations );\n\t\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {};\n\n\n// EXPORTS //\n\nexport default function settings( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.GET_SETTINGS_PUBLIC: {\n\t\treturn Object.assign({}, state, action.payload );\n\t}\n\tcase types.UPDATED_SETTINGS: {\n\t\treturn Object.assign({}, state, action.payload.settings );\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport * as types from 'constants/action_types.js';\nimport server from 'constants/server';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tlessons: null\n};\n\n\n// EXPORTS //\n\nexport default function namespace( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.RETRIEVED_PUBLIC_LESSONS: {\n\t\tlet lessons = action.payload.lessons;\n\t\tlessons = lessons.map( (lesson, index) => {\n\t\t\tlesson.colorIndex = index % 20;\n\t\t\tlesson.url = server+'/'+lesson.namespace+'/'+lesson.title;\n\t\t\tif ( !lesson.createdAt ) {\n\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\n\t\t\t}\n\t\t\tif ( !lesson.updatedAt ) {\n\t\t\t\tlesson.updatedAt = lesson.createdAt;\n\t\t\t}\n\t\t\treturn lesson;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tlessons\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport lowercase from '@stdlib/string/lowercase';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tphrase: null,\n\ttype: 'sequentially',\n\tdirection: 'ascending'\n};\n\n\n// EXPORTS //\n\nexport default function search( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.SEARCH_PHRASE_SET: {\n\t\treturn Object.assign({}, state, {\n\t\t\tphrase: lowercase( action.payload.phrase )\n\t\t});\n\t}\n\tcase types.LESSON_ORDER: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttype: action.payload.type\n\t\t});\n\t}\n\tcase types.LESSON_ORDER_DIRECTION: {\n\t\treturn Object.assign({}, state, {\n\t\t\tdirection: action.payload.direction\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport groupBy from '@stdlib/utils/group-by';\nimport copy from '@stdlib/utils/copy';\nimport * as types from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst initialState = {\n\tloggedIn: false,\n\temail: '',\n\tverifiedEmail: false,\n\tname: '',\n\tfirstName: '',\n\tlastName: '',\n\tpreferredName: '',\n\tpronouns: '',\n\torganization: '',\n\twriteAccess: false,\n\tadministrator: false,\n\tenrolledNamespaces: [],\n\townedNamespaces: [],\n\tlessonData: {},\n\tpicture: null,\n\tcreatedAt: null,\n\tupdatedAt: null,\n\tscore: null,\n\tspentTime: null,\n\tfiles: null,\n\tbadges: null,\n\tid: null,\n\ttoken: null,\n\ttickets: [],\n\tlicensed: false,\n\tcustomFields: null,\n\tavailableCustomFields: [],\n\ttwoFactorAuth: false,\n\trequestTFA: null,\n\ttemplateLessons: []\n};\n\n\n// FUNCTIONS //\n\nfunction getNamespace( namespaces, name ) {\n\tfor ( let i= 0; i < namespaces.length; i++ ) {\n\t\tif ( namespaces[i].title === name ) {\n\t\t\treturn namespaces[i];\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default function user( state = initialState, action ) {\n\tswitch ( action.type ) {\n\tcase types.RECEIVED_TOKEN: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttoken: action.payload.token,\n\t\t\tid: action.payload.id\n\t\t});\n\t}\n\tcase types.LOGGED_IN: {\n\t\treturn Object.assign({}, state, {\n\t\t\temail: action.payload.email,\n\t\t\tverifiedEmail: action.payload.verifiedEmail,\n\t\t\tname: action.payload.name,\n\t\t\tfirstName: action.payload.firstName,\n\t\t\tlastName: action.payload.lastName,\n\t\t\tpreferredName: action.payload.preferredName,\n\t\t\tpronouns: action.payload.pronouns,\n\t\t\tenrolledNamespaces: action.payload.enrolledNamespaces,\n\t\t\townedNamespaces: action.payload.ownedNamespaces,\n\t\t\torganization: action.payload.organization,\n\t\t\twriteAccess: action.payload.writeAccess,\n\t\t\tadministrator: action.payload.administrator,\n\t\t\tpicture: action.payload.picture,\n\t\t\tlessonData: action.payload.lessonData,\n\t\t\tcreatedAt: action.payload.createdAt,\n\t\t\tupdatedAt: action.payload.updatedAt,\n\t\t\tscore: action.payload.score,\n\t\t\tspentTime: action.payload.spentTime,\n\t\t\tlicensed: action.payload.licensed,\n\t\t\tcustomFields: action.payload.customFields,\n\t\t\tavailableCustomFields: action.payload.availableCustomFields,\n\t\t\ttwoFactorAuth: action.payload.twoFactorAuth,\n\t\t\tloggedIn: true\n\t\t});\n\t}\n\tcase types.AUTHENTICATED: {\n\t\treturn Object.assign({}, state, {\n\t\t\twriteAccess: true\n\t\t});\n\t}\n\tcase types.LOGGED_OUT: {\n\t\treturn initialState;\n\t}\n\tcase types.USER_UPDATED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tname: action.payload.name,\n\t\t\torganization: action.payload.organization,\n\t\t\tcustomFields: action.payload.customFields\n\t\t});\n\t}\n\tcase types.USER_PICTURE_MODIFIED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tpicture: action.payload.picture\n\t\t});\n\t}\n\tcase types.APPEND_CREATED_NAMESPACE: {\n\t\tconst arr = state.ownedNamespaces.slice();\n\t\tarr.push( action.payload.namespace );\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.DELETED_CURRENT_NAMESPACE: {\n\t\tconst arr = [];\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\n\t\t\tconst item = state.ownedNamespaces[ i ];\n\t\t\tif ( item._id !== action.payload.id ) {\n\t\t\t\tarr.push( item );\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.RETRIEVED_LESSONS: {\n\t\tconst arr = state.enrolledNamespaces.slice();\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\t\tconst course = arr[ i ];\n\t\t\tif ( course.title === action.payload.namespaceName ) {\n\t\t\t\tarr[ i ].lessons = action.payload.lessons;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces: arr\n\t\t});\n\t}\n\tcase types.UPDATED_OWNED_NAMESPACE: {\n\t\tconst arr = state.ownedNamespaces.slice();\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\t\tconst item = arr[ i ];\n\t\t\tif ( item._id === action.payload._id ) {\n\t\t\t\tarr[ i ] = action.payload;\n\t\t\t} else {\n\t\t\t\tarr[ i ] = item;\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\townedNamespaces: arr\n\t\t});\n\t}\n\tcase types.ADD_ENROLLED_NAMESPACE: {\n\t\tconst arr = state.enrolledNamespaces.slice();\n\t\tarr.push( action.payload );\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces: arr\n\t\t});\n\t}\n\tcase types.CREATED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.unshift( action.payload.announcement );\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.unshift( action.payload.announcement );\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.EDITED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst announcement = action.payload.announcement;\n\t\tconst createdAt = announcement.createdAt;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\n\t\t\t\t\tns.announcements[ i ] = announcement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\n\t\t\t\t\tns.announcements[ i ] = announcement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.DELETED_ANNOUNCEMENT: {\n\t\tconst namespaceName = action.payload.namespaceName;\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.splice( action.payload.index, 1 );\n\t\t}\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\n\t\tif ( ns ) {\n\t\t\tns.announcements.splice( action.payload.index, 1 );\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tenrolledNamespaces,\n\t\t\townedNamespaces\n\t\t});\n\t}\n\tcase types.RECEIVED_FILES: {\n\t\treturn Object.assign({}, state, {\n\t\t\tfiles: groupBy( action.payload.files, ( v ) => {\n\t\t\t\treturn v.namespace;\n\t\t\t})\n\t\t});\n\t}\n\tcase types.GET_USER_TICKETS: {\n\t\tlet tickets = action.payload.tickets;\n\t\ttickets = tickets.map( x => {\n\t\t\tx.createdAt = new Date( x.createdAt );\n\t\t\treturn x;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.CREATED_TICKET: {\n\t\tconst tickets = state.tickets.slice();\n\t\ttickets.push({\n\t\t\t...action.payload,\n\t\t\tmessages: [],\n\t\t\tuser: {\n\t\t\t\tpicture: state.picture.substring( state.picture.lastIndexOf( '/' )+1 ),\n\t\t\t\tname: state.name,\n\t\t\t\temail: state.email\n\t\t\t}\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_OPENED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = false;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_CLOSED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tticket.done = true;\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.TICKET_MESSAGE_ADDED: {\n\t\tconst tickets = state.tickets.map( ticket => {\n\t\t\tif ( ticket._id === action.payload.id ) {\n\t\t\t\tconst message = action.payload.message;\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\n\t\t\t\tticket.messages.unshift( message );\n\t\t\t}\n\t\t\treturn ticket;\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\ttickets\n\t\t});\n\t}\n\tcase types.USER_RECEIVED_BADGES: {\n\t\treturn Object.assign({}, state, {\n\t\t\tbadges: action.payload.badges\n\t\t});\n\t}\n\tcase types.GET_CUSTOM_FIELDS:\n\tcase types.FIELD_POSITION_DECREMENTED:\n\tcase types.FIELD_POSITION_INCREMENTED: {\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields: action.payload.customFields\n\t\t});\n\t}\n\tcase types.DELETED_CUSTOM_FIELD: {\n\t\tconst fields = [];\n\t\tfor ( let i = 0; i < state.availableCustomFields.length; i++ ) {\n\t\t\tconst item = state.availableCustomFields[ i ];\n\t\t\tif ( item._id !== action.payload.id ) {\n\t\t\t\tfields.push( item );\n\t\t\t}\n\t\t}\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields: fields\n\t\t});\n\t}\n\tcase types.CREATED_CUSTOM_FIELD: {\n\t\tconst availableCustomFields = state.availableCustomFields.slice();\n\t\tavailableCustomFields.push({\n\t\t\t...action.payload\n\t\t});\n\t\treturn Object.assign({}, state, {\n\t\t\tavailableCustomFields\n\t\t});\n\t}\n\tcase types.ENABLED_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttwoFactorAuth: action.payload.verified\n\t\t});\n\t}\n\tcase types.DISABLED_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttwoFactorAuth: !action.payload.disabled\n\t\t});\n\t}\n\tcase types.REQUEST_TFA: {\n\t\treturn Object.assign({}, state, {\n\t\t\trequestTFA: {\n\t\t\t\temail: action.payload.email,\n\t\t\t\tpassword: action.payload.password\n\t\t\t}\n\t\t});\n\t}\n\tcase types.GET_TEMPLATE_LESSONS: {\n\t\treturn Object.assign({}, state, {\n\t\t\ttemplateLessons: action.payload.templateLessons\n\t\t});\n\t}\n\tdefault:\n\t\treturn state;\n\t}\n}\n\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { combineReducers } from 'redux';\nimport admin from './admin';\nimport badges from './badges';\nimport cohorts from './cohorts';\nimport namespace from './namespace';\nimport notification from './notification';\nimport translations from './translations';\nimport settings from './settings';\nimport gallery from './gallery';\nimport search from './search';\nimport user from './user';\n\n\n// EXPORTS //\n\nexport default () => combineReducers({\n\tadmin,\n\tbadges,\n\tcohorts,\n\tgallery,\n\tnamespace,\n\tnotification,\n\tsearch,\n\tsettings,\n\ttranslations,\n\tuser\n});\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport { useEffect, useRef } from 'react';\n\n\n// MAIN //\n\n/**\n * Hook to use a previous value.\n *\n * @param {*} value - value for which to return the previous value\n * @returns {*} previous value\n */\nfunction usePrevious( value ) {\n\tconst ref = useRef();\n\tuseEffect( () => {\n\t\tref.current = value;\n\t}, [ value ] );\n\treturn ref.current;\n}\n\n\n// EXPORTS //\n\nexport default usePrevious;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NotificationSystem from 'react-notification-system';\n\n\n// VARIABLES //\n\nconst style = {\n\tNotificationItem: {\n\t\tDefaultStyle: {\n\t\t\tmargin: '20px 2px 2px 1px'\n\t\t},\n\t\tinfo: {\n\t\t\tcolor: 'black',\n\t\t\tbackgroundColor: 'white',\n\t\t\tboxShadow: '0 0 4px darkslategray',\n\t\t\theight: '400px',\n\t\t\twidth: '400px',\n\t\t\tborderTop: 'none'\n\t\t}\n\t}\n};\n\n\n// MAIN //\n\nclass NotificationContainer extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst notification = this.props.notification;\n\t\tconst prevNotification = prevProps.notification;\n\t\tif ( prevNotification.time !== notification.time ) {\n\t\t\tthis.notificationSystem.addNotification( notification );\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<NotificationSystem\n\t\t\t\tstyle={style}\n\t\t\t\tref={( elem ) => {\n\t\t\t\t\tthis.notificationSystem = elem;\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nNotificationContainer.propTypes = {\n\tnotification: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tnotification: state.notification\n\t};\n}\n\nexport default connect(\n\tmapStateToProps\n)( NotificationContainer );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { LANGUAGE_CODES, languageDescription } from 'constants/languages';\nimport './language_switcher.css';\n\n\n// FUNCTIONS //\n\n/**\n* Modal for selecting a language.\n*\n* @param {Object} props - component props\n* @param {Object} props.languages - object containing language codes\n* @param {Function} props.t - translation function\n* @param {Function} props.onHide - callback to hide the modal\n* @returns {ReactElement} modal\n*/\nconst SelectModal = ({ t, languages, onHide }) => {\n\tconst availableLanguages = languages || LANGUAGE_CODES;\n\tconst changeLanguageFactory = ( lng ) => {\n\t\treturn async () => {\n\t\t\tonHide();\n\t\t\tawait i18next.changeLanguage( lng );\n\t\t};\n\t};\n\treturn (\n\t\t<Modal show onHide={onHide} >\n\t\t\t<Modal.Header closeButton >\n\t\t\t\t<Modal.Title as=\"h3\">{t('choose-language')}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<ButtonGroup size=\"sm\" vertical style={{ width: '100%' }} >\n\t\t\t\t\t{availableLanguages.map( ( x, idx ) => {\n\t\t\t\t\t\treturn ( <Button\n\t\t\t\t\t\t\tkey={idx} variant=\"outline-primary\"\n\t\t\t\t\t\t\tonClick={changeLanguageFactory( x )}\n\t\t\t\t\t\t>{languageDescription( x )}</Button> );\n\t\t\t\t\t})}\n\t\t\t\t</ButtonGroup>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n};\n\n\n// MAIN //\n\n/**\n* Renders a language switcher button in the bottom-right corner of the screen.\n*\n* @param {Object} props - component props\n* @param {Object} props.languages - object containing language codes\n* @returns {ReactElement} component\n*/\nconst LanguageSwitcher = ({ languages }) => {\n\tconst { t } = useTranslation( 'common' );\n\tconst [ showSelectModal, setShowSelectModal ] = useState( false );\n\tconst toggleSelectModal = () => {\n\t\tsetShowSelectModal( !showSelectModal );\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<OverlayTrigger placement=\"left\" overlay={<Tooltip id=\"language-switcher\">{t('change-language')}</Tooltip>} >\n\t\t\t\t<Button\n\t\t\t\t\tonClick={toggleSelectModal} className=\"language-switcher\"\n\t\t\t\t\tvariant=\"light\" size=\"sm\" aria-label={t('choose-language')}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"fas fa-globe\"></i>\n\t\t\t\t</Button>\n\t\t\t</OverlayTrigger>\n\t\t\t{showSelectModal ? <SelectModal languages={languages} t={t} onHide={toggleSelectModal} /> : null}\n\t\t</Fragment>\n\t);\n};\n\n\n// PROPERTIES //\n\nLanguageSwitcher.propTypes = {\n\tlanguages: PropTypes.array\n};\n\nLanguageSwitcher.defaultProps = {\n\tlanguages: null\n};\n\n\n// EXPORTS //\n\nexport default LanguageSwitcher;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport LanguageSwitcher from 'components/language-switcher';\nimport pkgJson from './../../../package.json';\nimport './footer_bar.css';\n\n\n// MAIN //\n\n/**\n* A footer bar component rendering the ISLE logo, copyright notice, dashboard version number, and links to the terms and privacy policy.\n*\n* @property {Object} props - component properties\n* @property {Object} props.settings - ISLE instance settings\n* @returns {ReactElement} component\n*/\nconst FooterBar = ({ settings }) => {\n\tconst { t } = useTranslation( [ 'footer_bar', 'common' ] );\n\treturn ( <div className=\"footer-bar\" >\n\t\t<div className=\"isle-logo\" >\n\t\t\t<img src=\"img/isle_logo.svg\" alt=\"ISLE Logo\" />\n\t\t\t<div className=\"footer-bar-copyright\" >\n\t\t\t\t© 2016-2021 The ISLE Authors. All rights reserved.\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"isle-terms\" >\n\t\t\t{' | '}\n\t\t\t<Link target=\"_blank\" to=\"/terms\" >{t('terms')}</Link>\n\t\t\t{' | '}\n\t\t\t<Link target=\"_blank\" to=\"/privacy\" >{t('privacy')}</Link>\n\t\t</div>\n\t\t<div>\n\t\t</div>\n\t\t<LanguageSwitcher\n\t\t\tlanguages={settings.availableLanguages}\n\t\t/>\n\t\t<div className=\"footer-dashboard-version\" >\n\t\t\tDashboard v{pkgJson.version}\n\t\t</div>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nFooterBar.propTypes = {\n\tsettings: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FooterBar;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FooterBar from 'components/footer-bar';\n\n\n// FUNCTIONS //\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tsettings: state.settings\n\t};\n}\n\n\n// MAIN //\n\nconst VisibleFooterBar = connect( mapStateToProps )( FooterBar );\n\n\n// EXPORTS //\n\nexport default VisibleFooterBar;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { lazy, Suspense, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { connect } from 'react-redux';\nimport { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport capitalize from '@stdlib/string/capitalize';\nimport axios from 'axios';\nimport Spinner from 'components/spinner';\nimport usePrevious from 'hooks/use-previous';\nimport useMountEffect from 'hooks/use-mount-effect/index.js';\nimport server from 'constants/server';\nimport { fetchCredentialsInjector } from 'actions/authentication.js';\nimport { getEnrollableCohortsInjector } from 'actions/cohort.js';\nimport { getPublicSettingsInjector, getCustomTranslationsInjector } from 'actions/settings.js';\nimport { receivedToken } from 'actions/user.js';\nimport NotificationSystem from './notification.js';\nimport './app.css';\n\n\n// VARIABLES //\n\nimport FooterBar from 'containers/visible-footer-bar';\nconst AsyncTerms = lazy(() => import( 'containers/visible-terms' ));\nconst AsyncPrivacy = lazy(() => import( 'containers/visible-privacy' ));\nconst AsyncHeaderBar = lazy(() => import( 'containers/visible-header-bar' ));\nconst AsyncForgotPassword = lazy(() => import( 'containers/visible-forgot-password' ));\nconst AsyncCreateNamespace = lazy(() => import( 'containers/visible-create-namespace' ));\nconst AsyncEditNamespace = lazy(() => import( 'containers/visible-edit-namespace' ));\nconst AsyncNewPassword = lazy(() => import( 'containers/visible-new-password' ));\nconst AsyncCompleteRegistration = lazy(() => import( 'containers/visible-complete-registration' ));\nconst AsyncConfirmEmail = lazy(() => import( 'containers/visible-confirm-email' ));\nconst AsyncAdminPage = lazy(() => import( 'containers/visible-admin' ));\nconst AsyncLogin = lazy(() => import( 'containers/visible-login' ));\nconst AsyncLoginTFA = lazy(() => import( 'containers/visible-login-tfa' ));\nconst AsyncSignup = lazy(() => import( 'containers/visible-signup' ));\nconst AsyncNamespaceData = lazy(() => import( 'containers/visible-namespace-data' ));\nconst AsyncGallery = lazy(() => import( 'containers/visible-gallery' ));\nconst AsyncLessonsPage = lazy(() => import( 'containers/visible-lessons-page' ));\nconst AsyncProfilePage = lazy(() => import( 'containers/visible-profile-page' ));\nconst AsyncEnrollPage = lazy(() => import( 'containers/visible-enroll-page' ));\nconst USER_STORAGE_ID = 'ISLE_USER_'+server;\nconst RE_PUBLIC_PAGES = /(?:new-password|complete-registration|confirm-email|signup|login|login-tfa|terms|privacy)/;\nconst debug = logger( 'isle-dashboard' );\nconst RE_LEADING_PART = /^[\\s\\S]*\\//;\nconst RE_HYPHEN = /-([a-z])/;\n\n\n// FUNCTIONS //\n\n/**\n* Injects the application title into the document's title tag.\n*\n* @private\n* @returns {ReactElement} helmet component\n*/\nconst Title = () => {\n\tconst { pathname } = useLocation();\n\tlet title;\n\tif ( pathname ) {\n\t\ttitle = pathname.replace( RE_LEADING_PART, '' );\n\t\ttitle = title.replace( RE_HYPHEN, replacer );\n\t\ttitle = capitalize( title );\n\t}\n\tif ( title ) {\n\t\ttitle = `${title} | ISLE Dashboard`;\n\t} else {\n\t\ttitle = 'ISLE Dashboard';\n\t}\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>{title}</title>\n\t\t</Helmet>\n\t);\n\n\t/**\n\t* Replaces a hyphen followed by a lowercase letter with a space and an uppercase letter.\n\t*\n\t* @private\n\t* @param {string} match - match string\n\t* @param {string} p1 - first capture group\n\t* @returns {string} replacement string\n\t*/\n\tfunction replacer( match, p1 ) {\n\t\treturn ' ' + p1.toUpperCase();\n\t}\n};\n\n/**\n* Generates a destination URL based off the query string or a sensible default and navigates to it.\n*\n* @private\n* @param {string} search - query string\n* @param {boolean} writeAccess - whether or not the user has write access\n* @param {Function} navigate - function that navigates to a provided URL\n* @returns {void}\n*/\nfunction goToDestination( search, writeAccess, navigate ) {\n\tlet url = new URLSearchParams( search ).get( 'url' );\n\tif ( !url ) {\n\t\turl = writeAccess ? '/dashboard/lessons' : '/dashboard/profile';\n\t}\n\tif ( url.indexOf( 'dashboard' ) !== -1 ) {\n\t\turl = url.replace( /\\/dashboard/, '' );\n\t\tdebug( 'Redirecting to dashboard page: %s', url );\n\t\tnavigate( url );\n\t} else {\n\t\tdebug( 'Destination is not a dashboard URL: %s', url );\n\t\twindow.location = server + url;\n\t}\n}\n\n\n// MAIN //\n\n/**\n* The main application component.\n*\n* @param {Object} props - component properties\n* @param {boolean} props.isLoggedIn - whether or not the user is logged in\n* @param {Object} props.user - user object\n* @param {Object} props.settings - application settings\n* @param {Function} props.fetchCredentials - function to fetch credentials\n* @param {Function} props.getCustomTranslations - function to get custom translations\n* @param {Function} props.getPublicSettings - function to get public settings\n* @param {Function} props.getEnrollableCohorts - function to get enrollable cohorts\n* @param {Function} props.dispatch - redux dispatch function\n* @returns {ReactElement} component\n*/\nconst App =({ isLoggedIn, dispatch, getCustomTranslations, getPublicSettings, fetchCredentials, getEnrollableCohorts, user, settings }) => {\n\tconst oldIsLoggedIn = usePrevious( isLoggedIn );\n\tconst writeAccess = user.writeAccess;\n\tconst navigate = useNavigate();\n\tconst { pathname, search } = useLocation();\n\tuseMountEffect( async () => {\n\t\tdebug( 'Mounting application...' );\n\t\tgetCustomTranslations();\n\t\tgetPublicSettings();\n\t\tif ( isLoggedIn ) {\n\t\t\tdebug( 'User is logged in, check local storage...' );\n\t\t\tconst isle = localStorage.getItem( USER_STORAGE_ID );\n\t\t\tif ( !isle ) {\n\t\t\t\tdebug( 'User is logged in, but no local storage found -> write to local storage' );\n\t\t\t\tlocalStorage.setItem( USER_STORAGE_ID, JSON.stringify({\n\t\t\t\t\ttoken: user.token,\n\t\t\t\t\tid: user.id\n\t\t\t\t}) );\n\t\t\t}\n\t\t}\n\t\telse if ( !RE_PUBLIC_PAGES.test( pathname ) ) {\n\t\t\tlet isle = localStorage.getItem( USER_STORAGE_ID );\n\t\t\tif ( isle ) {\n\t\t\t\tdebug( 'User is not logged in, but local storage item found -> read from local storage...' );\n\t\t\t\tisle = JSON.parse( isle );\n\t\t\t\tconst user = await fetchCredentials( isle );\n\t\t\t\tif ( user ) {\n\t\t\t\t\tgetEnrollableCohorts( user );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await axios.get( server+'/saml-xmw/session' );\n\t\t\t\t\tif ( !res.data ) {\n\t\t\t\t\t\tthrow new Error( 'No data returned from server' );\n\t\t\t\t\t}\n\t\t\t\t\tdispatch( receivedToken( res.data ) );\n\t\t\t\t\tconst user = await fetchCredentials( res.data );\n\t\t\t\t\tif ( user ) {\n\t\t\t\t\t\tgetEnrollableCohorts( user );\n\t\t\t\t\t}\n\t\t\t\t} catch ( err ) {\n\t\t\t\t\tif ( settings.saml === 'enabled' ) {\n\t\t\t\t\t\tdebug( 'No SAML session found, redirecting to SAML login choice page...' );\n\t\t\t\t\t\twindow.location = server+'/saml-xmw/login-choice';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdebug( 'No SAML session found, redirecting to credentials login page...' );\n\t\t\t\t\t\tnavigate( '/login' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( pathname === '/' ) {\n\t\t\tnavigate( '/login' );\n\t\t}\n\t});\n\tuseEffect( () => {\n\t\tconst isLoggingOut = oldIsLoggedIn && !isLoggedIn;\n\t\tconst isLoggingIn = !oldIsLoggedIn && isLoggedIn;\n\t\tif ( isLoggingIn ) {\n\t\t\tif ( pathname === '/login-tfa' ) {\n\t\t\t\tgoToDestination( search, writeAccess, navigate );\n\t\t\t}\n\t\t\telse if ( pathname && pathname !== '/' && pathname !== '/login' ) {\n\t\t\t\tdebug( 'User has logged in, redirecting to: '+pathname );\n\t\t\t\tnavigate( pathname );\n\t\t\t} else {\n\t\t\t\tdebug( 'User has logged in, redirecting...' );\n\t\t\t\taxios.post( server+'/ensure_session' )\n\t\t\t\t\t.then( ( res ) => {\n\t\t\t\t\t\tgoToDestination( search, writeAccess, navigate );\n\t\t\t\t\t} )\n\t\t\t\t\t.catch( ( err ) => {\n\t\t\t\t\t\tdebug( 'Encountered an error while ensuring session: '+err.message );\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if ( isLoggingOut ) {\n\t\t\tif ( settings.saml === 'enabled' ) {\n\t\t\t\twindow.location = server+'/saml-xmw/login-choice';\n\t\t\t} else {\n\t\t\t\tnavigate( '/login' );\n\t\t\t}\n\t\t}\n\t\telse if (\n\t\t\tisLoggedIn && pathname &&\n\t\t\t( pathname === '/' || pathname === '/login' || pathname === '/login-tfa' )\n\t\t) {\n\t\t\tdebug( 'User is logged in, check for redirect...' );\n\t\t\taxios.post( server+'/ensure_session' )\n\t\t\t\t.then( ( res ) => {\n\t\t\t\t\tgoToDestination( search, writeAccess, navigate );\n\t\t\t\t} )\n\t\t\t\t.catch( ( err ) => {\n\t\t\t\t\tdebug( 'Encountered an error while ensuring session: '+err.message );\n\t\t\t\t});\n\t\t}\n\t}, [ isLoggedIn, pathname, search, navigate, oldIsLoggedIn, writeAccess, settings ] );\n\tlet AuthenticationBarrier = null;\n\tif ( isLoggedIn ) {\n\t\tAuthenticationBarrier =\n\t\t\t<Fragment>\n\t\t\t\t{!RE_PUBLIC_PAGES.test( pathname ) ? <Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncHeaderBar />\n\t\t\t\t</Suspense> : null}\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/create-namespace\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncCreateNamespace />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/edit-namespace/:namespace\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncEditNamespace />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/namespace-data/:namespace/*\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncNamespaceData />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/profile\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncProfilePage />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tindex\n\t\t\t\t\t\tpath=\"/lessons\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncLessonsPage />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/lessons/:namespace\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncLessonsPage />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/gallery\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncGallery />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/enroll\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncEnrollPage />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/admin/*\"\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t\t<AsyncAdminPage />\n\t\t\t\t\t\t</Suspense>}\n\t\t\t\t\t/>\n\t\t\t\t</Routes>\n\t\t\t</Fragment>;\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Title />\n\t\t\t{AuthenticationBarrier}\n\t\t\t<Routes>\n\t\t\t\t<Route index path=\"/\" element={<Spinner />} />\n\t\t\t\t<Route path=\"/login\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncLogin />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/login-tfa\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncLoginTFA />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/new-password\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncNewPassword />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/complete-registration\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncCompleteRegistration />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/confirm-email\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncConfirmEmail />\n\t\t\t\t</Suspense>} />\n\t\t\t\t{settings.allowUserRegistrations ? <Route path=\"/signup\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncSignup />\n\t\t\t\t</Suspense>} /> : null}\n\t\t\t\t<Route path=\"/forgot-password\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncForgotPassword />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/terms\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncTerms />\n\t\t\t\t</Suspense>} />\n\t\t\t\t<Route path=\"/privacy\" element={<Suspense fallback={<Spinner />}>\n\t\t\t\t\t<AsyncPrivacy />\n\t\t\t\t</Suspense>} />\n\t\t\t</Routes>\n\t\t\t<FooterBar />\n\t\t\t<NotificationSystem />\n\t\t</div>\n\t);\n};\n\n\n// PROPERTIES //\n\nApp.propTypes = {\n\tdispatch: PropTypes.func.isRequired,\n\tfetchCredentials: PropTypes.func.isRequired,\n\tgetCustomTranslations: PropTypes.func.isRequired,\n\tgetEnrollableCohorts: PropTypes.func.isRequired,\n\tgetPublicSettings: PropTypes.func.isRequired,\n\tisLoggedIn: PropTypes.bool.isRequired,\n\tsettings: PropTypes.object.isRequired,\n\tuser: PropTypes.object.isRequired\n};\n\n\n// EXPORTS //\n\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\n\nfunction mapStateToProps( state ) {\n\treturn {\n\t\tisLoggedIn: state.user.loggedIn,\n\t\tuser: state.user,\n\t\tsettings: state.settings\n\t};\n}\n\nfunction mapDispatchToProps( dispatch ) {\n\treturn {\n\t\tdispatch: dispatch,\n\t\tfetchCredentials: fetchCredentialsInjector( dispatch ),\n\t\tgetCustomTranslations: getCustomTranslationsInjector( dispatch ),\n\t\tgetPublicSettings: getPublicSettingsInjector( dispatch ),\n\t\tgetEnrollableCohorts: getEnrollableCohortsInjector( dispatch )\n\t};\n}\n","/**\n* MIT License\n*\n* Copyright (c) 2013-present, Facebook, Inc.\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\n/* eslint-disable no-process-env, no-console */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register( config ) {\n\tif ( process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator ) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${window.location.origin}/dashboard/service-worker.js`;\n\t\t\tif ( isLocalhost ) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker( swUrl, config );\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW( swUrl, config );\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW( swUrl, config ) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif ( installingWorker === null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif ( installingWorker.state === 'installed' ) {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tAt this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t\tbut the previous service worker will still serve the older\n\t\t\t\t\t\t\t\tcontent until all client tabs are closed.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tAt this point, everything has been precached.\n\t\t\t\t\t\t\t\tIt's the perfect time to display a\n\t\t\t\t\t\t\t\t\"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error( 'Error during service worker registration:', error );\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType !== null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ( 'serviceWorker' in navigator ) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport 'react-dates/initialize';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport createRootReducer from 'reducers';\nimport App from 'containers/app.js';\nimport * as serviceWorker from './service_worker.js';\nimport './helpers/axios';\nimport 'css/animations.css';\nimport 'css/index.css';\n\n\n// VARIABLES //\n\nconst persistConfig = {\n\tkey: 'root',\n\tblacklist: [ 'router', 'license', 'requestTFA' ],\n\tstorage: localforage\n};\nconst rootReducer = createRootReducer( history );\nconst persistedReducer = persistReducer( persistConfig, rootReducer );\n\nexport const store = createStore( persistedReducer );\nconst persistor = persistStore( store );\n\n\n// MAIN //\n\nReactDOM.render(\n\t<Provider store={store} >\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<HelmetProvider>\n\t\t\t\t<BrowserRouter basename=\"/dashboard\" >\n\t\t\t\t\t<App />\n\t\t\t\t</BrowserRouter>\n\t\t\t</HelmetProvider>\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById( 'root' )\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}