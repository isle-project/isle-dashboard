{"version":3,"file":"static/js/EditorGuides.1659232d.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/@isle-project/components/text-editor/guides/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","// MODULES //\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Joyride, { EVENTS } from '@isle-project/components/joyride';\nimport overview from './overview.json';\nimport saving from './saving.json';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:text-editor:guides' );\n\n\n// MAIN //\n\nconst Guides = ({ target, show, onHide, t }) => {\n\tdebug( `Rendering guides modal for \"${target}\" text editor` );\n\tconst [ selected, setSelected ] = useState( 'overview' );\n\tconst [ running, setRunning ] = useState( false );\n\tconst editorNode = useRef( document.getElementById( target ) );\n\tconst createSteps = useCallback( () => {\n\t\treturn {\n\t\t\tsaving: saving.map( ( x, idx ) => {\n\t\t\t\tconst out = { ...x };\n\t\t\t\tout.content = t( `saving-${idx}` );\n\t\t\t\tout.target = `#${target} ` + out.target;\n\t\t\t\treturn out;\n\t\t\t}),\n\t\t\toverview: overview.map( ( x, idx ) => {\n\t\t\t\tconst out = { ...x };\n\t\t\t\tout.content = t( `overview-${idx}` );\n\t\t\t\tout.target = `#${target} ` + out.target;\n\t\t\t\treturn out;\n\t\t\t})\n\t\t};\n\t}, [ target, t ] );\n\tconst [ steps, setSteps ] = useState( createSteps() );\n\tuseEffect( () => {\n\t\teditorNode.current = document.getElementById( target );\n\t\tsetSteps( createSteps() );\n\t}, [ createSteps, target, t ] );\n\tconst handleStartClick = useCallback( () => {\n\t\tdebug( `${running ? 'Stopping' : 'Starting'} the selected tour...` );\n\t\tonHide();\n\t\tsetRunning( !running );\n\t}, [ onHide, running ] );\n\tconst handleOptionChange = useCallback( ( event ) => {\n\t\tsetSelected( event.target.value );\n\t}, [] );\n\tconst renderModal = useCallback( () => {\n\t\t/* eslint-disable i18next/no-literal-string */\n\t\tlet guidePanel;\n\t\tif ( running ) {\n\t\t\tguidePanel = <Card body>\n\t\t\t\t<span className=\"title\">{t('cancel-tour')}</span>\n\t\t\t\t<p>\n\t\t\t\t\t{t('cancel-tour-msg')}\n\t\t\t\t</p>\n\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t<Button variant=\"warning\" onClick={handleStartClick} >{t('cancel')}</Button>\n\t\t\t\t</ButtonToolbar>\n\t\t\t</Card>;\n\t\t} else {\n\t\t\tguidePanel = <Card body>\n\t\t\t\t<span className=\"title\">{t('select-tour')}</span>\n\t\t\t\t<Form>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tlabel={t('editor-overview')}\n\t\t\t\t\t\t\tname=\"overview\"\n\t\t\t\t\t\t\tvalue=\"overview\"\n\t\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t\t\tchecked={selected === 'overview'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tlabel={t('saving-progress')}\n\t\t\t\t\t\t\tname=\"saving\"\n\t\t\t\t\t\t\tvalue=\"saving\"\n\t\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t\t\tchecked={selected === 'saving'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t<Button variant=\"success\" onClick={handleStartClick} >\n\t\t\t\t\t\t{t('start-tour')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonToolbar>\n\t\t\t</Card>;\n\t\t}\n\t\tconst leftColumn = <Col sm={5}>\n\t\t\t<h5>{t('headers')}</h5>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t\t# {t('large-header')}<br />\n\t\t\t\t\t## {t('medium-header')}<br />\n\t\t\t\t\t### {t('small-header')}\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h5>{t('emphasis')}</h5>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t\t<i>*{t('markup-italic')}*</i><br />\n\t\t\t\t\t<b>**{t('markup-bold')}**</b><br />\n\t\t\t\t\t<i>*We <b>**can**</b> combine them*</i><br />\n\t\t\t\t\t<u>++{t('markup-underlined')}++</u><br />\n\t\t\t\t\t<s>~~{t('markup-strikethrough')}~~</s><br />\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h5>{t('quotes')}</h5>\n\t\t\t<Card body >\n\t\t\t\t<pre>\n\t\t\t\t\t{t('george-box')}<br />\n\t\t\t\t\t&gt; {t('models-wrong')}<br />\n\t\t\t\t\t&gt; {t('models-useful')}\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t</Col>;\n\n\t\tconst rightColumn = <Col sm={7}>\n\t\t\t<h5>{t('lists')}</h5>\n\t\t\t<h6>{t('unordered')}</h6>\n\t\t\t<Card body style={{ marginBottom: 10 }} >\n\t\t\t\t<pre>\n\t\t\t\t* {t('item')} 1<br />\n\t\t\t\t* {t('item')} 2<br />\n\t\t\t\t&nbsp; &nbsp; * {t('item')} 2a<br />\n\t\t\t\t&nbsp; &nbsp; * {t('item')} 2b\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t\t<h6>{t('ordered')}</h6>\n\t\t\t<Card body>\n\t\t\t\t<pre>\n\t\t\t\t1. {t('item')} 1<br />\n\t\t\t\t2. {t('item')} 2<br />\n\t\t\t\t3. {t('item')} 3<br />\n\t\t\t\t&nbsp; &nbsp;3a. {t('item')} 3a<br />\n\t\t\t\t&nbsp; &nbsp;3b. {t('item')} 3b\n\t\t\t\t</pre>\n\t\t\t</Card>\n\t\t</Col>;\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tonHide={onHide}\n\t\t\t\tshow={show}\n\t\t\t\tdialogClassName=\"modal-90w\"\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title as=\"h4\">\n\t\t\t\t\t\t{t('editor-guide')}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<span className=\"title\">{t('markdown-cheatsheet')}</span>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t{leftColumn}\n\t\t\t\t\t\t\t\t\t{rightColumn}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm={3}>\n\t\t\t\t\t\t\t\t{guidePanel}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={onHide} >{t('close')}</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t);\n\t\t/* eslint-enable i18next/no-literal-string */\n\t}, [ handleOptionChange, onHide, running, selected, handleStartClick, show, t ] );\n\n\tdebug( `Selected tutorial ${selected} is${running ? ' ' : ' not ' }running` );\n\treturn (\n\t\t<Fragment>\n\t\t\t{renderModal()}\n\t\t\t{ selected === 'saving' ?\n\t\t\t\t<Joyride\n\t\t\t\t\tsteps={steps.saving}\n\t\t\t\t\tshowProgress\n\t\t\t\t\tdisableScrolling\n\t\t\t\t\trun={running}\n\t\t\t\t\tparentNode={editorNode.current}\n\t\t\t\t\tcallback={( tour ) => {\n\t\t\t\t\t\tconst type = tour.type;\n\t\t\t\t\t\tif ( type === EVENTS.TOUR_END ) {\n\t\t\t\t\t\t\tsetRunning( false );\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/> : null\n\t\t\t}\n\t\t\t{ selected === 'overview' ?\n\t\t\t\t<Joyride\n\t\t\t\t\tsteps={steps.overview}\n\t\t\t\t\tshowProgress\n\t\t\t\t\tdisableScrolling\n\t\t\t\t\tcontinuous\n\t\t\t\t\trun={running}\n\t\t\t\t\tparentNode={editorNode.current}\n\t\t\t\t\tcallback={( tour ) => {\n\t\t\t\t\t\tconst type = tour.type;\n\t\t\t\t\t\tif ( type === EVENTS.TOUR_END ) {\n\t\t\t\t\t\t\tsetRunning( false );\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/> : null\n\t\t\t}\n\t\t</Fragment>\n\t);\n};\n\n\n// PROPERTIES //\n\nGuides.propTypes = {\n\tonHide: PropTypes.func,\n\tshow: PropTypes.bool.isRequired\n};\n\nGuides.defaultProps = {\n\tonHide() {}\n};\n\n\n// EXPORTS //\n\nexport default Guides;\n"],"names":["_excluded","ButtonToolbar","React","_ref","ref","bsPrefix","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","role","debug","logger","Guides","target","show","onHide","t","selected","setSelected","useState","running","setRunning","editorNode","useRef","document","getElementById","createSteps","useCallback","saving","x","idx","out","content","overview","steps","setSteps","useEffect","current","handleStartClick","handleOptionChange","event","value","renderModal","guidePanel","Card","body","Button","variant","onClick","Form","FormGroup","type","label","name","onChange","checked","leftColumn","Col","sm","style","marginBottom","rightColumn","Modal","dialogClassName","closeButton","as","Container","Row","Fragment","showProgress","disableScrolling","run","parentNode","callback","tour","EVENTS","continuous","propTypes","PropTypes"],"sourceRoot":""}