{"version":3,"file":"static/js/581.31411869.chunk.js","mappings":"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","sources":["components/admin/overview.js","components/searchbar/index.js","constants/colors.js","ev/components/data-explorer/index.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { withTranslation } from 'react-i18next';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Plotly from 'react-plotly.js';\nimport round from '@stdlib/math/base/special/round';\nimport objectKeys from '@stdlib/utils/keys';\nimport pluck from '@stdlib/utils/pluck';\nimport uppercase from '@stdlib/string/uppercase';\nimport SearchBar from 'components/searchbar';\nimport server from 'constants/server';\nimport COLORS from 'constants/colors';\nimport saveAs from 'utils/file_saver.js';\nimport obsToVar from '@isle-project/utils/obs-to-var';\nimport DashboardDataExplorer from 'ev/components/data-explorer';\n\n\n// FUNCTIONS //\n\nfunction diff( y ) {\n\tconst out = [];\n\tif ( !y ) {\n\t\treturn out;\n\t}\n\tfor ( let i = 1; i < y.length; i++ ) {\n\t\tconst v = y[ i ] - y[ i-1 ];\n\t\tout.push( v );\n\t}\n\treturn out;\n}\n\nfunction reverse( side ) {\n\tswitch ( side ) {\n\t\tcase 'left':\n\t\t\treturn 'right';\n\t\tcase 'right':\n\t\t\treturn 'left';\n\t\tcase 'up':\n\t\t\treturn 'down';\n\t\tcase 'down':\n\t\t\treturn 'up';\n\t}\n}\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:admin' );\nconst POSITIONS = [ 0, 0.9, 0.1, 0.8, 0.2, 0.7, 0.3 ];\nconst COLOR_MAPPING = {\n\tusers: COLORS[ 0 ],\n\tnamespaces: COLORS[ 1 ],\n\tlessons: COLORS[ 2 ],\n\tcohorts: COLORS[ 3 ],\n\tfiles: COLORS[ 4 ],\n\tevents: COLORS[ 5 ],\n\tsessionData: COLORS[ 7 ],\n\tdailyActiveUsers: COLORS[ 8 ],\n\tweeklyActiveUsers: COLORS[ 9 ],\n\tmonthlyActiveUsers: COLORS[ 10 ],\n\ttickets: COLORS[ 11 ],\n\tclosedTickets: COLORS[ 12 ],\n\topenTickets: COLORS[ 13 ]\n};\nconst DATA_KEY_MAPPING = {\n\tusers: 'nUsers',\n\tnamespaces: 'nNamespaces',\n\tlessons: 'nLessons',\n\tcohorts: 'nCohorts',\n\tfiles: 'nFiles',\n\tevents: 'nEvents',\n\tsessionData: 'nSessionData',\n\ttickets: 'nTickets',\n\topenTickets: 'nOpenTickets',\n\tclosedTickets: 'nClosedTickets',\n\tdailyActiveUsers: 'dailyActiveUsers',\n\tweeklyActiveUsers: 'weeklyActiveUsers',\n\tmonthlyActiveUsers: 'monthlyActiveUsers'\n};\nconst DISPLAY_IN_PLOT = {\n\tusers: false,\n\tnamespaces: false,\n\tlessons: false,\n\tcohorts: false,\n\tfiles: false,\n\tevents: false,\n\tsessionData: false,\n\tdailyActiveUsers: false,\n\tweeklyActiveUsers: false,\n\tmonthlyActiveUsers: false,\n\ttickets: false,\n\topenTickets: false,\n\tclosedTickets: false\n};\nconst BUTTONS_TO_REMOVE = [\n\t'sendDataToCloud',\n\t'zoom2d',\n\t'pan2d',\n\t'select2d',\n\t'zoomIn2d',\n\t'zoomOut2d',\n\t'autoScale2d',\n\t'resetScale2d',\n\t'hoverClosestCartesian',\n\t'hoverCompareCartesian',\n\t'toggleHover',\n\t'toggleSpikelines',\n\t'resetViews'\n];\n\n\n// MAIN //\n\nclass Overview extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tdisplayInPlot: {\n\t\t\t\t...DISPLAY_IN_PLOT,\n\t\t\t\tusers: true\n\t\t\t},\n\t\t\trevision: 0,\n\t\t\tfilteredActionTypes: props.statistics.actionTypes,\n\t\t\thistoricalActionTypes: null,\n\t\t\tuseDifferencing: false,\n\t\t\tdataExplorer: 'hidden'\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getOverviewStatistics();\n\t\tconst last = this.props.historicalStatistics[ this.props.historicalStatistics.length-1 ];\n\t\tif ( last && last.updatedAt ) {\n\t\t\tconst date = new Date( last.updatedAt );\n\t\t\tconst year = date.getFullYear();\n\t\t\tconst month = date.getMonth();\n\t\t\tconst dayOfMonth = date.getDate();\n\t\t\tdebug( `Latest data from ${month}/${dayOfMonth}/${year}...` );\n\t\t\tconst currentDate = new Date();\n\t\t\tconst currentYear = currentDate.getFullYear();\n\t\t\tconst currentMonth = currentDate.getMonth();\n\t\t\tconst currentDayOfMonth = currentDate.getDate();\n\t\t\tdebug( `Current date is ${currentMonth}/${currentDayOfMonth}/${currentYear}` );\n\t\t\tif (\n\t\t\t\tcurrentYear > year ||\n\t\t\t\tcurrentMonth > month ||\n\t\t\t\tcurrentDayOfMonth > dayOfMonth\n\t\t\t) {\n\t\t\t\tdebug( 'Request historical data from server...' );\n\t\t\t\tthis.props.getHistoricalOverviewStats();\n\t\t\t}\n\t\t} else {\n\t\t\tdebug( 'Retrieve overview data...' );\n\t\t\tthis.props.getHistoricalOverviewStats();\n\t\t}\n\t\tif ( this.props.historicalStatistics ) {\n\t\t\tthis.extractHistoricalActionTypes();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.statistics.actionTypes !== prevProps.statistics.actionTypes ) {\n\t\t\tthis.setState({\n\t\t\t\tfilteredActionTypes: this.props.statistics.actionTypes\n\t\t\t});\n\t\t}\n\t\tif (\n\t\t\tthis.props.historicalStatistics.length !== prevProps.historicalStatistics.length\n\t\t) {\n\t\t\tthis.extractHistoricalActionTypes();\n\t\t}\n\t}\n\n\textractHistoricalActionTypes() {\n\t\tdebug( 'Extract and format action types for time series display...' );\n\t\tconst actionTypes = pluck( this.props.historicalStatistics, 'actionTypes' );\n\t\tconst out = {};\n\t\tfor ( let i = 0; i < actionTypes.length; i++ ) {\n\t\t\tif ( !actionTypes[ i ] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor ( let j = 0; j < actionTypes[ i ].length; j++ ) {\n\t\t\t\tconst action = actionTypes[ i ][ j ];\n\t\t\t\tconst name = action._id.type;\n\t\t\t\tif ( !out[ name ] ) {\n\t\t\t\t\tout[ name ] = [];\n\t\t\t\t}\n\t\t\t\tout[ name ][ i ] = action.count;\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\thistoricalActionTypes: out\n\t\t});\n\t}\n\n\trenderTimeSeries() {\n\t\tlet title = '';\n\t\tconst data = this.props.historicalStatistics;\n\t\tconst dates = pluck( data, 'createdAt' );\n\t\tconst dateRange = [ dates[ 0 ], dates[ dates.length-1 ] ];\n\t\tconst layout = {\n\t\t\txaxis: {\n\t\t\t\tautorange: true,\n\t\t\t\trange: dateRange,\n\t\t\t\trangeselector: {\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount: 7,\n\t\t\t\t\t\t\tlabel: '1w',\n\t\t\t\t\t\t\tstep: 'day',\n\t\t\t\t\t\t\tstepmode: 'backward'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\tlabel: '1m',\n\t\t\t\t\t\t\tstep: 'month',\n\t\t\t\t\t\t\tstepmode: 'backward'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount: 6,\n\t\t\t\t\t\t\tlabel: '6m',\n\t\t\t\t\t\t\tstep: 'month',\n\t\t\t\t\t\t\tstepmode: 'backward'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstep: 'all'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\trangeslider: {\n\t\t\t\t\trange: dateRange\n\t\t\t\t},\n\t\t\t\ttype: 'date',\n\t\t\t\tfixedrange: true\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\torientation: 'h'\n\t\t\t},\n\t\t\tmargin: {\n\t\t\t\tl: 10,\n\t\t\t\tr: 15,\n\t\t\t\tb: 30,\n\t\t\t\tt: 30,\n\t\t\t\tpad: 10\n\t\t\t}\n\t\t};\n\t\tconst keys = objectKeys( this.state.displayInPlot );\n\t\tconst displayedData = [];\n\t\tconst domain = [ 0, 1 ];\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\tconst key = keys[ i ];\n\t\t\tif ( this.state.displayInPlot[ key ] === true ) {\n\t\t\t\ttitle += ( title === '' ) ? '' : ', ';\n\t\t\t\ttitle += this.props.t('common:'+key );\n\t\t\t\tlet color;\n\t\t\t\tlet y;\n\t\t\t\tif ( COLOR_MAPPING[ key ] ) {\n\t\t\t\t\tcolor = COLOR_MAPPING[ key ];\n\t\t\t\t\ty = pluck( data, DATA_KEY_MAPPING[ key ] );\n\t\t\t\t} else {\n\t\t\t\t\t// Case: displaying an action type\n\t\t\t\t\tcolor = COLORS[ ( i % COLORS.length ) + 7 ];\n\t\t\t\t\ty = this.state.historicalActionTypes[ key ];\n\t\t\t\t}\n\t\t\t\tif ( this.state.useDifferencing ) {\n\t\t\t\t\ty = diff( y );\n\t\t\t\t}\n\t\t\t\tconst trace = {\n\t\t\t\t\ttype: this.state.useDifferencing ? 'bar' : 'scatter',\n\t\t\t\t\tmode: 'line',\n\t\t\t\t\tname: this.props.t('common:'+key),\n\t\t\t\t\tx: dates,\n\t\t\t\t\ty: y,\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tcolor\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif ( this.state.useDifferencing ) {\n\t\t\t\t\ttrace.offsetgroup = displayedData.length;\n\t\t\t\t}\n\t\t\t\tconst len = displayedData.length;\n\t\t\t\tif ( len > 0 ) {\n\t\t\t\t\ttrace.yaxis = `y${len+1}`;\n\t\t\t\t}\n\t\t\t\tdisplayedData.push( trace );\n\t\t\t\tconst yaxis = {\n\t\t\t\t\ttitle: this.props.t( 'common:'+key ),\n\t\t\t\t\ttitlefont: { color },\n\t\t\t\t\ttickfont: { color },\n\t\t\t\t\tfixedrange: true\n\t\t\t\t};\n\t\t\t\tif ( displayedData.length > 1 ) {\n\t\t\t\t\tyaxis.overlaying = 'y';\n\t\t\t\t}\n\t\t\t\tif ( displayedData.length % 2 === 0 ) {\n\t\t\t\t\tyaxis.side = 'left';\n\t\t\t\t\tdomain[ 0 ] += 0.1;\n\t\t\t\t} else {\n\t\t\t\t\tyaxis.side = 'right';\n\t\t\t\t\tdomain[ 1 ] -= 0.1;\n\t\t\t\t}\n\t\t\t\tyaxis.position = POSITIONS[ displayedData.length ];\n\t\t\t\tif ( len === 0 ) {\n\t\t\t\t\tlayout[ 'yaxis' ] = yaxis;\n\t\t\t\t} else {\n\t\t\t\t\tlayout[ `yaxis${len+1}` ] = yaxis;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlayout.xaxis.domain = domain;\n\t\tlayout.title = `${!this.state.useDifferencing ? this.props.t('time-series-of') : this.props.t('daily-changes-of')}${title}`;\n\t\tif ( displayedData.length === 0 ) {\n\t\t\treturn ( <Jumbotron\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '73.7%'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<h3 style={{ textAlign: 'center', marginTop: '12%' }}>Select a variable to be displayed...</h3>\n\t\t\t</Jumbotron> );\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Plotly\n\t\t\t\t\trevision={this.state.revision}\n\t\t\t\t\tdata={displayedData}\n\t\t\t\t\tconfig={{\n\t\t\t\t\t\tdisplayModeBar: 'hover',\n\t\t\t\t\t\tdisplaylogo: false,\n\t\t\t\t\t\tmodeBarButtonsToRemove: BUTTONS_TO_REMOVE,\n\t\t\t\t\t\tmodeBarButtonsToAdd: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: this.props.t('download-data'),\n\t\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\t\t'width': 857.1,\n\t\t\t\t\t\t\t\t\t'height': 1000,\n\t\t\t\t\t\t\t\t\t'path': 'm214-7h429v214h-429v-214z m500 0h72v500q0 8-6 21t-11 20l-157 156q-5 6-19 12t-22 5v-232q0-22-15-38t-38-16h-322q-22 0-37 16t-16 38v232h-72v-714h72v232q0 22 16 38t37 16h465q22 0 38-16t15-38v-232z m-214 518v178q0 8-5 13t-13 5h-107q-7 0-13-5t-5-13v-178q0-8 5-13t13-5h107q7 0 13 5t5 13z m357-18v-518q0-22-15-38t-38-16h-750q-23 0-38 16t-16 38v750q0 22 16 38t38 16h517q23 0 50-12t42-26l156-157q16-15 27-42t11-49z',\n\t\t\t\t\t\t\t\t\t'transform': 'matrix(1 0 0 -1 0 850)'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tclick: ( gd ) => {\n\t\t\t\t\t\t\t\t\tconst blob = new Blob([ JSON.stringify( gd.data ) ], {\n\t\t\t\t\t\t\t\t\t\ttype: 'application/json'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsaveAs( blob, `stats_${title}.json` );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}}\n\t\t\t\t\tlayout={layout}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '80%'\n\t\t\t\t\t}}\n\t\t\t\t\tuseResizeHandler\n\t\t\t\t/>\n\t\t\t\t{displayedData.length > 0 ?\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tdisplayInPlot: {\n\t\t\t\t\t\t\t\t\t\t...DISPLAY_IN_PLOT\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\trevision: this.state.revision + 1\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: '35%'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>{this.props.t('common:reset')}</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tuseDifferencing: !this.state.useDifferencing\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: '1%'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>{this.state.useDifferencing ? 'Display Time Series' : this.props.t('display-daily-changes') }</Button>\n\t\t\t\t\t</Fragment> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\thideExplorer = () => {\n\t\tthis.setState({\n\t\t\tdataExplorer: 'hidden'\n\t\t});\n\t};\n\n\trenderDiskUsage() {\n\t\tif ( !this.props.statistics.database ) {\n\t\t\treturn null;\n\t\t}\n\t\tlet { fsUsedSize, fsTotalSize } = this.props.statistics.database;\n\t\tfsUsedSize /= ( 1024 * 1024 * 1024 );\n\t\tfsTotalSize /= ( 1024 * 1024 * 1024 );\n\t\tconst usedSpace = round( fsUsedSize );\n\t\tconst freeSpace = round( fsTotalSize - fsUsedSize );\n\t\tconst { t } = this.props;\n\t\treturn ( <Plotly\n\t\t\tdata={[\n\t\t\t\t{\n\t\t\t\t\tvalues: [ usedSpace, freeSpace ],\n\t\t\t\t\tlabels: [ `${t('used-space')}: ${usedSpace} GB`, `${t('free-space')}: ${freeSpace} GB` ],\n\t\t\t\t\ttype: 'pie'\n\t\t\t\t}\n\t\t\t]}\n\t\t\tconfig={{\n\t\t\t\tdisplayModeBar: false,\n\t\t\t\tdisplaylogo: false\n\t\t\t}}\n\t\t\tlayout={{\n\t\t\t\tplot_bgcolor: 'rgba(0,0,0,0.0)',\n\t\t\t\tpaper_bgcolor: 'rgba(0,0,0,0.0)',\n\t\t\t\txaxis: {\n\t\t\t\t\tfixedrange: true\n\t\t\t\t},\n\t\t\t\tyaxis: {\n\t\t\t\t\tfixedrange: true\n\t\t\t\t},\n\t\t\t\tautosize: true,\n\t\t\t\tmargin: {\n\t\t\t\t\tl: 50,\n\t\t\t\t\tr: 50,\n\t\t\t\t\tb: 50,\n\t\t\t\t\tt: 50\n\t\t\t\t}\n\t\t\t}}\n\t\t\tuseResizeHandler={true}\n\t\t\tstyle={{\n\t\t\t\twidth: '75%',\n\t\t\t\theight: '200px'\n\t\t\t}}\n\t\t/> );\n\t}\n\n\trenderDatabaseStats() {\n\t\tconst { t } = this.props;\n\t\tif ( !this.props.statistics.database ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst { storageSize, dataSize, objects, avgObjSize } = this.props.statistics.database;\n\t\treturn (\n\t\t\t<ListGroup variant=\"flush\" style={{ fontSize: '1em' }}>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >{t('physical-storage-size')}: {storageSize}</ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >{t('reserved-storage-size')}: {dataSize}</ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >{t('number-of-objects')}: {objects} </ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >{t('average-object-size')}: {round( avgObjSize )}</ListGroup.Item>\n\t\t\t</ListGroup>\n\t\t);\n\t}\n\n\trenderDailyStatistics() {\n\t\tconst { t } = this.props;\n\t\tconst { dailyActiveUsers, weeklyActiveUsers, monthlyActiveUsers, lastHourActiveUsers } = this.props.statistics;\n\t\treturn (\n\t\t\t<ListGroup variant=\"flush\" style={{ fontSize: '1em' }}>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >\n\t\t\t\t\t{t('last-hour-active-users')}:\n\t\t\t\t\t<span style={{ float: 'right', marginRight: 56 }} >{lastHourActiveUsers}</span>\n\t\t\t\t</ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >\n\t\t\t\t\t<span>{t('daily-active-users')}:</span>\n\t\t\t\t\t<span style={{ float: 'right' }}>\n\t\t\t\t\t\t<span style={{ marginRight: 24 }} >{dailyActiveUsers}</span>\n\t\t\t\t\t\t{this.renderPlotButton( 'dailyActiveUsers', 'down' )}\n\t\t\t\t\t</span>\n\t\t\t\t</ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >\n\t\t\t\t\t<span>{t('weekly-active-users')}:</span>\n\t\t\t\t\t<span style={{ float: 'right' }}>\n\t\t\t\t\t\t<span style={{ marginRight: 24 }} >{weeklyActiveUsers}</span>\n\t\t\t\t\t\t{this.renderPlotButton( 'weeklyActiveUsers', 'down' )}\n\t\t\t\t\t</span>\n\t\t\t\t</ListGroup.Item>\n\t\t\t\t<ListGroup.Item style={{ padding: '.5rem 0.8rem' }} >\n\t\t\t\t\t<span>{t('monthly-active-users')}:</span>\n\t\t\t\t\t<span style={{ float: 'right' }}>\n\t\t\t\t\t\t<span style={{ marginRight: 24 }} >{monthlyActiveUsers}</span>\n\t\t\t\t\t\t{this.renderPlotButton( 'monthlyActiveUsers', 'down' )}\n\t\t\t\t\t</span>\n\t\t\t\t</ListGroup.Item>\n\t\t\t</ListGroup>\n\t\t);\n\t}\n\n\thandleFilterChange = ( event ) => {\n\t\tconst str = uppercase( event.target.value );\n\t\tconst filtered = [];\n\t\tfor ( let i = 0; i < this.props.statistics.actionTypes.length; i++ ) {\n\t\t\tconst actionType = this.props.statistics.actionTypes[ i ];\n\t\t\tif ( actionType ) {\n\t\t\t\tconst type = actionType._id.type || '';\n\t\t\t\tif ( type.includes( str ) ) {\n\t\t\t\t\tfiltered.push( actionType );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tfilteredActionTypes: filtered\n\t\t});\n\t};\n\n\trenderActionTypes() {\n\t\tconst actionTypes = this.state.filteredActionTypes;\n\t\tif ( !actionTypes ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.props.t('common:actions')}\n\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"explorer-action-types-tooltip\">{this.props.t('common:data-explorer')}</Tooltip>}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\taria-label={this.props.t('common:data-explorer')}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tdataExplorer: 'action-types'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: 12\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"fas fa-chart-bar\" ></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t<SearchBar\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tright: 8,\n\t\t\t\t\t\t\twidth: 140,\n\t\t\t\t\t\t\tfontSize: '1.2rem'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\tonChange={this.handleFilterChange}\n\t\t\t\t\t/>\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"action-types-table-container\">\n\t\t\t\t\t<Table striped hover className=\"action-types-table\" size=\"sm\" >\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>{this.props.t('common:visualize')}</th>\n\t\t\t\t\t\t\t\t<th>{this.props.t('common:type')}</th>\n\t\t\t\t\t\t\t\t<th>{this.props.t('common:count')}</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{actionTypes.map( ( x, i ) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={i} >\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t{this.renderPlotButton( x._id.type, 'right' )}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>{x._id.type}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{x.count}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\trenderPlotButton( name, side = 'left', icon ) {\n\t\tconst clickHandler = () => {\n\t\t\tconst newDisplayInPlot = { ...this.state.displayInPlot };\n\t\t\tnewDisplayInPlot[ name ] = !newDisplayInPlot[ name ];\n\n\t\t\t// Reset object to trigger additional render to force range slider to be redrawn:\n\t\t\tthis.setState({\n\t\t\t\tdisplayInPlot: DISPLAY_IN_PLOT\n\t\t\t}, () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplayInPlot: newDisplayInPlot,\n\t\t\t\t\trevision: this.state.revision + 1\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tif ( this.state.displayInPlot[ name ] ) {\n\t\t\treturn ( <Button aria-label={this.props.t('hide-data', { name })} variant=\"warning\" size=\"sm\" onClick={clickHandler} >\n\t\t\t\t<i className={icon ? icon : `fas fa-arrow-circle-${side}`} ></i>\n\t\t\t</Button> );\n\t\t}\n\t\treturn ( <Button aria-label={this.props.t('show-data', { name })} variant=\"secondary\" size=\"sm\" onClick={clickHandler} >\n\t\t\t\t<i className={icon ? icon : `fas fa-arrow-circle-${reverse( side )}`} ></i>\n\t\t</Button> );\n\t}\n\n\trenderExplorer = () => {\n\t\tlet explorer;\n\t\tswitch ( this.state.dataExplorer ) {\n\t\t\tcase 'action-types':\n\t\t\t\texplorer = <DashboardDataExplorer\n\t\t\t\t\ttitle={this.props.t('explorer-action-types-title')}\n\t\t\t\t\tdata={{\n\t\t\t\t\t\t...this.state.historicalActionTypes,\n\t\t\t\t\t\ttime: this.props.historicalStatistics.map( x => x.createdAt )\n\t\t\t\t\t}}\n\t\t\t\t\tcategorical={[ 'time' ]}\n\t\t\t\t\tclose={this.hideExplorer}\n\t\t\t\t/>;\n\t\t\t\tbreak;\n\t\t\tcase 'overview-statistics':\n\t\t\t\texplorer = <DashboardDataExplorer\n\t\t\t\t\ttitle={this.props.t('explorer-overview-stats-title')}\n\t\t\t\t\tdata={obsToVar( this.props.historicalStatistics )}\n\t\t\t\t\tcategorical={[ 'createdAt' ]}\n\t\t\t\t\tclose={this.hideExplorer}\n\t\t\t\t/>;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn explorer;\n\t};\n\n\trender() {\n\t\tdebug( 'Rendering overview page...' );\n\t\tconst { nUsers, nNamespaces, nLessons, nCohorts, nSessionData, nFiles, nEvents, nTickets } = this.props.statistics;\n\t\tconst { t } = this.props;\n\t\tconst overviewPanel = <Container className=\"admin-outer-container slide-in-right\" >\n\t\t\t<Row className=\"first-row\" >\n\t\t\t\t<Col className=\"column-border\" sm={4} md={3} >\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t{this.props.t('overall')}\n\t\t\t\t\t\t<OverlayTrigger placement=\"right\" overlay={<Tooltip id=\"explorer-overview-tooltip\">{t('common:data-explorer')}</Tooltip>}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\taria-label={t('common:data-explorer')}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tdataExplorer: 'overview-statistics'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginLeft: 12\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-chart-bar\" ></i>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t<span className=\"overview-server-name\">{server}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<Table striped hover className=\"overview-table\" >\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>{this.props.t('common:icon')}</th>\n\t\t\t\t\t\t\t<th>{this.props.t('common:table')}</th>\n\t\t\t\t\t\t\t<th>{this.props.t('common:count')}</th>\n\t\t\t\t\t\t\t<th>{this.props.t('common:visualize')}</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\" style={{ color: COLOR_MAPPING.users }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('admin:users')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nUsers}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'users' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-school\" style={{ color: COLOR_MAPPING.namespaces }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:courses')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nNamespaces}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'namespaces' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-chalkboard\" style={{ color: COLOR_MAPPING.lessons }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:lessons')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nLessons}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'lessons' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-users\" style={{ color: COLOR_MAPPING.cohorts }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:cohorts')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nCohorts}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'cohorts' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-file\" style={{ color: COLOR_MAPPING.files }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:files')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nFiles}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'files' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-clock\" style={{ color: COLOR_MAPPING.events }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:events')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nEvents}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'events' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-shoe-prints\" style={{ color: COLOR_MAPPING.sessionData }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:sessionData')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nSessionData}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'sessionData' )}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-medkit\" style={{ color: COLOR_MAPPING.tickets }} ></i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{t('common:tickets')}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{nTickets}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'tickets' )}\n\t\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'openTickets', 'left', 'fas fa-lock-open' )}\n\t\t\t\t\t\t\t\t\t\t{this.renderPlotButton( 'closedTickets', 'left', 'fas fa-lock' )}\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"column-border\" sm={8} md={6} >\n\t\t\t\t\t<h2>{this.props.t('over-time')}</h2>\n\t\t\t\t\t{this.renderTimeSeries()}\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={12} md={3} >\n\t\t\t\t\t{this.renderActionTypes()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"second-row\" >\n\t\t\t\t<Col md={3} sm={4} className=\"column-border\" >\n\t\t\t\t\t<h3>{t('disk-usage')}</h3>\n\t\t\t\t\t{this.renderDiskUsage()}\n\t\t\t\t</Col>\n\t\t\t\t<Col md={6} sm={8} className=\"column-border\" >\n\t\t\t\t\t<h3>{t('database')}</h3>\n\t\t\t\t\t{this.renderDatabaseStats()}\n\t\t\t\t</Col>\n\t\t\t\t<Col md={3} sm={12} >\n\t\t\t\t\t<h3>{this.props.t('daily-statistics')}</h3>\n\t\t\t\t\t{this.renderDailyStatistics()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>;\n\t\treturn (\n\t\t\tthis.state.dataExplorer === 'hidden' ?\n\t\t\t\toverviewPanel:\n\t\t\t\tthis.renderExplorer()\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nOverview.propTypes = {\n\tgetHistoricalOverviewStats: PropTypes.func.isRequired,\n\tgetOverviewStatistics: PropTypes.func.isRequired,\n\thistoricalStatistics: PropTypes.array,\n\tstatistics: PropTypes.object,\n\tt: PropTypes.func.isRequired\n};\n\nOverview.defaultProps = {\n\thistoricalStatistics: [],\n\tstatistics: {}\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( [ 'admin', 'common' ] )( Overview );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\n\n\n// MAIN //\n\nconst SearchBar = ( props ) => {\n\treturn (\n\t\t<FormGroup style={{ width: '14vw', minWidth: '120px', float: 'left', marginBottom: '4px', marginRight: '5px', ...props.style }}>\n\t\t\t<InputGroup>\n\t\t\t\t<FormControl\n\t\t\t\t\tclassName=\"header-bar-search\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\taria-label={props.t('search-field')}\n\t\t\t\t\tstyle={{ height: '38px' }}\n\t\t\t\t/>\n\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t<Button aria-label={props.t('search-field-icon')} disabled variant=\"secondary\" style={{ cursor: 'auto' }}>\n\t\t\t\t\t\t\t<i className=\"fa fa-search\"></i>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t</FormGroup>\n\t);\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( [ 'header_bar', 'common' ] )( SearchBar );\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MAIN //\n\nconst COLORS = [\n\t'#1f77b4',\n\t'#ff7f0e',\n\t'#2ca02c',\n\t'#d62728',\n\t'#9467bd',\n\t'#8c564b',\n\t'#c49c94',\n\t'#e377c2',\n\t'#17becf',\n\t'#aec7e8',\n\t'#ffbb78',\n\t'#ff9896',\n\t'#98df8a',\n\t'#7f7f7f',\n\t'#c5b0d5',\n\t'#f7b6d2',\n\t'#bcbd22',\n\t'#c7c7c7',\n\t'#dbdb8d',\n\t'#9edae5'\n];\n\n\n// EXPORTS //\n\nexport default COLORS;\n","// MODULES //\n\nimport asyncComponent from 'components/async';\n\n\n// MAIN //\n\nconst DashboardDataExplorer = asyncComponent( () => import( './main.js' ) );\n\n\n// EXPORTS //\n\nexport default DashboardDataExplorer;\n"],"names":["diff","y","out","i","length","v","push","reverse","side","debug","logger","POSITIONS","COLOR_MAPPING","users","COLORS","namespaces","lessons","cohorts","files","events","sessionData","dailyActiveUsers","weeklyActiveUsers","monthlyActiveUsers","tickets","closedTickets","openTickets","DATA_KEY_MAPPING","DISPLAY_IN_PLOT","BUTTONS_TO_REMOVE","Overview","Component","constructor","props","super","this","setState","dataExplorer","event","str","uppercase","target","value","filtered","statistics","actionTypes","actionType","_id","type","includes","filteredActionTypes","explorer","state","title","t","data","historicalActionTypes","time","historicalStatistics","map","x","createdAt","categorical","close","hideExplorer","obsToVar","displayInPlot","revision","useDifferencing","componentDidMount","getOverviewStatistics","last","updatedAt","date","Date","year","getFullYear","month","getMonth","dayOfMonth","getDate","currentDate","currentYear","currentMonth","currentDayOfMonth","getHistoricalOverviewStats","extractHistoricalActionTypes","componentDidUpdate","prevProps","pluck","j","action","name","count","renderTimeSeries","dates","dateRange","layout","xaxis","autorange","range","rangeselector","buttons","label","step","stepmode","rangeslider","fixedrange","legend","orientation","margin","l","r","b","pad","keys","objectKeys","displayedData","domain","key","color","trace","mode","marker","offsetgroup","len","yaxis","titlefont","tickfont","overlaying","position","style","width","height","textAlign","marginTop","Fragment","config","displayModeBar","displaylogo","modeBarButtonsToRemove","modeBarButtonsToAdd","icon","click","gd","blob","Blob","JSON","stringify","saveAs","useResizeHandler","onClick","marginLeft","renderDiskUsage","database","fsUsedSize","fsTotalSize","usedSpace","round","freeSpace","values","labels","plot_bgcolor","paper_bgcolor","autosize","renderDatabaseStats","storageSize","dataSize","objects","avgObjSize","variant","fontSize","padding","renderDailyStatistics","lastHourActiveUsers","float","marginRight","renderPlotButton","renderActionTypes","placement","overlay","id","className","top","right","placeholder","onChange","handleFilterChange","striped","hover","size","clickHandler","newDisplayInPlot","render","nUsers","nNamespaces","nLessons","nCohorts","nSessionData","nFiles","nEvents","nTickets","overviewPanel","sm","md","server","renderExplorer","propTypes","PropTypes","defaultProps","withTranslation","minWidth","marginBottom","disabled","cursor","DashboardDataExplorer","asyncComponent"],"sourceRoot":""}