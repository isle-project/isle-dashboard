"use strict";(self.webpackChunkisle_dashboard=self.webpackChunkisle_dashboard||[]).push([[7659],{67575:function(e,t,n){n.r(t);var o=n(38603),s=n(32906),i=n(91532),r=n.n(i),a=n(38564),c=n.n(a),d=n(45014),p=n.n(d),m=n(13578),u=n.n(m),l=n(26516);function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const f=c()("isle:key-controls"),v=/^[a-z]$/i,y=["input","textarea"];class g extends o.Component{constructor(e){super(e),h(this,"addListeners",(()=>{const e=p()(this.props.actions);if(f(`Add keydown event listeners for ${this.props.container?"container":"document"}: ${e.join(", ")}`),this.props.container)try{s.findDOMNode(this.props.container).addEventListener("keydown",this.triggerEvent)}catch(t){f(t.message)}else document.addEventListener("keydown",this.triggerDocEvent)})),h(this,"removeListeners",(e=>{const t=p()(this.props.actions);if(f(`Remove keydown event listeners for ${e?"container":"document"}: ${t.join(", ")}`),e)try{s.findDOMNode(e).removeEventListener("keydown",this.triggerEvent)}catch(n){f(n.message)}document.removeEventListener("keydown",this.triggerDocEvent)})),h(this,"triggerEvent",(e=>{const t=e.key;f(`Received key press for container: ${t}`);const n=this.props.actions[t],o=e.ctrlKey||e.shiftKey||e.altKey||e.metaKey;if(document.activeElement===this.props.container&&!o&&u()(n)){if(v.test(t)&&document.activeElement!==document.body){const e=document.activeElement;if(e&&(-1!==y.indexOf(e.tagName.toLowerCase())||e.isContentEditable)||"CANVAS"===e.tagName)return}e.preventDefault(),e.stopPropagation(),n(e)}})),h(this,"triggerDocEvent",(e=>{const t=e.key,n=e.ctrlKey||e.shiftKey||e.altKey||e.metaKey;f(`Received key press for document: ${t}`);const o=this.props.actions[t];if(!n&&u()(o)){if(v.test(t)&&document.activeElement!==document.body){const e=document.activeElement;if(e&&(-1!==y.indexOf(e.tagName.toLowerCase())||e.isContentEditable)||"CANVAS"===e.tagName)return}e.preventDefault(),e.stopPropagation(),o(e)}}))}componentDidMount(){f("Component has mounted..."),this.addListeners()}componentDidUpdate(e){this.props.container!==e.container&&(f("Container has changed, re-attach event listeners..."),this.removeListeners(e.container),this.addListeners())}componentWillUnmount(){f("Component has unmounted..."),this.removeListeners()}render(){return null}}g.defaultProps={actions:{},container:null},g.propTypes={actions:r().objectOf(r().func),container:r().oneOfType([r().object,r().element])},g.contextType=l.Z,t.default=g}}]);
//# sourceMappingURL=KeyControls.93779d99.chunk.js.map