{"version":3,"sources":["actions/authentication.js","actions/cohort.js","actions/lesson.js","actions/notification.js","actions/settings.js","actions/user.js","components/spinner/index.js","constants/action_types.js","constants/languages.js","constants/server.js","helpers/axios.js","helpers/i18n.js","hooks/use-mount-effect/index.js","hooks/use-previous/index.js","reducers/admin.js","reducers/badges.js","reducers/cohorts.js","reducers/namespace.js","reducers/notification.js","reducers/translations.js","reducers/settings.js","reducers/gallery.js","reducers/search.js","reducers/user.js","reducers/index.js","containers/notification.js","components/language-switcher/index.js","components/footer-bar/index.js","containers/visible-footer-bar/index.js","containers/app.js","service_worker.js","index.js"],"names":[],"mappings":"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","file":"static/js/main.10ffeee2.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport server from 'constants/server';\nimport { addErrorNotification } from 'actions/notification.js';\nimport { loggedIn } from 'actions/user';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:authentication' );\n\n\n// FUNCTIONS //\n\n/**\n * Sanitizes the user object.\n *\n * @param {Object} user - user object\n * @returns {Array} sanitized user object and a boolean indicating whether the user object needs sanitizing on the server\n */\nconst sanitizeUser = ( user ) => {\n\t// Check for duplicated enrolled and owned namespaces:\n\tconst ownedNamespaces = user.ownedNamespaces;\n\tconst newOwnedNamespaces = [];\n\tlet ids = new Set();\n\tfor ( let i = 0; i < ownedNamespaces.length; i++ ) {\n\t\tif ( !ids.has( ownedNamespaces[ i ]._id ) ) {\n\t\t\tids.add( ownedNamespaces[ i ]._id );\n\t\t\tnewOwnedNamespaces.push( ownedNamespaces[ i ] );\n\t\t}\n\t}\n\tconst enrolledNamespaces = user.enrolledNamespaces;\n\tconst newEnrolledNamespaces = [];\n\tids = new Set();\n\tfor ( let i = 0; i < enrolledNamespaces.length; i++ ) {\n\t\tif ( !ids.has( enrolledNamespaces[ i ]._id ) ) {\n\t\t\tids.add( enrolledNamespaces[ i ]._id );\n\t\t\tnewEnrolledNamespaces.push( enrolledNamespaces[ i ] );\n\t\t}\n\t}\n\tconst needsSanitizing = newOwnedNamespaces.length !== ownedNamespaces.length ||\n\t\tnewEnrolledNamespaces.length !== enrolledNamespaces.length;\n\n\tif ( needsSanitizing ) {\n\t\tuser.ownedNamespaces = newOwnedNamespaces;\n\t\tuser.enrolledNamespaces = newEnrolledNamespaces;\n\t}\n\tdebug( 'Does user need sanitizing? '+needsSanitizing );\n\treturn [ user, needsSanitizing ];\n};\n\n\n// MAIN //\n\n/**\n * Makes a POST request to the server to sanitize the user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n * @returns {(Promise|null)} promise or null\n */\nexport const sanitizeRequest = ( dispatch, user ) => {\n\ttry {\n\t\treturn axios.post( server+'/sanitize_user', {\n\t\t\tid: user.id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to sanitize the user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to sanitize the user\n */\nexport const sanitizeRequestInjector = dispatch => {\n\treturn async ( user ) => {\n\t\tconst result = await sanitizeRequest( dispatch, user );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to fetch the user's credentials.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} obj - object with a `id` property and a `token` property\n * @returns {(Object|null)} user object or null\n */\nexport const fetchCredentials = async ( dispatch, obj ) => {\n\tif ( !obj.id || !obj.token ) {\n\t\treturn null;\n\t}\n\tdebug( 'Fetch user credentials...' );\n\tlocalStorage.setItem( 'ISLE_USER_'+server, JSON.stringify( obj ) );\n\ttry {\n\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\tid: obj.id\n\t\t});\n\t\tdebug( 'Fetched user credentials...' );\n\t\tlet user = res.data;\n\t\tif ( user.picture ) {\n\t\t\tuser.picture = server + '/avatar/' + user.picture;\n\t\t}\n\t\tuser = {\n\t\t\t...obj,\n\t\t\t...user\n\t\t};\n\t\tlet [ sanitizedUser, needsSanitizing ] = sanitizeUser( user );\n\t\tdispatch( loggedIn( user ) );\n\t\tif ( needsSanitizing ) {\n\t\t\tsanitizeRequest( dispatch, obj );\n\t\t}\n\t\treturn sanitizedUser;\n\t} catch ( err ) {\n\t\tdebug( 'Failed to fetch user credentials...' );\n\t\taddErrorNotification( dispatch, err );\n\t\treturn null;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to fetch the user's credentials with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to fetch the user's credentials\n */\nexport const fetchCredentialsInjector = dispatch => {\n\treturn async ( obj ) => {\n\t\tconst result = await fetchCredentials( dispatch, obj );\n\t\treturn result;\n\t};\n};\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport logger from 'debug';\r\nimport i18next from 'i18next';\r\nimport server from 'constants/server';\r\nimport { getLessons } from 'actions/lesson';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { ADD_ENROLLED_NAMESPACE, GET_ALL_COHORTS, RETRIEVED_COHORTS, RETRIEVED_ENROLLABLE_COHORTS } from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst debug = logger( 'isle-dashboard:actions:cohorts' );\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n * Returns an action for a new enrolled namespace.\r\n *\r\n * @param {Object} namespace - namespace object\r\n * @param {string} namespace._id - namespace ID\r\n * @param {string} namespace.title - namespace title\r\n * @param {string} namespace.description - namespace description\r\n * @param {Array} namespace.owners - namespace owners\r\n * @returns {Object} action\r\n */\r\nexport function addEnrolledNamespace({ title, owners, description, _id }) {\r\n\treturn {\r\n\t\ttype: ADD_ENROLLED_NAMESPACE,\r\n\t\tpayload: {\r\n\t\t\ttitle,\r\n\t\t\tdescription,\r\n\t\t\towners,\r\n\t\t\t_id\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action for retrieving all enrollable cohorts.\r\n *\r\n * @param {Array} cohorts - cohorts\r\n * @param {Object} user - user object\r\n * @returns {Object} action\r\n */\r\nexport function retrievedEnrollableCohorts( cohorts, user ) {\r\n\treturn {\r\n\t\ttype: RETRIEVED_ENROLLABLE_COHORTS,\r\n\t\tpayload: {\r\n\t\t\tcohorts,\r\n\t\t\tuser\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action for retrieved cohorts.\r\n *\r\n * @param {Array} cohorts - cohorts\r\n * @param {Object} user - user object\r\n * @returns {Object} action\r\n */\r\nexport function retrievedCohorts( cohorts, user ) {\r\n\treturn {\r\n\t\ttype: RETRIEVED_COHORTS,\r\n\t\tpayload: {\r\n\t\t\tcohorts,\r\n\t\t\tuser\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action for retrieving all cohorts.\r\n *\r\n * @param {Array} cohorts - cohorts\r\n * @returns {Object} action\r\n */\r\nexport function retrievedAllCohorts( cohorts ) {\r\n\treturn {\r\n\t\ttype: GET_ALL_COHORTS,\r\n\t\tpayload: {\r\n\t\t\tcohorts\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Makes a GET request for retrieving all enrollable cohorts.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} user - user object\r\n */\r\nexport const getEnrollableCohorts = async ( dispatch, user ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_enrollable_cohorts' );\r\n\t\tconst cohorts = res.data.cohorts;\r\n\t\tdebug( 'Retrieved '+cohorts.length+' cohorts...' );\r\n\t\tdispatch( retrievedEnrollableCohorts( cohorts, user ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a GET request for retrieving all enrollable cohorts with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make GET request for retrieving all enrollable cohorts\r\n */\r\nexport const getEnrollableCohortsInjector = dispatch => {\r\n\treturn async ( user ) => {\r\n\t\tawait getEnrollableCohorts( dispatch, user );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request for retrieving all cohorts for the selected course.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.namespaceID - course ID\r\n */\r\nexport const getCohorts = async ( dispatch, { namespaceID }) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_cohorts?'+qs.stringify({ namespaceID }) );\r\n\t\tdispatch( retrievedCohorts( res.data.cohorts ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a GET request for retrieving all cohorts for the selected course with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make GET request for retrieving all cohorts for the selected course\r\n */\r\nexport const getCohortsInjector = ( dispatch ) => {\r\n\treturn async ({ namespaceID, userToken }) => {\r\n\t\tawait getCohorts( dispatch, { namespaceID, userToken });\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request for adding the user to the selected cohort.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} cohortID - cohort ID\r\n * @param {Object} namespace - namespace object\r\n */\r\nexport const addUserToCohort = async ( dispatch, cohortID, namespace ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/add_to_cohort', { cohortID });\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( addEnrolledNamespace( namespace ) );\r\n\t\tconst namespaceName = namespace.title;\r\n\t\tgetLessons( dispatch, namespaceName );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request for adding the user to the selected cohort with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make POST request for adding the user to the selected cohort\r\n */\r\nexport const addUserToCohortInjector = ( dispatch ) => {\r\n\treturn async ( cohortID, namespace ) => {\r\n\t\tawait addUserToCohort( dispatch, cohortID, namespace );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request for deleting the selected cohort.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} _id - cohort ID\r\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\r\n */\r\nexport const deleteCohort = async ( dispatch, _id, namespaceID ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/delete_cohort', { _id });\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\r\n\t\tif ( namespaceID ) {\r\n\t\t\tgetCohorts( dispatch, {\r\n\t\t\t\tnamespaceID\r\n\t\t\t});\r\n\t\t}\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request for deleting the selected cohort with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make POST request for deleting the selected cohort\r\n */\r\nexport const deleteCohortInjector = ( dispatch ) => {\r\n\treturn async ( _id, namespaceID ) => {\r\n\t\tawait deleteCohort( dispatch, _id, namespaceID );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request for creating a new cohort.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} cohort - cohort object\r\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\r\n */\r\nexport const createCohort = async ( dispatch, cohort, namespaceID ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/create_cohort', cohort );\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\r\n\t\tgetCohorts( dispatch, { namespaceID });\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request for creating a new cohort with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make POST request for creating a new cohort\r\n */\r\nexport const createCohortInjector = ( dispatch ) => {\r\n\treturn async ( cohort, namespaceID ) => {\r\n\t\tawait createCohort( dispatch, cohort, namespaceID );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request for updating the selected cohort.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} cohort - cohort object\r\n * @param {string} namespaceID - namespace identifier corresponding to the cohort\r\n */\r\nexport const updateCohort = async ( dispatch, cohort, namespaceID ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/update_cohort', { cohort });\r\n\t\tlet msg = res.data.message;\r\n\t\tlet notification;\r\n\t\tif ( res.data.newEmails && res.data.newEmails.length > 0 ) {\r\n\t\t\tnotification = {\r\n\t\t\t\tchildren: <div>\r\n\t\t\t\t\t<p>{msg}</p>\r\n\t\t\t\t\t<p>{i18next.t('common:email-invitations-sent')}</p>\r\n\t\t\t\t\t<p>{res.data.newEmails.join( '\\n' )}</p>\r\n\t\t\t\t</div>,\r\n\t\t\t\tlevel: 'success',\r\n\t\t\t\tautoDismiss: 0,\r\n\t\t\t\tdismissible: 'button'\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnotification = {\r\n\t\t\t\tmessage: msg,\r\n\t\t\t\tlevel: 'success'\r\n\t\t\t};\r\n\t\t}\r\n\t\taddNotification( dispatch, notification );\r\n\t\tdispatch( retrievedEnrollableCohorts( null ) );\r\n\t\tgetCohorts( dispatch, { namespaceID });\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request for updating the selected cohort with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make POST request for updating the selected cohort\r\n */\r\nexport const updateCohortInjector = ( dispatch ) => {\r\n\treturn async ( cohort, namespaceID ) => {\r\n\t\tawait updateCohort( dispatch, cohort, namespaceID );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request for retrieving the list of cohorts.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getAllCohorts = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_all_cohorts' );\r\n\t\tdispatch( retrievedAllCohorts( res.data.cohorts ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function making a POST request for retrieving the list of all cohorts with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make POST request for retrieving the list of all cohorts\r\n */\r\nexport const getAllCohortsInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getAllCohorts( dispatch );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport server from 'constants/server';\r\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { DELETED_LESSON, GET_ALL_LESSONS, GET_TEMPLATE_LESSONS, GET_ROOMS, UPDATED_LESSON, RETRIEVED_LESSONS, RETRIEVED_PUBLIC_LESSONS } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Returns an action signifying a lesson has been deleted.\r\n *\r\n * @param {string} lessonName - name of the lesson\r\n * @returns {Object} action\r\n */\r\nexport function deletedLesson( lessonName ) {\r\n\treturn {\r\n\t\ttype: DELETED_LESSON,\r\n\t\tpayload: {\r\n\t\t\tlessonName\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that a lesson has been updated.\r\n *\r\n * @param {string} lessonName - name of the lesson\r\n * @param {Object} props - properties of the lesson\r\n * @returns {Object} action\r\n */\r\nexport function updatedLesson( lessonName, props ) {\r\n\treturn {\r\n\t\ttype: UPDATED_LESSON,\r\n\t\tpayload: {\r\n\t\t\tlessonName,\r\n\t\t\tprops\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that lessons have been retrieved.\r\n *\r\n * @param {Array} lessons - lessons\r\n * @param {string} namespaceName - namespace name\r\n * @returns {Object} action\r\n */\r\nexport function retrievedLessons({ lessons, namespaceName }) {\r\n\treturn {\r\n\t\ttype: RETRIEVED_LESSONS,\r\n\t\tpayload: {\r\n\t\t\tlessons,\r\n\t\t\tnamespaceName\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that all lessons have been retrieved for an admin user.\r\n *\r\n * @param {Array} lessons - lessons\r\n * @returns {Object} action\r\n */\r\nexport function retrievedAllLessons( lessons ) {\r\n\treturn {\r\n\t\ttype: GET_ALL_LESSONS,\r\n\t\tpayload: {\r\n\t\t\tlessons\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that all lessons that may serve as templates have been retrieved.\r\n *\r\n * @param {Array} templateLessons - lessons that may serve as templates\r\n * @returns {Object} action\r\n */\r\nexport function retrievedTemplateLessons( templateLessons ) {\r\n\treturn {\r\n\t\ttype: GET_TEMPLATE_LESSONS,\r\n\t\tpayload: {\r\n\t\t\ttemplateLessons\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that all chat rooms have been retrieved.\r\n *\r\n * @param {Array} rooms - chat rooms\r\n * @returns {Object} action\r\n */\r\nexport function retrievedRooms( rooms ) {\r\n\treturn {\r\n\t\ttype: GET_ROOMS,\r\n\t\tpayload: {\r\n\t\t\trooms\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action indicating that all public lessons have been retrieved.\r\n *\r\n * @param {Array} lessons - lessons\r\n * @returns {Object} action\r\n */\r\nexport function retrievedPublicLessons( lessons ) {\r\n\treturn {\r\n\t\ttype: RETRIEVED_PUBLIC_LESSONS,\r\n\t\tpayload: {\r\n\t\t\tlessons\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Makes a POST request to retrieve all public lessons.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getPublicLessons = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_public_lessons' );\r\n\t\tdispatch( retrievedPublicLessons( res.data.lessons ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to retrieve all public lessons.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to retrieve all public lessons\r\n */\r\nexport const getPublicLessonsInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getPublicLessons( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to retrieve the ISLE file for a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - name of the lesson\r\n * @param {string} options.namespaceName - namespace name\r\n * @returns {(Object|null)} file data or null if the file does not exist\r\n */\r\nexport const getIsleFile = async ( dispatch, { lessonName, namespaceName }) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_isle_file?'+qs.stringify({\r\n\t\t\tlessonName,\r\n\t\t\tnamespaceName\r\n\t\t}) );\r\n\t\treturn res.data;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve the ISLE file for a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve the ISLE file for a lesson\r\n */\r\nexport const getIsleFileInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tconst file = await getIsleFile( dispatch, { lessonName, namespaceName });\r\n\t\treturn file;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to retrieve all lessons for a given namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} namespaceName - namespace name\r\n */\r\nexport const getLessons = async ( dispatch, namespaceName ) => {\r\n\tif ( namespaceName ) {\r\n\t\ttry {\r\n\t\t\tconsole.log( 'Retrieve lessons for namespace: ', namespaceName );\r\n\t\t\tconst res = await axios.get( server+'/get_lessons?'+qs.stringify({\r\n\t\t\t\tnamespaceName\r\n\t\t\t}) );\r\n\t\t\tlet lessons = res.data.lessons;\r\n\r\n\t\t\tconsole.log( 'Retrieved %s lessons.', lessons.length );\r\n\t\t\tlessons = lessons.map(( lesson, index ) => {\r\n\t\t\t\tlesson.colorIndex = index % 20;\r\n\t\t\t\tlesson.url = server+'/'+namespaceName+'/'+lesson.title;\r\n\t\t\t\tif ( lesson.lockUntil ) {\r\n\t\t\t\t\tlesson.lockUntil = new Date( lesson.lockUntil.time );\r\n\t\t\t\t}\r\n\t\t\t\tif ( !lesson.createdAt ) {\r\n\t\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\r\n\t\t\t\t}\r\n\t\t\t\tif ( !lesson.updatedAt ) {\r\n\t\t\t\t\tlesson.updatedAt = lesson.createdAt;\r\n\t\t\t\t}\r\n\t\t\t\treturn lesson;\r\n\t\t\t});\r\n\t\t\tdispatch( retrievedLessons({ lessons, namespaceName }) );\r\n\t\t} catch ( err ) {\r\n\t\t\taddErrorNotification( dispatch, err );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve all lessons for a given namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve all lessons for a given namespace\r\n */\r\nexport const getLessonsInjector = ( dispatch ) => {\r\n\treturn async ( namespaceName ) => {\r\n\t\tawait getLessons( dispatch, namespaceName );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to copy a lesson from a source namespace to a target namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.sourceName - source lesson name\r\n * @param {string} options.targetName - target lesson name\r\n * @param {string} options.source - source namespace name\r\n * @param {string} options.target - target namespace name\r\n * @returns {(Object|Error)} response data or an error if encountered\r\n */\r\nexport const copyLesson = async ( dispatch, { sourceName, target, targetName, source }) => {\r\n\tif ( sourceName && target && source ) {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post( server+'/copy_lesson', {\r\n\t\t\t\ttarget,\r\n\t\t\t\tsource,\r\n\t\t\t\tsourceName,\r\n\t\t\t\ttargetName\r\n\t\t\t});\r\n\t\t\taddNotification( dispatch, {\r\n\t\t\t\tmessage: res.data.message,\r\n\t\t\t\tlevel: 'success'\r\n\t\t\t});\r\n\t\t\treturn res;\r\n\t\t} catch ( err ) {\r\n\t\t\taddErrorNotification( dispatch, err );\r\n\t\t\treturn err;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to copy a lesson from a source namespace to a target namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to copy a lesson from a source namespace to a target namespace\r\n */\r\nexport const copyLessonInjector = ( dispatch ) => {\r\n\treturn async ({ sourceName, target, targetName, source }) => {\r\n\t\tawait copyLesson( dispatch, { sourceName, target, targetName, source } );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to copy all lessons from a source namespace to a target namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.source - source namespace name\r\n * @param {string} options.target - target namespace name\r\n * @returns {(Object|Error)} response data or an error if encountered\r\n */\r\nexport const copyNamespaceLessons = async ( dispatch, { target, source }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/copy_namespace_lessons', {\r\n\t\t\ttarget,\r\n\t\t\tsource\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to copy all lessons from a source namespace to a target namespace.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to copy all lessons from a source namespace to a target namespace\r\n */\r\nexport const copyNamespaceLessonsInjector = ( dispatch ) => {\r\n\treturn async ({ target, source }) => {\r\n\t\tconst res = await copyNamespaceLessons( dispatch, { target, source } );\r\n\t\treturn res;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to delete a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n * @returns {(Object|Error)} response data or an error if encountered\r\n */\r\nexport const deleteLesson = async ( dispatch, { lessonName, namespaceName }) => {\r\n\tif ( !namespaceName || !lessonName ) {\r\n\t\tconst err = new Error( 'Missing `namespaceName` or `lessonName`.' );\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/delete_lesson', {\r\n\t\t\tnamespaceName,\r\n\t\t\tlessonName\r\n\t\t});\r\n\t\tdispatch( deletedLesson( lessonName ) );\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to delete a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to delete a lesson\r\n */\r\nexport const deleteLessonInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tawait deleteLesson( dispatch, { lessonName, namespaceName } );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to show a lesson in the gallery of the dashboard.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n */\r\nexport const showLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/show_lesson', {\r\n\t\t\tnamespaceName,\r\n\t\t\tlessonName\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( updatedLesson( lessonName, { public: true }) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to show a lesson in the gallery of the dashboard.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to show a lesson in the gallery of the dashboard\r\n */\r\nexport const showLessonInGalleryInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tawait showLessonInGallery( dispatch, { lessonName, namespaceName });\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Makes a POST request to hide a lesson in the gallery of the dashboard.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n */\r\nexport const hideLessonInGallery = async ( dispatch, { lessonName, namespaceName }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/hide_lesson', {\r\n\t\t\tnamespaceName,\r\n\t\t\tlessonName\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( updatedLesson( lessonName, { public: false }) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to hide a lesson in the gallery of the dashboard.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to hide a lesson in the gallery of the dashboard\r\n */\r\nexport const hideLessonInGalleryInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tawait hideLessonInGallery( dispatch, { lessonName, namespaceName });\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to make a lesson available to users, i.e. set it to being active.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n */\r\nexport const activateLesson = async ( dispatch, { lessonName, namespaceName }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/activate_lesson?', {\r\n\t\t\tnamespaceName,\r\n\t\t\tlessonName\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( updatedLesson( lessonName, { active: true }) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to make a lesson available to users, i.e. set it to being active.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to make a lesson available to users, i.e. set it to being active\r\n */\r\nexport const activateLessonInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tawait activateLesson( dispatch, { lessonName, namespaceName });\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to make a lesson hidden from users, i.e. set it to being inactive.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n */\r\nexport const deactivateLesson = async ( dispatch, { lessonName, namespaceName }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/deactivate_lesson', {\r\n\t\t\tnamespaceName,\r\n\t\t\tlessonName\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch( updatedLesson( lessonName, { active: false }) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to make a lesson hidden from users, i.e. set it to being inactive\r\n */\r\nexport const deactivateLessonInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName }) => {\r\n\t\tawait deactivateLesson( dispatch, { lessonName, namespaceName });\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to update a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} options - request options\r\n * @param {string} options.lessonName - lesson name\r\n * @param {string} options.namespaceName - namespace name\r\n * @param {string} options.newTitle - new title\r\n * @param {string} options.newDescription - new description\r\n * @param {string} options.lockAfter - date on which the lesson should be made unavailable to users\r\n * @param {string} options.lockUntil - date on which the lesson should be made available to users\r\n * @param {boolean} options.template - controls whether the lesson shall be a template or not\r\n * @param {boolean} options.hideFromDashboard - controls whether the lesson shall be hidden from the dashboard (but may still be active and accessible)\r\n * @returns {boolean} true if the lesson was updated, false otherwise\r\n */\r\nexport const updateLesson = async ( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, template, hideFromDashboard }) => {\r\n\tif ( namespaceName && lessonName ) {\r\n\t\ttry {\r\n\t\t\tconst query = {\r\n\t\t\t\tnamespaceName,\r\n\t\t\t\tlessonName,\r\n\t\t\t\tnewTitle,\r\n\t\t\t\tnewDescription,\r\n\t\t\t\tlockAfter,\r\n\t\t\t\tlockUntil,\r\n\t\t\t\thideFromDashboard\r\n\t\t\t};\r\n\t\t\tif ( isBoolean( template ) ) {\r\n\t\t\t\tquery.template = template;\r\n\t\t\t}\r\n\t\t\tconst res = await axios.post( server+'/update_lesson', query );\r\n\t\t\tdispatch( deletedLesson( lessonName ) );\r\n\t\t\taddNotification( dispatch, {\r\n\t\t\t\tmessage: res.data.message,\r\n\t\t\t\tlevel: 'success'\r\n\t\t\t});\r\n\t\t\tgetLessons( dispatch, namespaceName );\r\n\t\t\treturn true;\r\n\t\t} catch ( err ) {\r\n\t\t\taddErrorNotification( dispatch, err );\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to update a lesson.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to update a lesson\r\n */\r\nexport const updateLessonInjector = ( dispatch ) => {\r\n\treturn async ({ lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, hideFromDashboard, template }) => {\r\n\t\tconst bool = await updateLesson( dispatch, { lessonName, namespaceName, newTitle, newDescription, lockAfter, lockUntil, hideFromDashboard, template });\r\n\t\treturn bool;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to retrieve all lessons for an admin user.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getAllLessons = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_all_lessons' );\r\n\t\tdispatch( retrievedAllLessons( res.data.lessons ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve all lessons for an admin user.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve all lessons for an admin user\r\n */\r\nexport const getAllLessonsInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getAllLessons( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to retrieve all template lessons.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getTemplateLessons = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_template_lessons' );\r\n\t\tdispatch( retrievedTemplateLessons( res.data.lessons ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve all template lessons.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve all template lessons\r\n */\r\nexport const getTemplateLessonsInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getTemplateLessons( dispatch );\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Makes a GET request to retrieve all chat rooms\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n */\r\nexport const getRooms = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_open_rooms' );\r\n\t\tdispatch( retrievedRooms( res.data.rooms ) );\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to retrieve all chat rooms\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to retrieve all chat rooms\r\n */\r\nexport const getRoomsInjector = ( dispatch ) => {\r\n\treturn async () => {\r\n\t\tawait getRooms( dispatch );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport { ADD_NOTIFICATION, ADD_ERROR_NOTIFICATION } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Dispatches an action object to add a notification.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} notification - Notification object\r\n */\r\nexport function addNotification( dispatch, notification ) {\r\n\tdispatch({\r\n\t\ttype: ADD_NOTIFICATION,\r\n\t\tpayload: notification\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a function to dispatch an action object to add a notification.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to dispatch action object to add a notification\r\n */\r\nexport const addNotificationInjector = dispatch => {\r\n\treturn notification => {\r\n\t\taddNotification( dispatch, notification );\r\n\t};\r\n};\r\n\r\n/**\r\n * Dispatches an action object to add an error notification.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Error} err - error object\r\n */\r\nexport function addErrorNotification( dispatch, err ) {\r\n\tlet msg;\r\n\tif ( err.response ) {\r\n\t\tmsg = 'Server response: ' + err.response.status + '.\\n';\r\n\t\tmsg += err.response.data;\r\n\t} else {\r\n\t\tmsg = err.message;\r\n\t}\r\n\tdispatch({\r\n\t\ttype: ADD_ERROR_NOTIFICATION,\r\n\t\tpayload: msg\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a function to dispatch an action object to add an error notification with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to dispatch action object to add an error notification\r\n */\r\nexport const addErrorNotificationInjector = dispatch => {\r\n\treturn message => {\r\n\t\taddErrorNotification( dispatch, message );\r\n\t};\r\n};\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport server from 'constants/server';\r\nimport i18next from 'i18next';\r\nimport { addNotification, addErrorNotification } from 'actions/notification';\r\nimport { UPDATED_SETTINGS, UPDATED_TRANSLATIONS, GET_CUSTOM_TRANSLATIONS, GET_SETTINGS_PUBLIC, GET_SETTINGS } from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\n/**\r\n * Makes a GET request to the server to retrieve the server instance settings.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getSettings = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_settings' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SETTINGS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to the server to retrieve the server instance settings with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to the server to retrieve the server instance settings\r\n */\r\nexport const getSettingsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getSettings( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a GET request to the server to retrieve the server instance's public settings.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getPublicSettings = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_public_settings' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SETTINGS_PUBLIC,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a GET request to the server to retrieve the server instance's public settings with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a GET request to the server to retrieve the server instance's public settings\r\n */\r\nexport const getPublicSettingsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getPublicSettings( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to update a server instance setting.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {string} name - name of the setting to update\r\n * @param {string} value - value of the setting to update\r\n * @returns {void}\r\n */\r\nexport const updateSettings = async ( dispatch, name, value ) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/update_settings', {\r\n\t\t\tname, value\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:updated'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATED_SETTINGS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to update a server instance setting with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to the server to update a server instance setting\r\n */\r\nexport const updateSettingsInjector = dispatch => {\r\n\treturn async ( name, value ) => {\r\n\t\tawait updateSettings( dispatch, name, value );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to add a custom translation.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} translation - the translation to add\r\n * @param {string} translation.language - the locale of the translation\r\n * @param {string} translation.ns - the namespace of the translation\r\n * @param {string} translation.key - the translation's key\r\n * @param {string} translation.value - the translation's value\r\n * @returns {(Object|Error)} the translation added or an error\r\n */\r\nexport const addCustomTranslation = async ( dispatch, { language, ns, key, value }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/add_custom_translation', {\r\n\t\t\tlanguage, ns, key, value\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:updated'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATED_TRANSLATIONS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to add a custom translation with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to the server to add a custom translation\r\n */\r\nexport const addCustomTranslationInjector = dispatch => {\r\n\treturn async ({ language, ns, key, value }) => {\r\n\t\tconst res = await addCustomTranslation( dispatch, { language, ns, key, value });\r\n\t\treturn res;\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to get all custom translations.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {void}\r\n */\r\nexport const getCustomTranslations = async ( dispatch ) => {\r\n\ttry {\r\n\t\tconst res = await axios.get( server+'/get_translations' );\r\n\t\tdispatch({\r\n\t\t\ttype: GET_CUSTOM_TRANSLATIONS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\treturn addErrorNotification( dispatch, err );\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to get all custom translations with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to the server to get all custom translations\r\n */\r\nexport const getCustomTranslationsInjector = dispatch => {\r\n\treturn async () => {\r\n\t\tawait getCustomTranslations( dispatch );\r\n\t};\r\n};\r\n\r\n/**\r\n * Makes a POST request to the server to remove a custom translation.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @param {Object} translation - the translation to remove\r\n * @param {string} translation.language - the locale of the translation\r\n * @param {string} translation.ns - the namespace of the translation\r\n * @param {string} translation.key - the translation's key\r\n * @returns {(Object|Error)} the server response or an error\r\n */\r\nexport const removeCustomTranslation = async ( dispatch, { language, ns, key }) => {\r\n\ttry {\r\n\t\tconst res = await axios.post( server+'/remove_custom_translation', {\r\n\t\t\tlanguage, ns, key\r\n\t\t});\r\n\t\taddNotification( dispatch, {\r\n\t\t\ttitle: i18next.t('common:removed'),\r\n\t\t\tmessage: res.data.message,\r\n\t\t\tlevel: 'success'\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: UPDATED_TRANSLATIONS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\treturn res;\r\n\t} catch ( err ) {\r\n\t\taddErrorNotification( dispatch, err );\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns a function to make a POST request to the server to remove a custom translation with a bound dispatch function.\r\n *\r\n * @param {Function} dispatch - dispatch function\r\n * @returns {Function} function to make a POST request to the server to remove a custom translation\r\n */\r\nexport const removeCustomTranslationInjector = dispatch => {\r\n\treturn async ({ language, ns, key }) => {\r\n\t\tconst res = await removeCustomTranslation( dispatch, { language, ns, key });\r\n\t\treturn res;\r\n\t};\r\n};\r\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport logger from 'debug';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport server from 'constants/server';\nimport { fetchCredentials } from 'actions/authentication.js';\nimport { getEnrollableCohorts } from 'actions/cohort.js';\nimport { addNotification, addErrorNotification } from 'actions/notification.js';\nimport { AUTHENTICATED, USER_PICTURE_MODIFIED, DELETED_USER, GET_USERS, LOGGED_IN, LOGGED_OUT, RECEIVED_TOKEN, REQUEST_TFA, USER_UPDATED, USER_UPDATED_BY_ADMIN } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle-dashboard:actions:user' );\n\n\n// EXPORTS //\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport function loggedIn( user ) {\n\treturn {\n\t\ttype: LOGGED_IN,\n\t\tpayload: {\n\t\t\temail: user.email,\n\t\t\tverifiedEmail: user.verifiedEmail,\n\t\t\tname: user.name,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t\tpreferredName: user.preferredName,\n\t\t\tpronouns: user.pronouns,\n\t\t\tenrolledNamespaces: user.enrolledNamespaces,\n\t\t\townedNamespaces: user.ownedNamespaces,\n\t\t\torganization: user.organization,\n\t\t\twriteAccess: user.writeAccess,\n\t\t\tadministrator: user.administrator,\n\t\t\tlessonData: user.lessonData,\n\t\t\tpicture: user.picture,\n\t\t\tcreatedAt: user.createdAt,\n\t\t\tupdatedAt: user.updatedAt,\n\t\t\tscore: user.score,\n\t\t\tspentTime: user.spentTime,\n\t\t\tlicensed: user.licensed,\n\t\t\tcustomFields: user.customFields,\n\t\t\tavailableCustomFields: user.availableCustomFields,\n\t\t\ttwoFactorAuth: user.twoFactorAuth\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has logged-in and a JSON web token has been received.\n *\n * @param {Object} options - function options\n * @param {string} options.token - JSON web token\n * @param {string} options.id - user id\n * @returns {Object} action\n */\nexport function receivedToken({ token, id }) {\n\treturn {\n\t\ttype: RECEIVED_TOKEN,\n\t\tpayload: {\n\t\t\ttoken,\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n* Returns an action signaling that a request for a two-factor authentication token has been made.\n*\n* @param {Object} options - function options\n* @param {string} options.email - user email\n* @param {string} options.password - user password\n* @returns {Object} action\n*/\nexport function requestTFA({ email, password }) {\n\treturn {\n\t\ttype: REQUEST_TFA,\n\t\tpayload: {\n\t\t\temail,\n\t\t\tpassword\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been logged-out.\n *\n * @returns {Object} action\n */\nexport function loggedOut() {\n\treturn {\n\t\ttype: LOGGED_OUT\n\t};\n}\n\n/**\n * Returns an action signaling that the user has been authenticated.\n *\n * @returns {Object} action\n */\nexport function authenticated() {\n\treturn {\n\t\ttype: AUTHENTICATED\n\t};\n}\n\n/**\n * Returns an action signaling that the user's picture has been updated.\n *\n * @param {Object} picture - user picture\n * @returns {Object} action\n */\nexport function updateUserPicture( picture ) {\n\treturn {\n\t\ttype: USER_PICTURE_MODIFIED,\n\t\tpayload: {\n\t\t\tpicture\n\t\t}\n\t};\n}\n\n/**\n * Returns an action signaling that the user's name or organization has been updated.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport const updatedUser = ( user ) => {\n\treturn {\n\t\ttype: USER_UPDATED,\n\t\tpayload: user\n\t};\n};\n\n/**\n * Returns an action signaling that a user has been updated by an administrator.\n *\n * @param {Object} user - user object\n * @returns {Object} action\n */\nexport const updatedUserByAdmin = ( user ) => {\n\treturn {\n\t\ttype: USER_UPDATED_BY_ADMIN,\n\t\tpayload: user\n\t};\n};\n\n/**\n * Makes a GET request to the server to retrieve list of users.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getUsers = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_users' );\n\t\tdispatch({\n\t\t\ttype: GET_USERS,\n\t\t\tpayload: {\n\t\t\t\tusers: res.data.users\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to retrieve list of users with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to retrieve list of users\n */\nexport const getUsersInjector = dispatch => {\n\treturn async () => {\n\t\tawait getUsers( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to the server to impersonate a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n * @param {string} options.password - user password\n */\nexport const impersonateUser = async ( dispatch, { id, password }) => {\n\tdebug( 'Impersonating user with id '+id );\n\ttry {\n\t\tconst res = await axios.post( server+'/impersonate', { id, password });\n\t\tconst user = await fetchCredentials( dispatch, {\n\t\t\tid: res.data.id\n\t\t});\n\t\t// Save user token to local storage:\n\t\tconst JWT = {\n\t\t\ttoken: res.data.token,\n\t\t\tid: res.data.id\n\t\t};\n\t\tconst userVal = 'ISLE_USER_' + server;\n\t\tlocalStorage.setItem( userVal, JSON.stringify( JWT ) );\n\t\tif ( user ) {\n\t\t\tgetEnrollableCohorts( dispatch, user );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to impersonate a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to impersonate a user\n */\nexport const impersonateUserInjector = dispatch => {\n\treturn async ({ id, password }) => {\n\t\tawait impersonateUser( dispatch, { id, password } );\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.id - user id\n */\nexport const deleteUser = async ( dispatch, { id }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_user', { id });\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('common:deleted'),\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_USER,\n\t\t\tpayload: {\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to delete a user\n */\nexport const deleteUserInjector = dispatch => {\n\treturn async ({ id }) => {\n\t\tawait deleteUser( dispatch, { id } );\n\t};\n};\n\n/**\n * Makes POST requests to the server to upload a user's profile picture.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Object} options.avatarData - user avatar picture data\n * @param {Object} options.thumbnailData - user thumbnail picture data\n */\nexport const uploadProfilePic = async ( dispatch, { avatarData, thumbnailData }) => {\n\ttry {\n\t\tlet res = await axios.post( server+'/upload_profile_pic', avatarData );\n\t\tconst message = res.data.message;\n\t\tlet filename = res.data.filename;\n\t\tfilename = server + '/avatar/' + filename;\n\t\tdispatch( updateUserPicture( filename ) );\n\n\t\tres = await axios.post( server+'/upload_thumbnail_pic', thumbnailData );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: i18next.t('profile-pic-title'),\n\t\t\tmessage,\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make POST requests to the server to upload a user's profile picture with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make POST requests to the server to upload a user's profile picture\n */\nexport const uploadProfilePicInjector = ( dispatch ) => {\n\treturn async ({ avatarData, thumbnailData }) => {\n\t\tawait uploadProfilePic( dispatch, { avatarData, thumbnailData });\n\t};\n};\n\n/**\n * Makes a POST request to the server to authenticate a user as an instructor.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.writeAccessToken - write access token to enable instructor access\n * @returns {boolean} true if the user is now an instructor, false otherwise\n */\nexport const authenticate = async ( dispatch, { writeAccessToken }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/set_write_access', { token: writeAccessToken });\n\t\tdispatch( authenticated() );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message+' You can now create your own courses on ISLE and have access to the gallery of public lessons.',\n\t\t\tlevel: 'success',\n\t\t\tautoDismiss: 10\n\t\t});\n\t\treturn true;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn false;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to authenticate a user as an instructor with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to authenticate a user as an instructor\n */\nexport const authenticateInjector = ( dispatch ) => {\n\treturn async ({ writeAccessToken }) => {\n\t\tconst result = await authenticate( dispatch, { writeAccessToken });\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to trigger an email to be sent to the user to change their password.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.email - user email\n */\nexport const forgotPassword = async ( dispatch, { email }) => {\n\ttry {\n\t\tawait axios.get( server+'/forgot_password?'+qs.stringify({ email }) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: 'Check your email inbox for a link to choose a new password.',\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger an email to be sent to the user to change their password with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger an email to be sent to the user to change their password\n */\nexport const forgotPasswordInjector = ( dispatch ) => {\n\treturn async ({ email }) => {\n\t\tawait forgotPassword( dispatch, { email });\n\t};\n};\n\n/**\n * Makes a POST request to the server to change a user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n */\nexport const updateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_user', form );\n\t\tdispatch( updatedUser( form ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to change a user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to change a user's data\n */\nexport const updateUserInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tawait updateUser( dispatch, form );\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new user.\n *\n * @param {Object} form - form data\n * @returns {Promise} promise that resolves to the server response\n */\nexport const createUser = ( form ) => {\n\treturn axios.post( server+'/create_user', form );\n};\n\n/**\n * Makes a POST request to the server to login a user.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {Object} server response\n */\nexport const handleLogin = async ( dispatch, form ) => {\n\tconst res = await axios.post( server+'/login', form );\n\tif ( res.data.message === 'finish-login-via-tfa' ) {\n\t\tdispatch( requestTFA( res.data ) );\n\t} else {\n\t\tdispatch( receivedToken( res.data ) );\n\t}\n\treturn res;\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user\n */\nexport const handleLoginInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLogin( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Makes a POST request to the server to login a user with a TFA code.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form data\n * @returns {(Object|Error)} server response or an error if the TFA code is invalid\n */\nexport const handleLoginTFA = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/login_tfa', form );\n\t\tdispatch( receivedToken( res.data ) );\n\t\treturn res;\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t\treturn err;\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to login a user with a TFA code with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to login a user with a TFA code\n */\nexport const handleLoginTFAInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tconst result = await handleLoginTFA( dispatch, form );\n\t\treturn result;\n\t};\n};\n\n/**\n * Restores a users' login session.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const restoreLogin = ( dispatch, user ) => {\n\tdispatch( loggedIn( user ) );\n};\n\n/**\n * Returns a function to restore a users' login session with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to restore a users' login session\n */\nexport const restoreLoginInjector = ( dispatch ) => {\n\treturn ( user ) => {\n\t\trestoreLogin( dispatch, user );\n\t};\n};\n\n/**\n * Logs a user out.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const logout = async ( dispatch ) => {\n\tdebug( 'Logging out the current user...' );\n\ttry {\n\t\tawait axios.post( server+'/invalidate_session' );\n\t} catch ( err ) {\n\t\tdebug( err.message );\n\t}\n\tlocalStorage.removeItem( 'ISLE_USER_'+server );\n\tdispatch( loggedOut() );\n};\n\n/**\n * Returns a function to log a user out with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to log a user out\n */\nexport const logoutInjector = ( dispatch ) => {\n\treturn () => {\n\t\tlogout( dispatch );\n\t};\n};\n\n/**\n * Makes a GET request to the server to check whether a user's locally stored data has to be updated.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const userUpdateCheck = async ( dispatch, user ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/user_update_check?'+qs.stringify({\n\t\t\tupdatedAt: user.updatedAt\n\t\t}) );\n\t\tdebug( 'Received response: '+res.data );\n\t\tif ( !res.data.hasMostRecent ) {\n\t\t\tconst res = await axios.post( server+'/credentials_dashboard', {\n\t\t\t\tid: user.id\n\t\t\t});\n\t\t\tlet newUser = res.data;\n\t\t\tif ( newUser.picture ) {\n\t\t\t\tnewUser.picture = server + '/avatar/' + newUser.picture;\n\t\t\t}\n\t\t\tnewUser = {\n\t\t\t\tid: user.id,\n\t\t\t\ttoken: user.token,\n\t\t\t\t...newUser\n\t\t\t};\n\t\t\tdebug( 'Updated user data...' );\n\t\t\tdispatch( loggedIn( newUser ) );\n\t\t}\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to the server to check whether a user's locally stored data has to be updated with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a GET request to the server to check whether a user's locally stored data has to be updated\n */\nexport const userUpdateCheckInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait userUpdateCheck( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server to confirm a user's email address.\n *\n * @param {string} token - user token\n * @returns {string} server response message or error message\n */\nexport const confirmEmail = async ( token ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/confirm_email', {\n\t\t\ttoken\n\t\t});\n\t\treturn res.data.message;\n\t} catch ( err ) {\n\t\tif ( err.response && err.response.data ) {\n\t\t\treturn err.response.data;\n\t\t}\n\t\treturn err.message;\n\t}\n};\n\n/**\n * Make a POST request to the server to trigger a new email for confirming a user's email address.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} user - user object\n */\nexport const resendConfirmEmail = async ( dispatch, user ) => {\n\ttry {\n\t\tawait axios.post( server+'/resend_confirm_email' );\n\t\taddNotification( dispatch, {\n\t\t\ttitle: 'Email sent',\n\t\t\tmessage: i18next.t('common:verification-email-sent'),\n\t\t\tlevel: 'success',\n\t\t\tposition: 'tl'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to trigger a new email for confirming a user's email address with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server to trigger a new email for confirming a user's email address\n */\nexport const resendConfirmEmailInjector = ( dispatch ) => {\n\treturn async ( user ) => {\n\t\tawait resendConfirmEmail( dispatch, user );\n\t};\n};\n\n/**\n * Makes a POST request to the server by an administrator to update an arbitrary user's data.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} form - form object with new user data\n * @param {string} [form.password] - user password\n * @param {boolean} [form.writeAccess] - boolean indicating whether the user should have instructor access\n * @param {boolean} [form.administrator] - boolean indicating whether the user should be an administrator\n * @param {boolean} [form.twoFactorAuth] - boolean indicating whether the user should have two factor authentication enabled\n * @param {boolean} [form.loginWithoutPassword] - boolean indicating whether the user should be able to login without a password\n * @param {string} [form.name] - user name\n * @param {string} [form.organization] - user organization\n * @param {Object} [form.customFields] - user custom fields\n */\nexport const adminUpdateUser = async ( dispatch, form ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/admin_update_user', form );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tdispatch( updatedUserByAdmin( form ) );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server by an administrator to update an arbitrary user's data with a bound dispatch function.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make a POST request to the server by an administrator to update an arbitrary user's data\n */\nexport const adminUpdateUserInjector = ( dispatch ) => {\n\treturn async ( form ) => {\n\t\tawait adminUpdateUser( dispatch, form );\n\t};\n};\n","/**\r\n* The MIT License (MIT)\r\n*\r\n* Copyright (c) 2015 Tobias Ahlin\r\n*\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n* this software and associated documentation files (the \"Software\"), to deal in\r\n* the Software without restriction, including without limitation the rights to\r\n* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n* the Software, and to permit persons to whom the Software is furnished to do so,\r\n* subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in all\r\n* copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\n\r\n\r\n// MAIN //\r\n\r\nconst Spinner = ({ className }) => {\r\n\treturn ( <div className={`sk-cube-grid ${className}`} >\r\n\t\t<div className=\"sk-cube sk-cube1\"></div>\r\n\t\t<div className=\"sk-cube sk-cube2\"></div>\r\n\t\t<div className=\"sk-cube sk-cube3\"></div>\r\n\t\t<div className=\"sk-cube sk-cube4\"></div>\r\n\t\t<div className=\"sk-cube sk-cube5\"></div>\r\n\t\t<div className=\"sk-cube sk-cube6\"></div>\r\n\t\t<div className=\"sk-cube sk-cube7\"></div>\r\n\t\t<div className=\"sk-cube sk-cube8\"></div>\r\n\t\t<div className=\"sk-cube sk-cube9\"></div>\r\n\t</div> );\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default Spinner;\r\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// EXPORTS //\n\nexport const ADD_ENROLLED_NAMESPACE = 'ADD_ENROLLED_NAMESPACE';\nexport const ADD_ERROR_NOTIFICATION = 'ADD_ERROR_NOTIFICATION';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const APPEND_CREATED_NAMESPACE = 'APPEND_CREATED_NAMESPACE';\nexport const AUTHENTICATED = 'AUTHENTICATED';\nexport const CHANGED_NAMESPACE = 'CHANGED_NAMESPACE';\nexport const COMPUTED_COMPLETIONS = 'COMPUTED_COMPLETIONS';\nexport const CREATED_ANNOUNCEMENT = 'CREATED_ANNOUNCEMENT';\nexport const CREATED_CUSTOM_FIELD = 'CREATED_CUSTOM_FIELD';\nexport const CREATED_BACKUP = 'CREATED_BACKUP';\nexport const CREATED_METRIC = 'CREATED_METRIC';\nexport const CREATED_ROLE = 'CREATED_ROLE';\nexport const CREATED_TICKET = 'CREATED_TICKET';\nexport const DELETED_BACKUP = 'DELETED_BACKUP';\nexport const DELETED_CURRENT_NAMESPACE = 'DELETED_CURRENT_NAMESPACE';\nexport const DELETED_CUSTOM_FIELD = 'DELETED_CUSTOM_FIELD';\nexport const DELETED_EVENT = 'DELETED_EVENT';\nexport const DELETED_FILE = 'DELETED_FILE';\nexport const DELETED_LESSON = 'DELETED_LESSON';\nexport const DELETED_METRIC = 'DELETED_METRIC';\nexport const DELETED_PROGRAM = 'DELETED_PROGRAM';\nexport const DELETED_ROLE = 'DELETED_ROLE';\nexport const DELETED_TICKET = 'DELETED_TICKET';\nexport const DELETED_USER = 'DELETED_USER';\nexport const DELETED_ANNOUNCEMENT = 'DELETED_ANNOUNCEMENT';\nexport const DISABLED_TFA = 'DISABLED_TFA';\nexport const EDITED_ANNOUNCEMENT = 'EDITED_ANNOUNCEMENT';\nexport const ENABLED_TFA = 'ENABLED_TFA';\nexport const FIELD_POSITION_DECREMENTED = 'FIELD_POSITION_DECREMENTED';\nexport const FIELD_POSITION_INCREMENTED = 'FIELD_POSITION_INCREMENTED';\nexport const GET_ALL_COHORTS = 'GET_ALL_COHORTS';\nexport const GET_ALL_FILES = 'GET_ALL_FILES';\nexport const GET_ALL_LESSONS = 'GET_ALL_LESSONS';\nexport const GET_ALL_NAMESPACES = 'GET_ALL_NAMESPACES';\nexport const GET_ALL_PROGRAMS = 'GET_ALL_PROGRAMS';\nexport const GET_ALL_ROLES = 'GET_ALL_ROLES';\nexport const GET_BACKUPS = 'GET_BACKUPS';\nexport const GET_EVENTS = 'GET_EVENTS';\nexport const GET_ALL_TICKETS = 'GET_ALL_TICKETS';\nexport const GET_COMPLETION_LESSON_REFS = 'GET_COMPLETION_LESSON_REFS';\nexport const GET_COMPLETION_TAGS = 'GET_COMPLETION_TAGS';\nexport const GET_COURSE_TICKETS = 'GET_COURSE_TICKETS';\nexport const GET_CUSTOM_FIELDS = 'GET_CUSTOM_FIELDS';\nexport const GET_CUSTOM_TRANSLATIONS = 'GET_CUSTOM_TRANSLATIONS';\nexport const GET_OVERVIEW_STATISTICS = 'GET_OVERVIEW_STATISTICS';\nexport const GET_HISTORICAL_OVERVIEW_STATISTICS = 'GET_HISTORICAL_OVERVIEW_STATISTICS';\nexport const GET_REQUEST_STATISTICS = 'GET_REQUEST_STATISTICS';\nexport const GET_ROOMS = 'GET_ROOMS';\nexport const GET_SETTINGS = 'GET_SETTINGS';\nexport const GET_SETTINGS_PUBLIC = 'GET_SETTINGS_PUBLIC';\nexport const GET_TEMPLATE_LESSONS = 'GET_TEMPLATE_LESSONS';\nexport const GET_TFA_QRCODE = 'GET_TFA_QRCODE';\nexport const GET_USERS = 'GET_USERS';\nexport const GET_USER_TICKETS = 'GET_USER_TICKETS';\nexport const LESSON_ORDER = 'LESSON_ORDER';\nexport const LESSON_ORDER_DIRECTION = 'LESSON_ORDER_DIRECTION';\nexport const RECEIVED_FILES = 'RECEIVED_FILES';\nexport const RECEIVED_LICENSE = 'RECEIVED_LICENSE';\nexport const RECEIVED_NAMESPACE_FILES = 'RECEIVED_NAMESPACE_FILES';\nexport const RECEIVED_TOKEN = 'RECEIVED_TOKEN';\nexport const REMOVED_LICENSE = 'REMOVED_LICENSE';\nexport const REQUEST_TFA = 'REQUEST_TFA';\nexport const RETRIEVED_BADGES = 'RETRIEVED_BADGES';\nexport const RETRIEVED_COHORTS = 'RETRIEVED_COHORTS';\nexport const RETRIEVED_LESSONS = 'RETRIEVED_LESSONS';\nexport const RETRIEVED_PUBLIC_LESSONS = 'RETRIEVED_PUBLIC_LESSONS';\nexport const SEARCH_PHRASE_SET = 'SEARCH_PHRASE_SET';\nexport const TICKET_CLOSED = 'TICKET_CLOSED';\nexport const TICKET_OPENED = 'TICKET_OPENED';\nexport const TICKET_MESSAGE_ADDED = 'TICKET_MESSAGE_ADDED';\nexport const TICKET_PRIORITY_UPDATED = 'TICKET_PRIORITY_UPDATED';\nexport const TRIGGERED_EVENT = 'TRIGGERED_EVENT';\nexport const UPDATED_LESSON = 'UPDATED_LESSON';\nexport const UPDATED_METRIC = 'UPDATED_METRIC';\nexport const UPDATED_OWNED_NAMESPACE = 'UPDATED_OWNED_NAMESPACE';\nexport const LOGGED_IN = 'LOGGED_IN';\nexport const LOGGED_OUT = 'LOGGED_OUT';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const USER_UPDATED_BY_ADMIN = 'USER_UPDATED_BY_ADMIN';\nexport const USER_PICTURE_MODIFIED = 'USER_PICTURE_MODIFIED';\nexport const USER_RECEIVED_BADGES = 'USER_RECEIVED_BADGES';\nexport const UPDATED_CUSTOM_FIELD = 'UPDATED_CUSTOM_FIELD';\nexport const UPDATED_ROLE = 'UPDATED_ROLE';\nexport const UPDATED_SETTINGS = 'UPDATED_SETTINGS';\nexport const UPDATED_STUDENT_PROGRESS = 'UPDATED_STUDENT_PROGRESS';\nexport const UPDATED_TRANSLATIONS = 'UPDATED_TRANSLATIONS';\nexport const RETRIEVED_ENROLLABLE_COHORTS = 'RETRIEVED_ENROLLABLE_COHORTS';\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// EXPORTS //\r\n\r\nexport const LANGUAGES = [\r\n\t{ value: 'en', label: 'english' },\r\n\t{ value: 'bg', label: 'bulgarian' },\r\n\t{ value: 'cs', label: 'czech' },\r\n\t{ value: 'da', label: 'danish' },\r\n\t{ value: 'de', label: 'german' },\r\n\t{ value: 'el', label: 'greek' },\r\n\t{ value: 'es', label: 'spanish' },\r\n\t{ value: 'et', label: 'estonian' },\r\n\t{ value: 'fi', label: 'finnish' },\r\n\t{ value: 'fr', label: 'french' },\r\n\t{ value: 'hu', label: 'hungarian' },\r\n\t{ value: 'it', label: 'italian' },\r\n\t{ value: 'ja', label: 'japanese' },\r\n\t{ value: 'lt', label: 'lithuanian' },\r\n\t{ value: 'lv', label: 'latvian' },\r\n\t{ value: 'nl', label: 'dutch' },\r\n\t{ value: 'pl', label: 'polish' },\r\n\t{ value: 'pt', label: 'portuguese' },\r\n\t{ value: 'ro', label: 'romanian' },\r\n\t{ value: 'ru', label: 'russian' },\r\n\t{ value: 'sk', label: 'slovak' },\r\n\t{ value: 'sl', label: 'slovenian' },\r\n\t{ value: 'sv', label: 'swedish' },\r\n\t{ value: 'zh', label: 'chinese' }\r\n];\r\n\r\nexport const LANGUAGE_CODES = [ 'en', 'bg', 'cs', 'da', 'de', 'el', 'es', 'et', 'fi', 'fr', 'hu', 'it', 'ja', 'lt', 'lv', 'nl', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'sv', 'zh' ];\r\n\r\nexport const languageLabel = ( code ) => {\r\n\tswitch ( code ) {\r\n\tcase 'en':\r\n\tdefault:\r\n\t\treturn 'english';\r\n\tcase 'bg':\r\n\t\treturn 'bulgarian';\r\n\tcase 'cs':\r\n\t\treturn 'czech';\r\n\tcase 'da':\r\n\t\treturn 'danish';\r\n\tcase 'de':\r\n\t\treturn 'german';\r\n\tcase 'el':\r\n\t\treturn 'greek';\r\n\tcase 'es':\r\n\t\treturn 'spanish';\r\n\tcase 'et':\r\n\t\treturn 'estonian';\r\n\tcase 'fi':\r\n\t\treturn 'finnish';\r\n\tcase 'fr':\r\n\t\treturn 'french';\r\n\tcase 'hu':\r\n\t\treturn 'hungarian';\r\n\tcase 'it':\r\n\t\treturn 'italian';\r\n\tcase 'ja':\r\n\t\treturn 'japanese';\r\n\tcase 'lt':\r\n\t\treturn 'lithuanian';\r\n\tcase 'lv':\r\n\t\treturn 'latvian';\r\n\tcase 'nl':\r\n\t\treturn 'dutch';\r\n\tcase 'pl':\r\n\t\treturn 'polish';\r\n\tcase 'pt':\r\n\t\treturn 'portuguese';\r\n\tcase 'ro':\r\n\t\treturn 'romanian';\r\n\tcase 'ru':\r\n\t\treturn 'russian';\r\n\tcase 'sk':\r\n\t\treturn 'slovak';\r\n\tcase 'sl':\r\n\t\treturn 'slovenian';\r\n\tcase 'sv':\r\n\t\treturn 'swedish';\r\n\tcase 'zh':\r\n\t\treturn 'chinese';\r\n\t}\r\n};\r\n\r\n/**\r\n* Returns the language description for a given language code.\r\n*\r\n* @param {string} code - the language code\r\n* @returns {string} the language description\r\n*/\r\nexport const languageDescription = ( code ) => {\r\n\tswitch ( code ) {\r\n\tcase 'en':\r\n\tdefault:\r\n\t\treturn 'English - EN';\r\n\tcase 'bg':\r\n\t\treturn 'Български - BG';\r\n\tcase 'cs':\r\n\t\treturn 'Česky - CS';\r\n\tcase 'da':\r\n\t\treturn 'Dansk - DA';\r\n\tcase 'el':\r\n\t\treturn 'Ελληνική - EL';\r\n\tcase 'es':\r\n\t\treturn 'Español - ES';\r\n\tcase 'et':\r\n\t\treturn 'Eesti - ET';\r\n\tcase 'de':\r\n\t\treturn 'Deutsch - DE';\r\n\tcase 'fi':\r\n\t\treturn 'Suomalainen - FI';\r\n\tcase 'fr':\r\n\t\treturn 'Français - FR';\r\n\tcase 'hu':\r\n\t\treturn 'Hungarian - HU';\r\n\tcase 'it':\r\n\t\treturn 'Italiano - IT';\r\n\tcase 'ja':\r\n\t\treturn 'にほんご - JA';\r\n\tcase 'lt':\r\n\t\treturn 'Lietuvių kalba - LT';\r\n\tcase 'lv':\r\n\t\treturn 'Latviešu - LV';\r\n\tcase 'nl':\r\n\t\treturn 'Nederlands - NL';\r\n\tcase 'pl':\r\n\t\treturn 'Polski - PL';\r\n\tcase 'pt':\r\n\t\treturn 'Porgtugês - PT';\r\n\tcase 'ro':\r\n\t\treturn 'Românesc - RO';\r\n\tcase 'ru':\r\n\t\treturn 'русский - RU';\r\n\tcase 'sk':\r\n\t\treturn 'Slovenská - SK';\r\n\tcase 'sl':\r\n\t\treturn 'Slovenski - SL';\r\n\tcase 'sv':\r\n\t\treturn 'Svenska - SV';\r\n\tcase 'zh':\r\n\t\treturn '中文 - ZH';\r\n\t}\r\n};\r\n\r\nexport default LANGUAGES;\r\n","\r\n/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport serverJSON from './../../config/server.json';\r\n\r\n\r\n// VARIABLES //\r\n\r\nexport const REMOTE = serverJSON.publicUrl;\r\nexport const LOCAL = 'http://localhost:17777';\r\n\r\n\r\n// MAIN //\r\n\r\nlet server;\r\nif ( process.env.NODE_ENV === 'development' ) { // eslint-disable-line no-process-env\r\n\tserver = process.env.REACT_APP_SERVER === 'remote' ? REMOTE : LOCAL; // eslint-disable-line no-process-env\r\n} else {\r\n\tserver = window.location.origin;\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default server;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport axios from 'axios';\r\nimport i18next from './i18n';\r\nimport { store } from './../index.js';\r\n\r\n\r\n// MAIN //\r\n\r\naxios.interceptors.request.use( ( config ) => {\r\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\r\n\tconst state = store.getState();\r\n\tconst token = state.user.token;\r\n\tif ( token ) {\r\n\t\tconfig.headers.Authorization = `JWT ${token}`;\r\n\t}\r\n\treturn config;\r\n});\r\n\r\nconst namespaceClient = axios.create();\r\nnamespaceClient.interceptors.request.use( ( config ) => {\r\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\r\n\tconst state = store.getState();\r\n\tconst token = state.user.token;\r\n\tif ( token ) {\r\n\t\tconfig.headers.Authorization = `JWT ${token}`;\r\n\t}\r\n\tconfig.headers[ 'X-Context-Level' ] = 'namespace';\r\n\r\n\tconst target = config.data.namespaceID || config.params.namespaceID || state.namespace._id;\r\n\tconfig.headers[ 'X-Context-Target' ] = target;\r\n\treturn config;\r\n});\r\n\r\nconst programClient = axios.create();\r\n\r\nconst lessonClient = axios.create();\r\nlessonClient.interceptors.request.use( ( config ) => {\r\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\r\n\tconst state = store.getState();\r\n\tconst token = state.user.token;\r\n\tif ( token ) {\r\n\t\tconfig.headers.Authorization = `JWT ${token}`;\r\n\t}\r\n\tconfig.headers[ 'X-Context-Level' ] = 'lesson';\r\n\r\n\tlet target = config.data.lessonID || config.params.lessonID;\r\n\ttarget += state.namespace._id;\r\n\tconfig.headers[ 'X-Context-Target' ] = target;\r\n\r\n\treturn config;\r\n});\r\n\r\nconst globalClient = axios.create();\r\nglobalClient.interceptors.request.use( ( config ) => {\r\n\tconfig.headers[ 'Accept-Language' ] = i18next.language;\r\n\tconst token = store.getState().user.token;\r\n\tif ( token ) {\r\n\t\tconfig.headers.Authorization = `JWT ${token}`;\r\n\t}\r\n\tconfig.headers[ 'X-Context-Level' ] = 'global';\r\n\tconfig.headers[ 'X-Context-Target' ] = true;\r\n\treturn config;\r\n});\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport const namespaceAxios = namespaceClient;\r\nexport const programAxios = programClient;\r\nexport const lessonAxios = lessonClient;\r\nexport const globalAxios = globalClient;\r\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend/cjs';\nimport Backend from 'i18next-chained-backend';\nimport server from 'constants/server';\nimport { store } from './../index.js';\n\n\n// MAIN //\n\ni18n.use( Backend )\n\t.use( LanguageDetector )\n\t.use( initReactI18next )\n\t.init({\n\t\tdebug: false,\n\t\tlng: localStorage.getItem( 'i18nextLng' ) || 'en',\n\t\tfallbackLng: 'en',\n\t\treturnEmptyString: false,\n\t\tbackend: {\n\t\t\tbackends: [\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi,\n\t\t\t\tHttpApi\n\t\t\t],\n\t\t\tbackendOptions: [\n\t\t\t\t{\n\t\t\t\t\tloadPath: server+'/dashboard/locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: server+'/locales/{{lng}}/{{ns}}.json'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tloadPath: 'https://cdn.jsdelivr.net/npm/@isle-project/locales/components/{{ns}}/{{lng}}.json'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\treact: {\n\t\t\tuseSuspense: false\n\t\t},\n\t\tinterpolation: {\n\t\t\tescapeValue: false // Not needed for React!\n\t\t}\n\t});\n\n\ni18n.store.on( 'added', function onLoaded( lng, ns ) {\n\tconst state = store.getState();\n\tconst translations = state.translations;\n\tconst custom = translations[ lng ][ ns ];\n\tif ( custom ) {\n\t\tconst keys = Object.keys( custom );\n\t\tif ( !i18n.store.data[ lng ][ ns+'_ORIGINAL' ] ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ] = {};\n\t\t}\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\ti18n.store.data[ lng ][ ns+'_ORIGINAL' ][ keys[ i ] ] = i18n.store.data[ lng ][ ns ][ keys[ i ] ];\n\t\t\ti18n.store.data[ lng ][ ns ][ keys[ i ] ] = custom[ keys[ i ] ];\n\t\t}\n\t}\n});\n\n\n// EXPORTS //\n\nexport default i18n;\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport { useEffect } from 'react';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n * A custom React hook that calls `useEffect` with a callback that is invoked once when the component is mounted.\r\n *\r\n * @param {Function} callback - callback to invoke once the component has mounted\r\n * @returns {void}\r\n */\r\nconst useMountEffect = ( callback ) => useEffect( callback, [] ); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default useMountEffect;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport { useEffect, useRef } from 'react';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n * Hook to use a previous value.\r\n *\r\n * @param {*} value - value for which to return the previous value\r\n * @returns {*} previous value\r\n */\r\nfunction usePrevious( value ) {\r\n\tconst ref = useRef();\r\n\tuseEffect( () => {\r\n\t\tref.current = value;\r\n\t}, [ value ] );\r\n\treturn ref.current;\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default usePrevious;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport objectKeys from '@stdlib/utils/keys';\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\tcohorts: [],\r\n\tevents: [],\r\n\tfiles: [],\r\n\tlessons: [],\r\n\tlessonsMap: {},\r\n\tnamespaces: [],\r\n\tprograms: [],\r\n\troles: [],\r\n\trooms: [],\r\n\ttickets: [],\r\n\tusers: [],\r\n\tstatistics: {},\r\n\trequestStatistics: [],\r\n\thistoricalStatistics: [],\r\n\tbackups: [],\r\n\tlicense: null,\r\n\tsettings: {}\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function admin( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.GET_USERS: {\r\n\t\tlet users = action.payload.users;\r\n\t\tusers = users.map( x => {\r\n\t\t\tconst keys = objectKeys( x.lessonData );\r\n\t\t\tlet chatMessages = 0;\r\n\t\t\tlet nActions = 0;\r\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\r\n\t\t\t\tconst key = keys[ i ];\r\n\t\t\t\tchatMessages += x.lessonData[ key ].chatMessages;\r\n\t\t\t\tconst types = objectKeys( x.lessonData[ key ].actionTypes );\r\n\t\t\t\tfor ( let j = 0; j < types.length; j++ ) {\r\n\t\t\t\t\tnActions += x.lessonData[ key ].actionTypes[ types[ j ] ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tx.nActions = nActions;\r\n\t\t\tx.chatMessages = chatMessages;\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tusers\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_COHORTS: {\r\n\t\tlet cohorts = action.payload.cohorts;\r\n\t\tcohorts = cohorts.map( x => {\r\n\t\t\tx.startDate = new Date( x.startDate );\r\n\t\t\tx.endDate = new Date( x.endDate );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcohorts\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_FILES: {\r\n\t\tlet files = action.payload.files;\r\n\t\tfiles = files.map( x => {\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tfiles\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_FILE: {\r\n\t\tconst files = state.files.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tfiles\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_LESSONS: {\r\n\t\tlet lessons = action.payload.lessons;\r\n\t\tconst lessonsMap = { ...state.lessonsMap };\r\n\t\tlessons = lessons.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\tlessonsMap[ x._id ] = x.title;\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlessons,\r\n\t\t\tlessonsMap\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_NAMESPACES: {\r\n\t\tlet namespaces = action.payload.namespaces;\r\n\t\tnamespaces = namespaces.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tnamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_PROGRAMS: {\r\n\t\tlet programs = action.payload.programs;\r\n\t\tprograms = programs.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tprograms\r\n\t\t});\r\n\t}\r\n\tcase types.GET_EVENTS: {\r\n\t\tlet events = action.payload.events;\r\n\t\tevents = events.map( x => {\r\n\t\t\tx.time = new Date( x.time );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tevents\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ROOMS: {\r\n\t\tlet rooms = action.payload.rooms;\r\n\t\trooms = rooms.map( x => {\r\n\t\t\tx.startTime = new Date( x.startTime );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\trooms\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_EVENT: {\r\n\t\tconst events = state.events.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tevents\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_USER: {\r\n\t\tconst users = state.users.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tusers\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_PROGRAM: {\r\n\t\tconst programs = state.programs.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tprograms\r\n\t\t});\r\n\t}\r\n\tcase types.TRIGGERED_EVENT: {\r\n\t\tconst events = state.events.slice();\r\n\t\tfor ( let i = 0; i < events.length; i++ ) {\r\n\t\t\tif ( events[ i ]._id === action.payload.id ) {\r\n\t\t\t\tevents[ i ].done = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tevents\r\n\t\t});\r\n\t}\r\n\tcase types.USER_UPDATED_BY_ADMIN: {\r\n\t\tlet users = state.users.slice();\r\n\t\tfor ( let i = 0; i < users.length; i++ ) {\r\n\t\t\tconst user = users[ i ];\r\n\t\t\tif ( user._id === action.payload.id ) {\r\n\t\t\t\tconst keys = objectKeys( action.payload );\r\n\t\t\t\tfor ( let j = 0; j < keys.length; j++ ) {\r\n\t\t\t\t\tconst key = keys[ j ];\r\n\t\t\t\t\tif ( key !== 'id' ) {\r\n\t\t\t\t\t\tuser[ key ] = action.payload[ key ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tusers\r\n\t\t});\r\n\t}\r\n\tcase types.GET_OVERVIEW_STATISTICS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tstatistics: action.payload.statistics\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_TICKETS: {\r\n\t\tlet tickets = action.payload.tickets;\r\n\t\ttickets = tickets.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\tx.updatedAt = new Date( x.updatedAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_TICKET: {\r\n\t\tconst tickets = state.tickets.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_OPENED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = false;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_PRIORITY_UPDATED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.priority = action.payload.priority;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_CLOSED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = true;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_MESSAGE_ADDED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tconst message = action.payload.message;\r\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\r\n\t\t\t\tticket.messages.unshift( message );\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.RECEIVED_LICENSE:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlicense: action.payload.license\r\n\t\t});\r\n\tcase types.REMOVED_LICENSE:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlicense: null\r\n\t\t});\r\n\tcase types.GET_HISTORICAL_OVERVIEW_STATISTICS: {\r\n\t\tconst statistics = action.payload.statistics.map( x => {\r\n\t\t\tx.createdAt = x.createdAt.substring( 0, x.createdAt.indexOf( 'T' ) );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\thistoricalStatistics: statistics\r\n\t\t});\r\n\t}\r\n\tcase types.GET_REQUEST_STATISTICS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\trequestStatistics: action.payload.statistics\r\n\t\t});\r\n\t}\r\n\tcase types.GET_BACKUPS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tbackups: action.payload.backups\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_BACKUP: {\r\n\t\tconst backups = state.backups.slice();\r\n\t\tbackups.push( action.payload.backup );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tbackups\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_BACKUP: {\r\n\t\tconst backups = state.backups.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tbackups\r\n\t\t});\r\n\t}\r\n\tcase types.GET_SETTINGS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tsettings: action.payload\r\n\t\t});\r\n\t}\r\n\tcase types.UPDATED_SETTINGS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tsettings: action.payload.settings\r\n\t\t});\r\n\t}\r\n\tcase types.GET_ALL_ROLES: {\r\n\t\tconst roles = action.payload.roles;\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\troles\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_ROLE: {\r\n\t\tconst roles = state.roles.slice();\r\n\t\troles.push( action.payload.role );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\troles\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_ROLE: {\r\n\t\tconst roles = state.roles.filter( x => x._id !== action.payload.id );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\troles\r\n\t\t});\r\n\t}\r\n\tcase types.UPDATED_ROLE: {\r\n\t\tconst { role } = action.payload;\r\n\t\tconst roles = state.roles.map( x => {\r\n\t\t\tif ( role._id === x._id ) {\r\n\t\t\t\treturn role;\r\n\t\t\t}\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\troles\r\n\t\t});\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function badges( state = null, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.RETRIEVED_BADGES: {\r\n\t\treturn action.payload.badges;\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\nimport isArray from '@stdlib/assert/is-array';\r\nimport isRegExpString from '@stdlib/assert/is-regexp-string';\r\nimport reFromString from '@stdlib/utils/regexp-from-string';\r\nimport contains from '@stdlib/assert/contains';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction titleCompare( a, b ) {\r\n\treturn ( '' + a.title ).localeCompare( b.title );\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function cohorts( state = null, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.RETRIEVED_ENROLLABLE_COHORTS: {\r\n\t\tlet cohorts = action.payload.cohorts;\r\n\t\tif ( !isArray( cohorts ) ) {\r\n\t\t\treturn cohorts;\r\n\t\t}\r\n\t\tcohorts = cohorts.filter( elem => {\r\n\t\t\tlet emailFilter = elem.emailFilter || '';\r\n\t\t\tif ( isRegExpString( emailFilter ) ) {\r\n\t\t\t\temailFilter = reFromString( emailFilter );\r\n\t\t\t\treturn emailFilter.test( action.payload.user.email );\r\n\t\t\t}\r\n\t\t\treturn contains( action.payload.user.email, emailFilter || '' );\r\n\t\t});\r\n\t\treturn cohorts.sort( titleCompare );\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport hasOwnProp from '@stdlib/assert/has-own-property';\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction titleCompare( a, b ) {\r\n\treturn ( '' + a.title ).localeCompare( b.title );\r\n}\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\t_id: null,\r\n\ttitle: '',\r\n\tdescription: '',\r\n\towners: '',\r\n\tenableTicketing: false,\r\n\tannouncements: [],\r\n\tlessons: [],\r\n\tcohorts: [],\r\n\tfiles: [],\r\n\townerFiles: [],\r\n\ttickets: [],\r\n\tcompletions: []\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function namespace( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.CHANGED_NAMESPACE: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\t_id: action.payload._id,\r\n\t\t\ttitle: action.payload.title,\r\n\t\t\tdescription: action.payload.description,\r\n\t\t\tannouncements: action.payload.announcements,\r\n\t\t\tenableTicketing: action.payload.enableTicketing,\r\n\t\t\towners: action.payload.owners,\r\n\t\t\tcohorts: action.payload.cohorts,\r\n\t\t\tcompletions: action.payload.completions\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_CURRENT_NAMESPACE: {\r\n\t\treturn initialState;\r\n\t}\r\n\tcase types.UPDATED_STUDENT_PROGRESS: {\r\n\t\tconst { cohort, email, lessonID, progress } = action.payload;\r\n\t\tconst cohorts = state.cohorts;\r\n\t\tfor ( let i = 0; i < cohorts.length; i++ ) {\r\n\t\t\tif ( cohorts[ i ].title === cohort ) {\r\n\t\t\t\tconst members = cohorts[ i ].members;\r\n\t\t\t\tfor ( let j = 0; j < members.length; j++ ) {\r\n\t\t\t\t\tif ( members[ j ].email === email ) {\r\n\t\t\t\t\t\tconst member = members[ j ];\r\n\t\t\t\t\t\tmember.lessonData[ lessonID ].progress = progress / 100;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, { cohorts });\r\n\t}\r\n\tcase types.RETRIEVED_LESSONS: {\r\n\t\tif ( action.payload.namespaceName === state.title ) {\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tlessons: action.payload.lessons\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\tcase types.RETRIEVED_COHORTS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcohorts: action.payload.cohorts.sort( titleCompare )\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_LESSON: {\r\n\t\tlet lessons = state.lessons.slice();\r\n\t\tlessons = lessons.filter( x => x.title !== action.payload.lessonName );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlessons\r\n\t\t});\r\n\t}\r\n\tcase types.UPDATED_LESSON: {\r\n\t\tlet lessons = state.lessons.slice();\r\n\t\tconst { props, lessonName } = action.payload;\r\n\t\tfor ( let i = 0; i < lessons.length; i++ ) {\r\n\t\t\tif ( lessons[ i ].title === lessonName ) {\r\n\t\t\t\tfor ( let key in props ) {\r\n\t\t\t\t\tif ( hasOwnProp( props, key ) ) {\r\n\t\t\t\t\t\tlessons[ i ][ key ] = props[ key ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlessons\r\n\t\t});\r\n\t}\r\n\tcase types.RECEIVED_NAMESPACE_FILES: {\r\n\t\tlet lessons = state.lessons;\r\n\t\tlet files = action.payload.files;\r\n\t\tfiles = files.map( file => {\r\n\t\t\tfile.updatedAt = new Date( file.updatedAt );\r\n\t\t\tfor ( let i = 0; i < lessons.length; i++ ) {\r\n\t\t\t\tif ( lessons[ i ]._id === file.lesson ) {\r\n\t\t\t\t\tfile.lesson = lessons[ i ];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn file;\r\n\t\t});\r\n\t\tconst newState = {};\r\n\t\tif ( action.payload.owner ) {\r\n\t\t\tnewState.ownerFiles = files;\r\n\t\t} else {\r\n\t\t\tnewState.files = files;\r\n\t\t}\r\n\t\treturn Object.assign({}, state, newState );\r\n\t}\r\n\tcase types.EDITED_ANNOUNCEMENT: {\r\n\t\tconst announcements = state.announcements.slice();\r\n\t\tfor (let i = 0; i < announcements.length; i++) {\r\n\t\t\tif (announcements[i].createdAt === action.payload.announcement.createdAt) {\r\n\t\t\t\tannouncements[i] = action.payload.announcement;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tannouncements: announcements\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_ANNOUNCEMENT: {\r\n\t\tconst announcements = state.announcements.slice();\r\n\t\tannouncements.unshift(action.payload.announcement);\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tannouncements: announcements\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_ANNOUNCEMENT: {\r\n\t\tconst announcements = state.announcements.slice();\r\n\t\tannouncements.splice(action.payload.index, 1);\r\n\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tannouncements: announcements\r\n\t\t});\r\n\t}\r\n\tcase types.GET_COURSE_TICKETS: {\r\n\t\tlet tickets = action.payload.tickets;\r\n\t\ttickets = tickets.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_OPENED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = false;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_CLOSED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = true;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_PRIORITY_UPDATED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.priority = action.payload.priority;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_MESSAGE_ADDED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tconst message = action.payload.message;\r\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\r\n\t\t\t\tticket.messages.unshift( message );\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.LOGGED_OUT: {\r\n\t\treturn initialState;\r\n\t}\r\n\tcase types.UPDATED_METRIC: {\r\n\t\tconsole.log( 'UPDATED_METRIC IN CURRENT NS', action.payload );\r\n\t\tif ( action.payload.level !== 'namespace' || action.payload.id !== state._id ) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\tconsole.log( 'Need to update...' );\r\n\t\tconst completions = state.completions.slice();\r\n\t\tconst metric = action.payload.metric;\r\n\t\tfor ( let i = 0; i < completions.length; i++ ) {\r\n\t\t\tif ( completions[ i ].name === metric.name ) {\r\n\t\t\t\tcompletions[ i ] = metric;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcompletions\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_METRIC: {\r\n\t\tif ( action.payload.level !== 'namespace' || action.payload.id !== state._id ) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\tconst completions = state.completions.slice();\r\n\t\tcompletions.push( action.payload.metric );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcompletions\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_METRIC: {\r\n\t\tconsole.log( 'DELETED_METRIC IN CURRENT NS', action.payload );\r\n\t\tif ( action.payload.level !== 'namespace' || action.payload.id !== state._id ) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\tconsole.log( 'Need to update...' );\r\n\t\tconst newCompletions = [];\r\n\t\tfor ( let i = 0; i < state.completions.length; i++ ) {\r\n\t\t\tif ( state.completions[ i ].name !== action.payload.name ) {\r\n\t\t\t\tnewCompletions.push( state.completions[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log( 'newCompletions', newCompletions );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcompletions: newCompletions\r\n\t\t});\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\tmessage: '',\r\n\tlevel: '',\r\n\tposition: 'tl',\r\n\tchildren: null,\r\n\ttime: null,\r\n\tautoDismiss: 5\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function namespace( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.ADD_NOTIFICATION: {\r\n\t\treturn Object.assign({}, initialState, {\r\n\t\t\t...action.payload,\r\n\t\t\ttime: new Date()\r\n\t\t});\r\n\t}\r\n\tcase types.ADD_ERROR_NOTIFICATION: {\r\n\t\treturn {\r\n\t\t\ttitle: 'Error encountered',\r\n\t\t\tmessage: action.payload,\r\n\t\t\tlevel: 'error',\r\n\t\t\tposition: 'tl',\r\n\t\t\tautoDismiss: 5,\r\n\t\t\ttime: new Date()\r\n\t\t};\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function translations( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\t\tcase types.GET_CUSTOM_TRANSLATIONS: {\r\n\t\t\treturn Object.assign( {}, state, action.payload );\r\n\t\t}\r\n\t\tcase types.UPDATED_TRANSLATIONS: {\r\n\t\t\treturn Object.assign( {}, state, action.payload.translations );\r\n\t\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function settings( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.GET_SETTINGS_PUBLIC: {\r\n\t\treturn Object.assign({}, state, action.payload );\r\n\t}\r\n\tcase types.UPDATED_SETTINGS: {\r\n\t\treturn Object.assign({}, state, action.payload.settings );\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport * as types from 'constants/action_types.js';\r\nimport server from 'constants/server';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\tlessons: null\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function namespace( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.RETRIEVED_PUBLIC_LESSONS: {\r\n\t\tlet lessons = action.payload.lessons;\r\n\t\tlessons = lessons.map( (lesson, index) => {\r\n\t\t\tlesson.colorIndex = index % 20;\r\n\t\t\tlesson.url = server+'/'+lesson.namespace+'/'+lesson.title;\r\n\t\t\tif ( !lesson.createdAt ) {\r\n\t\t\t\tlesson.createdAt = new Date( 0 ).toLocaleString();\r\n\t\t\t}\r\n\t\t\tif ( !lesson.updatedAt ) {\r\n\t\t\t\tlesson.updatedAt = lesson.createdAt;\r\n\t\t\t}\r\n\t\t\treturn lesson;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tlessons\r\n\t\t});\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport lowercase from '@stdlib/string/lowercase';\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\tphrase: null,\r\n\ttype: 'sequentially',\r\n\tdirection: 'ascending'\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function search( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.SEARCH_PHRASE_SET: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tphrase: lowercase( action.payload.phrase )\r\n\t\t});\r\n\t}\r\n\tcase types.LESSON_ORDER: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttype: action.payload.type\r\n\t\t});\r\n\t}\r\n\tcase types.LESSON_ORDER_DIRECTION: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tdirection: action.payload.direction\r\n\t\t});\r\n\t}\r\n\tcase types.LOGGED_OUT: {\r\n\t\treturn initialState;\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport groupBy from '@stdlib/utils/group-by';\r\nimport copy from '@stdlib/utils/copy';\r\nimport * as types from 'constants/action_types.js';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst initialState = {\r\n\tloggedIn: false,\r\n\temail: '',\r\n\tverifiedEmail: false,\r\n\tname: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\tpreferredName: '',\r\n\tpronouns: '',\r\n\torganization: '',\r\n\twriteAccess: false,\r\n\tadministrator: false,\r\n\tenrolledNamespaces: [],\r\n\townedNamespaces: [],\r\n\tlessonData: {},\r\n\tpicture: null,\r\n\tcreatedAt: null,\r\n\tupdatedAt: null,\r\n\tscore: null,\r\n\tspentTime: null,\r\n\tfiles: null,\r\n\tbadges: null,\r\n\tid: null,\r\n\ttoken: null,\r\n\ttickets: [],\r\n\tlicensed: false,\r\n\tcustomFields: null,\r\n\tavailableCustomFields: [],\r\n\ttwoFactorAuth: false,\r\n\trequestTFA: null,\r\n\ttemplateLessons: []\r\n};\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction getNamespace( namespaces, name ) {\r\n\tfor ( let i= 0; i < namespaces.length; i++ ) {\r\n\t\tif ( namespaces[i].title === name ) {\r\n\t\t\treturn namespaces[i];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default function user( state = initialState, action ) {\r\n\tswitch ( action.type ) {\r\n\tcase types.RECEIVED_TOKEN: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttoken: action.payload.token,\r\n\t\t\tid: action.payload.id\r\n\t\t});\r\n\t}\r\n\tcase types.LOGGED_IN: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\temail: action.payload.email,\r\n\t\t\tverifiedEmail: action.payload.verifiedEmail,\r\n\t\t\tname: action.payload.name,\r\n\t\t\tfirstName: action.payload.firstName,\r\n\t\t\tlastName: action.payload.lastName,\r\n\t\t\tpreferredName: action.payload.preferredName,\r\n\t\t\tpronouns: action.payload.pronouns,\r\n\t\t\tenrolledNamespaces: action.payload.enrolledNamespaces,\r\n\t\t\townedNamespaces: action.payload.ownedNamespaces,\r\n\t\t\torganization: action.payload.organization,\r\n\t\t\twriteAccess: action.payload.writeAccess,\r\n\t\t\tadministrator: action.payload.administrator,\r\n\t\t\tpicture: action.payload.picture,\r\n\t\t\tlessonData: action.payload.lessonData,\r\n\t\t\tcreatedAt: action.payload.createdAt,\r\n\t\t\tupdatedAt: action.payload.updatedAt,\r\n\t\t\tscore: action.payload.score,\r\n\t\t\tspentTime: action.payload.spentTime,\r\n\t\t\tlicensed: action.payload.licensed,\r\n\t\t\tcustomFields: action.payload.customFields,\r\n\t\t\tavailableCustomFields: action.payload.availableCustomFields,\r\n\t\t\ttwoFactorAuth: action.payload.twoFactorAuth,\r\n\t\t\tloggedIn: true\r\n\t\t});\r\n\t}\r\n\tcase types.AUTHENTICATED: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\twriteAccess: true\r\n\t\t});\r\n\t}\r\n\tcase types.LOGGED_OUT: {\r\n\t\treturn initialState;\r\n\t}\r\n\tcase types.USER_UPDATED: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tname: action.payload.name,\r\n\t\t\tfirstName: action.payload.firstName,\r\n\t\t\tlastName: action.payload.lastName,\r\n\t\t\tpreferredName: action.payload.preferredName,\r\n\t\t\tpronouns: action.payload.pronouns,\r\n\t\t\torganization: action.payload.organization,\r\n\t\t\tcustomFields: action.payload.customFields\r\n\t\t});\r\n\t}\r\n\tcase types.USER_PICTURE_MODIFIED: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tpicture: action.payload.picture\r\n\t\t});\r\n\t}\r\n\tcase types.APPEND_CREATED_NAMESPACE: {\r\n\t\tconst arr = state.ownedNamespaces.slice();\r\n\t\tarr.push( action.payload.namespace );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\townedNamespaces: arr\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_CURRENT_NAMESPACE: {\r\n\t\tconst arr = [];\r\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\r\n\t\t\tconst item = state.ownedNamespaces[ i ];\r\n\t\t\tif ( item._id !== action.payload.id ) {\r\n\t\t\t\tarr.push( item );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\townedNamespaces: arr\r\n\t\t});\r\n\t}\r\n\tcase types.RETRIEVED_LESSONS: {\r\n\t\tconst arr = state.enrolledNamespaces.slice();\r\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\r\n\t\t\tconst course = arr[ i ];\r\n\t\t\tif ( course.title === action.payload.namespaceName ) {\r\n\t\t\t\tarr[ i ].lessons = action.payload.lessons;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces: arr\r\n\t\t});\r\n\t}\r\n\tcase types.UPDATED_OWNED_NAMESPACE: {\r\n\t\tconst arr = state.ownedNamespaces.slice();\r\n\t\tfor ( let i = 0; i < arr.length; i++ ) {\r\n\t\t\tconst item = arr[ i ];\r\n\t\t\tif ( item._id === action.payload._id ) {\r\n\t\t\t\tarr[ i ] = action.payload;\r\n\t\t\t} else {\r\n\t\t\t\tarr[ i ] = item;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\townedNamespaces: arr\r\n\t\t});\r\n\t}\r\n\tcase types.ADD_ENROLLED_NAMESPACE: {\r\n\t\tconst arr = state.enrolledNamespaces.slice();\r\n\t\tarr.push( action.payload );\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces: arr\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_ANNOUNCEMENT: {\r\n\t\tconst namespaceName = action.payload.namespaceName;\r\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\r\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tns.announcements.unshift( action.payload.announcement );\r\n\t\t}\r\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\r\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tns.announcements.unshift( action.payload.announcement );\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces,\r\n\t\t\townedNamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.EDITED_ANNOUNCEMENT: {\r\n\t\tconst namespaceName = action.payload.namespaceName;\r\n\t\tconst announcement = action.payload.announcement;\r\n\t\tconst createdAt = announcement.createdAt;\r\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\r\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\r\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\r\n\t\t\t\t\tns.announcements[ i ] = announcement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\r\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tfor ( let i = 0; i < ns.announcements.length; i++ ) {\r\n\t\t\t\tif ( ns.announcements[ i ].createdAt === createdAt ) {\r\n\t\t\t\t\tns.announcements[ i ] = announcement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces,\r\n\t\t\townedNamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_ANNOUNCEMENT: {\r\n\t\tconst namespaceName = action.payload.namespaceName;\r\n\t\tconst enrolledNamespaces = copy( state.enrolledNamespaces );\r\n\t\tlet ns = getNamespace( enrolledNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tns.announcements.splice( action.payload.index, 1 );\r\n\t\t}\r\n\t\tconst ownedNamespaces = copy( state.ownedNamespaces );\r\n\t\tns = getNamespace( ownedNamespaces, namespaceName );\r\n\t\tif ( ns ) {\r\n\t\t\tns.announcements.splice( action.payload.index, 1 );\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces,\r\n\t\t\townedNamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.RECEIVED_FILES: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tfiles: groupBy( action.payload.files, ( v ) => {\r\n\t\t\t\treturn v.namespace;\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\tcase types.GET_USER_TICKETS: {\r\n\t\tlet tickets = action.payload.tickets;\r\n\t\ttickets = tickets.map( x => {\r\n\t\t\tx.createdAt = new Date( x.createdAt );\r\n\t\t\treturn x;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_TICKET: {\r\n\t\tconst tickets = state.tickets.slice();\r\n\t\ttickets.push({\r\n\t\t\t...action.payload,\r\n\t\t\tmessages: [],\r\n\t\t\tuser: {\r\n\t\t\t\tpicture: state.picture.substring( state.picture.lastIndexOf( '/' )+1 ),\r\n\t\t\t\tname: state.name,\r\n\t\t\t\temail: state.email\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_OPENED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = false;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_CLOSED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tticket.done = true;\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.TICKET_MESSAGE_ADDED: {\r\n\t\tconst tickets = state.tickets.map( ticket => {\r\n\t\t\tif ( ticket._id === action.payload.id ) {\r\n\t\t\t\tconst message = action.payload.message;\r\n\t\t\t\tmessage.picture = message.picture.substring( message.picture.lastIndexOf( '/' )+1 );\r\n\t\t\t\tticket.messages.unshift( message );\r\n\t\t\t}\r\n\t\t\treturn ticket;\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttickets\r\n\t\t});\r\n\t}\r\n\tcase types.USER_RECEIVED_BADGES: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tbadges: action.payload.badges\r\n\t\t});\r\n\t}\r\n\tcase types.GET_CUSTOM_FIELDS:\r\n\tcase types.FIELD_POSITION_DECREMENTED:\r\n\tcase types.FIELD_POSITION_INCREMENTED: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tavailableCustomFields: action.payload.customFields\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_CUSTOM_FIELD: {\r\n\t\tconst fields = [];\r\n\t\tfor ( let i = 0; i < state.availableCustomFields.length; i++ ) {\r\n\t\t\tconst item = state.availableCustomFields[ i ];\r\n\t\t\tif ( item._id !== action.payload.id ) {\r\n\t\t\t\tfields.push( item );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tavailableCustomFields: fields\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_CUSTOM_FIELD: {\r\n\t\tconst availableCustomFields = state.availableCustomFields.slice();\r\n\t\tavailableCustomFields.push({\r\n\t\t\t...action.payload\r\n\t\t});\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tavailableCustomFields\r\n\t\t});\r\n\t}\r\n\tcase types.ENABLED_TFA: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttwoFactorAuth: action.payload.verified\r\n\t\t});\r\n\t}\r\n\tcase types.DISABLED_TFA: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttwoFactorAuth: !action.payload.disabled\r\n\t\t});\r\n\t}\r\n\tcase types.REQUEST_TFA: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\trequestTFA: {\r\n\t\t\t\temail: action.payload.email,\r\n\t\t\t\tpassword: action.payload.password\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcase types.GET_TEMPLATE_LESSONS: {\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\ttemplateLessons: action.payload.templateLessons\r\n\t\t});\r\n\t}\r\n\tcase types.UPDATED_METRIC: {\r\n\t\tconsole.log( 'UPDATED_METRIC', action.payload );\r\n\t\tconst enrolledNamespaces = state.enrolledNamespaces.slice();\r\n\t\tconst ownedNamespaces = state.ownedNamespaces.slice();\r\n\t\tfor ( let i = 0; i < state.enrolledNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.enrolledNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst completions = ns.completions.slice();\r\n\t\t\tconst metric = action.payload.metric;\r\n\t\t\tfor ( let j = 0; j < completions.length; j++ ) {\r\n\t\t\t\tif ( completions[ j ].name === metric.name ) {\r\n\t\t\t\t\tcompletions[ j ] = metric;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tenrolledNamespaces[ i ].completions = completions;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.ownedNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst completions = ns.completions.slice();\r\n\t\t\tconst metric = action.payload.metric;\r\n\t\t\tfor ( let j = 0; j < completions.length; j++ ) {\r\n\t\t\t\tif ( completions[ j ].name === metric.name ) {\r\n\t\t\t\t\tcompletions[ j ] = metric;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\townedNamespaces[ i ].completions = completions;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces: enrolledNamespaces,\r\n\t\t\townedNamespaces: ownedNamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.CREATED_METRIC: {\r\n\t\tconst enrolledNamespaces = state.enrolledNamespaces.slice();\r\n\t\tconst ownedNamespaces = state.ownedNamespaces.slice();\r\n\t\tfor ( let i = 0; i < state.enrolledNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.enrolledNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst completions = ns.completions.slice();\r\n\t\t\tcompletions.push( action.payload.metric );\r\n\t\t\tenrolledNamespaces[ i ].completions = completions;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.ownedNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst completions = ns.completions.slice();\r\n\t\t\tcompletions.push( action.payload.metric );\r\n\t\t\townedNamespaces[ i ].completions = completions;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces: enrolledNamespaces,\r\n\t\t\townedNamespaces: ownedNamespaces\r\n\t\t});\r\n\t}\r\n\tcase types.DELETED_METRIC: {\r\n\t\tconsole.log( 'DELETED_METRIC', action.payload );\r\n\t\tconst enrolledNamespaces = state.enrolledNamespaces.slice();\r\n\t\tconst ownedNamespaces = state.ownedNamespaces.slice();\r\n\t\tfor ( let i = 0; i < state.enrolledNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.enrolledNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newCompletions = [];\r\n\t\t\tfor ( let i = 0; i < ns.completions.length; i++ ) {\r\n\t\t\t\tif ( ns.completions[ i ].name !== action.payload.name ) {\r\n\t\t\t\t\tnewCompletions.push( ns.completions[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tenrolledNamespaces[ i ].completions = newCompletions;\r\n\t\t\tconsole.log( 'newCompletions', newCompletions );\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tfor ( let i = 0; i < state.ownedNamespaces.length; i++ ) {\r\n\t\t\tconst ns = state.ownedNamespaces[ i ];\r\n\t\t\tif ( ns._id !== action.payload.id ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newCompletions = [];\r\n\t\t\tfor ( let i = 0; i < ns.completions.length; i++ ) {\r\n\t\t\t\tif ( ns.completions[ i ].name !== action.payload.name ) {\r\n\t\t\t\t\tnewCompletions.push( ns.completions[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\townedNamespaces[ i ].completions = newCompletions;\r\n\t\t\tconsole.log( 'newCompletions', newCompletions );\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tenrolledNamespaces: enrolledNamespaces,\r\n\t\t\townedNamespaces: ownedNamespaces\r\n\t\t});\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport { combineReducers } from 'redux';\r\nimport admin from './admin';\r\nimport badges from './badges';\r\nimport cohorts from './cohorts';\r\nimport namespace from './namespace';\r\nimport notification from './notification';\r\nimport translations from './translations';\r\nimport settings from './settings';\r\nimport gallery from './gallery';\r\nimport search from './search';\r\nimport user from './user';\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default () => combineReducers({\r\n\tadmin,\r\n\tbadges,\r\n\tcohorts,\r\n\tgallery,\r\n\tnamespace,\r\n\tnotification,\r\n\tsearch,\r\n\tsettings,\r\n\ttranslations,\r\n\tuser\r\n});\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport NotificationSystem from 'react-notification-system';\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst style = {\r\n\tNotificationItem: {\r\n\t\tDefaultStyle: {\r\n\t\t\tmargin: '20px 2px 2px 1px'\r\n\t\t},\r\n\t\tinfo: {\r\n\t\t\tcolor: 'black',\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t\tboxShadow: '0 0 4px darkslategray',\r\n\t\t\theight: '400px',\r\n\t\t\twidth: '400px',\r\n\t\t\tborderTop: 'none'\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n// MAIN //\r\n\r\nclass NotificationContainer extends Component {\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\t}\r\n\r\n\tcomponentDidUpdate( prevProps, prevState ) {\r\n\t\tconst notification = this.props.notification;\r\n\t\tconst prevNotification = prevProps.notification;\r\n\t\tif ( prevNotification.time !== notification.time ) {\r\n\t\t\tthis.notificationSystem.addNotification( notification );\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<NotificationSystem\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tref={( elem ) => {\r\n\t\t\t\t\tthis.notificationSystem = elem;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNotificationContainer.propTypes = {\r\n\tnotification: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapStateToProps( state ) {\r\n\treturn {\r\n\t\tnotification: state.notification\r\n\t};\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)( NotificationContainer );\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport i18next from 'i18next';\r\nimport { useTranslation } from 'react-i18next';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { LANGUAGE_CODES, languageDescription } from 'constants/languages';\r\nimport './language_switcher.css';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\n/**\r\n* Modal for selecting a language.\r\n*\r\n* @param {Object} props - component props\r\n* @param {Object} props.languages - object containing language codes\r\n* @param {Function} props.t - translation function\r\n* @param {Function} props.onHide - callback to hide the modal\r\n* @returns {ReactElement} modal\r\n*/\r\nconst SelectModal = ({ t, languages, onHide }) => {\r\n\tconst availableLanguages = languages || LANGUAGE_CODES;\r\n\tconst changeLanguageFactory = ( lng ) => {\r\n\t\treturn async () => {\r\n\t\t\tonHide();\r\n\t\t\tawait i18next.changeLanguage( lng );\r\n\t\t};\r\n\t};\r\n\treturn (\r\n\t\t<Modal show onHide={onHide} >\r\n\t\t\t<Modal.Header closeButton >\r\n\t\t\t\t<Modal.Title as=\"h3\">{t('choose-language')}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<ButtonGroup size=\"sm\" vertical style={{ width: '100%' }} >\r\n\t\t\t\t\t{availableLanguages.map( ( x, idx ) => {\r\n\t\t\t\t\t\treturn ( <Button\r\n\t\t\t\t\t\t\tkey={idx} variant=\"outline-primary\"\r\n\t\t\t\t\t\t\tonClick={changeLanguageFactory( x )}\r\n\t\t\t\t\t\t>{languageDescription( x )}</Button> );\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n* Renders a language switcher button in the bottom-right corner of the screen.\r\n*\r\n* @param {Object} props - component props\r\n* @param {Object} props.languages - object containing language codes\r\n* @returns {ReactElement} component\r\n*/\r\nconst LanguageSwitcher = ({ languages }) => {\r\n\tconst { t } = useTranslation( 'common' );\r\n\tconst [ showSelectModal, setShowSelectModal ] = useState( false );\r\n\tconst toggleSelectModal = () => {\r\n\t\tsetShowSelectModal( !showSelectModal );\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<OverlayTrigger placement=\"left\" overlay={<Tooltip id=\"language-switcher\">{t('change-language')}</Tooltip>} >\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={toggleSelectModal} className=\"language-switcher\"\r\n\t\t\t\t\tvariant=\"light\" size=\"sm\" aria-label={t('choose-language')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-globe\"></i>\r\n\t\t\t\t</Button>\r\n\t\t\t</OverlayTrigger>\r\n\t\t\t{showSelectModal ? <SelectModal languages={languages} t={t} onHide={toggleSelectModal} /> : null}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\n\r\n// PROPERTIES //\r\n\r\nLanguageSwitcher.propTypes = {\r\n\tlanguages: PropTypes.array\r\n};\r\n\r\nLanguageSwitcher.defaultProps = {\r\n\tlanguages: null\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default LanguageSwitcher;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport LanguageSwitcher from 'components/language-switcher';\r\nimport pkgJson from './../../../package.json';\r\nimport './footer_bar.css';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n* A footer bar component rendering the ISLE logo, copyright notice, dashboard version number, and links to the terms and privacy policy.\r\n*\r\n* @property {Object} props - component properties\r\n* @property {Object} props.settings - ISLE instance settings\r\n* @returns {ReactElement} component\r\n*/\r\nconst FooterBar = ({ settings }) => {\r\n\tconst { t } = useTranslation( [ 'footer_bar', 'common' ] );\r\n\treturn ( <div className=\"footer-bar\" >\r\n\t\t<div className=\"isle-logo\" >\r\n\t\t\t<img src=\"img/isle_logo.svg\" alt=\"ISLE Logo\" />\r\n\t\t\t<div className=\"footer-bar-copyright\" >\r\n\t\t\t\t© 2016-2021 The ISLE Authors. All rights reserved.\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"isle-terms\" >\r\n\t\t\t{' | '}\r\n\t\t\t<Link target=\"_blank\" to=\"/terms\" >{t('terms')}</Link>\r\n\t\t\t{' | '}\r\n\t\t\t<Link target=\"_blank\" to=\"/privacy\" >{t('privacy')}</Link>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t</div>\r\n\t\t<LanguageSwitcher\r\n\t\t\tlanguages={settings.availableLanguages}\r\n\t\t/>\r\n\t\t<div className=\"footer-dashboard-version\" >\r\n\t\t\tDashboard v{pkgJson.version}\r\n\t\t</div>\r\n\t</div> );\r\n};\r\n\r\n\r\n// PROPERTIES //\r\n\r\nFooterBar.propTypes = {\r\n\tsettings: PropTypes.object.isRequired\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default FooterBar;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FooterBar from 'components/footer-bar';\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction mapStateToProps( state ) {\r\n\treturn {\r\n\t\tsettings: state.settings\r\n\t};\r\n}\r\n\r\n\r\n// MAIN //\r\n\r\nconst VisibleFooterBar = connect( mapStateToProps )( FooterBar );\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default VisibleFooterBar;\r\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React, { lazy, Suspense, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logger from 'debug';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport capitalize from '@stdlib/string/capitalize';\r\nimport axios from 'axios';\r\nimport Spinner from 'components/spinner';\r\nimport usePrevious from 'hooks/use-previous';\r\nimport useMountEffect from 'hooks/use-mount-effect/index.js';\r\nimport server from 'constants/server';\r\nimport { fetchCredentialsInjector } from 'actions/authentication.js';\r\nimport { getEnrollableCohortsInjector } from 'actions/cohort.js';\r\nimport { getPublicSettingsInjector, getCustomTranslationsInjector } from 'actions/settings.js';\r\nimport { receivedToken } from 'actions/user.js';\r\nimport NotificationSystem from './notification.js';\r\nimport './app.css';\r\n\r\n\r\n// VARIABLES //\r\n\r\nimport FooterBar from 'containers/visible-footer-bar';\r\nconst AsyncTerms = lazy(() => import( 'containers/visible-terms' ));\r\nconst AsyncPrivacy = lazy(() => import( 'containers/visible-privacy' ));\r\nconst AsyncHeaderBar = lazy(() => import( 'containers/visible-header-bar' ));\r\nconst AsyncForgotPassword = lazy(() => import( 'containers/visible-forgot-password' ));\r\nconst AsyncCreateNamespace = lazy(() => import( 'containers/visible-create-namespace' ));\r\nconst AsyncEditNamespace = lazy(() => import( 'containers/visible-edit-namespace' ));\r\nconst AsyncNewPassword = lazy(() => import( 'containers/visible-new-password' ));\r\nconst AsyncCompleteRegistration = lazy(() => import( 'containers/visible-complete-registration' ));\r\nconst AsyncConfirmEmail = lazy(() => import( 'containers/visible-confirm-email' ));\r\nconst AsyncAdminPage = lazy(() => import( 'containers/visible-admin' ));\r\nconst AsyncLogin = lazy(() => import( 'containers/visible-login' ));\r\nconst AsyncLoginTFA = lazy(() => import( 'containers/visible-login-tfa' ));\r\nconst AsyncSignup = lazy(() => import( 'containers/visible-signup' ));\r\nconst AsyncNamespaceData = lazy(() => import( 'containers/visible-namespace-data' ));\r\nconst AsyncGallery = lazy(() => import( 'containers/visible-gallery' ));\r\nconst AsyncLessonsPage = lazy(() => import( 'containers/visible-lessons-page' ));\r\nconst AsyncProfilePage = lazy(() => import( 'containers/visible-profile-page' ));\r\nconst AsyncEnrollPage = lazy(() => import( 'containers/visible-enroll-page' ));\r\nconst USER_STORAGE_ID = 'ISLE_USER_'+server;\r\nconst RE_PUBLIC_PAGES = /(?:new-password|complete-registration|confirm-email|signup|login|login-tfa|terms|privacy)/;\r\nconst debug = logger( 'isle-dashboard' );\r\nconst RE_LEADING_PART = /^[\\s\\S]*\\//;\r\nconst RE_HYPHEN = /-([a-z])/;\r\n\r\n\r\n// FUNCTIONS //\r\n\r\n/**\r\n* Injects the application title into the document's title tag.\r\n*\r\n* @private\r\n* @returns {ReactElement} helmet component\r\n*/\r\nconst Title = () => {\r\n\tconst { pathname } = useLocation();\r\n\tlet title;\r\n\tif ( pathname ) {\r\n\t\ttitle = pathname.replace( RE_LEADING_PART, '' );\r\n\t\ttitle = title.replace( RE_HYPHEN, replacer );\r\n\t\ttitle = capitalize( title );\r\n\t}\r\n\tif ( title ) {\r\n\t\ttitle = `${title} | ISLE Dashboard`;\r\n\t} else {\r\n\t\ttitle = 'ISLE Dashboard';\r\n\t}\r\n\treturn (\r\n\t\t<Helmet>\r\n\t\t\t<title>{title}</title>\r\n\t\t</Helmet>\r\n\t);\r\n\r\n\t/**\r\n\t* Replaces a hyphen followed by a lowercase letter with a space and an uppercase letter.\r\n\t*\r\n\t* @private\r\n\t* @param {string} match - match string\r\n\t* @param {string} p1 - first capture group\r\n\t* @returns {string} replacement string\r\n\t*/\r\n\tfunction replacer( match, p1 ) {\r\n\t\treturn ' ' + p1.toUpperCase();\r\n\t}\r\n};\r\n\r\n/**\r\n* Generates a destination URL based off the query string or a sensible default and navigates to it.\r\n*\r\n* @private\r\n* @param {string} search - query string\r\n* @param {boolean} writeAccess - whether or not the user has write access\r\n* @param {Function} navigate - function that navigates to a provided URL\r\n* @returns {void}\r\n*/\r\nfunction goToDestination( search, writeAccess, navigate ) {\r\n\tlet url = new URLSearchParams( search ).get( 'url' );\r\n\tif ( !url ) {\r\n\t\turl = writeAccess ? '/dashboard/lessons' : '/dashboard/profile';\r\n\t}\r\n\tif ( url.indexOf( 'dashboard' ) !== -1 ) {\r\n\t\turl = url.replace( /\\/dashboard/, '' );\r\n\t\tdebug( 'Redirecting to dashboard page: %s', url );\r\n\t\tnavigate( url );\r\n\t} else {\r\n\t\tdebug( 'Destination is not a dashboard URL: %s', url );\r\n\t\twindow.location = server + url;\r\n\t}\r\n}\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n* The main application component.\r\n*\r\n* @param {Object} props - component properties\r\n* @param {boolean} props.isLoggedIn - whether or not the user is logged in\r\n* @param {Object} props.user - user object\r\n* @param {Object} props.settings - application settings\r\n* @param {Function} props.fetchCredentials - function to fetch credentials\r\n* @param {Function} props.getCustomTranslations - function to get custom translations\r\n* @param {Function} props.getPublicSettings - function to get public settings\r\n* @param {Function} props.getEnrollableCohorts - function to get enrollable cohorts\r\n* @param {Function} props.dispatch - redux dispatch function\r\n* @returns {ReactElement} component\r\n*/\r\nconst App =({ isLoggedIn, dispatch, getCustomTranslations, getPublicSettings, fetchCredentials, getEnrollableCohorts, user, settings }) => {\r\n\tconst oldIsLoggedIn = usePrevious( isLoggedIn );\r\n\tconst writeAccess = user.writeAccess;\r\n\tconst navigate = useNavigate();\r\n\tconst { pathname, search } = useLocation();\r\n\tuseMountEffect( async () => {\r\n\t\tdebug( 'Mounting application...' );\r\n\t\tgetCustomTranslations();\r\n\t\tgetPublicSettings();\r\n\t\tif ( isLoggedIn ) {\r\n\t\t\tdebug( 'User is logged in, check local storage...' );\r\n\t\t\tconst isle = localStorage.getItem( USER_STORAGE_ID );\r\n\t\t\tif ( !isle ) {\r\n\t\t\t\tdebug( 'User is logged in, but no local storage found -> write to local storage' );\r\n\t\t\t\tlocalStorage.setItem( USER_STORAGE_ID, JSON.stringify({\r\n\t\t\t\t\ttoken: user.token,\r\n\t\t\t\t\tid: user.id\r\n\t\t\t\t}) );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( !RE_PUBLIC_PAGES.test( pathname ) ) {\r\n\t\t\tlet isle = localStorage.getItem( USER_STORAGE_ID );\r\n\t\t\tif ( isle ) {\r\n\t\t\t\tdebug( 'User is not logged in, but local storage item found -> read from local storage...' );\r\n\t\t\t\tisle = JSON.parse( isle );\r\n\t\t\t\tconst user = await fetchCredentials( isle );\r\n\t\t\t\tif ( user ) {\r\n\t\t\t\t\tgetEnrollableCohorts( user );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await axios.get( server+'/saml-xmw/session' );\r\n\t\t\t\t\tif ( !res.data ) {\r\n\t\t\t\t\t\tthrow new Error( 'No data returned from server' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatch( receivedToken( res.data ) );\r\n\t\t\t\t\tconst user = await fetchCredentials( res.data );\r\n\t\t\t\t\tif ( user ) {\r\n\t\t\t\t\t\tgetEnrollableCohorts( user );\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch ( err ) {\r\n\t\t\t\t\tif ( settings.saml === 'enabled' ) {\r\n\t\t\t\t\t\tdebug( 'No SAML session found, redirecting to SAML login choice page...' );\r\n\t\t\t\t\t\twindow.location = server+'/saml-xmw/login-choice';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdebug( 'No SAML session found, redirecting to credentials login page...' );\r\n\t\t\t\t\t\tnavigate( '/login' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( pathname === '/' ) {\r\n\t\t\tnavigate( '/login' );\r\n\t\t}\r\n\t});\r\n\tuseEffect( () => {\r\n\t\tconst isLoggingOut = oldIsLoggedIn && !isLoggedIn;\r\n\t\tconst isLoggingIn = !oldIsLoggedIn && isLoggedIn;\r\n\t\tif ( isLoggingIn ) {\r\n\t\t\tif ( pathname === '/login-tfa' ) {\r\n\t\t\t\tgoToDestination( search, writeAccess, navigate );\r\n\t\t\t}\r\n\t\t\telse if ( pathname && pathname !== '/' && pathname !== '/login' ) {\r\n\t\t\t\tdebug( 'User has logged in, redirecting to: '+pathname );\r\n\t\t\t\tnavigate( pathname );\r\n\t\t\t} else {\r\n\t\t\t\tdebug( 'User has logged in, redirecting...' );\r\n\t\t\t\taxios.post( server+'/ensure_session' )\r\n\t\t\t\t\t.then( ( res ) => {\r\n\t\t\t\t\t\tgoToDestination( search, writeAccess, navigate );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.catch( ( err ) => {\r\n\t\t\t\t\t\tdebug( 'Encountered an error while ensuring session: '+err.message );\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( isLoggingOut ) {\r\n\t\t\tif ( settings.saml === 'enabled' ) {\r\n\t\t\t\twindow.location = server+'/saml-xmw/login-choice';\r\n\t\t\t} else {\r\n\t\t\t\tnavigate( '/login' );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (\r\n\t\t\tisLoggedIn && pathname &&\r\n\t\t\t( pathname === '/' || pathname === '/login' || pathname === '/login-tfa' )\r\n\t\t) {\r\n\t\t\tdebug( 'User is logged in, check for redirect...' );\r\n\t\t\taxios.post( server+'/ensure_session' )\r\n\t\t\t\t.then( ( res ) => {\r\n\t\t\t\t\tgoToDestination( search, writeAccess, navigate );\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( ( err ) => {\r\n\t\t\t\t\tdebug( 'Encountered an error while ensuring session: '+err.message );\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [ isLoggedIn, pathname, search, navigate, oldIsLoggedIn, writeAccess, settings ] );\r\n\tlet AuthenticationBarrier = null;\r\n\tif ( isLoggedIn ) {\r\n\t\tAuthenticationBarrier =\r\n\t\t\t<Fragment>\r\n\t\t\t\t{!RE_PUBLIC_PAGES.test( pathname ) ? <Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncHeaderBar />\r\n\t\t\t\t</Suspense> : null}\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/create-namespace\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncCreateNamespace />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/edit-namespace/:namespace\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncEditNamespace />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/namespace-data/:namespace/*\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncNamespaceData />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/profile\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncProfilePage />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t\tpath=\"/lessons\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncLessonsPage />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/lessons/:namespace\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncLessonsPage />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/gallery\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncGallery />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/enroll\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncEnrollPage />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/admin/*\"\r\n\t\t\t\t\t\telement={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t\t\t<AsyncAdminPage />\r\n\t\t\t\t\t\t</Suspense>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Routes>\r\n\t\t\t</Fragment>;\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Title />\r\n\t\t\t{AuthenticationBarrier}\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route index path=\"/\" element={<Spinner />} />\r\n\t\t\t\t<Route path=\"/login\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncLogin />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/login-tfa\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncLoginTFA />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/new-password\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncNewPassword />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/complete-registration\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncCompleteRegistration />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/confirm-email\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncConfirmEmail />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t{settings.allowUserRegistrations ? <Route path=\"/signup\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncSignup />\r\n\t\t\t\t</Suspense>} /> : null}\r\n\t\t\t\t<Route path=\"/forgot-password\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncForgotPassword />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/terms\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncTerms />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t\t<Route path=\"/privacy\" element={<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<AsyncPrivacy />\r\n\t\t\t\t</Suspense>} />\r\n\t\t\t</Routes>\r\n\t\t\t<FooterBar />\r\n\t\t\t<NotificationSystem />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n// PROPERTIES //\r\n\r\nApp.propTypes = {\r\n\tdispatch: PropTypes.func.isRequired,\r\n\tfetchCredentials: PropTypes.func.isRequired,\r\n\tgetCustomTranslations: PropTypes.func.isRequired,\r\n\tgetEnrollableCohorts: PropTypes.func.isRequired,\r\n\tgetPublicSettings: PropTypes.func.isRequired,\r\n\tisLoggedIn: PropTypes.bool.isRequired,\r\n\tsettings: PropTypes.object.isRequired,\r\n\tuser: PropTypes.object.isRequired\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\r\n\r\nfunction mapStateToProps( state ) {\r\n\treturn {\r\n\t\tisLoggedIn: state.user.loggedIn,\r\n\t\tuser: state.user,\r\n\t\tsettings: state.settings\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps( dispatch ) {\r\n\treturn {\r\n\t\tdispatch: dispatch,\r\n\t\tfetchCredentials: fetchCredentialsInjector( dispatch ),\r\n\t\tgetCustomTranslations: getCustomTranslationsInjector( dispatch ),\r\n\t\tgetPublicSettings: getPublicSettingsInjector( dispatch ),\r\n\t\tgetEnrollableCohorts: getEnrollableCohortsInjector( dispatch )\r\n\t};\r\n}\r\n","/**\r\n* MIT License\r\n*\r\n* Copyright (c) 2013-present, Facebook, Inc.\r\n*\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy\r\n* of this software and associated documentation files (the \"Software\"), to deal\r\n* in the Software without restriction, including without limitation the rights\r\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the Software is\r\n* furnished to do so, subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in all\r\n* copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n* SOFTWARE.\r\n*/\r\n\r\n/* eslint-disable no-process-env, no-console */\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register( config ) {\r\n\tif ( process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator ) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${window.location.origin}/dashboard/service-worker.js`;\r\n\t\t\tif ( isLocalhost ) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker( swUrl, config );\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW( swUrl, config );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW( swUrl, config ) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif ( installingWorker === null ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif ( installingWorker.state === 'installed' ) {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\tAt this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t\tbut the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t\tcontent until all client tabs are closed.\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\tAt this point, everything has been precached.\r\n\t\t\t\t\t\t\t\tIt's the perfect time to display a\r\n\t\t\t\t\t\t\t\t\"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error( 'Error during service worker registration:', error );\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' }\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType !== null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ( 'serviceWorker' in navigator ) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport 'react-dates/initialize';\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport localforage from 'localforage';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport createRootReducer from 'reducers';\nimport App from 'containers/app.js';\nimport * as serviceWorker from './service_worker.js';\nimport './helpers/axios';\nimport 'css/animations.css';\nimport 'css/index.css';\n\n\n// VARIABLES //\n\nconst persistConfig = {\n\tkey: 'root',\n\tblacklist: [ 'router', 'license', 'requestTFA' ],\n\tstorage: localforage\n};\nconst rootReducer = createRootReducer( history );\nconst persistedReducer = persistReducer( persistConfig, rootReducer );\n\nexport const store = createStore( persistedReducer );\nconst persistor = persistStore( store );\n\nconst container = document.getElementById( 'root' );\nconst root = createRoot( container );\n\n\n// MAIN //\n\nroot.render(\n\t<Provider store={store} >\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<HelmetProvider>\n\t\t\t\t<BrowserRouter basename=\"/dashboard\" >\n\t\t\t\t\t<App />\n\t\t\t\t</BrowserRouter>\n\t\t\t</HelmetProvider>\n\t\t</PersistGate>\n\t</Provider>\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}