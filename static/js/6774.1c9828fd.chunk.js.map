{"version":3,"file":"static/js/6774.1c9828fd.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/react-overlays/esm/Modal.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/dom-helpers/esm/isWindow.js","../node_modules/dom-helpers/esm/isDocument.js","../node_modules/react-overlays/esm/isOverflowing.js","../node_modules/react-overlays/esm/manageAriaHidden.js","../node_modules/react-overlays/esm/ModalManager.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  } // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n\n\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import isDocument from './isDocument';\nexport default function isWindow(node) {\n  if ('window' in node && node.window === node) return node;\n  if (isDocument(node)) return node.defaultView || false;\n  return false;\n}","export default function isDocument(element) {\n  return 'nodeType' in element && element.nodeType === document.DOCUMENT_NODE;\n}","import isWindow from 'dom-helpers/isWindow';\nimport ownerDocument from 'dom-helpers/ownerDocument';\n\nfunction isBody(node) {\n  return node && node.tagName.toLowerCase() === 'body';\n}\n\nfunction bodyIsOverflowing(node) {\n  var doc = isWindow(node) ? ownerDocument() : ownerDocument(node);\n  var win = isWindow(node) || doc.defaultView;\n  return doc.body.clientWidth < win.innerWidth;\n}\n\nexport default function isOverflowing(container) {\n  var win = isWindow(container);\n  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;\n}","var BLACKLIST = ['template', 'script', 'style'];\n\nvar isHidable = function isHidable(_ref) {\n  var nodeType = _ref.nodeType,\n      tagName = _ref.tagName;\n  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;\n};\n\nvar siblings = function siblings(container, exclude, cb) {\n  [].forEach.call(container.children, function (node) {\n    if (exclude.indexOf(node) === -1 && isHidable(node)) {\n      cb(node);\n    }\n  });\n};\n\nexport function ariaHidden(hide, node) {\n  if (!node) return;\n\n  if (hide) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\nexport function hideSiblings(container, _ref2) {\n  var dialog = _ref2.dialog,\n      backdrop = _ref2.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(true, node);\n  });\n}\nexport function showSiblings(container, _ref3) {\n  var dialog = _ref3.dialog,\n      backdrop = _ref3.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(false, node);\n  });\n}","import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n/**\n * Proper state management for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n\n    css(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    Object.assign(container.style, containerState.style);\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nexport default ModalManager;"],"names":["usePrevious","value","ref","useRef","useEffect","current","rHyphen","camelize","string","replace","_","chr","toUpperCase","size","scrollbarSize","recalc","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","manager","useModalManager","provided","modalManager","ModalManager","modal","dialog","backdrop","Object","assign","add","container","className","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","_ref$show","show","_ref$role","role","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","providedManager","containerRef","containerClassName","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","useWaitForDOMRef","isMounted","useMounted","prevShow","_useState","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","target","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","appear","unmountOnExit","_len","arguments","length","args","Array","_key","apply","backdropElement","BackdropTransition","onClick","propTypes","preventScroll","displayName","Manager","addClass","element","classList","hasClass","setAttribute","baseVal","replaceClassName","origClass","classToRemove","RegExp","removeClass","isWindow","node","window","nodeType","DOCUMENT_NODE","defaultView","isOverflowing","tagName","toLowerCase","win","innerWidth","bodyIsOverflowing","scrollHeight","clientHeight","BLACKLIST","siblings","exclude","cb","forEach","call","indexOf","ariaHidden","hide","removeAttribute","_temp","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","this","modals","containers","data","_proto","prototype","isContainerOverflowing","containerIndexFromModal","overflowing","arr","d","idx","some","i","setContainerStyle","containerState","paddingRight","parseInt","css","removeContainerStyle","modalIdx","containerIdx","push","_ref2","hideSiblings","classes","split","bind","splice","_ref3","showSiblings","_data$modals"],"sourceRoot":""}