{"version":3,"file":"static/js/HistogramMenu.a2390250.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/histogram.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useEffect, useState } from 'react';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport randomstring from '@isle-project/utils/randomstring/alphanumeric';\nimport Histogram from '@isle-project/components/plots/histogram';\nimport { DATA_EXPLORER_SHARE_HISTOGRAM, DATA_EXPLORER_HISTOGRAM } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:histogram' );\nconst DEFAULT_XBINS = {\n\tstart: null,\n\tsize: 100,\n\tend: null\n};\n\n\n// MAIN //\n\nconst HistogramMenu = ( props ) => {\n\tconst [ displayDensity, setDisplayDensity ] = useState( false );\n\tconst [ densityType, setDensityType ] = useState( null );\n\tconst [ bandwidthAdjust, setBandwidthAdjust ] = useState( 1 );\n\tconst [ variable, setVariable ] = useState( props.defaultValue || props.variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ groupMode, setGroupMode ] = useState( 'Overlay' );\n\tconst [ nCols, setNCols ] = useState( 2 );\n\tconst [ nBins, setNBins ] = useState( 10 );\n\tconst [ xBins, setXBins ] = useState( DEFAULT_XBINS );\n\tconst [ binStrategy, setBinStrategy ] = useState( 'Automatic' );\n\tconst { variables, groupingVariables, t } = props;\n\n\tuseEffect( () => {\n\t\tsetXBins( DEFAULT_XBINS );\n\t}, [ binStrategy ] );\n\n\tconst generateHistogram = () => {\n\t\tdebug( `Generate a histogram with ${nBins} bins` );\n\t\tconst plotId = randomstring( 6 );\n\t\tconst state = {\n\t\t\tvariable,\n\t\t\tgroup,\n\t\t\tgroupMode,\n\t\t\tdisplayDensity,\n\t\t\tdensityType,\n\t\t\tbinStrategy\n\t\t};\n\t\tif ( binStrategy === 'Select # of bins' ) {\n\t\t\tstate.nBins = nBins;\n\t\t}\n\t\tstate.xBins = xBins;\n\t\tif ( groupMode === 'Facets' ) {\n\t\t\tstate.nCols = nCols;\n\t\t}\n\t\tif ( densityType === 'Data-driven' ) {\n\t\t\tstate.bandwidthAdjust = bandwidthAdjust;\n\t\t}\n\t\tconst action = { ...state, plotId };\n\t\tconst onShare = () => {\n\t\t\tprops.session.addNotification({\n\t\t\t\ttitle: props.t('plot-shared'),\n\t\t\t\tmessage: props.t('plot-shared-message'),\n\t\t\t\tlevel: 'success',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t\tprops.logAction( DATA_EXPLORER_SHARE_HISTOGRAM, action );\n\t\t};\n\t\tconst output = <Histogram data={props.data} {...state} id={plotId} action={action} onShare={onShare} />;\n\t\tprops.logAction( DATA_EXPLORER_HISTOGRAM, action );\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Histogram')}\n\t\t\t\t<QuestionButton title={t('Histogram')} content={t('Histogram-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={5} >\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\t\t\tclearable={true}\n\t\t\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={4} >\n\t\t\t\t\t\t{ group ? <SelectInput\n\t\t\t\t\t\t\tlegend={`${t('mode')}:`}\n\t\t\t\t\t\t\tdefaultValue={groupMode}\n\t\t\t\t\t\t\toptions={[ 'Overlay', 'Facets' ]}\n\t\t\t\t\t\t\tonChange={setGroupMode}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={3} >\n\t\t\t\t\t\t{ group && groupMode === 'Facets' ? <NumberInput\n\t\t\t\t\t\t\tlegend={t('columns')}\n\t\t\t\t\t\t\tdefaultValue={2}\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tonChange={setNCols}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: 0\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\twidth: 70,\n\t\t\t\t\t\t\t\tmarginLeft: 0,\n\t\t\t\t\t\t\t\tmarginTop: 2\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> : null }\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<div>\n\t\t\t\t\t<SelectInput\n\t\t\t\t\t\tlegend={t('binning-strategy')}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t'Automatic',\n\t\t\t\t\t\t\t'Select # of bins',\n\t\t\t\t\t\t\t'Set bin width'\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdefaultValue={binStrategy}\n\t\t\t\t\t\tinline\n\t\t\t\t\t\tonChange={setBinStrategy}\n\t\t\t\t\t/>\n\t\t\t\t\t{ binStrategy !== 'Automatic' ?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('start')}\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.start}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.start = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ binStrategy === 'Select # of bins' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend={t('bins')}\n\t\t\t\t\t\t\t\t\tdefaultValue={nBins}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\tonChange={setNBins}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ binStrategy === 'Set bin width' ?\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tlegend={t('size')}\n\t\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\t\tdefaultValue={xBins.size}\n\t\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\t\tnewXBins.size = val;\n\t\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('end')}\n\t\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\t\tdefaultValue={xBins.end}\n\t\t\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\t\t\tconst newXBins = { ...xBins };\n\t\t\t\t\t\t\t\t\tnewXBins.end = val;\n\t\t\t\t\t\t\t\t\tsetXBins( newXBins );\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\t\t\t\twidth: 70\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div> : null }\n\t\t\t\t</div>\n\t\t\t\t{ props.showDensityOption ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('display-density')}\n\t\t\t\t\t\t\tdefaultValue={displayDensity}\n\t\t\t\t\t\t\tonChange={setDisplayDensity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\tlegend={t('overlay-density-line')}\n\t\t\t\t\t\t\toptions={[ 'Data-driven', 'Normal', 'Uniform', 'Exponential' ]}\n\t\t\t\t\t\t\tdisabled={!displayDensity}\n\t\t\t\t\t\t\tdefaultValue={densityType}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\t\t\tonChange={setDensityType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{densityType === 'Data-driven' ?\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={t('bandwidth-adjustment')}\n\t\t\t\t\t\t\t\tdefaultValue={bandwidthAdjust}\n\t\t\t\t\t\t\t\tmin={0} step={0.1}\n\t\t\t\t\t\t\t\tonChange={setBandwidthAdjust}\n\t\t\t\t\t\t\t/> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div> : null }\n\t\t\t\t<Button variant=\"primary\" block onClick={generateHistogram}>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nHistogramMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {},\n\tshowDensityOption: true,\n\tonSelected() {}\n};\n\nHistogramMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonSelected: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tsession: PropTypes.object.isRequired,\n\tshowDensityOption: PropTypes.bool,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default HistogramMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["debug","logger","DEFAULT_XBINS","start","size","end","HistogramMenu","props","useState","displayDensity","setDisplayDensity","densityType","setDensityType","bandwidthAdjust","setBandwidthAdjust","defaultValue","variables","variable","setVariable","group","setGroup","groupMode","setGroupMode","nCols","setNCols","nBins","setNBins","xBins","setXBins","binStrategy","setBinStrategy","groupingVariables","t","useEffect","as","title","content","legend","options","onChange","md","clearable","min","style","marginTop","inputStyle","width","marginLeft","inline","val","newXBins","step","showDensityOption","disabled","menuPlacement","variant","block","onClick","plotId","randomstring","state","action","output","data","id","onShare","session","addNotification","message","level","position","logAction","DATA_EXPLORER_SHARE_HISTOGRAM","DATA_EXPLORER_HISTOGRAM","onCreated","defaultProps","onSelected","popover","trigger","placement","rootClose","overlay","className","uid","generateUID","CheckboxInput","bind","useRef","useContext","SessionContext","value","setValue","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltip","tooltipPlacement","current","role","tabIndex","color","onKeyPress","onSpanChange","noop","max","PINF","NINF","NumberInput","propValue","onBlur","useTranslation","isNumber","valid","validity","parseFloat","isnan","finishChange","contains","splitted","split","isNull","createTooltip","padding","htmlFor","numbersOnly","name","paddingLeft","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","isString"],"sourceRoot":""}