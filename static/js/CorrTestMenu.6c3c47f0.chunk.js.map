{"version":3,"file":"static/js/CorrTestMenu.6c3c47f0.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/dashboard/index.js","../node_modules/@isle-project/components/data-explorer/menu/corrtest.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Dashboard = Loadable( () => import( /* webpackChunkName: \"Dashboard\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Dashboard;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport Dashboard from '@isle-project/components/dashboard';\nimport TeX from '@isle-project/components/tex';\nimport CorrTest from '@isle-project/components/tests/corrtest';\nimport { DATA_EXPLORER_TESTS_CORRTEST } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst CorrTestMenu = ( props ) => {\n\tconst calculateCorrTest = ( var1, var2, rho0, direction, alpha ) => {\n\t\tconst { data, showDecision } = props;\n\t\tconst output = <CorrTest data={data} var1={var1} var2={var2} rho0={rho0} direction={direction} alpha={alpha} showDecision={showDecision} />;\n\t\tprops.logAction( DATA_EXPLORER_TESTS_CORRTEST, {\n\t\t\tvar1, var2, rho0, direction, alpha, showDecision\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\tconst { quantitative, t } = props;\n\treturn (\n\t\t<Dashboard\n\t\t\ttitle={\n\t\t\t\t<span>\n\t\t\t\t\t{t('Correlation Test')}\n\t\t\t\t\t<QuestionButton title={t('Correlation Test')} content={t('Correlation Test-description')} />\n\t\t\t\t</span>\n\t\t\t}\n\t\t\tlabel={t('calculate')}\n\t\t\tautoStart={false}\n\t\t\tonGenerate={calculateCorrTest}\n\t\t>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('variable')}\n\t\t\t\tdefaultValue={quantitative[ 0 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('second-variable')}\n\t\t\t\tdefaultValue={quantitative[ 1 ]}\n\t\t\t\toptions={quantitative}\n\t\t\t/>\n\t\t\t<NumberInput\n\t\t\t\tlegend={<TeX raw=\"\\rho_0\" />}\n\t\t\t\tdefaultValue={0.0}\n\t\t\t\tstep=\"any\"\n\t\t\t\tmin={-1.0}\n\t\t\t\tmax={1.0}\n\t\t\t/>\n\t\t\t<SelectInput\n\t\t\t\tlegend={t('direction')}\n\t\t\t\tdefaultValue=\"two-sided\"\n\t\t\t\toptions={[ 'less', 'greater', 'two-sided' ]}\n\t\t\t/>\n\t\t\t<NumberInput\n\t\t\t\tlegend={<span>{t('significance-level')}<TeX raw=\"\\alpha\" /></span>}\n\t\t\t\tdefaultValue={0.05}\n\t\t\t\tmin={0.0}\n\t\t\t\tmax={1.0}\n\t\t\t\tstep=\"any\"\n\t\t\t/>\n\t\t</Dashboard>\n\t);\n};\n\n\n// PROPERTIES //\n\nCorrTestMenu.propTypes = {\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tshowDecision: PropTypes.bool\n};\n\nCorrTestMenu.defaultProps = {\n\tlogAction() {},\n\tshowDecision: true\n};\n\n\n// EXPORTS //\n\nexport default CorrTestMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["Dashboard","Loadable","CorrTestMenu","props","quantitative","t","title","content","label","autoStart","onGenerate","var1","var2","rho0","direction","alpha","data","showDecision","output","logAction","DATA_EXPLORER_TESTS_CORRTEST","onCreated","legend","defaultValue","options","raw","step","min","max","propTypes","PropTypes","defaultProps","QuestionButton","popover","id","trigger","placement","rootClose","overlay","size","variant","className","isRequired","tooltip","PINF","NINF","debug","logger","uid","generateUID","NumberInput","useRef","bind","value","propValue","onBlur","onChange","useTranslation","session","useContext","SessionContext","setValue","useState","state","useEffect","globalValue","global","lesson","isNumber","handleChange","useCallback","event","valid","target","validity","newValue","parseFloat","isnan","setState","finishChange","contains","splitted","split","isNull","createTooltip","inline","input","style","padding","htmlFor","current","type","numbersOnly","name","disabled","width","paddingLeft","marginLeft","inputStyle","onKeyPress","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString","tooltipPlacement"],"sourceRoot":""}