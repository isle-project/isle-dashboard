{"version":3,"file":"static/js/FullscreenButton.0deff25b.chunk.js","mappings":"mOAcA,MAAMA,UAAyBC,EAAAA,UAC9BC,c,UACCC,Q,EAOkB,KAClBC,KAAKC,SAAS,CACbC,YAAaF,KAAKG,MAAMD,e,EAVZ,sB,EAAA,M,sFAGbF,KAAKG,MAAQ,CACZD,YAAY,GAUdE,SACC,OACC,gBAAC,EAAAC,SAAD,KACC,gBAAC,IAASL,KAAKM,MACd,gBAAC,IAAD,CACCC,GAAG,qBACHC,UAAU,SACVC,QAAST,KAAKM,MAAMI,EAAE,uBAEtB,gBAAC,IAAD,CACCC,QAAQ,oBACRC,KAAK,KACLC,QAASb,KAAKc,iBACdC,MAAO,CACNC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,SAAU,MACPnB,KAAKM,MAAMS,OAEf,aAAYf,KAAKM,MAAMI,EAAE,uBAEzB,wBAAMU,UAAU,6BAIlBpB,KAAKG,MAAMD,WAAa,gBAAC,IAAD,CACxBmB,KAAMrB,KAAKG,MAAMD,WACjBoB,OAAQtB,KAAKc,iBACbS,gBAAgB,cAEhB,gBAAC,WAAD,CAAcC,aAAW,GACxB,gBAAC,UAAD,CAAaC,GAAG,MACdzB,KAAKM,MAAMoB,QAAU1B,KAAKM,MAAMI,EAAE,uBAGrC,gBAAC,SAAD,CACCK,MAAO,CACNY,OAAQ,IAAOC,OAAOC,cAGtB7B,KAAKM,MAAMwB,WAAa,gBAAC,IAAD,CAAMC,MAAI,EAClCX,UAAY,GAAEpB,KAAKM,MAAMc,mCAExBpB,KAAKM,MAAMyB,MACH/B,KAAKM,MAAMyB,MAEtB,gBAAC,WAAD,KACE/B,KAAKM,MAAM0B,OACZ,gBAAC,IAAD,CAAQnB,QAASb,KAAKc,kBACpBd,KAAKM,MAAMI,EAAE,YAGN,OASfd,EAAiBqC,UAAY,CAC5Bb,UAAWc,IAAAA,OACXR,OAAQQ,IAAAA,OACRH,KAAMG,IAAAA,KAAAA,WACNJ,WAAYI,IAAAA,KACZnB,MAAOmB,IAAAA,QAGRtC,EAAiBuC,aAAe,CAC/Bf,UAAW,GACXM,OAAQ,KACRI,YAAY,EACZf,MAAO,IAMR,WAAeqB,EAAAA,EAAAA,GAAiB,6BAAhC,CAAgExC","sources":["../node_modules/@isle-project/components/internal/fullscreen-button/main.js"],"sourcesContent":["// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Tooltip from '@isle-project/components/tooltip';\nimport Gate from '@isle-project/components/gate';\n\n\n// MAIN //\n\nclass FullscreenButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfullscreen: false\n\t\t};\n\t}\n\n\ttoggleFullscreen = () => {\n\t\tthis.setState({\n\t\t\tfullscreen: !this.state.fullscreen\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Gate {...this.props} >\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tid=\"fullscreen_tooltip\"\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\ttooltip={this.props.t('fullscreen-tooltip')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tonClick={this.toggleFullscreen}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t\t\t...this.props.style\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label={this.props.t('fullscreen-tooltip')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"fa fa-window-maximize\" />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Gate>\n\t\t\t\t{this.state.fullscreen ? <Modal\n\t\t\t\t\tshow={this.state.fullscreen}\n\t\t\t\t\tonHide={this.toggleFullscreen}\n\t\t\t\t\tdialogClassName=\"modal-100w\"\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title as=\"h1\">\n\t\t\t\t\t\t\t{this.props.header || this.props.t('fullscreen-header')}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 0.75 * window.innerHeight\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.wrapInCard ? <Card body\n\t\t\t\t\t\t\tclassName={`${this.props.className} panel-fullscreen-view`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t</Card> : this.props.body}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t{this.props.footer}\n\t\t\t\t\t\t<Button onClick={this.toggleFullscreen}>\n\t\t\t\t\t\t\t{this.props.t('close')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal> : null}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFullscreenButton.propTypes = {\n\tclassName: PropTypes.string,\n\theader: PropTypes.string,\n\tbody: PropTypes.node.isRequired,\n\twrapInCard: PropTypes.bool,\n\tstyle: PropTypes.object\n};\n\nFullscreenButton.defaultProps = {\n\tclassName: '',\n\theader: null,\n\twrapInCard: true,\n\tstyle: {}\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'internal/fullscreen-button' )( FullscreenButton );\n"],"names":["FullscreenButton","Component","constructor","super","this","setState","fullscreen","state","render","Fragment","props","id","placement","tooltip","t","variant","size","onClick","toggleFullscreen","style","position","top","right","fontSize","className","show","onHide","dialogClassName","closeButton","as","header","height","window","innerHeight","wrapInCard","body","footer","propTypes","PropTypes","defaultProps","withTranslation"],"sourceRoot":""}