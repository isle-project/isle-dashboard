{"version":3,"file":"static/js/FrequencyTableMenu.d30deaa8.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/data-explorer/menu/frequency_table.js","../node_modules/@isle-project/components/data-explorer/question_button.js","../node_modules/@isle-project/components/input/checkbox/main.js","../node_modules/@isle-project/components/input/checkbox/index.js","../node_modules/@isle-project/components/input/number/create_tooltip.js","../node_modules/@isle-project/components/input/number/main.js","../node_modules/@isle-project/components/input/number/index.js"],"sourcesContent":["// MODULES //\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport SelectInput from '@isle-project/components/input/select';\nimport NumberInput from '@isle-project/components/input/number';\nimport FrequencyTable from '@isle-project/components/tables/frequency-table';\nimport { DATA_EXPLORER_FREQUENCY_TABLE } from '@isle-project/constants/actions.js';\nimport QuestionButton from './../question_button.js';\n\n\n// MAIN //\n\nconst FrequencyTableMenu = ( props ) => {\n\tconst { defaultValue, variables, groupingVariables, t } = props;\n\n\tconst [ calculateRelative, setCalculateRelative ] = useState( false );\n\tconst [ calculateCounts, setCalculateCounts ] = useState( true );\n\tconst [ variable, setVariable ] = useState( defaultValue || variables[ 0 ] );\n\tconst [ group, setGroup ] = useState( null );\n\tconst [ nDecimalPlaces, setNDecimalPlaces ] = useState( 3 );\n\n\tconst generateFrequencyTable = () => {\n\t\tconst output = <FrequencyTable\n\t\t\tvariable={variable}\n\t\t\tgroup={group}\n\t\t\tcalculateCounts={calculateCounts}\n\t\t\tcalculateRelative={calculateRelative}\n\t\t\tnDecimalPlaces={nDecimalPlaces}\n\t\t\tdata={props.data}\n\t\t/>;\n\t\tprops.logAction( DATA_EXPLORER_FREQUENCY_TABLE, {\n\t\t\tvariable, group, calculateRelative, calculateCounts, nDecimalPlaces\n\t\t});\n\t\tprops.onCreated( output );\n\t};\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Header as=\"h4\">\n\t\t\t\t{t('Frequency Table')}\n\t\t\t\t<QuestionButton title={t('Frequency Table')} content={t('Frequency Table-description')} />\n\t\t\t</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('variable')}\n\t\t\t\t\tdefaultValue={variable}\n\t\t\t\t\toptions={variables}\n\t\t\t\t\tonChange={setVariable}\n\t\t\t\t/>\n\t\t\t\t<SelectInput\n\t\t\t\t\tlegend={t('group-by')}\n\t\t\t\t\toptions={groupingVariables}\n\t\t\t\t\tclearable={true}\n\t\t\t\t\tmenuPlacement=\"top\"\n\t\t\t\t\tonChange={setGroup}\n\t\t\t\t\ttooltip={t('freq-table-group-by-tooltip')}\n\t\t\t\t/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('counts')}\n\t\t\t\t\t\t\tdefaultValue={calculateCounts}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateCounts( !calculateCounts );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\tlegend={t('relative-frequency')}\n\t\t\t\t\t\t\tdefaultValue={calculateRelative}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetCalculateRelative( !calculateRelative );\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{ calculateRelative ? <p>{t('report-relative-frequencies')}\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tinline\n\t\t\t\t\t\twidth={50}\n\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tdefaultValue={nDecimalPlaces}\n\t\t\t\t\t\tonChange={setNDecimalPlaces}\n\t\t\t\t\t/>\n\t\t\t\t\t{t('decimal-places')}\n\t\t\t\t</p> : null }\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tblock\n\t\t\t\t\tonClick={generateFrequencyTable}\n\t\t\t\t\tdisabled={!calculateCounts && !calculateRelative}\n\t\t\t\t>\n\t\t\t\t\t{t('generate')}\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\n\n\n// PROPERTIES //\n\nFrequencyTableMenu.defaultProps = {\n\tdefaultValue: null,\n\tgroupingVariables: null,\n\tlogAction() {}\n};\n\nFrequencyTableMenu.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tdefaultValue: PropTypes.string,\n\tgroupingVariables: PropTypes.array,\n\tlogAction: PropTypes.func,\n\tonCreated: PropTypes.func.isRequired,\n\tvariables: PropTypes.array.isRequired\n};\n\n\n// EXPORTS //\n\nexport default FrequencyTableMenu;\n","// MODULES //\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport PopoverTitle from 'react-bootstrap/PopoverTitle';\nimport PopoverContent from 'react-bootstrap/PopoverContent';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\n// MAIN //\n\nconst QuestionButton = ( props ) => {\n\tconst popover = <Popover id=\"popover-positioned-right\">\n\t\t<PopoverTitle>{props.title}</PopoverTitle>\n\t\t<PopoverContent>{props.content}</PopoverContent>\n\t</Popover>;\n\treturn (\n\t\t<OverlayTrigger trigger={[ 'click', 'hover', 'focus' ]} placement=\"left\" rootClose overlay={popover}>\n\t\t\t<Button\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"outline-secondary\"\n\t\t\t\tclassName=\"question-button\"\n\t\t\t>\n\t\t\t\t<div className=\"fa fa-question\" />\n\t\t\t</Button>\n\t\t</OverlayTrigger>\n\t);\n};\n\nQuestionButton.propTypes = {\n\t'content': PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n\t'title': PropTypes.string.isRequired\n};\n\n\n// EXPORTS //\n\nexport default QuestionButton;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport noop from '@stdlib/utils/noop';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport './checkbox.css';\n\n\n// VARIABLES //\n\nconst uid = generateUID( 'checkbox-input' );\n\n\n// MAIN //\n\n/**\n* A checkbox input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the checkbox value to be assigned to\n* @property {boolean} defaultValue - boolean value indicating the default value of the checkbox\n* @property {boolean} value - checkbox value (for controlled component)\n* @property {boolean} disabled - indicates whether the input is active or not\n* @property {boolean} inline - indicates whether the checkbox is displayed inline\n* @property {string} legend - text displayed next to the checkbox\n* @property {string} tooltip - text displayed when hovering over checkbox\n* @property {string} tooltipPlacement - position of button tooltip\n* @property {Object} style - CSS inline styles\n* @property {Function} onChange - callback function to be invoked when checkbox is clicked. The function is called with the current checkbox value\n*/\nconst CheckboxInput = ( props ) => {\n\tconst { bind, defaultValue, disabled, onChange } = props;\n\tconst id = useRef( props.id || uid( props ) );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tbind && session.state ? session.state[ bind ]: defaultValue\n\t);\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tlet globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ]);\n\tconst updateValue = useCallback( ( newValue ) => {\n\t\tsetValue( newValue );\n\t\tif ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind ] );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst newValue = event.target.checked;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t}, [ onChange, updateValue ] );\n\tconst handleSpanChange = () => {\n\t\tconst newValue = props.value !== null ? !props.value : !value;\n\t\tonChange( newValue );\n\t\tupdateValue( newValue );\n\t};\n\tconst input = <input\n\t\tclassName=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\tchecked={props.value !== null ? props.value : value}\n\t\tvalue=\"checkbox\"\n\t\tonChange={handleChange}\n\t\tdisabled={disabled}\n\t\taria-label={props.tooltip}\n\t></input>;\n\tif ( props.inline === true ) {\n\t\treturn (\n\t\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t\t<span id={id.current} style={{ marginLeft: '8px', ...props.style }}>\n\t\t\t\t\t{input}\n\t\t\t\t\t<span\n\t\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={handleSpanChange} onKeyPress={handleSpanChange}\n\t\t\t\t\t>{props.legend}</span>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\tconst onSpanChange = disabled ? noop : handleSpanChange;\n\treturn (\n\t\t<Tooltip tooltip={props.tooltip} placement={props.tooltipPlacement} >\n\t\t\t<div id={id.current} className=\"input checkbox-input-div\" style={props.style}>\n\t\t\t\t{input}\n\t\t\t\t<span\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tclassName=\"checkbox-legend\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: disabled ? 'darkgray' : null\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={onSpanChange} onKeyPress={onSpanChange}\n\t\t\t\t>{props.legend}</span>\n\t\t\t</div>\n\t\t</Tooltip>\n\t);\n};\n\n\n// PROPERTIES //\n\nCheckboxInput.defaultProps = {\n\tbind: '',\n\tonChange() {},\n\tdefaultValue: false,\n\tvalue: null,\n\tdisabled: false,\n\tinline: false,\n\tlegend: '',\n\ttooltip: '',\n\ttooltipPlacement: 'right',\n\tstyle: {}\n};\n\nCheckboxInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.bool,\n\tvalue: PropTypes.bool,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tonChange: PropTypes.func,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'left', 'top', 'right', 'bottom' ]),\n\tstyle: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport CheckboxInput from './main.js';\n\n\n// EXPORTS //\n\nexport default CheckboxInput;\n","// MODULES //\n\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\n\n\n// MAIN //\n\nfunction createTooltip({ min, max, step, t }) {\n\tlet tooltip = `${t('enter')} ${ step === 1 ? t('integer') : t('number')} `;\n\tif ( max !== PINF && min !== NINF ) {\n\t\ttooltip += `${t('between')} ${min} ${t('and')} ${max}`;\n\t} else if ( min !== NINF ) {\n\t\ttooltip += `${t('larger-or-equal-to')} ${min}`;\n\t} else if ( max !== PINF ) {\n\t\ttooltip += `${t('smaller-or-equal-to')} ${max}`;\n\t}\n\treturn tooltip;\n}\n\n\n// EXPORTS //\n\nexport default createTooltip;\n","// MODULES //\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport { useTranslation } from 'react-i18next';\nimport contains from '@stdlib/assert/contains';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isNull from '@stdlib/assert/is-null';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport Tooltip from '@isle-project/components/tooltip';\nimport SessionContext from '@isle-project/session/context.js';\nimport generateUID from '@isle-project/utils/uid';\nimport createTooltip from './create_tooltip.js';\nimport './number.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:number-input' );\nconst uid = generateUID( 'number-input' );\n\n\n// MAIN //\n\n/**\n* A number input component. Can be used as part of an ISLE dashboard or standalone. In the latter case, you want to handle changes via the `onChange` attribute or bind the value to a global variable via the `bind` attribute.\n*\n* @property {string} bind - name of global variable for the number to be assigned to\n* @property {number} value - number value (for controlled component)\n* @property {number} defaultValue - value indicating the default value of the input at startup\n* @property {boolean} disabled - boolean indicating whether the input is active or not\n* @property {number} min - number indicating the smallest possible value that may be inserted\n* @property {number} max - number indicating the maximum value that may be inserted\n* @property {(number|string)} step - number indicating the incremental changes when using the increment arrows\n* @property {boolean} inline - indicates whether the input is displayed inline\n* @property {string} legend - string indicating the text displayed next to the number input\n* @property {boolean} numbersOnly - controls whether only numbers are accepted\n* @property {string} tooltip - tooltip string (if not set, the tooltip is automatically generated)\n* @property {string} tooltipPlacement - direction of the tooltip\n* @property {Object} style - CSS inline styles\n* @property {Object} inputStyle - CSS inline styles for input element\n* @property {Function} onBlur - callback function to be invoked when using a blur method\n* @property {Function} onChange - callback function to be invoked when number input is changed\n* @property {Function} onKeyPress - callback function to be invoked when any key is entered\n* @property {Function} onKeyDown - callback function to be invoked when any key is pressed down\n* @property {Function} onKeyUp - callback function to be invoked when key is released\n*/\nconst NumberInput = ( props ) => {\n\tconst id = useRef( props.id || uid( props ) );\n\tconst { bind, defaultValue, min, max, step, value: propValue, onBlur, onChange } = props;\n\tconst { t } = useTranslation( 'input' );\n\tconst session = useContext( SessionContext );\n\tconst [ value, setValue ] = useState(\n\t\tpropValue || ( bind && session.state ?\n\t\t\tsession.state[ bind ]:\n\t\t\tdefaultValue ),\n\t);\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tconst globalValue = global.lesson.state[ bind ];\n\t\t\tif ( globalValue !== value && isNumber( value ) ) {\n\t\t\t\tsetValue( globalValue );\n\t\t\t}\n\t\t}\n\t}, [ bind, value ] );\n\tuseEffect( () => {\n\t\tsetValue( defaultValue );\n\t}, [ defaultValue ] );\n\tuseEffect( () => {\n\t\tif ( bind ) {\n\t\t\tsetValue( global.lesson.state[ bind ] );\n\t\t}\n\t}, [ bind ] );\n\n\tconst handleChange = useCallback( ( event ) => {\n\t\tdebug( 'Handle change of input field...' );\n\t\tlet valid = event.target.validity.valid;\n\t\tlet newValue = event.target.value;\n\t\tsetValue( newValue );\n\t\tif ( propValue ||\n\t\t\t( valid && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.' )\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t\tif ( isnan( newValue ) ) {\n\t\t\t\tnewValue = '';\n\t\t\t}\n\t\t\tonChange( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t} else if ( bind ) {\n\t\t\tglobal.lesson.setState({\n\t\t\t\t[ bind ]: newValue\n\t\t\t});\n\t\t}\n\t}, [ bind, propValue, onChange ] );\n\tconst finishChange = useCallback( ( event ) => {\n\t\tdebug( 'Finished change...' );\n\t\tlet newValue = event.target.value;\n\t\tif ( contains( newValue, '/' ) ) {\n\t\t\tdebug( 'Encountered a fraction...' );\n\t\t\tconst splitted = newValue.split( '/' );\n\t\t\tif ( splitted[ 0 ] !== '' && splitted[ 1 ] !== '' ) {\n\t\t\t\tnewValue = parseFloat( splitted[ 0 ]) / parseFloat( splitted[ 1 ]);\n\t\t\t}\n\t\t}\n\t\tif ( isnan( newValue ) ) {\n\t\t\tnewValue = '';\n\t\t}\n\t\telse if (\n\t\t\tnewValue !== '' && newValue !== '-' &&\n\t\t\tnewValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = parseFloat( newValue );\n\t\t}\n\t\tif ( newValue > max ) {\n\t\t\tnewValue = max;\n\t\t}\n\t\telse if ( newValue < min ) {\n\t\t\tnewValue = min;\n\t\t}\n\t\telse if (\n\t\t\tstep === 1.0 && newValue !== '' &&\n\t\t\tnewValue !== '-' && newValue !== '.' && newValue !== '-.'\n\t\t) {\n\t\t\tnewValue = newValue - newValue % step;\n\t\t}\n\t\tonChange( newValue );\n\t\tonBlur( newValue );\n\t\tif ( newValue !== value ) {\n\t\t\tsetValue( newValue );\n\t\t\tif ( bind ) {\n\t\t\t\tglobal.lesson.setState({\n\t\t\t\t\t[ bind ]: newValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [ bind, min, max, step, value, onBlur, onChange ] );\n\tconst tooltip = isNull( props.tooltip ) ? createTooltip({\n\t\tmin, max, step, t\n\t}) : props.tooltip;\n\tif ( props.inline === true ) {\n\t\tconst input =\n\t\t\t<span className=\"input\" style={{ padding: '5px', ...props.style }}>\n\t\t\t\t{ props.legend ? <label htmlFor={id.current} > {props.legend} =  </label> : null }\n\t\t\t\t<input\n\t\t\t\t\tid={id.current}\n\t\t\t\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"number-number-input\"\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tvalue={propValue !== null ? propValue : value}\n\t\t\t\t\tstep={props.step}\n\t\t\t\t\tmin={props.min}\n\t\t\t\t\tmax={props.max}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\tpaddingLeft: '6px',\n\t\t\t\t\t\tmarginLeft: '3px',\n\t\t\t\t\t\t...props.inputStyle\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={finishChange}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span>({props.description})</span> :\n\t\t\t\t\t<span />\n\t\t\t\t}\n\t\t\t</span>;\n\t\treturn props.disabled ?\n\t\t\tinput:\n\t\t\t<Tooltip id=\"number-input-tooltip-inline\" placement=\"top\" show={!props.disabled} tooltip={tooltip} >\n\t\t\t\t{input}\n\t\t\t</Tooltip>;\n\t}\n\tconst input = <input\n\t\tid={id.current}\n\t\ttype={props.numbersOnly ? 'number' : 'text'}\n\t\tname=\"input\"\n\t\tclassName=\"number-number-input\"\n\t\tdisabled={props.disabled}\n\t\tvalue={propValue !== null ? propValue : value}\n\t\tstep={props.step}\n\t\tmin={props.min}\n\t\tmax={props.max}\n\t\tstyle={{\n\t\t\twidth: '80px',\n\t\t\tmarginLeft: '24px',\n\t\t\t...props.inputStyle\n\t\t}}\n\t\tonChange={handleChange}\n\t\tonBlur={finishChange}\n\t\tonKeyPress={props.onKeyPress}\n\t\tonKeyDown={props.onKeyDown}\n\t\tonKeyUp={props.onKeyUp}\n\t\tautoComplete=\"off\"\n\t/>;\n\treturn ( <div className=\"input\" style={{\n\t\tmarginBottom: '4px',\n\t\tmarginTop: '4px',\n\t\t...props.style\n\t}}>\n\t\t{ props.legend ?\n\t\t\t<span>\n\t\t\t\t<label htmlFor={id.current} >\n\t\t\t\t\t{isString( props.legend ) ?\n\t\t\t\t\t\tprops.legend+':' :\n\t\t\t\t\t\tprops.legend\n\t\t\t\t\t}\n\t\t\t\t</label>\n\t\t\t\t{ props.description ?\n\t\t\t\t\t<span> {props.description}</span> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</span> : null\n\t\t}\n\t\t<Tooltip\n\t\t\tid=\"number-input-tooltip\" placement={props.tooltipPlacement}\n\t\t\ttooltip={tooltip} show={!props.disabled}\n\t\t><span className=\"number-input-span\" >{input}</span></Tooltip>\n\t</div> );\n};\n\n\n// PROPERTIES //\n\nNumberInput.defaultProps = {\n\tbind: '',\n\tdisabled: false,\n\tlegend: null,\n\tmin: NINF,\n\tmax: PINF,\n\tstep: 1,\n\tdefaultValue: 0,\n\tonBlur() {},\n\tonChange() {},\n\tonKeyDown() {},\n\tonKeyPress() {},\n\tonKeyUp() {},\n\tinline: false,\n\tnumbersOnly: true,\n\tstyle: {},\n\tinputStyle: {},\n\tvalue: null,\n\ttooltip: null,\n\ttooltipPlacement: 'left'\n};\n\nNumberInput.propTypes = {\n\tbind: PropTypes.string,\n\tdefaultValue: PropTypes.number,\n\tdisabled: PropTypes.bool,\n\tinline: PropTypes.bool,\n\tlegend: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.node\n\t]),\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\tnumbersOnly: PropTypes.bool,\n\tonBlur: PropTypes.func,\n\tonChange: PropTypes.func,\n\tonKeyDown: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonKeyUp: PropTypes.func,\n\tstep: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string\n\t]),\n\tstyle: PropTypes.object,\n\tinputStyle: PropTypes.object,\n\tvalue: PropTypes.number,\n\ttooltip: PropTypes.string,\n\ttooltipPlacement: PropTypes.oneOf([ 'top', 'right', 'bottom', 'left' ])\n};\n\n\n// EXPORTS //\n\nexport default NumberInput;\n","// MODULES //\n\nimport NumberInput from './main';\nimport CreateTooltip from './create_tooltip.js';\n\n\n// EXPORTS //\n\nexport const createTooltip = CreateTooltip;\nexport default NumberInput;\n"],"names":["FrequencyTableMenu","props","defaultValue","variables","groupingVariables","t","useState","calculateRelative","setCalculateRelative","calculateCounts","setCalculateCounts","variable","setVariable","group","setGroup","nDecimalPlaces","setNDecimalPlaces","as","title","content","legend","options","onChange","clearable","menuPlacement","tooltip","inline","width","max","min","variant","block","onClick","output","data","logAction","DATA_EXPLORER_FREQUENCY_TABLE","onCreated","disabled","defaultProps","popover","id","trigger","placement","rootClose","overlay","size","className","uid","generateUID","CheckboxInput","bind","useRef","session","useContext","SessionContext","state","value","setValue","useEffect","global","lesson","globalValue","updateValue","useCallback","newValue","setState","handleChange","event","target","checked","handleSpanChange","input","type","tooltipPlacement","current","style","marginLeft","role","tabIndex","color","onKeyPress","onSpanChange","noop","step","PINF","NINF","debug","logger","NumberInput","propValue","onBlur","useTranslation","isNumber","valid","validity","parseFloat","isnan","finishChange","contains","splitted","split","isNull","createTooltip","padding","htmlFor","numbersOnly","name","paddingLeft","inputStyle","onKeyDown","onKeyUp","autoComplete","description","show","marginBottom","marginTop","isString"],"sourceRoot":""}