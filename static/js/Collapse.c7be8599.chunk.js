"use strict";(self.webpackChunkisle_dashboard=self.webpackChunkisle_dashboard||[]).push([[1438],{43225:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return main}});var react=__webpack_require__(67294),prop_types=__webpack_require__(45697),prop_types_default=__webpack_require__.n(prop_types),browser=__webpack_require__(14946),browser_default=__webpack_require__.n(browser),lib=__webpack_require__(33276),is_null_lib=__webpack_require__(95447),is_null_lib_default=__webpack_require__.n(is_null_lib),prop_check=__webpack_require__(25048);class VSHeader extends react.Component{render(){return react.createElement("button",{onClick:this.props.onClick,"aria-label":"Collapsable Header",className:`vertical-slider-header ${this.props.className}`,style:this.props.style},this.props.children)}}VSHeader.propTypes={onClick:prop_types_default().func.isRequired,className:prop_types_default().string,style:prop_types_default().object},VSHeader.defaultProps={className:"",style:{}};var vs_header=VSHeader;function createClass(val){return val===!1?"vs-body vs-hidden":"vs-body vs-display"}var create_class=createClass,__defProp=Object.defineProperty,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__publicField=(obj,key,value)=>(__defNormalProp(obj,typeof key!="symbol"?key+"":key,value),value);const debug=browser_default()("isle:vertical-slider");class Collapse extends react.Component{constructor(props){super(props);__publicField(this,"toggleVisibility",()=>{if((0,lib.isPrimitive)(this.props.visible))this.props.onClick(this.props.visible);else{const v=!this.state.visible;this.props.onClick(v),this.setState({visible:v,className:create_class(v)})}});const visible=props.visible||props.defaultVisible;this.state={visible,className:create_class(visible)}}static getDerivedStateFromProps(nextProps,prevState){return!is_null_lib_default()(nextProps.visible)&&nextProps.visible!==prevState.visible?(debug("Override visible state..."),{visible:nextProps.visible,className:create_class(nextProps.visible)}):null}renderHeader(){return this.props.headerClassName!==null?react.createElement(vs_header,{onClick:this.toggleVisibility,className:this.props.headerClassName,style:this.props.headerStyle},this.props.header):react.createElement(vs_header,{onClick:this.toggleVisibility,style:this.props.headerStyle},this.props.header)}render(){return react.createElement("div",{className:`${this.props.className} vertical-slider`,style:this.props.style},this.renderHeader(),react.createElement("div",{className:this.state.className},this.props.children))}}Collapse.propTypes={header:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),headerStyle:prop_types_default().object,headerClassName:prop_types_default().string,defaultVisible:prop_types_default().bool,visible:prop_types_default().bool,className:prop_types_default().string,style:prop_types_default().object,onClick:prop_types_default().func},Collapse.defaultProps={header:"Header",headerClassName:null,headerStyle:null,defaultVisible:!1,visible:null,className:"",style:{},onClick(){}};var main=(0,prop_check.W)(Collapse)}}]);

//# sourceMappingURL=Collapse.c7be8599.chunk.js.map