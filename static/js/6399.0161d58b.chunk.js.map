{"version":3,"sources":["actions/completions.js","actions/namespace.js","components/help-icon/index.js","components/completions/compute_modal.js","components/confirm-modal/index.js","utils/file_saver.js"],"names":[],"mappings":"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","file":"static/js/6399.0161d58b.chunk.js","sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport server from 'constants/server';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { COMPUTED_COMPLETIONS, CREATED_METRIC, DELETED_METRIC,\n\tGET_COMPLETION_LESSON_REFS, GET_COMPLETION_COMPONENTS, GET_COMPLETION_TAGS,\n\tSAVED_LESSON_METRICS, UPDATED_METRIC } from 'constants/action_types.js';\n\n\n// VARIABLES //\n\nconst DEFAULT_TAGS = [\n\t'_default_tag'\n];\n\n\n// MAIN //\n\n/**\n * Makes a GET request to the server to retrieve all completion tags.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Array<ObjectId>} lessonIDs - ids for lessons whose tags are\n *     to be retrieved.\n * @returns {void}\n */\nexport const getCompletionTags = async ( dispatch, lessonIDs ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/completion_tags`, {\n\t\t\tlessons: lessonIDs\n\t\t});\n\t\tdispatch({\n\t\t\ttype: GET_COMPLETION_TAGS,\n\t\t\tpayload: {\n\t\t\t\tcompletionTags: res.data\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\tdispatch({\n\t\t\ttype: GET_COMPLETION_TAGS,\n\t\t\tpayload: {\n\t\t\t\tcompletionTags: DEFAULT_TAGS\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n* Returns a function to retrieve all completion tags for a set of lessons.\n*\n* @param {Function} dispatch - dispatch function\n* @returns {Function} function to retrieve completion tags\n*/\nexport const getCompletionTagsInjector = dispatch => {\n\treturn async ( lessonIDs ) => {\n\t\tawait getCompletionTags( dispatch, lessonIDs );\n\t};\n};\n\nexport const getCompletionComponents = async ( dispatch, lessonIds ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/completion_components`, {\n\t\t\tlessons: lessonIds\n\t\t});\n\t\tdispatch({\n\t\t\ttype: GET_COMPLETION_COMPONENTS,\n\t\t\tpayload: {\n\t\t\t\tcomponentsByLesson: res.data\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\tconsole.error( 'Error getting completion components: ', err );\n\t\tconst componentsByLesson = {};\n\t\tlessonIds.forEach( lessonID => {\n\t\t\tcomponentsByLesson[ lessonID ] = [];\n\t\t});\n\t\tdispatch({\n\t\t\ttype: GET_COMPLETION_COMPONENTS,\n\t\t\tpayload: {\n\t\t\t\tcomponentsByLesson\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Retrieves the names of lower level metrics (refs)\n *\n * @param {Function} dispatch - dispatch function\n * @param {Array<ObjectId>} entities - id of entities whose refs (metrics at next lowest level)\n *     we are retrieving. In the typical case, these will be lesson ids.\n * @param {string} target - name of the target field in the Completions table that we\n *     constrain to be in `entities`.  In the typical case, this will be 'lesson'.\n *     We then search for refs (component metric names) for which lesson id belongs to\n *     the given list of entities.\n * @returns {void}\n */\nexport const getCompletionLessonRefs = async ( dispatch, { entities, target } ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/completion_refs`, {\n\t\t\tentities,\n\t\t\ttarget\n\t\t});\n\t\tdispatch({\n\t\t\ttype: GET_COMPLETION_LESSON_REFS,\n\t\t\tpayload: {\n\t\t\t\tcompletionRefs: res.data\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to retrieve the names of lower level metrics (refs).\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to retrieve completion refs\n */\nexport const getCompletionLessonRefsInjector = dispatch => {\n\treturn async ({ entities, target }) => {\n\t\tawait getCompletionLessonRefs( dispatch, { entities, target });\n\t};\n};\n\n/**\n * Makes a POST request to the server to compute completion values for a particular metric, entity, and a set of users.\n *\n * @param {Function} dispatch - dispatch function\n */\nexport const computeCompletions = async ( dispatch, { metric, ids, users, policyOptions } ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/compute_completions`, {\n\t\t\tmetric,\n\t\t\tids,\n\t\t\tusers,\n\t\t\tpolicyOptions\n\t\t});\n\t\tdispatch({\n\t\t\ttype: COMPUTED_COMPLETIONS,\n\t\t\tpayload: res.data\n\t\t});\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t}\n\tcatch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to compute completion values for a particular metric, entity, and a set of users.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to compute completion values\n */\nexport const computeCompletionsInjector = dispatch => {\n\treturn async ({ metric, ids, users, policyOptions }) => {\n\t\tconst res = await computeCompletions( dispatch, { metric, ids, users, policyOptions });\n\t\treturn res;\n\t};\n};\n\n/**\n * Makes a POST request to the server to create a new completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} name - the metric name\n * @param {string} level - the level of the hierarchy for which we are computing completions,\n *     one of: 'program', 'namespace', 'lesson', 'component'.\n * @param {ObjectId} id - the id of the entity at the given level for which we are computing\n *     the completions.\n * @param {Array} rule - a vector of the form ['rule-name', ...params], specifying\n *     the aggregation rule used by the completion\n * @param {Array} coverage - an array of the form ['all'], ['include', ...ids], or\n *     ['exclude', ...ids], where ids are the ObjectId's for the  entities at the next\n *     sublevel (e.g., lessons when level is 'namespace').\n * @param {string} ref - the name of the metric to use at the next lower level for computing\n *     the completions that are used at this level.\n * @returns {void}\n */\n export const createMetric = async ( dispatch, { name, rule, coverage, level, id, ref }) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/create_metric`, {\n\t\t\tname, rule, coverage, level, id, ref\n\t\t});\n\t\tconsole.log( res.data );\n\t\tdispatch({\n\t\t\ttype: CREATED_METRIC,\n\t\t\tpayload: {\n\t\t\t\tmetric: res.data.metric,\n\t\t\t\tlevel,\n\t\t\t\tid\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to create a new completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to create a new completion metric\n */\nexport const createMetricInjector = dispatch => {\n\treturn async ( metric ) => {\n\t\tawait createMetric( dispatch, metric );\n\t};\n};\n\n/**\n * Makes a POST request to the server to update a completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} name - the metric name\n * @param {string} level - the level of the hierarchy for which we are computing completions,\n *     one of: 'program', 'namespace', 'lesson', 'component'.\n * @param {ObjectId} id - the id of the entity at the given level for which we are computing\n *     the completions.\n * @param {Array} rule - a vector of the form ['rule-name', ...params], specifying\n *     the aggregation rule used by the completion\n * @param {Array} coverage - an array of the form ['all'], ['include', ...ids], or\n *     ['exclude', ...ids], where ids are the ObjectId's for the  entities at the next\n *     sublevel (e.g., lessons when level is 'namespace').\n * @param {string} ref - the name of the metric to use at the next lower level for computing\n *     the completions that are used at this level.\n * @returns {void}\n */\nexport const updateMetric = async ( dispatch, body ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/update_metric`, body );\n\t\tconsole.log( res.data );\n\t\tdispatch({\n\t\t\ttype: UPDATED_METRIC,\n\t\t\tpayload: {\n\t\t\t\tmetric: body,\n\t\t\t\tlevel: body.level,\n\t\t\t\tid: body.id\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to update a completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to update a completion metric\n */\nexport const updateMetricInjector = dispatch => {\n\treturn async ( metric ) => {\n\t\tawait updateMetric( dispatch, metric );\n\t};\n};\n\n/**\n * Makes a POST request to the server to delete a completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} body - request body\n * @param {string} body.name - the metric name\n * @param {string} body.level - the level of the hierarchy for which we are computing completions,\n *     one of: 'program', 'namespace', 'lesson', 'component'.\n * @param {ObjectId} body.id - the id of the entity at the given level for which we are computing\n *     the completions.\n * @returns {void}\n */\nexport const deleteMetric = async ( dispatch, { name, level, id }) => {\n\ttry {\n\t\tawait axios.post( `${server}/delete_metric`, {\n\t\t\tname, level, id\n\t\t});\n\t\tdispatch({\n\t\t\ttype: DELETED_METRIC,\n\t\t\tpayload: {\n\t\t\t\tname, level, id\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to the server to delete a completion metric.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} a function to make a POST request to the server to delete a completion metric\n */\nexport const deleteMetricInjector = dispatch => {\n\treturn async ({ name, level, id }) => {\n\t\tconst res = await deleteMetric( dispatch, { name, level, id });\n\t\treturn res;\n\t};\n};\n\nexport const saveLessonMetrics = async ( dispatch, body ) => {\n\ttry {\n\t\tconst res = await axios.post( `${server}/save_lesson_metrics`, body );\n\t\tconsole.log( 'SAVE LESSON METRICS', res.data );\n\t\tdispatch({\n\t\t\ttype: SAVED_LESSON_METRICS,\n\t\t\tpayload: res.data\n\t\t});\n\t\treturn res;\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\nexport const saveLessonMetricsInjector = dispatch => {\n\treturn async ( body ) => {\n\t\tconst res = await saveLessonMetrics( dispatch, body );\n\t\treturn res;\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport axios from 'axios';\nimport qs from 'querystring';\nimport i18next from 'i18next';\nimport saveAs from 'utils/file_saver.js';\nimport server from 'constants/server';\nimport { addNotification, addErrorNotification } from 'actions/notification';\nimport { getCohorts } from 'actions/cohort';\nimport { APPEND_CREATED_NAMESPACE, CHANGED_NAMESPACE, DELETED_CURRENT_NAMESPACE, GET_ALL_NAMESPACES, UPDATED_OWNED_NAMESPACE, UPDATED_STUDENT_PROGRESS } from 'constants/action_types.js';\n\n\n// EXPORTS //\n\n/**\n * Returns an action object to be used in signalling that a namespace has been created.\n *\n * @param {Object} namespace - the created namespace\n * @returns {Object} the action object\n */\nexport function appendCreatedNamespace( namespace ) {\n\treturn {\n\t\ttype: APPEND_CREATED_NAMESPACE,\n\t\tpayload: {\n\t\t\tnamespace\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been changed.\n *\n * @param {Object} namespace - the changed namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.announcements - announcements\n * @param {Array} namespace.cohorts - cohorts\n * @param {string} namespace.description - namespace description\n * @param {boolean} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @param {Array} namespace.completions - array of completion metric objects associated with the namespace\n * @returns {Object} the action object\n */\nexport function changedNamespace({ title, owners, announcements = [], cohorts = [], description, enableTicketing, _id, completions }) {\n\treturn {\n\t\ttype: CHANGED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tannouncements,\n\t\t\tcohorts,\n\t\t\tdescription,\n\t\t\tenableTicketing,\n\t\t\towners,\n\t\t\tcompletions,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a namespace has been deleted.\n *\n * @param {string} id - the id of the namespace to be deleted\n * @returns {Object} the action object\n */\nexport function deletedCurrentNamespace( id ) {\n\treturn {\n\t\ttype: DELETED_CURRENT_NAMESPACE,\n\t\tpayload: {\n\t\t\tid\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that a student's progress has been updated.\n *\n * @param {Object} options - progress of the student\n * @param {string} options.email - email of the student\n * @param {string} options.lessonId - lesson id\n * @param {number} options.progress - progress of the student\n * @param {Object} options.cohort - cohort of the student\n */\nexport function updateStudentProgress({ email, lessonID, progress, cohort }) {\n\treturn {\n\t\ttype: UPDATED_STUDENT_PROGRESS,\n\t\tpayload: {\n\t\t\temail, lessonID, progress, cohort\n\t\t}\n\t};\n}\n\n/**\n * Returns an action object to be used in signalling that an owned namespace has been updated.\n *\n * @param {Object} namespace - the updated namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.owners - ids of owners\n * @param {Array} namespace.enableTicketing - controls if ticketing is enabled for the namespace\n * @param {string} namespace._id - id of the namespace\n * @returns {Object} the action object\n */\nexport function updatedOwnedNamespace({ title, owners, description, enableTicketing, _id }) {\n\treturn {\n\t\ttype: UPDATED_OWNED_NAMESPACE,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\towners,\n\t\t\tenableTicketing,\n\t\t\t_id\n\t\t}\n\t};\n}\n\n/**\n * Makes a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} namespace - the new namespace\n * @param {string} namespace.title - namespace title\n * @param {Array} namespace.description - namespace description\n * @param {Array} namespace.owners - ids of owners\n * @param {Object} namespace.props - properties of the invoking component\n */\nexport const createNamespace = async ( dispatch, { title, description, owners, props }) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/create_namespace', { title, description, owners });\n\t\tif ( !res.data.successful ) {\n\t\t\treturn addErrorNotification( dispatch, new Error( res.data.message ));\n\t\t}\n\t\tconst namespace = res.data.namespace;\n\t\tprops.onNamespace( namespace );\n\t\tdispatch( appendCreatedNamespace( namespace ) );\n\t\twindow.location.replace( '/dashboard/lessons' );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: res.data.successful ? 'success' : 'error'\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to create a new namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to create a new namespace\n */\nexport const createNamespaceInjector = dispatch => {\n\treturn async ({ title, description, owners, props }) => {\n\t\tawait createNamespace( dispatch, { title, description, owners, props } );\n\t};\n};\n\n/**\n * Makes a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {string} id - the id of the namespace to be deleted\n * @returns {void}\n */\nexport const deleteCurrentNamespace = async ( dispatch, id ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/delete_namespace', { id });\n\t\twindow.location.replace( '/dashboard/lessons' );\n\t\tdispatch( deletedCurrentNamespace( id ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to delete a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to delete a namespace\n */\nexport const deleteCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id ) => {\n\t\tawait deleteCurrentNamespace( dispatch, id );\n\t};\n};\n\n/**\n * Makes a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} ns - the updated namespace\n */\nexport const updateCurrentNamespace = async ( dispatch, ns ) => {\n\ttry {\n\t\tconst res = await axios.post( server+'/update_namespace', { ns });\n\t\tdispatch( changedNamespace( res.data.namespace ) );\n\t\tdispatch( updatedOwnedNamespace( res.data.namespace ) );\n\t\taddNotification( dispatch, {\n\t\t\tmessage: res.data.message,\n\t\t\tlevel: 'success'\n\t\t});\n\t\tgetCohorts( dispatch, {\n\t\t\tnamespaceID: ns._id\n\t\t});\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to update a namespace.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a namespace\n */\nexport const updateCurrentNamespaceInjector = ( dispatch ) => {\n\treturn async ( id, ns ) => {\n\t\tawait updateCurrentNamespace( dispatch, id, ns );\n\t};\n};\n\n/**\n * Makes a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.namespaceTitle - title of the namespace\n * @returns {void}\n */\nexport const getNamespaceActions = async ( dispatch, { namespaceID, namespaceTitle } ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_namespace_actions?'+qs.stringify({ namespaceID }) );\n\t\tconst blob = new Blob([ res.data ], {\n\t\t\ttype: 'application/json'\n\t\t});\n\t\tconst name = `actions_${namespaceTitle}.json`;\n\t\tsaveAs( blob, name );\n\t} catch ( err ) {\n\t\taddErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a namespace's actions.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a namespace's actions\n */\nexport const getNamespaceActionsInjector = ( dispatch ) => {\n\treturn async ({ namespaceID, namespaceTitle }) => {\n\t\tawait getNamespaceActions( dispatch, { namespaceID, namespaceTitle });\n\t};\n};\n\n/**\n * Makes a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {string} options.namespaceID - id of the namespace\n * @param {string} options.lessonID - id of the lesson\n * @param {string} options.email - email of the user\n * @param {number} options.progress - progress of the user\n * @param {Object} options.cohort - cohort of the user\n */\nexport const adjustProgress = async ( dispatch, { email, lessonID, namespaceID, progress, cohort }) => {\n\tconst res = await axios.post( server+'/user_adjust_progress', {\n\t\temail, lessonID, namespaceID, progress\n\t});\n\taddNotification( dispatch, {\n\t\ttitle: i18next.t('common:updated'),\n\t\tmessage: res.data.message,\n\t\tlevel: 'success'\n\t});\n\tdispatch( updateStudentProgress({ email, lessonID, progress, cohort }) );\n};\n\n/**\n * Returns a function to make a POST request to update a user's lesson progress.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to update a user's lesson progress\n */\nexport const adjustProgressInjector = ( dispatch ) => {\n\treturn async ( { email, lessonID, namespaceID, progress, cohort } ) => {\n\t\tawait adjustProgress( dispatch, { email, lessonID, namespaceID, progress, cohort } );\n\t};\n};\n\n/**\n * Makes a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {void}\n */\nexport const getAllNamespaces = async ( dispatch ) => {\n\ttry {\n\t\tconst res = await axios.get( server+'/get_all_namespaces' );\n\t\tdispatch({\n\t\t\ttype: GET_ALL_NAMESPACES,\n\t\t\tpayload: {\n\t\t\t\tnamespaces: res.data.namespaces\n\t\t\t}\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a GET request to get a all available namespaces.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the GET request to get a all available namespaces\n */\nexport const getAllNamespacesInjector = ( dispatch ) => {\n\treturn async () => {\n\t\tawait getAllNamespaces( dispatch );\n\t};\n};\n\n/**\n * Makes a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @param {Object} options - request options\n * @param {Array} options.lessons - lessons of the course in the order to be displayed on the dashboard\n * @param {string} options.id - id of the namespace\n * @returns {void}\n */\nexport const setLessonOrder = async ( dispatch, { lessons, id }) => {\n\ttry {\n\t\tawait axios.post( server+'/set_lesson_order', {\n\t\t\tlessons, id\n\t\t});\n\t} catch ( err ) {\n\t\treturn addErrorNotification( dispatch, err );\n\t}\n};\n\n/**\n * Returns a function to make a POST request to set the order lessons appear on the dashboard.\n *\n * @param {Function} dispatch - dispatch function\n * @returns {Function} function to make the POST request to set the order lessons appear on the dashboard\n */\nexport const setLessonOrderInjector = ( dispatch ) => {\n\treturn async ({ lessons, id }) => {\n\t\tawait setLessonOrder( dispatch, { lessons, id } );\n\t};\n};\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport './help_icon.css';\n\n\n// MAIN //\n\nconst HelpIcon = ( props ) => {\n\tconst overlayRef = React.useRef( null );\n\treturn (\n\t\t<div className=\"help-panel\" role=\"button\" tabIndex={0} onKeyDown={(e) => overlayRef.current && (e.which === 13 || e.which === 32) && overlayRef.current.click(e)}>\n\t\t\t<OverlayTrigger\n\t\t\t\tplacement=\"right\"\n\t\t\t\ttrigger={[ 'click' ]}\n\t\t\t\trootClose={true}\n\t\t\t\tdelay={{ show: 250, hide: 0 }}\n\t\t\t\toverlay={ps => <Popover {...ps} className='help-text'><Popover.Body>{props.children}</Popover.Body></Popover>}\n\t\t\t>\n\t\t\t\t<span className=\"mr-1\" tabIndex=\"0\" role=\"button\" ref={overlayRef}>\n\t\t\t\t\tinfo\n\t\t\t\t</span>\n\t\t\t</OverlayTrigger>\n\t\t</div>\n\t);\n};\n\n\n// EXPORTS //\n\nexport default HelpIcon;\n","/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport DateTimeRangePicker from '@wojtekmaj/react-datetimerange-picker';\nimport HelpIcon from 'components/help-icon';\nimport Container from 'react-bootstrap/Container';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SelectInput from 'react-select';\nimport isArray from '@stdlib/assert/is-array';\nimport usePrevious from 'hooks/use-previous';\n\n\n// VARIABLES //\n\nconst MULTIPLES_POLICIES = [\n\t{ value: 'last', label: 'Last submitted value' },\n\t{ value: 'first', label: 'First submitted value' },\n\t{ value: 'pass-through', label: 'All submitted values' },\n\t{ value: 'max', label: 'Best submitted value' }\n];\n\n\n// FUNCTIONS //\n\n/**\n * Returns an object mapping tags to weights of one.\n *\n * @param {Array<string>} tags - list of tags\n * @param {Object} [existingWeights={}] - existing weights\n * @returns {Object} map of tag to weight\n */\nfunction createTagWeights( tags, existingWeights={} ) {\n\tif ( !tags ) {\n\t\treturn {\n\t\t\t'_default_tag': 1\n\t\t};\n\t}\n\tconst weights = {};\n\ttags.forEach( tag => {\n\t\tweights[ tag ] = existingWeights?.[ tag ] ?? 1;\n\t});\n\treturn weights;\n}\n\n\n// MAIN //\n\nconst memberSelection =( member ) => {\n\treturn { value: member.id, label: `${member.firstName} ${member.lastName} (${member.email})` };\n};\n\nfunction TagWeightInput({ value, t, onChange }) {\n\tconst tags = Object.keys( value );\n\tconst handleChange = useCallback( ( event ) => {\n\t\tconst weight = Number( event.target.value );\n\t\tconst tag = event.target.getAttribute( 'data-tag' );\n\t\tconst newWeights = { ...value };\n\t\tnewWeights[ tag ] = weight;\n\t\tonChange( newWeights );\n\t}, [ value, onChange ] );\n\n\tconst inputs = new Array( tags.length );\n\tfor ( let i = 0; i < tags.length; i++ ) {\n\t\tconst tag = tags[ i ];\n\t\tconst weight = value[ tag ];\n\t\tinputs[ i ] = ( <Form.Group className=\"mb-1\" as={Row} key={`tag-${i}`} >\n\t\t\t<Form.Label column sm={3} >{tag === '_default_tag' ? t( 'default' ) : tag}</Form.Label>\n\t\t\t<Col sm={9} >\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={weight}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tplaceholder={1}\n\t\t\t\t\tdata-tag={tag}\n\t\t\t\t\tmin={0}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t</Form.Group> );\n\t}\n\treturn inputs;\n}\n\nfunction ComputeModal({ cohorts, metric, entity, level, show, tags, onHide, computeCompletions, onCompute }) {\n\tconsole.log( 'Array of metrics with the same name:', metric );\n\tconst { t } = useTranslation();\n\tconst metricName = isArray( metric ) ? metric[ 0 ].name : metric.name;\n\n\tconst [ formValues, setFormValues ] = useState({\n\t\tusers: [],\n\t\tactiveCohorts: {},\n\t\tpolicyOptions: {\n\t\t\ttagWeights: createTagWeights( tags, {} ),\n\t\t\tmultiples: MULTIPLES_POLICIES[ 0 ]\n\t\t}\n\t});\n\tconst FORM_STORAGE_KEY = `ISLE?level=${level}&metric=${metricName}`;\n\tuseEffect( () => {\n\t\tlet oldFormValues = localStorage.getItem( FORM_STORAGE_KEY );\n\t\tif ( oldFormValues ) {\n\t\t\toldFormValues = JSON.parse( oldFormValues );\n\t\t\tif ( oldFormValues.policyOptions?.timeFilter ) {\n\t\t\t\toldFormValues.policyOptions.timeFilter = oldFormValues.policyOptions.timeFilter.map( x => new Date( x ) );\n\t\t\t}\n\t\t\tsetFormValues( oldFormValues );\n\t\t}\n\t}, [ FORM_STORAGE_KEY ] );\n\tconst oldTags = usePrevious( tags || [] );\n\tuseEffect( () => {\n\t\tif ( tags && oldTags && tags.length !== oldTags.length ) {\n\t\t\tconst newFormValues = {\n\t\t\t\t...formValues\n\t\t\t};\n\t\t\tnewFormValues.policyOptions.tagWeights = createTagWeights( tags, formValues.policyOptions.tagWeights );\n\t\t\tsetFormValues( newFormValues );\n\t\t}\n\t}, [ tags, oldTags, formValues ] );\n\tconst onTimeChange = useCallback( ( dates ) => {\n\t\tconst newFormValues = { ...formValues };\n\t\tif ( dates ) {\n\t\t\tnewFormValues.policyOptions.timeFilter = dates;\n\t\t} else {\n\t\t\tdelete newFormValues.policyOptions.timeFilter;\n\t\t}\n\t\tsetFormValues( newFormValues );\n\t}, [ formValues ] );\n\tconst handleMultiplesPolicyChange = useCallback( ( multiples ) => {\n\t\tconst newFormValues = { ...formValues };\n\t\tnewFormValues.policyOptions.multiples = multiples;\n\t\tsetFormValues( newFormValues );\n\t}, [ formValues ] );\n\tconst handleTagWeightsChange = useCallback( ( tagWeights ) => {\n\t\tconst newFormValues = { ...formValues };\n\t\tnewFormValues.policyOptions.tagWeights = tagWeights;\n\t\tsetFormValues( newFormValues );\n\t}, [ formValues ] );\n\tconst handleCompute = useCallback( () => {\n\t\tconst policyOptions = {\n\t\t\t...formValues.policyOptions,\n\t\t\tmultiples: formValues.policyOptions.multiples.value\n\t\t};\n\t\tif ( formValues.policyOptions.timeFilter ) {\n\t\t\tpolicyOptions.timeFilter = formValues.policyOptions.timeFilter.map( x => x.getTime() );\n\t\t}\n\t\tlocalStorage.setItem( FORM_STORAGE_KEY, JSON.stringify( formValues ) );\n\t\tconst body = {\n\t\t\tids: isArray( entity ) ? entity.map( x => x._id ) : [ entity._id ],\n\t\t\tusers: formValues.users.map( x => x.value ),\n\t\t\tmetric: metric,\n\t\t\tpolicyOptions\n\t\t};\n\t\tcomputeCompletions( body ).then( onCompute );\n\t}, [ metric, entity, formValues, FORM_STORAGE_KEY, computeCompletions, onCompute ] );\n\tconst users = cohorts.reduce( ( userList, cohort ) => {\n\t\tconst members = cohort.members.map( member => memberSelection(member) );\n\t\treturn userList.concat( members );\n\t}, [] );\n\tconst selectOptions = [\n\t\t{ value: { category: 'all', members: users }, label: t( 'All users' ) },\n\t\t...( cohorts.length > 1 ? cohorts.map( cohort => {\n\t\t\treturn { value: { category: 'cohort', id: cohort._id, members: cohort.members }, label: 'Cohort ' + cohort.title };\n\t\t}) : [] )\n\t].concat( users );\n\n\tconst userSelectStyles = {\n\t\toption: ( styles, { data }) => {\n\t\t\tif ( data.value.category === 'cohort' && formValues.activeCohorts[ data.value.id ] ) {\n\t\t\t\treturn {\n\t\t\t\t\t...styles,\n\t\t\t\t\t':before': {\n\t\t\t\t\t\tcontent: '\"\\u2713 \"'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn styles;\n\t\t}\n\t};\n\tconst handleUserSelectChange = useCallback( ( value ) => {\n\t\tif ( !value ) {\n\t\t\tsetFormValues( {\n\t\t\t\t...formValues,\n\t\t\t\tusers: []\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif ( value.some( x => x.value.category === 'all' ) ) {\n\t\t\tsetFormValues({\n\t\t\t\t...formValues,\n\t\t\t\tusers: users,\n\t\t\t\tactiveCohorts: {}\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst selectedUsersSet= new Set();\n\t\tconst removeIds = new Set();\n\t\tconst newValue = [];\n\t\tconst newActiveCohorts = Object.assign( {}, formValues.activeCohorts );\n\t\tfor ( let i = 0; i < value.length; i++ ) {\n\t\t\tif ( value[ i ].value.category === 'cohort' ) {\n\t\t\t\tif ( !formValues.activeCohorts[ value[i].value.id ] ) {\n\t\t\t\t\tnewActiveCohorts[ value[i].value.id ] = true;\n\t\t\t\t\tfor ( let j = 0; j < value[ i ].value.members.length; ++j ) {\n\t\t\t\t\t\tif ( !selectedUsersSet.has( value[ i ].value.members[ j ].id ) ) {\n\t\t\t\t\t\t\tconst member = value[ i ].value.members[ j ];\n\t\t\t\t\t\t\tnewValue.push( memberSelection( member ) );\n\t\t\t\t\t\t\tselectedUsersSet.add( member.id );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewActiveCohorts[ value[i].value.id ] = false;\n\t\t\t\t\tvalue[ i ].value.members.forEach( member => {\n\t\t\t\t\t\tremoveIds.add( member.id );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( !selectedUsersSet.has( value[ i ].value ) ) {\n\t\t\t\tnewValue.push( value[ i ] );\n\t\t\t\tselectedUsersSet.add( value[ i ].value );\n\t\t\t}\n\t\t}\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\tusers: newValue.filter( x => !removeIds.has( x.value ) ),\n\t\t\tactiveCohorts: newActiveCohorts\n\t\t});\n\t}, [ formValues, users ] );\n\treturn (\n\t\t<Modal size=\"lg\" show={show} onHide={onHide}>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title as=\"h3\">{`${t('calculate-scores-for')} ${metricName}`} </Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Container>\n\t\t\t\t\t<Form.Group className=\"mb-2\" as={Row} controlId=\"multiplesPolicy\" >\n\t\t\t\t\t\t<Form.Label column sm={3} >\n\t\t\t\t\t\t\t{t('multiples-policy')}\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Col sm={8} >\n\t\t\t\t\t\t\t<SelectInput value={formValues.policyOptions.multiples} options={MULTIPLES_POLICIES} onChange={handleMultiplesPolicyChange} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={1} >\n\t\t\t\t\t\t\t<HelpIcon>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{t('multiples-policy-description')}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</HelpIcon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className=\"mb-2\" as={Row} controlId=\"timeFilter\" >\n\t\t\t\t\t\t<Form.Label column sm={3} >\n\t\t\t\t\t\t\t{t('time-filter')}\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Col sm={8} >\n\t\t\t\t\t\t\t<DateTimeRangePicker onChange={onTimeChange} value={formValues.policyOptions.timeFilter} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={1} >\n\t\t\t\t\t\t\t<HelpIcon>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{t('time-filter-description')}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</HelpIcon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className=\"mb-2\" as={Row} controlId=\"users\" >\n\t\t\t\t\t\t<Form.Label column sm={3} >\n\t\t\t\t\t\t\t{t('users')}\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Col sm={8} >\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tvalue={formValues.users} isMulti\n\t\t\t\t\t\t\t\toptions={selectOptions} onChange={handleUserSelectChange}\n\t\t\t\t\t\t\t\thideSelectedOptions={true}\n\t\t\t\t\t\t\t\tstyles={userSelectStyles}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={1} >\n\t\t\t\t\t\t\t<HelpIcon>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{t('users-description')}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</HelpIcon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group className=\"mb-2\" as={Row} controlId=\"users\" >\n\t\t\t\t\t\t<Form.Label column sm={3} >\n\t\t\t\t\t\t\t{t('tag-weights')}\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Col sm={8} >\n\t\t\t\t\t\t\t<TagWeightInput value={formValues.policyOptions.tagWeights} onChange={handleTagWeightsChange} t={t} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={1} >\n\t\t\t\t\t\t\t<HelpIcon>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{t('tag-weights-description')}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</HelpIcon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Container>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button onClick={onHide}>\n\t\t\t\t\t{t('common:cancel')}\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"success\" onClick={handleCompute} disabled={formValues.users.length === 0}>\n\t\t\t\t\t{t('common:calculate')}\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n}\n\n\n// PROPERTIES //\n\nComputeModal.propTypes = {\n\tcohorts: PropTypes.array.isRequired,\n\tcomputeCompletions: PropTypes.func.isRequired,\n\tentity: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf( PropTypes.object ),\n\t\tPropTypes.object\n\t]).isRequired,\n\tlevel: PropTypes.string.isRequired,\n\tmetric: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf( PropTypes.object ),\n\t\tPropTypes.object\n\t]).isRequired,\n\tonCompute: PropTypes.func.isRequired,\n\tonHide: PropTypes.func.isRequired,\n\tshow: PropTypes.bool.isRequired,\n\ttags: PropTypes.array\n};\n\nComputeModal.defaultProps = {\n\ttags: null\n};\n\n\n// EXPORTS //\n\nexport default ComputeModal;\n","/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-dashboard program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// MODULES //\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\n// MAIN //\r\n\r\n/**\r\n * A confirmation modal component.\r\n *\r\n * @param {Object} props - component properties\r\n * @param {string} props.title - modal title\r\n * @param {string} props.message - modal message\r\n * @param {boolean} props.show - boolean indicating whether the modal is visible\r\n * @param {Function} props.close - callback to invoke upon hiding the modal\r\n * @param {Function} props.onConfirm - callback to invoke upon confirming the modal\r\n * @returns {ReactElement} modal component\r\n */\r\nconst ConfirmModal = ( props ) => (\r\n\t<Modal show={props.show} onHide={props.close} >\r\n\t\t<Modal.Header>\r\n\t\t\t<Modal.Title as=\"h3\">{props.title}</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t\t<Modal.Body>\r\n\t\t\t{props.message}\r\n\t\t</Modal.Body>\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button onClick={props.close}>\r\n\t\t\t\t{props.t('cancel')}\r\n\t\t\t</Button>\r\n\t\t\t<Button variant=\"danger\" onClick={props.onConfirm}>\r\n\t\t\t\t{props.t('confirm')}\r\n\t\t\t</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal>\r\n);\r\n\r\n\r\n// PROPERTIES //\r\n\r\nConfirmModal.propTypes = {\r\n\tclose: PropTypes.func,\r\n\tmessage: PropTypes.node,\r\n\tonConfirm: PropTypes.func,\r\n\tshow: PropTypes.bool,\r\n\ttitle: PropTypes.string\r\n};\r\n\r\nConfirmModal.defaultProps = {\r\n\tclose() {},\r\n\tmessage: '',\r\n\tonConfirm() {},\r\n\tshow: false,\r\n\ttitle: ''\r\n};\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default withTranslation( [ 'common' ] )( ConfirmModal );\r\n","/*\r\n* Adapted from:\r\n*\r\n* FileSaver.js\r\n* A saveAs() FileSaver implementation.\r\n* 1.3.8\r\n* 2018-03-22 14:03:47\r\n*\r\n* By Eli Grey, https://eligrey.com\r\n* License: MIT\r\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n*\r\n* @source http://purl.eligrey.com/github/FileSaver.js/blob/master/src/FileSaver.js\r\n*/\r\n\r\n// VARIABLES //\r\n\r\nconst RE_AUTO_BOM = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\r\nconst ARBITRARY_REVOKE_TIMEOUT = 1000 * 40; // Time in ms\r\n\r\n\r\n// FUNCTIONS //\r\n\r\nfunction click(node) {\r\n\tconst event = new MouseEvent( 'click' );\r\n\tnode.dispatchEvent( event );\r\n}\r\n\r\nfunction throwOutside( ex ) {\r\n\tsetImmediate(function throwEx() {\r\n\t\tthrow ex;\r\n\t}, 0 );\r\n}\r\n\r\nfunction autoBOM( blob ) {\r\n\t// Prepend BOM for UTF-8 XML and text/* types (including HTML). Note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n\tif ( RE_AUTO_BOM.test( blob.type ) ) {\r\n\t\treturn new Blob([ String.fromCharCode( 0xFEFF ), blob ], {\r\n\t\t\ttype: blob.type\r\n\t\t});\r\n\t}\r\n\treturn blob;\r\n}\r\n\r\nfunction dispatch( filesaver, eventTypes, event ) {\r\n\teventTypes = [].concat( eventTypes );\r\n\tlet i = eventTypes.length;\r\n\twhile ( i-- ) {\r\n\t\tlet listener = filesaver[ 'on' + eventTypes[i] ];\r\n\t\tif ( typeof listener === 'function' ) {\r\n\t\t\ttry {\r\n\t\t\t\tlistener.call( filesaver, event || filesaver );\r\n\t\t\t} catch ( ex ) {\r\n\t\t\t\tthrowOutside( ex );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// MAIN //\r\n\r\nfunction saveFactory( view ) {\r\n\tif (\r\n\t\ttypeof view === 'undefined' ||\r\n\t\ttypeof navigator !== 'undefined' &&\r\n\t\t/MSIE [1-9]\\./.test( navigator.userAgent )\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\tconst doc = view.document;\r\n\r\n\t// Only get URL when necessary in case Blob.js hasn't overridden it yet:\r\n\tfunction getURL() {\r\n\t\treturn view.URL || view.webkitURL || view;\r\n\t}\r\n\tfunction revoke( file ) {\r\n\t\tfunction revoker() {\r\n\t\t\tif ( typeof file === 'string' ) { // File is an object URL...\r\n\t\t\t\tgetURL().revokeObjectURL(file);\r\n\t\t\t} else { // File is a File...\r\n\t\t\t\tfile.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetTimeout( revoker, ARBITRARY_REVOKE_TIMEOUT );\r\n\t}\r\n\r\n\tconst saveLink = doc.createElementNS( 'http://www.w3.org/1999/xhtml', 'a' );\r\n\tconst canUseSaveLink = 'download' in saveLink;\r\n\tconst isSafari = /constructor/i.test( view.HTMLElement ) || view.safari;\r\n\tconst isChromeIOS =/CriOS\\/[\\d]+/.test( navigator.userAgent );\r\n\tconst setImmediate = view.setImmediate || view.setTimeout;\r\n\tconst forceSavableType = 'application/octet-stream';\r\n\r\n\tfunction FileSaver(blob, name, noAutoBOM ) {\r\n\t\tif ( !noAutoBOM ) {\r\n\t\t\tblob = autoBOM(blob);\r\n\t\t}\r\n\t\t// First try a.download, then web filesystem, then object URLs\r\n\t\tconst self = this;\r\n\t\tconst type = blob.type;\r\n\t\tconst force = type === forceSavableType;\r\n\t\tlet objectURL;\r\n\t\tfunction dispatchAll() {\r\n\t\t\tdispatch( self, 'writestart progress write writeend'.split(' ') );\r\n\t\t}\r\n\t\t// On any filesystem errors, revert to saving with object URLs:\r\n\t\tfunction fsError() {\r\n\t\t\tif ((isChromeIOS || (force && isSafari)) && view.FileReader) {\r\n\t\t\t\t// Safari doesn't allow downloading of blob urls\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.onloadend = function onLoadEnd() {\r\n\t\t\t\t\tlet url = isChromeIOS ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n\t\t\t\t\tconst popup = view.open(url, '_blank');\r\n\t\t\t\t\tif ( !popup ) {\r\n\t\t\t\t\t\tview.location.href = url;\r\n\t\t\t\t\t}\r\n\t\t\t\t\turl = void 0; // Release reference before dispatching...\r\n\t\t\t\t\tself.readyState = self.DONE;\r\n\t\t\t\t\tdispatchAll();\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\tself.readyState = self.INIT;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Don't create more object URLs than needed:\r\n\t\t\tif ( !objectURL ) {\r\n\t\t\t\tobjectURL = getURL().createObjectURL( blob );\r\n\t\t\t}\r\n\t\t\tif ( force ) {\r\n\t\t\t\tview.location.href = objectURL;\r\n\t\t\t} else {\r\n\t\t\t\tconst opened = view.open( objectURL, '_blank' );\r\n\t\t\t\tif ( !opened ) {\r\n\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\r\n\t\t\t\t\tview.location.href = objectURL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tself.readyState = self.DONE;\r\n\t\t\tdispatchAll();\r\n\t\t\trevoke( objectURL );\r\n\t\t}\r\n\t\tself.readyState = self.INIT;\r\n\r\n\t\tif ( canUseSaveLink ) {\r\n\t\t\tobjectURL = getURL().createObjectURL(blob);\r\n\t\t\tsetImmediate(function save() {\r\n\t\t\t\tsaveLink.href = objectURL;\r\n\t\t\t\tsaveLink.download = name;\r\n\t\t\t\tclick( saveLink );\r\n\t\t\t\tdispatchAll();\r\n\t\t\t\trevoke( objectURL );\r\n\t\t\t\tself.readyState = self.DONE;\r\n\t\t\t}, 0);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfsError();\r\n\t}\r\n\tconst proto = FileSaver.prototype;\r\n\tfunction saveAs( blob, name, noAutoBOM ) {\r\n\t\treturn new FileSaver( blob, name || blob.name || 'download', noAutoBOM );\r\n\t}\r\n\r\n\t// IE 10+ (native saveAs)\r\n\tif ( typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob ) {\r\n\t\treturn function saveAs( blob, name, noAutoBOM ) {\r\n\t\t\tname = name || blob.name || 'download';\r\n\t\t\tif ( !noAutoBOM ) {\r\n\t\t\t\tblob = autoBOM( blob );\r\n\t\t\t}\r\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\r\n\t\t};\r\n\t}\r\n\r\n\tproto.abort = function abort() {};\r\n\tproto.readyState = proto.INIT = 0;\r\n\tproto.WRITING = 1;\r\n\tproto.DONE = 2;\r\n\r\n\tproto.error = null;\r\n\tproto.onwritestart = null;\r\n\tproto.onprogress = null;\r\n\tproto.onwrite = null;\r\n\tproto.onabort = null;\r\n\tproto.onerror = null;\r\n\tproto.onwriteend = null;\r\n\r\n\treturn saveAs;\r\n}\r\n\r\nconst saveAs = saveFactory(\r\n\ttypeof self !== 'undefined' && self ||\r\n\ttypeof window !== 'undefined' && window ||\r\n\tthis.content\r\n);\r\n\r\n\r\n// EXPORTS //\r\n\r\nexport default saveAs;\r\n"],"sourceRoot":""}