{"version":3,"file":"static/js/4893.21de18d7.chunk.js","mappings":"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","sources":["../node_modules/@isle-project/components/collapse/index.js","../node_modules/@isle-project/components/panel/index.js","../node_modules/@isle-project/utils/stop-propagation/index.js","../node_modules/@isle-project/components/data-explorer/variable-transformer/bin_transformer.js","../node_modules/@isle-project/components/data-explorer/variable-transformer/formula_transformer.js","../node_modules/@isle-project/components/data-explorer/variable-transformer/categorical_transformer.js","../node_modules/@isle-project/components/data-explorer/variable-transformer/group_transformer.js","../node_modules/@isle-project/components/data-explorer/variable-transformer/index.js","../node_modules/@stdlib/assert/is-digit-string/lib/index.js","../node_modules/@stdlib/assert/is-digit-string/lib/main.js","../node_modules/@stdlib/random/base/uniform/lib/factory.js","../node_modules/@stdlib/random/base/uniform/lib/index.js","../node_modules/@stdlib/random/base/uniform/lib/main.js","../node_modules/@stdlib/random/base/uniform/lib/uniform.js","../node_modules/@stdlib/random/base/uniform/lib/validate.js","../node_modules/react-bootstrap/esm/ButtonToolbar.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Collapse = Loadable( () => import( /* webpackChunkName: \"Collapse\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Collapse;\n","// MODULES //\n\nimport Loadable from '@isle-project/components/internal/loadable';\n\n\n// MAIN //\n\nconst Panel = Loadable( () => import( /* webpackChunkName: \"Panel\" */ './main.js' ) );\n\n\n// EXPORTS //\n\nexport default Panel;\n","// MAIN //\n\nfunction stopPropagation( event ) {\n\tevent.stopPropagation();\n}\n\n\n// EXPORTS //\n\nexport default stopPropagation;\n","// MODULES //\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormText from 'react-bootstrap/FormText';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport runif from '@stdlib/random/base/uniform';\nimport keys from '@stdlib/utils/keys';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport copy from '@stdlib/utils/copy';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport NumberInput from '@isle-project/components/input/number';\nimport SelectInput from '@isle-project/components/input/select';\nimport TextInput from '@isle-project/components/input/text';\nimport Draggable from '@isle-project/components/draggable';\nimport Plotly from '@isle-project/components/plotly';\nimport Panel from '@isle-project/components/panel';\nimport TeX from '@isle-project/components/tex';\nimport isnan from '@stdlib/assert/is-nan';\nimport factor from '@isle-project/utils/factor-variable';\nimport mean from '@isle-project/utils/statistic/mean.js';\nimport min from '@isle-project/utils/statistic/min.js';\nimport max from '@isle-project/utils/statistic/max.js';\nimport { DATA_EXPLORER_BIN_TRANSFORMER } from '@isle-project/constants/actions.js';\nimport { generateHistogramConfig } from '@isle-project/components/plots/histogram';\nimport stopPropagation from '@isle-project/utils/stop-propagation';\nimport retrieveBinnedValues from './retrieve_binned_values.js';\nimport ClearButton from './../clear_button.js';\nimport './bin_transformer.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:variable-transformer' );\nconst RE_SHAPE = /shapes\\[(\\d)\\]\\.x0/;\nconst HISTOGRAM_SETTINGS = {\n\tgroup: null,\n\tdisplayDensity: true,\n\tdensityType: 'Data-driven',\n\tchooseBins: false,\n\tnBins: null\n};\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first number\n* @param {number} b - second number\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n/**\n* Function to make shapes from breakpoints.\n*/\nconst makeShapes = ( breakpoints ) => {\n\tconst breakShapes = [];\n\tfor ( let i = 0; i < breakpoints.length; i++ ) {\n\t\tbreakShapes.push({\n\t\t\ttype: 'line',\n\t\t\tx0: breakpoints[i],\n\t\t\ty0: -100,\n\t\t\tx1: breakpoints[i],\n\t\t\ty1: 100,\n\t\t\tline: {\n\t\t\t\tcolor: 'red',\n\t\t\t\twidth: 3\n\t\t\t}\n\t\t});\n\t}\n\treturn breakShapes;\n};\n\n/**\n* Creates an array of category names for created bins.\n*\n* @param {Array<number>} breakpoints - breakpoints\n* @param {Array<string>} customNames - custom category labels\n* @returns {Array<string>} array of bin labels\n*/\nconst createCategoryNames = ( breakpoints, customNames ) => {\n\tconst out = new Array( customNames.length );\n\tif ( customNames[ 0 ] ) {\n\t\tout[ 0 ] = customNames[ 0 ];\n\t} else {\n\t\tout[ 0 ] = `(-\\u221E,${breakpoints[0]})`; // eslint-disable-line i18next/no-literal-string\n\t}\n\tfor ( let i = 1; i < customNames.length; i++ ) {\n\t\tif ( customNames[ i ] ) {\n\t\t\tout[ i ] = customNames[ i ];\n\t\t} else {\n\t\t\tout[ i ] = `[${breakpoints[i-1]},${breakpoints[i]})`;\n\t\t}\n\t}\n\tconst last = customNames.length - 1;\n\tif ( customNames[ last ] ) {\n\t\tout[ last ] = customNames[ last ];\n\t} else {\n\t\tout[ last ] = `[${breakpoints[ breakpoints.length - 1 ]},\\u221E)`; // eslint-disable-line i18next/no-literal-string\n\t}\n\treturn out;\n};\n\n\n// MAIN //\n\nconst BinningTransformer = ( props ) => {\n\tconst [ name, setName ] = useState( '' );\n\tconst [ snapDigits, setSnapDigits ] = useState( 0 );\n\tconst [ state, setState ] = useState({\n\t\tvariable: null,\n\t\tconfigHist: null,\n\t\tbreakpoints: null,\n\t\tcategories: null,\n\t\tcustomNames: null\n\t});\n\tconst invalidName = name.length < 2;\n\tconst makeNewVar = () => {\n\t\tconst { variable, categories, breakpoints } = state;\n\t\tconst rawData = props.data[ variable ];\n\t\tconst values = retrieveBinnedValues( rawData, categories, breakpoints );\n\t\tprops.logAction( DATA_EXPLORER_BIN_TRANSFORMER, {\n\t\t\tname,\n\t\t\tvariable,\n\t\t\tbreaks: breakpoints,\n\t\t\tcategories\n\t\t});\n\t\tconst newName = factor( name, categories );\n\t\tprops.onGenerate( newName, values );\n\t\tprops.onHide();\n\t};\n\tconst handleKeyPress = ( event ) => {\n\t\t// Handle \"Return\" key:\n\t\tif ( event.charCode === 13 && !invalidName ) {\n\t\t\tmakeNewVar();\n\t\t}\n\t};\n\tconst handleNameChange = ( event ) => {\n\t\tsetName( event.target.value );\n\t};\n\tconst changeFactory = ( ind ) => {\n\t\treturn ( value ) => {\n\t\t\tdebug( 'Change break point...' );\n\t\t\tconst newBreakpoints = state.breakpoints.slice();\n\t\t\tnewBreakpoints[ ind ] = roundn( value, -snapDigits );\n\t\t\tnewBreakpoints.sort( ascending );\n\t\t\tconst configHist = copy( state.configHist );\n\t\t\tconfigHist.layout.shapes = makeShapes( newBreakpoints );\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tconfigHist,\n\t\t\t\tbreakpoints: newBreakpoints,\n\t\t\t\tcategories: createCategoryNames( newBreakpoints, state.customNames )\n\t\t\t});\n\t\t};\n\t};\n\tconst categoryChangeFactory = ( ind ) => {\n\t\treturn ( value ) => {\n\t\t\tconst newCategories = state.categories.slice();\n\t\t\tnewCategories[ ind ] = value;\n\t\t\tconst newCustomNames = state.customNames.slice();\n\t\t\tnewCustomNames[ ind ] = value;\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\tcategories: newCategories,\n\t\t\t\tcustomNames: newCustomNames\n\t\t\t};\n\t\t\tsetState( newState );\n\t\t};\n\t};\n\tconst deleteBreakpoint = ( ind ) => {\n\t\treturn () => {\n\t\t\tconst { breakpoints, categories, customNames } = state;\n\n\t\t\t// Remove the elements at the specified index:\n\t\t\tbreakpoints.splice( ind, 1 );\n\t\t\tcategories.splice( ind, 1 );\n\t\t\tcustomNames.splice( ind, 1 );\n\t\t\tconst configHist = { ...state.configHist };\n\t\t\tconfigHist.layout.shapes = makeShapes( breakpoints );\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tconfigHist,\n\t\t\t\tcategories,\n\t\t\t\tcustomNames,\n\t\t\t\tbreakpoints\n\t\t\t});\n\t\t};\n\t};\n\tconst makeTextInputs = () => {\n\t\tconst inputs = [];\n\t\tconst breakpoints = state.breakpoints;\n\t\tconst disableButton = breakpoints.length === 1;\n\t\tinputs.push( <Row key=\"div-0\">\n\t\t\t<Col md={7}>\n\t\t\t\t<TeX\n\t\t\t\t\traw=\"x < \"\n\t\t\t\t/><NumberInput\n\t\t\t\t\tinline\n\t\t\t\t\tonBlur={changeFactory( 0 )}\n\t\t\t\t\tdefaultValue={breakpoints[0]}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t\t<Col md={4}>\n\t\t\t\t<TextInput\n\t\t\t\t\tkey={0}\n\t\t\t\t\tlegend={`${props.t('label')} 1`}\n\t\t\t\t\tdefaultValue={state.categories[ 0 ]}\n\t\t\t\t\tonChange={categoryChangeFactory( 0 )}\n\t\t\t\t\tstyle={{ width: 200 }}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t\t<Col md={1}></Col>\n\t\t</Row> );\n\t\tif ( breakpoints.length > 1 ) {\n\t\t\tfor ( let i = 0; i < breakpoints.length - 1; i++ ) {\n\t\t\t\tconst changeFn = categoryChangeFactory( i+1 );\n\t\t\t\tinputs.push( <Row key={`div-${i+1}`}>\n\t\t\t\t\t<Col md={7}>\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\tonBlur={changeFactory( i )}\n\t\t\t\t\t\t\tdefaultValue={breakpoints[i]}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TeX raw=\"\\le x <\" />\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\tonBlur={changeFactory( i+1 )}\n\t\t\t\t\t\t\tdefaultValue={breakpoints[i+1]}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tkey={1+i}\n\t\t\t\t\t\t\tlegend={`${props.t('label')} ${i+2}`}\n\t\t\t\t\t\t\tdefaultValue={state.categories[ i+1 ]}\n\t\t\t\t\t\t\tonChange={changeFn}\n\t\t\t\t\t\t\tstyle={{ width: 200 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={1}>\n\t\t\t\t\t\t<ClearButton\n\t\t\t\t\t\t\tonClick={deleteBreakpoint(i)}\n\t\t\t\t\t\t\tstyle={{ marginTop: '5px' }}\n\t\t\t\t\t\t\tdisabled={disableButton}\n\t\t\t\t\t\t\ttooltipPlacement=\"right\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> );\n\t\t\t}\n\t\t}\n\t\tconst len = breakpoints.length;\n\t\tinputs.push( <Row key={`div-${len}`}>\n\t\t\t<Col md={7}>\n\t\t\t\t<TeX raw=\"x \\ge\" />\n\t\t\t\t<NumberInput\n\t\t\t\t\tinline\n\t\t\t\t\tonChange={changeFactory( len-1 )}\n\t\t\t\t\tdefaultValue={breakpoints[ len-1 ]}\n\t\t\t\t\tstep=\"any\"\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t\t<Col md={4}>\n\t\t\t\t<TextInput\n\t\t\t\t\tlegend={`Label ${len+1}`}\n\t\t\t\t\tdefaultValue={state.categories[ len ]}\n\t\t\t\t\tonChange={categoryChangeFactory( len )}\n\t\t\t\t\tkey={len}\n\t\t\t\t\tstyle={{ width: 200 }}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t\t<Col md={1}>\n\t\t\t\t<ClearButton\n\t\t\t\t\tonClick={deleteBreakpoint( len - 1 )}\n\t\t\t\t\tstyle={{ marginTop: '5px' }}\n\t\t\t\t\tdisabled={disableButton}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t</Row> );\n\t\treturn inputs;\n\t};\n\tconst onChangeHistLine = ( data ) => {\n\t\tconst keyUpdate = keys( data );\n\t\tconst matches = RE_SHAPE.exec( keyUpdate[ 0 ] );\n\t\tif ( matches ) {\n\t\t\tconst ind = matches[ 1 ];\n\t\t\tconst newBreakpoints = state.breakpoints.slice();\n\t\t\tnewBreakpoints[ ind ] = roundn( data[ keyUpdate[0] ], -snapDigits );\n\t\t\tnewBreakpoints.sort( ascending );\n\t\t\tconst configHist = copy( state.configHist );\n\t\t\tconfigHist.layout.shapes = makeShapes( newBreakpoints );\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tconfigHist,\n\t\t\t\tbreakpoints: newBreakpoints,\n\t\t\t\tcategories: createCategoryNames( newBreakpoints, state.customNames )\n\t\t\t});\n\t\t}\n\t};\n\tconst handleVariableChange = ( value ) => {\n\t\tdebug( 'Change variable to bin...' );\n\t\tconst histConfigSettings = {\n\t\t\tdata: props.data,\n\t\t\tvariable: value,\n\t\t\t...HISTOGRAM_SETTINGS\n\t\t};\n\t\tconst configHist = generateHistogramConfig( histConfigSettings );\n\t\tconfigHist.layout.yaxis = {\n\t\t\trange: [\n\t\t\t\tmin( configHist.data[ 1 ].y ),\n\t\t\t\tmax( configHist.data[ 1 ].y )\n\t\t\t],\n\t\t\tfixedrange: true\n\t\t};\n\t\tconfigHist.layout.xaxis = {\n\t\t\tfixedrange: true\n\t\t};\n\t\tlet values = props.data[ value ];\n\t\tvalues = values.filter( x => isNumber( x ) && !isnan( x ) );\n\t\tconst breakpoints = [ roundn( mean( values ), -snapDigits ) ];\n\t\tconfigHist.layout.shapes = makeShapes( breakpoints );\n\t\tconst customNames = [ false, false ];\n\t\tsetState({\n\t\t\tvariable: value,\n\t\t\tconfigHist,\n\t\t\tbreakpoints,\n\t\t\tcustomNames,\n\t\t\tcategories: createCategoryNames( breakpoints, customNames )\n\t\t});\n\t};\n\tconst addBreakpoint = () => {\n\t\tconst newBreakpoints = state.breakpoints.slice();\n\t\tlet values = props.data[ state.variable ];\n\t\tvalues = values.filter( x => isNumber( x ) && !isnan( x ) );\n\t\tconst avg = runif( 0.8, 1.2 ) * mean( values );\n\t\tnewBreakpoints.push( roundn( avg, -snapDigits ) );\n\t\tnewBreakpoints.sort( ascending );\n\n\t\tconst configHist = copy( state.configHist );\n\t\tconfigHist.layout.shapes = makeShapes( newBreakpoints );\n\n\t\tconst customNames = state.customNames;\n\t\tcustomNames.push( false );\n\n\t\tconst newState = {\n\t\t\t...state,\n\t\t\tbreakpoints: newBreakpoints,\n\t\t\tconfigHist,\n\t\t\tcategories: createCategoryNames( newBreakpoints, customNames )\n\t\t};\n\t\tsetState( newState );\n\t};\n\tconst renderBody = () => {\n\t\tconst configHist = state.configHist;\n\t\tconst select = <SelectInput\n\t\t\tlegend={props.t('variable-to-bin')}\n\t\t\tdefaultValue={state.variable}\n\t\t\toptions={props.quantitative}\n\t\t\tonChange={handleVariableChange}\n\t\t\tstyle={{ maxWidth: 400 }}\n\t\t/>;\n\t\tif ( !configHist ) {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t{select}\n\t\t\t\t\t<Alert variant=\"info\">{props.t('select-variable-bin')}</Alert>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{select}\n\t\t\t\t<Button className=\"insert-line-button\" onClick={addBreakpoint}>\n\t\t\t\t\t{props.t('insert-break-line')}\n\t\t\t\t</Button>\n\t\t\t\t<p>\n\t\t\t\t\t{props.t('drag-red-bars')}\n\t\t\t\t\t(<NumberInput legend={props.t('digits-after-comma-snap')} min={0} max={9} inline defaultValue={snapDigits} onChange={setSnapDigits} />)\n\t\t\t\t</p>\n\t\t\t\t<div style={{ height: 250 }}>\n\t\t\t\t\t<Plotly\n\t\t\t\t\t\tdata={configHist.data}\n\t\t\t\t\t\tlayout={configHist.layout}\n\t\t\t\t\t\teditable\n\t\t\t\t\t\tfit\n\t\t\t\t\t\tremoveButtons\n\t\t\t\t\t\tlegendButtons={false}\n\t\t\t\t\t\tonRelayout={onChangeHistLine}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Card className=\"mb-2\" >\n\t\t\t\t\t\t<Card.Header>{props.t('choose-category-labels')}:</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t{makeTextInputs()}\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t<FormGroup style={{ width: 'fit-content' }} >\n\t\t\t\t\t<FormLabel>{props.t('name-new-variable')}:</FormLabel>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder={props.t('select-name')}\n\t\t\t\t\t\tonChange={handleNameChange}\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormText>\n\t\t\t\t\t\t{props.t('new-variable-appended')}\n\t\t\t\t\t</FormText>\n\t\t\t\t</FormGroup>\n\t\t\t</Fragment>\n\t\t);\n\t};\n\treturn (\n\t\t<Draggable cancel=\".card-body\" onDragStart={stopPropagation} style={{ zIndex: 1006 }} >\n\t\t\t<Panel\n\t\t\t\tonHide={props.onHide}\n\t\t\t\tshow={props.show}\n\t\t\t\theader={props.t('bin-transformer-header')}\n\t\t\t\tfooter={<Button onClick={makeNewVar} disabled={invalidName} >\n\t\t\t\t\t{props.t('create-new-variable')}\n\t\t\t\t</Button>}\n\t\t\t\tbodyStyle={{\n\t\t\t\t\tmaxHeight: 'calc(100vh - 200px)',\n\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\tposition: 'relative'\n\t\t\t\t}}\n\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t>\n\t\t\t\t{renderBody()}\n\t\t\t</Panel>\n\t\t</Draggable>\n\t);\n};\n\n\n// PROPERTIES //\n\nBinningTransformer.defaultProps = {\n\tlogAction() {},\n\tonGenerate() {}\n};\n\nBinningTransformer.propTypes = {\n\tshow: PropTypes.bool.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tlogAction: PropTypes.func,\n\tonHide: PropTypes.func.isRequired,\n\tonGenerate: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default BinningTransformer;\n","// MODULES //\n\nimport React, { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Trans } from 'react-i18next';\nimport Table from 'react-bootstrap/Table';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormText from 'react-bootstrap/FormText';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Draggable from '@isle-project/components/draggable';\nimport Panel from '@isle-project/components/panel';\nimport Collapse from '@isle-project/components/collapse';\nimport TextArea from '@isle-project/components/input/text-area';\nimport Tooltip from '@isle-project/components/tooltip';\nimport incrspace from '@stdlib/array/incrspace';\nimport contains from '@stdlib/assert/contains';\nimport replace from '@stdlib/string/replace';\nimport { DATA_EXPLORER_VARIABLE_TRANSFORMER } from '@isle-project/constants/actions.js';\nimport valuesFromFormula from './values_from_formula.js';\nimport FUNCTION_KEYS from './function_keys.json';\nimport './formula_transformer.css';\n\n\n// VARIABLES //\n\nconst DIGITS = incrspace( 0, 10, 1 );\nconst RE_LAST_EXPRESSION = /(?:^|\\n)([^\\n]*)$/;\nconst RE_DIGITS_START = /^[0-9]/;\n\n\n// FUNCTIONS //\n\nconst CustomMenu = React.forwardRef(\n\t({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n\t\tconst [value, setValue] = useState( '' );\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tstyle={style}\n\t\t\t\tclassName={className}\n\t\t\t\taria-labelledby={labeledBy}\n\t\t\t>\n\t\t\t<FormControl\n\t\t\t\tclassName=\"mx-3 my-2 w-auto\"\n\t\t\t\tplaceholder=\"Type to filter...\"\n\t\t\t\tonChange={e => setValue(e.target.value)}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t\t{React.Children.toArray(children).filter(\n\t\t\t\t\t\tchild =>\n\t\t\t\t\t\t!value || child.props.children.toLowerCase().startsWith(value),\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t},\n);\n\n\n// MAIN //\n\nclass FormulaTransformer extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tcode: props.defaultCode,\n\t\t\tselection: null,\n\t\t\tname: '',\n\t\t\tshowGuide: false\n\t\t};\n\t}\n\n\thandleGenerate = () => {\n\t\tlet { code, name } = this.state;\n\t\tif ( !contains( code, 'return ' ) ) {\n\t\t\tcode = replace( code, RE_LAST_EXPRESSION, '\\nreturn $1' );\n\t\t}\n\t\tlet values;\n\t\ttry {\n\t\t\tvalues = valuesFromFormula( code, this.props.data );\n\t\t\tthis.props.logAction( DATA_EXPLORER_VARIABLE_TRANSFORMER, {\n\t\t\t\tcode, name\n\t\t\t});\n\t\t\tthis.props.onGenerate( name, values );\n\t\t} catch ( err ) {\n\t\t\treturn this.props.session.addNotification({\n\t\t\t\ttitle: 'Errored',\n\t\t\t\tmessage: 'Encountered the following error: '+err.message,\n\t\t\t\tlevel: 'error',\n\t\t\t\tposition: 'tr'\n\t\t\t});\n\t\t}\n\t\tthis.props.onHide();\n\t}\n\n\thandleNameChange = ( event ) => {\n\t\tthis.setState({\n\t\t\tname: event.target.value\n\t\t});\n\t}\n\n\thandleCodeChange = ( value ) => {\n\t\tthis.setState({\n\t\t\tcode: value\n\t\t});\n\t}\n\n\thandleKeyPress = ( event ) => {\n\t\tif ( event.charCode === 13 && this.state.name.length >= 2 ) {\n\t\t\tthis.handleGenerate();\n\t\t}\n\t}\n\n\tinsertVarFactory = ( name ) => {\n\t\treturn () => {\n\t\t\tlet newCode = this.state.code.substring( 0, this.state.selection );\n\t\t\tlet replacement = 'datum';\n\t\t\tconst literal =\n\t\t\t\t!contains( name, ' ' ) &&\n\t\t\t\t!contains( name, '.' ) &&\n\t\t\t\t!RE_DIGITS_START.test( name );\n\t\t\treplacement += literal ? `.${name}` : `['${name}']`;\n\t\t\tnewCode += replacement;\n\t\t\tnewCode += this.state.code.substring( this.state.selection );\n\t\t\tthis.setState({\n\t\t\t\tcode: newCode,\n\t\t\t\tselection: this.state.selection + replacement.length\n\t\t\t});\n\t\t};\n\t}\n\n\tinsertLiteralFactory = ( operator ) => {\n\t\treturn () => {\n\t\t\tlet newCode = this.state.code.substring( 0, this.state.selection );\n\t\t\tconst replacement = operator;\n\t\t\tnewCode += replacement;\n\t\t\tnewCode += this.state.code.substring( this.state.selection );\n\t\t\tthis.setState({\n\t\t\t\tcode: newCode,\n\t\t\t\tselection: this.state.selection + replacement.length\n\t\t\t});\n\t\t};\n\t}\n\n\tinsertFuncFactory = ( funcName ) => {\n\t\treturn () => {\n\t\t\tlet newCode = this.state.code.substring( 0, this.state.selection );\n\t\t\tconst replacement = ' '+funcName+'()';\n\t\t\tnewCode += replacement;\n\t\t\tnewCode += this.state.code.substring( this.state.selection );\n\t\t\tthis.setState({\n\t\t\t\tcode: newCode,\n\t\t\t\tselection: this.state.selection + replacement.length - 1\n\t\t\t});\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\tconst continuousItems = this.props.quantitative.map( ( v, i ) => {\n\t\t\treturn <Dropdown.Item key={i} onClick={this.insertVarFactory( v )} eventKey={i}>{v}</Dropdown.Item>;\n\t\t});\n\t\treturn (\n\t\t\t<Draggable cancel=\".card-body\" onDragStart={( event ) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}} style={{ zIndex: 1006 }} >\n\t\t\t\t<Panel\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\tonHide={this.props.onHide}\n\t\t\t\t\theader={this.props.t('formula-transformer-header')}\n\t\t\t\t\tfooter={<Button onClick={this.handleGenerate} disabled={this.state.name.length < 2} >{this.props.t('create-new-variable')}</Button>}\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\tmaxHeight: 'calc(100vh - 200px)',\n\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t\tposition: 'relative'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"formula-transformer-body\">\n\t\t\t\t\t\t<Collapse headerClassName=\"title\" header={this.state.showGuide ? t('hide-example-guide') : t('show-example-guide')} visible={this.state.showGuide} onClick={() => this.setState({ showGuide: !this.state.showGuide })}>\n\t\t\t\t\t\t\t<p>{t('formula-transformer-example-intro')}</p>\n\t\t\t\t\t\t\t<Table condensed >\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>{t('type')}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{t('example')}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{t('description')}</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>{t('interaction')}:</td>\n\t\t\t\t\t\t\t\t\t\t<td><code>datum.{this.props.quantitative[0]} * datum.{this.props.quantitative[1]}</code></td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Trans i18nKey=\"example-description-multiply\" ns=\"DataExplorer\" >\n\t\t\t\t\t\t\t\t\t\t\t\tMultiply values of variables <code>{{ first: this.props.quantitative[0] }}</code> and <code>{{ second: this.props.quantitative[1] }}</code>\n\t\t\t\t\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>{t('transformation')}:</td>\n\t\t\t\t\t\t\t\t\t\t<td><code>exp( datum.{this.props.quantitative[0]} )</code></td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Trans i18nKey=\"example-description-exponential\" ns=\"DataExplorer\" >\n\t\t\t\t\t\t\t\t\t\t\t\tNatural exponential function of variable <code>{{ variable: this.props.quantitative[0] }}</code>\n\t\t\t\t\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>{t('function')}:</td>\n\t\t\t\t\t\t\t\t\t\t<td><code>9/5 * {this.props.quantitative[0]} + 32</code></td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Trans i18nKey=\"example-description-calculation\" ns=\"DataExplorer\" >\n\t\t\t\t\t\t\t\t\t\t\t\tMultiply values of <code>{{ variable: this.props.quantitative[0] }}</code> by <code>9/5</code> and add <code>32</code>\n\t\t\t\t\t\t\t\t\t\t\t</Trans>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<div className=\"mb-2\" >\n\t\t\t\t\t\t\t<ButtonToolbar style={{ marginBottom: 5 }} >\n\t\t\t\t\t\t\t\t<Dropdown className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"light\" id=\"dropdown-custom-components\">\n\t\t\t\t\t\t\t\t\t\t{t('quantitative')}\n\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t<Dropdown.Menu variant=\"light\" as={CustomMenu} id=\"bg-nested-dropdown\">\n\t\t\t\t\t\t\t\t\t\t{continuousItems}\n\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t<Dropdown className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"light\" id=\"dropdown-custom-components\">\n\t\t\t\t\t\t\t\t\t\t{t('categorical')}\n\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t<Dropdown.Menu variant=\"light\" as={CustomMenu} id=\"bg-nested-dropdown\">\n\t\t\t\t\t\t\t\t\t\t{this.props.categorical.map( ( v, i ) => {\n\t\t\t\t\t\t\t\t\t\t\treturn <Dropdown.Item key={i} onClick={this.insertVarFactory( v )} eventKey={i}>{v}</Dropdown.Item>;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Card className=\"mb-2\" >\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<ButtonToolbar style={{ marginBottom: 5 }} >\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' < ')} >{'<'}</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' > ')} >{'>'}</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' <= ')} >{'<='}</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' >= ')} >{'>='}</Button>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('open-parenthesis')} ><Button variant=\"light\" onClick={this.insertLiteralFactory(' ( ')} >(</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('closing-parenthesis')} ><Button variant=\"light\" onClick={this.insertLiteralFactory(' ) ')} >)</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('addition')}><Button variant=\"light\" onClick={this.insertLiteralFactory(' + ')} >+</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('subtraction')}><Button variant=\"light\" onClick={this.insertLiteralFactory(' - ')} >-</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('multiplication')}><Button variant=\"light\" onClick={this.insertLiteralFactory(' * ')} >*</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" tooltip={t('division')}><Button variant=\"light\" onClick={this.insertLiteralFactory(' / ')} >/</Button></Tooltip>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' && ')} >{t('and')}</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' || ')} >{t('or')}</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory(' !')} >{t('not')}</Button>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"me-2\">\n\t\t\t\t\t\t\t\t\t\t{FUNCTION_KEYS.map( ( v, i ) => {\n\t\t\t\t\t\t\t\t\t\t\treturn <Button key={i} variant=\"light\" onClick={this.insertFuncFactory( v )} eventKey={i}>{v}</Button>;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t\t\t<ButtonGroup size=\"sm\" className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t{DIGITS.map( ( d, i ) => {\n\t\t\t\t\t\t\t\t\t\t\treturn <Button key={i} variant=\"light\" onClick={this.insertLiteralFactory( `${d}`)} >{d}</Button>;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={this.insertLiteralFactory('.')} >.</Button>\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card className=\"mb-2\" >\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\tref={div => { this.textarea = div; }}\n\t\t\t\t\t\t\t\t\tlegend={`${t('expression')}:`}\n\t\t\t\t\t\t\t\t\tplaceholder={t('enter-formula')}\n\t\t\t\t\t\t\t\t\tvalue={this.state.code}\n\t\t\t\t\t\t\t\t\tonChange={this.handleCodeChange}\n\t\t\t\t\t\t\t\t\tonBlur={( event ) => {\n\t\t\t\t\t\t\t\t\t\tconst selectionStart = event.target.selectionStart;\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tselection: selectionStart\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<FormGroup style={{ margin: 8 }}>\n\t\t\t\t\t\t\t<FormLabel>{t('name-new-variable')}:</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('select-name')}\n\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormText>\n\t\t\t\t\t\t\t\t{t('new-variable-appended')}\n\t\t\t\t\t\t\t</FormText>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</Panel>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nFormulaTransformer.defaultProps = {\n\tlogAction() {},\n\tonGenerate() {},\n\tdefaultCode: '',\n\tsession: {}\n};\n\nFormulaTransformer.propTypes = {\n\tshow: PropTypes.bool.isRequired,\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tdefaultCode: PropTypes.string,\n\tlogAction: PropTypes.func,\n\tonGenerate: PropTypes.func,\n\tonHide: PropTypes.func.isRequired,\n\tsession: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default FormulaTransformer;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Draggable from '@isle-project/components/draggable';\nimport Panel from '@isle-project/components/panel';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormText from 'react-bootstrap/FormText';\nimport Table from '@isle-project/components/table';\nimport objectKeys from '@stdlib/utils/keys';\nimport countBy from '@stdlib/utils/count-by';\nimport identity from '@stdlib/utils/identity-function';\nimport copy from '@stdlib/utils/copy';\nimport replace from '@stdlib/string/replace';\nimport isDigitString from '@stdlib/assert/is-digit-string';\nimport SelectInput from '@isle-project/components/input/select';\nimport CheckboxInput from '@isle-project/components/input/checkbox';\nimport Tooltip from '@isle-project/components/tooltip';\nimport { DATA_EXPLORER_CAT_TRANSFORMER } from '@isle-project/constants/actions.js';\nimport recodeCategorical from './recode_categorical';\nimport extractUsedCategories from '@isle-project/utils/extract-used-categories';\nimport './categorical_transformer.css';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:variable-transformer' );\n\n\n// FUNCTIONS //\n\nfunction escapeDots( str ) {\n\tif ( !str ) {\n\t\treturn str;\n\t}\n\treturn replace( str, '.', '[dot]' );\n}\n\nfunction checkNumericLabels( nameMappings ) {\n\tconst keys = objectKeys( nameMappings );\n\tlet allNumeric = true;\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tif ( !isDigitString( nameMappings[ keys[ i ] ] ) ) {\n\t\t\tallNumeric = false;\n\t\t}\n\t}\n\treturn allNumeric;\n}\n\n\n// MAIN //\n\nclass CategoricalTransformer extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tconst firstVar = props.categorical[ 0 ];\n\t\tconst firstValues = props.data[ firstVar ];\n\t\tconst firstFreqs = countBy( firstValues, identity );\n\t\tconst keys = extractUsedCategories( firstFreqs, firstVar );\n\t\tconst nameMappings = {};\n\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\tnameMappings[ escapeDots( keys[ i ] ) ] = keys[ i ];\n\t\t}\n\t\tthis.state = {\n\t\t\tgeneratedName: '',\n\t\t\tfirstVar,\n\t\t\tfirstFreqs,\n\t\t\tnameMappings,\n\t\t\tsecondVar: null,\n\t\t\tsecondFreqs: null,\n\t\t\tcastNumeric: false,\n\t\t\tonlyNumbers: false\n\t\t};\n\t}\n\n\thandleFirstVariableChange = ( variable ) => {\n\t\tconst nameMappings = {};\n\t\tlet firstFreqs;\n\t\tif ( !this.state.secondVar ) {\n\t\t\tconst firstValues = this.props.data[ variable ];\n\t\t\tfirstFreqs = countBy( firstValues, identity );\n\t\t\tconst keys = extractUsedCategories( firstFreqs, variable );\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tnameMappings[ escapeDots( keys[ i ] ) ] = keys[ i ];\n\t\t\t}\n\t\t} else {\n\t\t\tconst firstVar = variable;\n\t\t\tconst secondVar = this.state.secondVar;\n\t\t\tconst firstValues = this.props.data[ firstVar ];\n\t\t\tfirstFreqs = countBy( firstValues, identity );\n\t\t\tconst firstKeys = extractUsedCategories( firstFreqs, firstVar );\n\t\t\tconst secondKeys = extractUsedCategories( this.state.secondFreqs, secondVar );\n\t\t\tfor ( let i = 0; i < firstKeys.length; i++ ) {\n\t\t\t\tfor ( let j = 0; j < secondKeys.length; j++ ) {\n\t\t\t\t\tconst label = firstKeys[ i ] + '-' + secondKeys[ j ];\n\t\t\t\t\tnameMappings[ escapeDots( label ) ] = label;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst onlyNumbers = checkNumericLabels( nameMappings );\n\t\tthis.setState({\n\t\t\tfirstVar: variable,\n\t\t\tfirstFreqs,\n\t\t\tnameMappings,\n\t\t\tonlyNumbers\n\t\t});\n\t}\n\n\thandleSecondVariableChange = ( secondVar ) => {\n\t\tif ( !secondVar ) {\n\t\t\t// Case: Resetting the second variable...\n\t\t\tconst firstVar = this.state.firstVar;\n\t\t\tconst keys = extractUsedCategories( this.state.firstFreqs, firstVar );\n\t\t\tconst nameMappings = {};\n\t\t\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\t\t\tnameMappings[ escapeDots( keys[ i ] ) ] = keys[ i ];\n\t\t\t}\n\t\t\treturn this.setState({\n\t\t\t\tsecondVar,\n\t\t\t\tnameMappings\n\t\t\t});\n\t\t}\n\t\t// Case: Have both a second and first variable...\n\t\tconst nameMappings = {};\n\t\tconst firstVar = this.state.firstVar;\n\t\tconst secondValues = this.props.data[ secondVar ];\n\t\tconst secondFreqs = countBy( secondValues, identity );\n\t\tconst firstKeys = extractUsedCategories( this.state.firstFreqs, firstVar );\n\t\tconst secondKeys = extractUsedCategories( secondFreqs, secondVar );\n\t\tfor ( let i = 0; i < firstKeys.length; i++ ) {\n\t\t\tfor ( let j = 0; j < secondKeys.length; j++ ) {\n\t\t\t\tconst label = firstKeys[ i ] + '-' + secondKeys[ j ];\n\t\t\t\tnameMappings[ escapeDots( label ) ] = label;\n\t\t\t}\n\t\t}\n\t\tconst onlyNumbers = checkNumericLabels( nameMappings );\n\t\tthis.setState({\n\t\t\tsecondVar,\n\t\t\tsecondFreqs,\n\t\t\tnameMappings,\n\t\t\tonlyNumbers\n\t\t});\n\t}\n\n\thandleKeyPress = ( event ) => {\n\t\tif ( event.charCode === 13 && this.state.generatedName.length >= 2 ) {\n\t\t\tthis.makeNewVar();\n\t\t}\n\t}\n\n\trenderTable() {\n\t\tif ( this.state.firstVar && this.state.secondVar ) {\n\t\t\treturn this.renderContingencyTable();\n\t\t}\n\t\tif ( this.state.firstVar || this.state.secondVar ) {\n\t\t\treturn this.renderFrequencyTable();\n\t\t}\n\t\treturn null;\n\t}\n\n\tchangeFreqFactory = ( oldLabel ) => {\n\t\treturn ( event ) => {\n\t\t\tconst nameMappings = copy( this.state.nameMappings );\n\t\t\tnameMappings[ escapeDots( oldLabel ) ] = event.target.value;\n\t\t\tconst onlyNumbers = checkNumericLabels( nameMappings );\n\t\t\tthis.setState({\n\t\t\t\tnameMappings,\n\t\t\t\tonlyNumbers\n\t\t\t});\n\t\t};\n\t}\n\n\tchangeContigencyFactory = ( rowLabel, colLabel ) => {\n\t\treturn ( event ) => {\n\t\t\tconst nameMappings = copy( this.state.nameMappings );\n\t\t\tnameMappings[ escapeDots( colLabel ) + '-' + escapeDots( rowLabel ) ] = event.target.value;\n\t\t\tthis.setState({\n\t\t\t\tnameMappings\n\t\t\t});\n\t\t};\n\t}\n\n\thandleGeneratedNameChange = ( event ) => {\n\t\tthis.setState({\n\t\t\tgeneratedName: event.target.value\n\t\t});\n\t}\n\n\tmakeNewVar = () => {\n\t\tdebug( 'Generating new categorical variable...' );\n\t\tconst { firstVar, secondVar, nameMappings, castNumeric } = this.state;\n\t\tconst newVar = recodeCategorical( firstVar, secondVar, nameMappings, this.props.data, castNumeric );\n\t\tthis.props.onGenerate( this.state.generatedName, newVar );\n\t\tthis.props.logAction( DATA_EXPLORER_CAT_TRANSFORMER, {\n\t\t\tname: this.state.generatedName,\n\t\t\tfirstVar: firstVar,\n\t\t\tsecondVar: secondVar,\n\t\t\tnameMappings: nameMappings,\n\t\t\tcastNumeric: castNumeric\n\t\t});\n\t\tthis.props.onHide();\n\t}\n\n\trenderFrequencyTable = () => {\n\t\tconst variable = this.state.firstVar;\n\t\tconst values = this.props.data[ variable ];\n\t\tconst varFreqs = countBy( values, identity );\n\t\tconst keys = extractUsedCategories( varFreqs, variable );\n\t\treturn (\n\t\t\t<Table bordered style={{ margin: 8 }} >\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{this.props.t('old')}:</th>\n\t\t\t\t\t\t{keys.map( ( val, idx ) => {\n\t\t\t\t\t\t\treturn <th key={`${variable}-${idx}-old`}>{val}</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{this.props.t('new')}:</th>\n\t\t\t\t\t\t{keys.map( ( val, idx ) => {\n\t\t\t\t\t\t\treturn ( <th key={`${variable}-${idx}-new`}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"transformer-table-input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tdefaultValue={val}\n\t\t\t\t\t\t\t\t\tonChange={this.changeFreqFactory( val )}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</th> );\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr style={{ borderTop: '1px solid black' }}>\n\t\t\t\t\t\t<th>{this.props.t('frequencies')}:</th>\n\t\t\t\t\t\t{keys.map( ( label, idx ) => {\n\t\t\t\t\t\t\tconst freq = this.state.firstFreqs[ label ];\n\t\t\t\t\t\t\treturn <td key={`${variable}-${idx}-freq`}>{freq}</td>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\n\t}\n\n\trenderContingencyTable = () => {\n\t\tconst rowVar = this.state.secondVar;\n\t\tconst colVar = this.state.firstVar;\n\t\tconst rowValues = this.props.data[ rowVar ];\n\t\tconst colValues = this.props.data[ colVar ];\n\t\tconst rowFreqs = countBy( rowValues, identity );\n\t\tconst colFreqs = countBy( colValues, identity );\n\t\tconst rowKeys = extractUsedCategories( rowFreqs, rowVar );\n\t\tconst colKeys = extractUsedCategories( colFreqs, colVar );\n\t\treturn (\n\t\t\t<Table bordered style={{ margin: 8 }}>\n\t\t\t\t<tr>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t{colKeys.map( ( col, idx ) => {\n\t\t\t\t\t\treturn ( <th key={`${col}-${idx}`}>\n\t\t\t\t\t\t\t{col}\n\t\t\t\t\t\t</th> );\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t\t{rowKeys.map( ( row, idx ) => {\n\t\t\t\t\treturn ( <tr key={`${row}-${idx}`}>\n\t\t\t\t\t\t<th>{row}</th>\n\t\t\t\t\t\t{colKeys.map( ( col, idx ) => {\n\t\t\t\t\t\t\treturn ( <td key={`${row}-${col}-${idx}`}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"transformer-table-input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\" defaultValue={`${col}-${row}`}\n\t\t\t\t\t\t\t\t\tonChange={this.changeContigencyFactory( row, col )}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td> );\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr> );\n\t\t\t\t})}\n\t\t\t</Table>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { t } = this.props;\n\t\treturn (\n\t\t\t<Draggable cancel=\".card-body\" onDragStart={( event ) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}} style={{ zIndex: 1006 }} >\n\t\t\t\t<Panel\n\t\t\t\t\tonHide={this.props.onHide}\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\theader={t('categorical-transformer-header')}\n\t\t\t\t\tfooter={<Button onClick={this.makeNewVar} disabled={this.state.generatedName.length < 2}>\n\t\t\t\t\t\t{t('create-new-variable')}\n\t\t\t\t\t</Button>}\n\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\tmaxHeight: 'calc(100vh - 200px)',\n\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t\tposition: 'relative'\n\t\t\t\t\t}}\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tlegend={t('first-variable')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.firstVar || ''}\n\t\t\t\t\t\t\t\toptions={this.props.categorical}\n\t\t\t\t\t\t\t\tonChange={this.handleFirstVariableChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t<SelectInput\n\t\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\t\tlegend={t('optional-second-variable')}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.secondVar || ''}\n\t\t\t\t\t\t\t\toptions={this.props.categorical}\n\t\t\t\t\t\t\t\tonChange={this.handleSecondVariableChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row style={{ overflowX: 'auto', width: '100%' }}>\n\t\t\t\t\t\t{this.renderTable()}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Tooltip tooltip={t('treat-labels-as-numbers-tooltip')}>\n\t\t\t\t\t\t\t<CheckboxInput\n\t\t\t\t\t\t\t\tlegend={t('treat-labels-as-numbers')}\n\t\t\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\t\t\tdisabled={!this.state.onlyNumbers}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tcastNumeric: !this.state.castNumeric\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<FormGroup style={{ margin: 8 }}>\n\t\t\t\t\t\t\t<FormLabel>{t('name-new-variable')}:</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={t('select-name')}\n\t\t\t\t\t\t\t\tonChange={this.handleGeneratedNameChange}\n\t\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormText>\n\t\t\t\t\t\t\t\t{t('new-variable-appended')}\n\t\t\t\t\t\t\t</FormText>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Row>\n\t\t\t\t</Panel>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nCategoricalTransformer.defaultProps = {\n\tlogAction() {}\n};\n\nCategoricalTransformer.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tonGenerate: PropTypes.func.isRequired,\n\tlogAction: PropTypes.func,\n\tonHide: PropTypes.func.isRequired,\n\tshow: PropTypes.bool.isRequired\n};\n\n\n// EXPORTS //\n\nexport default CategoricalTransformer;\n","// MODULES //\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport logger from 'debug';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormText from 'react-bootstrap/FormText';\nimport sample from '@stdlib/random/sample';\nimport absdiff from '@stdlib/math/base/utils/absolute-difference';\nimport objectKeys from '@stdlib/utils/keys';\nimport TextInput from '@isle-project/components/input/text';\nimport NumberInput from '@isle-project/components/input/number';\nimport Draggable from '@isle-project/components/draggable';\nimport Panel from '@isle-project/components/panel';\nimport { DATA_EXPLORER_GROUP_TRANSFORMER } from '@isle-project/constants/actions.js';\n\n\n// VARIABLES //\n\nconst debug = logger( 'isle:data-explorer:group-transformer' );\n\n\n// MAIN //\n\nclass GroupTransformer extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.state = {\n\t\t\tgeneratedName: '',\n\t\t\tnGroups: 2,\n\t\t\tgroupProbs: [ 0.5, 0.5 ],\n\t\t\tlabels: [ 'Group 1', 'Group 2' ]\n\t\t};\n\t}\n\n\thandleGeneratedNameChange = ( event ) => {\n\t\tthis.setState({\n\t\t\tgeneratedName: event.target.value\n\t\t});\n\t}\n\n\thandleGroupNumberChange = ( nGroups ) => {\n\t\tconst groupProbs = new Array( nGroups ).fill( 1/nGroups );\n\t\tconst labels = new Array( nGroups );\n\t\tfor ( let i = 0; i < labels.length; i++ ) {\n\t\t\tlabels[ i ] = `${this.props.t('group')} ${i+1}`;\n\t\t}\n\t\tthis.setState({\n\t\t\tgroupProbs,\n\t\t\tlabels,\n\t\t\tnGroups\n\t\t});\n\t}\n\n\thandleKeyPress = ( event ) => {\n\t\tif ( event.charCode === 13 ) {\n\t\t\tlet sum = 0.0;\n\t\t\tfor ( let i = 0; i < this.state.groupProbs.length; i++ ) {\n\t\t\t\tsum += this.state.groupProbs[ i ];\n\t\t\t}\n\t\t\tconst hasValidValues = this.state.generatedName.length > 2 && absdiff( sum, 1.0 ) <= 1.5e-8;\n\t\t\tif ( hasValidValues ) {\n\t\t\t\tthis.makeNewVar();\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeNewVar = () => {\n\t\tdebug( 'Generating new categorical variable...' );\n\t\tconst keys = objectKeys( this.props.data );\n\t\tconst nobs = this.props.data[ keys[ 0 ] ].length;\n\n\t\tconst values = sample( this.state.labels, {\n\t\t\tsize: nobs,\n\t\t\tprobs: this.state.groupProbs,\n\t\t\treplace: true\n\t\t});\n\t\tthis.props.onGenerate( this.state.generatedName, values );\n\t\tthis.props.logAction( DATA_EXPLORER_GROUP_TRANSFORMER, {\n\t\t\tname: this.state.generatedName,\n\t\t\tlabels: this.state.labels,\n\t\t\tgroupProbs: this.state.groupProbs\n\t\t});\n\t\tthis.props.onHide();\n\t}\n\n\trenderTable() {\n\t\tconst elems = new Array( this.state.nGroups );\n\t\tfor ( let i = 0; i < elems.length; i++ ) {\n\t\t\telems[ i ] = <Row key={i} >\n\t\t\t\t<Col>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tlegend={`Label for Group ${i+1}`}\n\t\t\t\t\t\tdefaultValue={this.state.labels[ i ]}\n\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\tconst labels = this.state.labels.slice();\n\t\t\t\t\t\t\tlabels[ i ] = val;\n\t\t\t\t\t\t\tthis.setState({ labels });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<NumberInput\n\t\t\t\t\t\tlegend={this.props.t('group-proportion')}\n\t\t\t\t\t\tonChange={( val ) => {\n\t\t\t\t\t\t\tconst groupProbs = this.state.groupProbs.slice();\n\t\t\t\t\t\t\tgroupProbs[ i ] = val;\n\t\t\t\t\t\t\tthis.setState({ groupProbs });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultValue={this.state.groupProbs[ i ]}\n\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\tnumbersOnly={false}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>;\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{elems}\n\t\t\t\t<p>{this.props.t('proportions-sum-one')}</p>\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet sum = 0.0;\n\t\tfor ( let i = 0; i < this.state.groupProbs.length; i++ ) {\n\t\t\tsum += this.state.groupProbs[ i ];\n\t\t}\n\t\tconst hasValidValues = this.state.generatedName.length > 2 && absdiff( sum, 1.0 ) <= 1.5e-8;\n\t\treturn (\n\t\t\t<Draggable cancel=\".card-body\" onDragStart={( event ) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}} style={{ zIndex: 1006 }} >\n\t\t\t\t<Panel\n\t\t\t\t\tonHide={this.props.onHide}\n\t\t\t\t\tshow={this.props.show}\n\t\t\t\t\theader={this.props.t('group-transformer-header')}\n\t\t\t\t\tfooter={<Button onClick={this.makeNewVar} disabled={!hasValidValues}>\n\t\t\t\t\t\t{this.props.t('create-new-variable')}\n\t\t\t\t\t</Button>}\n\t\t\t\t\trole=\"button\" tabIndex={0}\n\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\tmaxHeight: 'calc(100vh - 200px)',\n\t\t\t\t\t\toverflowY: 'auto',\n\t\t\t\t\t\tposition: 'relative'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\tlegend={this.props.t('number-of-groups')}\n\t\t\t\t\t\t\t\tonChange={this.handleGroupNumberChange}\n\t\t\t\t\t\t\t\tdefaultValue={this.state.nGroups}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={99}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.renderTable()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<FormGroup style={{ margin: 8 }}>\n\t\t\t\t\t\t\t<FormLabel>{this.props.t('name-new-variable')}:</FormLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={this.props.t('select-name')}\n\t\t\t\t\t\t\t\tonChange={this.handleGeneratedNameChange}\n\t\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormText>\n\t\t\t\t\t\t\t\t{this.props.t('new-variable-appended')}\n\t\t\t\t\t\t\t</FormText>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Row>\n\t\t\t\t</Panel>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nGroupTransformer.defaultProps = {\n\tlogAction() {}\n};\n\nGroupTransformer.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\tonGenerate: PropTypes.func.isRequired,\n\tlogAction: PropTypes.func,\n\tonHide: PropTypes.func.isRequired,\n\tshow: PropTypes.bool.isRequired\n};\n\n\n// EXPORTS //\n\nexport default GroupTransformer;\n","// MODULES //\n\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport BinTransformer from './bin_transformer.js';\nimport FormulaTransformer from './formula_transformer.js';\nimport CategoricalModal from './categorical_transformer.js';\nimport GroupModal from './group_transformer.js';\n\n\n// MAIN //\n\nconst Transformer = ( props ) => {\n\tconst { data, categorical, quantitative, t, session, defaultCode, logAction, onGenerate } = props;\n\tconst [ active, setActive ] = useState( null );\n\n\tconst toggleFormulaModal = () => {\n\t\tconst newActive = active === 'formula' ? null : 'formula';\n\t\tsetActive( newActive );\n\t\tprops.onActive( newActive );\n\t};\n\tconst toggleBinModal = () => {\n\t\tconst newActive = active === 'bin' ? null : 'bin';\n\t\tsetActive( newActive );\n\t\tprops.onActive( newActive );\n\t};\n\tconst toggleCategoricalModal = () => {\n\t\tconst newActive = active === 'categorical' ? null : 'categorical';\n\t\tsetActive( newActive );\n\t\tprops.onActive( newActive );\n\t};\n\tconst toggleGroupModal = () => {\n\t\tconst newActive = active === 'group' ? null : 'group';\n\t\tsetActive( newActive );\n\t\tprops.onActive( newActive );\n\t};\n\tlet modal;\n\tif ( data ) {\n\t\tswitch ( active ) {\n\t\t\tcase 'bin':\n\t\t\t\tmodal = <BinTransformer\n\t\t\t\t\tshow={true}\n\t\t\t\t\tonHide={toggleBinModal}\n\t\t\t\t\tquantitative={quantitative}\n\t\t\t\t\tlogAction={logAction}\n\t\t\t\t\tonGenerate={onGenerate}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tt={t}\n\t\t\t\t/>;\n\t\t\tbreak;\n\t\t\tcase 'categorical':\n\t\t\t\tmodal = <CategoricalModal\n\t\t\t\t\tshow={true}\n\t\t\t\t\tonHide={toggleCategoricalModal}\n\t\t\t\t\tcategorical={categorical}\n\t\t\t\t\tlogAction={logAction}\n\t\t\t\t\tonGenerate={onGenerate}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tt={t}\n\t\t\t\t/>;\n\t\t\tbreak;\n\t\t\tcase 'formula':\n\t\t\t\tmodal = <FormulaTransformer\n\t\t\t\t\tshow={true}\n\t\t\t\t\tonHide={toggleFormulaModal}\n\t\t\t\t\tcategorical={categorical}\n\t\t\t\t\tquantitative={quantitative}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdefaultCode={defaultCode}\n\t\t\t\t\tlogAction={logAction}\n\t\t\t\t\tonGenerate={onGenerate}\n\t\t\t\t\tsession={session}\n\t\t\t\t\tt={t}\n\t\t\t\t/>;\n\t\t\tbreak;\n\t\t\tcase 'group':\n\t\t\t\tmodal = <GroupModal\n\t\t\t\t\tshow={true}\n\t\t\t\t\tonHide={toggleGroupModal}\n\t\t\t\t\tlogAction={logAction}\n\t\t\t\t\tonGenerate={onGenerate}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tt={t}\n\t\t\t\t/>;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"well\" style={{ padding: 15, margin: 15 }} >\n\t\t\t\t<div style={{ padding: 12 }} >\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleFormulaModal}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tstyle={{ fontSize: '1.2em' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('interactions-functions')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ padding: 12 }} >\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleBinModal}\n\t\t\t\t\t\tdisabled={!quantitative || quantitative.length === 0}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tstyle={{ fontSize: '1.2em' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('bin-quantitative')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ padding: 12 }} >\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleCategoricalModal}\n\t\t\t\t\t\tdisabled={!categorical || categorical.length === 0}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tstyle={{ fontSize: '1.2em' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('rename-or-combine')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ padding: 12 }} >\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={toggleGroupModal}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\tstyle={{ fontSize: '1.2em' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('create-groups')}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{modal}\n\t\t</Fragment>\n\t);\n};\n\n\n// PROPERTIES //\n\nTransformer.defaultProps = {\n\tlogAction() {},\n\tonActive() {},\n\tonGenerate() {},\n\tdefaultCode: '',\n\tsession: {}\n};\n\nTransformer.propTypes = {\n\tcategorical: PropTypes.array.isRequired,\n\tquantitative: PropTypes.array.isRequired,\n\tdata: PropTypes.object.isRequired,\n\tdefaultCode: PropTypes.string,\n\tlogAction: PropTypes.func,\n\tonActive: PropTypes.func,\n\tonGenerate: PropTypes.func,\n\tsession: PropTypes.object\n};\n\n\n// EXPORTS //\n\nexport default Transformer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test whether a string contains only numeric digits.\n*\n* @module @stdlib/assert/is-digit-string\n*\n* @example\n* var isDigitString = require( '@stdlib/assert/is-digit-string' );\n*\n* var out = isDigitString( '0123456789' );\n* // returns true\n*\n* out = isDigitString( '0xffffff' );\n* // returns false\n*\n* out = isDigitString( '' );\n* // returns false\n*/\n// MODULES //\n\nvar isDigitString = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isDigitString;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isString = require('./../../is-string').isPrimitive; // VARIABLES //\n// Character codes:\n\n\nvar ZERO = 48;\nvar NINE = 57; // MAIN //\n\n/**\n* Tests whether a string contains only numeric digits.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string contains only numeric digits\n*\n* @example\n* var out = isDigitString( '0123456789' );\n* // returns true\n*\n* @example\n* var out = isDigitString( '0xffffff' );\n* // returns false\n*\n* @example\n* var out = isDigitString( '' );\n* // returns false\n*\n* @example\n* var out = isDigitString( 123 );\n* // returns false\n*/\n\nfunction isDigitString(x) {\n  var len;\n  var ch;\n  var i;\n\n  if (!isString(x)) {\n    return false;\n  }\n\n  len = x.length;\n\n  if (len === 0) {\n    return false;\n  }\n\n  for (i = 0; i < len; i++) {\n    ch = x.charCodeAt(i);\n\n    if (ch < ZERO || ch > NINE) {\n      return false;\n    }\n  }\n\n  return true;\n} // EXPORTS //\n\n\nmodule.exports = isDigitString;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar setReadOnly = require('@stdlib/utils/define-nonenumerable-read-only-property');\n\nvar setReadOnlyAccessor = require('@stdlib/utils/define-nonenumerable-read-only-accessor');\n\nvar setReadWriteAccessor = require('@stdlib/utils/define-nonenumerable-read-write-accessor');\n\nvar isObject = require('@stdlib/assert/is-plain-object');\n\nvar isFunction = require('@stdlib/assert/is-function');\n\nvar hasOwnProp = require('@stdlib/assert/has-own-property');\n\nvar constantFunction = require('@stdlib/utils/constant-function');\n\nvar noop = require('@stdlib/utils/noop');\n\nvar randu = require('./../../../base/mt19937').factory;\n\nvar isnan = require('@stdlib/math/base/assert/is-nan');\n\nvar typedarray2json = require('@stdlib/array/to-json');\n\nvar validate = require('./validate.js');\n\nvar uniform0 = require('./uniform.js'); // MAIN //\n\n/**\n* Returns a pseudorandom number generator for generating uniformly distributed random numbers.\n*\n* @param {number} [a] - minimum support (inclusive)\n* @param {number} [b] - maximum support (exclusive)\n* @param {Options} [options] - function options\n* @param {PRNG} [options.prng] - pseudorandom number generator which generates uniformly distributed pseudorandom numbers\n* @param {PRNGSeedMT19937} [options.seed] - pseudorandom number generator seed\n* @param {PRNGStateMT19937} [options.state] - pseudorandom number generator state\n* @param {boolean} [options.copy=true] - boolean indicating whether to copy a provided pseudorandom number generator state\n* @throws {TypeError} `a` must be a number\n* @throws {TypeError} `b` must be a number\n* @throws {RangeError} `a` must be less than `b`\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a valid state\n* @returns {PRNG} pseudorandom number generator\n*\n* @example\n* var uniform = factory( 0.0, 1.0 );\n*\n* var v = uniform();\n* // returns <number>\n*\n* @example\n* var uniform = factory( -3.0, -1.0, {\n*     'seed': 297\n* });\n* var v = uniform();\n* // returns <number>\n*/\n\n\nfunction factory() {\n  var opts;\n  var rand;\n  var prng;\n  var err;\n  var a;\n  var b;\n\n  if (arguments.length === 0) {\n    rand = randu();\n  } else if (arguments.length === 1) {\n    opts = arguments[0];\n\n    if (!isObject(opts)) {\n      throw new TypeError('invalid argument. Options argument must be an object. Value: `' + opts + '`.');\n    }\n\n    if (hasOwnProp(opts, 'prng')) {\n      if (!isFunction(opts.prng)) {\n        throw new TypeError('invalid option. `prng` option must be a pseudorandom number generator function. Option: `' + opts.prng + '`.');\n      }\n\n      rand = opts.prng;\n    } else {\n      rand = randu(opts);\n    }\n  } else {\n    a = arguments[0];\n    b = arguments[1];\n    err = validate(a, b);\n\n    if (err) {\n      throw err;\n    }\n\n    if (arguments.length > 2) {\n      opts = arguments[2];\n\n      if (!isObject(opts)) {\n        throw new TypeError('invalid argument. Options argument must be an object. Value: `' + opts + '`.');\n      }\n\n      if (hasOwnProp(opts, 'prng')) {\n        if (!isFunction(opts.prng)) {\n          throw new TypeError('invalid option. `prng` option must be a pseudorandom number generator function. Option: `' + opts.prng + '`.');\n        }\n\n        rand = opts.prng;\n      } else {\n        rand = randu(opts);\n      }\n    } else {\n      rand = randu();\n    }\n  }\n\n  if (a === void 0) {\n    prng = uniform2;\n  } else {\n    prng = uniform1;\n  }\n\n  setReadOnly(prng, 'NAME', 'uniform'); // If we are provided an \"external\" PRNG, we don't support getting or setting PRNG state, as we'd need to check for compatible state value types, etc, entailing considerable complexity.\n\n  if (opts && opts.prng) {\n    setReadOnly(prng, 'seed', null);\n    setReadOnly(prng, 'seedLength', null);\n    setReadWriteAccessor(prng, 'state', constantFunction(null), noop);\n    setReadOnly(prng, 'stateLength', null);\n    setReadOnly(prng, 'byteLength', null);\n    setReadOnly(prng, 'toJSON', constantFunction(null));\n    setReadOnly(prng, 'PRNG', rand);\n  } else {\n    setReadOnlyAccessor(prng, 'seed', getSeed);\n    setReadOnlyAccessor(prng, 'seedLength', getSeedLength);\n    setReadWriteAccessor(prng, 'state', getState, setState);\n    setReadOnlyAccessor(prng, 'stateLength', getStateLength);\n    setReadOnlyAccessor(prng, 'byteLength', getStateSize);\n    setReadOnly(prng, 'toJSON', toJSON);\n    setReadOnly(prng, 'PRNG', rand);\n    rand = rand.normalized;\n  }\n\n  return prng;\n  /**\n  * Returns the PRNG seed.\n  *\n  * @private\n  * @returns {PRNGSeedMT19937} seed\n  */\n\n  function getSeed() {\n    return rand.seed;\n  }\n  /**\n  * Returns the PRNG seed length.\n  *\n  * @private\n  * @returns {PositiveInteger} seed length\n  */\n\n\n  function getSeedLength() {\n    return rand.seedLength;\n  }\n  /**\n  * Returns the PRNG state length.\n  *\n  * @private\n  * @returns {PositiveInteger} state length\n  */\n\n\n  function getStateLength() {\n    return rand.stateLength;\n  }\n  /**\n  * Returns the PRNG state size (in bytes).\n  *\n  * @private\n  * @returns {PositiveInteger} state size (in bytes)\n  */\n\n\n  function getStateSize() {\n    return rand.byteLength;\n  }\n  /**\n  * Returns the current pseudorandom number generator state.\n  *\n  * @private\n  * @returns {PRNGStateMT19937} current state\n  */\n\n\n  function getState() {\n    return rand.state;\n  }\n  /**\n  * Sets the pseudorandom number generator state.\n  *\n  * @private\n  * @param {PRNGStateMT19937} s - generator state\n  * @throws {Error} must provide a valid state\n  */\n\n\n  function setState(s) {\n    rand.state = s;\n  }\n  /**\n  * Serializes the pseudorandom number generator as a JSON object.\n  *\n  * ## Notes\n  *\n  * -   `JSON.stringify()` implicitly calls this method when stringifying a PRNG.\n  *\n  * @private\n  * @returns {Object} JSON representation\n  */\n\n\n  function toJSON() {\n    var out = {};\n    out.type = 'PRNG';\n    out.name = prng.NAME;\n    out.state = typedarray2json(rand.state);\n\n    if (a === void 0) {\n      out.params = [];\n    } else {\n      out.params = [a, b];\n    }\n\n    return out;\n  }\n  /**\n  * Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n  *\n  * @private\n  * @returns {number} pseudorandom number\n  *\n  * @example\n  * var v = uniform1();\n  * // returns <number>\n  */\n\n\n  function uniform1() {\n    return uniform0(rand, a, b);\n  }\n  /**\n  * Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n  *\n  * @private\n  * @param {number} a - minimum support (inclusive)\n  * @param {number} b - maximum support (exclusive)\n  * @returns {number} pseudorandom number\n  *\n  * @example\n  * var v = uniform2( 0.0, 1.0 );\n  * // returns <number>\n  *\n  * @example\n  * var v = uniform2( 1.0, 0.0 );\n  * // returns NaN\n  */\n\n\n  function uniform2(a, b) {\n    if (isnan(a) || isnan(b) || a >= b) {\n      return NaN;\n    }\n\n    return uniform0(rand, a, b);\n  }\n} // EXPORTS //\n\n\nmodule.exports = factory;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Uniform distribution pseudorandom numbers.\n*\n* @module @stdlib/random/base/uniform\n*\n* @example\n* var uniform = require( '@stdlib/random/base/uniform' );\n*\n* var v = uniform( 0.0, 1.0 );\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/uniform' ).factory;\n* var uniform = factory( -5.0, 5.0, {\n*     'seed': 297\n* });\n*\n* var v = uniform();\n* // returns <number>\n*\n* @example\n* var factory = require( '@stdlib/random/base/uniform' ).factory;\n* var uniform = factory({\n*     'seed': 297\n* });\n*\n* var v = uniform( -5.0, 5.0 );\n* // returns <number>\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils/define-nonenumerable-read-only-property');\n\nvar uniform = require('./main.js');\n\nvar factory = require('./factory.js'); // MAIN //\n\n\nsetReadOnly(uniform, 'factory', factory); // EXPORTS //\n\nmodule.exports = uniform;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar factory = require('./factory.js'); // MAIN //\n\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @name uniform\n* @type {PRNG}\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*\n* @example\n* var v = uniform( 0.0, 1.0 );\n* // returns <number>\n*/\n\n\nvar uniform = factory(); // EXPORTS //\n\nmodule.exports = uniform;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Returns a uniformly distributed pseudorandom number with minimum support `a` and maximum support `b`.\n*\n* @private\n* @param {PRNG} rand - pseudorandom number generator\n* @param {number} a - minimum support (inclusive)\n* @param {number} b - maximum support (exclusive)\n* @returns {number} pseudorandom number\n*/\n\nfunction uniform(rand, a, b) {\n  var r = rand();\n  return b * r + (1.0 - r) * a; // equivalent to (b-a)*r + a\n} // EXPORTS //\n\n\nmodule.exports = uniform;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isNumber = require('@stdlib/assert/is-number').isPrimitive;\n\nvar isnan = require('@stdlib/assert/is-nan'); // MAIN //\n\n/**\n* Validates values provided for minimum and maximum support.\n*\n* @private\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {(Error|null)} error or null\n*\n* @example\n* var err = validate( 1.0, 2.0 );\n* if ( err ) {\n*     throw err;\n* }\n*/\n\n\nfunction validate(a, b) {\n  if (!isNumber(a) || isnan(a)) {\n    return new TypeError('invalid argument. First argument must be a number primitive and not `NaN`. Value: `' + a + '`.');\n  }\n\n  if (!isNumber(b) || isnan(b)) {\n    return new TypeError('invalid argument. Second argument must be a number primitive and not `NaN`. Value: `' + b + '`.');\n  }\n\n  if (a >= b) {\n    return new RangeError('invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `[' + a + ',' + b + ']`.');\n  }\n\n  return null;\n} // EXPORTS //\n\n\nmodule.exports = validate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Collapse","Loadable","event","stopPropagation","debug","logger","RE_SHAPE","HISTOGRAM_SETTINGS","group","displayDensity","densityType","chooseBins","nBins","ascending","a","b","makeShapes","breakpoints","breakShapes","i","length","push","type","x0","y0","x1","y1","line","color","width","createCategoryNames","customNames","out","Array","last","BinningTransformer","props","configHist","select","useState","name","setName","snapDigits","setSnapDigits","variable","categories","state","setState","invalidName","makeNewVar","rawData","data","values","retrieveBinnedValues","logAction","DATA_EXPLORER_BIN_TRANSFORMER","breaks","newName","factor","onGenerate","onHide","handleKeyPress","charCode","handleNameChange","target","value","changeFactory","ind","newBreakpoints","slice","roundn","sort","copy","layout","shapes","categoryChangeFactory","newCategories","newCustomNames","newState","deleteBreakpoint","splice","onChangeHistLine","keyUpdate","keys","matches","exec","handleVariableChange","histConfigSettings","generateHistogramConfig","yaxis","range","min","y","max","fixedrange","xaxis","filter","x","isNumber","isnan","mean","addBreakpoint","avg","runif","cancel","onDragStart","style","zIndex","show","header","t","footer","Button","onClick","disabled","bodyStyle","maxHeight","overflowY","position","role","tabIndex","legend","defaultValue","options","quantitative","onChange","maxWidth","Fragment","className","inline","height","editable","fit","removeButtons","legendButtons","onRelayout","Card","inputs","disableButton","Row","key","Col","md","raw","onBlur","step","changeFn","marginTop","tooltipPlacement","len","makeTextInputs","FormGroup","FormLabel","FormControl","placeholder","onKeyPress","FormText","Alert","variant","defaultProps","DIGITS","incrspace","RE_LAST_EXPRESSION","RE_DIGITS_START","CustomMenu","React","ref","children","labeledBy","setValue","e","child","toLowerCase","startsWith","FormulaTransformer","code","contains","replace","valuesFromFormula","DATA_EXPLORER_VARIABLE_TRANSFORMER","err","session","addNotification","title","message","level","handleGenerate","newCode","substring","selection","replacement","test","operator","funcName","defaultCode","showGuide","this","continuousItems","map","v","Dropdown","insertVarFactory","eventKey","headerClassName","visible","Table","condensed","Trans","i18nKey","ns","first","second","ButtonToolbar","marginBottom","id","as","categorical","ButtonGroup","size","insertLiteralFactory","placement","tooltip","FUNCTION_KEYS","insertFuncFactory","d","div","textarea","handleCodeChange","selectionStart","rows","margin","Component","escapeDots","str","checkNumericLabels","nameMappings","objectKeys","allNumeric","isDigitString","CategoricalTransformer","firstFreqs","secondVar","firstVar","firstValues","countBy","identity","firstKeys","extractUsedCategories","secondKeys","secondFreqs","j","label","onlyNumbers","secondValues","generatedName","oldLabel","rowLabel","colLabel","castNumeric","newVar","recodeCategorical","DATA_EXPLORER_CAT_TRANSFORMER","varFreqs","bordered","val","idx","changeFreqFactory","borderTop","freq","rowVar","colVar","rowValues","colValues","rowFreqs","colFreqs","rowKeys","colKeys","col","row","changeContigencyFactory","renderContingencyTable","renderFrequencyTable","handleFirstVariableChange","clearable","handleSecondVariableChange","overflowX","renderTable","handleGeneratedNameChange","GroupTransformer","nGroups","groupProbs","fill","labels","sum","absdiff","nobs","sample","probs","DATA_EXPLORER_GROUP_TRANSFORMER","elems","numbersOnly","hasValidValues","handleGroupNumberChange","Transformer","modal","active","setActive","toggleFormulaModal","newActive","onActive","toggleBinModal","toggleCategoricalModal","toggleGroupModal","padding","block","fontSize","module","exports","isString","ch","charCodeAt","setReadOnly","setReadOnlyAccessor","setReadWriteAccessor","isObject","isFunction","hasOwnProp","constantFunction","noop","randu","typedarray2json","validate","uniform0","opts","rand","prng","arguments","TypeError","uniform2","uniform1","getSeed","getSeedLength","getState","getStateLength","getStateSize","toJSON","normalized","seed","seedLength","stateLength","byteLength","s","NAME","params","NaN","uniform","factory","r","RangeError","_excluded","_ref","bsPrefix","prefix","displayName","striped","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}