{"version":3,"file":"static/js/LogisticRegression.4461c272.chunk.js","mappings":"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","sources":["../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/@isle-project/components/models/logistic-regression/multiply_matrices.js","../node_modules/@isle-project/components/models/logistic-regression/col_mult.js","../node_modules/@isle-project/components/models/logistic-regression/multiply.js","../node_modules/@isle-project/components/models/logistic-regression/logistic_regression.js","../node_modules/@isle-project/components/models/logistic-regression/main.js","../node_modules/@isle-project/utils/mmult/index.js","../node_modules/@isle-project/utils/subtract/index.js","../node_modules/@isle-project/utils/transpose/index.js","../node_modules/@stdlib/math/base/special/xlogy/lib/index.js","../node_modules/@stdlib/math/base/special/xlogy/lib/xlogy.js","../node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/factory.js","../node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/index.js","../node_modules/@stdlib/stats/base/dists/bernoulli/pmf/lib/pmf.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js"],"sourcesContent":["import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nvar LuDecomposition = /*#__PURE__*/function () {\n  function LuDecomposition(matrix) {\n    _classCallCheck(this, LuDecomposition);\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Float64Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  _createClass(LuDecomposition, [{\n    key: \"isSingular\",\n    value: function isSingular() {\n      var data = this.LU;\n      var col = data.columns;\n\n      for (var j = 0; j < col; j++) {\n        if (data.get(j, j) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(value) {\n      value = Matrix.checkMatrix(value);\n      var lu = this.LU;\n      var rows = lu.rows;\n\n      if (rows !== value.rows) {\n        throw new Error('Invalid matrix dimensions');\n      }\n\n      if (this.isSingular()) {\n        throw new Error('LU matrix is singular');\n      }\n\n      var count = value.columns;\n      var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n      var columns = lu.columns;\n      var i, j, k;\n\n      for (k = 0; k < columns; k++) {\n        for (i = k + 1; i < columns; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n          }\n        }\n      }\n\n      for (k = columns - 1; k >= 0; k--) {\n        for (j = 0; j < count; j++) {\n          X.set(k, j, X.get(k, j) / lu.get(k, k));\n        }\n\n        for (i = 0; i < k; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"determinant\",\n    get: function get() {\n      var data = this.LU;\n\n      if (!data.isSquare()) {\n        throw new Error('Matrix must be square');\n      }\n\n      var determinant = this.pivotSign;\n      var col = data.columns;\n\n      for (var j = 0; j < col; j++) {\n        determinant *= data.get(j, j);\n      }\n\n      return determinant;\n    }\n  }, {\n    key: \"lowerTriangularMatrix\",\n    get: function get() {\n      var data = this.LU;\n      var rows = data.rows;\n      var columns = data.columns;\n      var X = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          if (i > j) {\n            X.set(i, j, data.get(i, j));\n          } else if (i === j) {\n            X.set(i, j, 1);\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"upperTriangularMatrix\",\n    get: function get() {\n      var data = this.LU;\n      var rows = data.rows;\n      var columns = data.columns;\n      var X = new Matrix(rows, columns);\n\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          if (i <= j) {\n            X.set(i, j, data.get(i, j));\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"pivotPermutationVector\",\n    get: function get() {\n      return Array.from(this.pivotVector);\n    }\n  }]);\n\n  return LuDecomposition;\n}();\n\nexport { LuDecomposition as default };","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar QrDecomposition = /*#__PURE__*/function () {\n  function QrDecomposition(value) {\n    _classCallCheck(this, QrDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Float64Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n\n        qr.set(k, k, qr.get(k, k) + 1);\n\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  _createClass(QrDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      value = Matrix.checkMatrix(value);\n      var qr = this.QR;\n      var m = qr.rows;\n\n      if (value.rows !== m) {\n        throw new Error('Matrix row dimensions must agree');\n      }\n\n      if (!this.isFullRank()) {\n        throw new Error('Matrix is rank deficient');\n      }\n\n      var count = value.columns;\n      var X = value.clone();\n      var n = qr.columns;\n      var i, j, k, s;\n\n      for (k = 0; k < n; k++) {\n        for (j = 0; j < count; j++) {\n          s = 0;\n\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < m; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n\n      for (k = n - 1; k >= 0; k--) {\n        for (j = 0; j < count; j++) {\n          X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n        }\n\n        for (i = 0; i < k; i++) {\n          for (j = 0; j < count; j++) {\n            X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n          }\n        }\n      }\n\n      return X.subMatrix(0, n - 1, 0, count - 1);\n    }\n  }, {\n    key: \"isFullRank\",\n    value: function isFullRank() {\n      var columns = this.QR.columns;\n\n      for (var i = 0; i < columns; i++) {\n        if (this.Rdiag[i] === 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"upperTriangularMatrix\",\n    get: function get() {\n      var qr = this.QR;\n      var n = qr.columns;\n      var X = new Matrix(n, n);\n      var i, j;\n\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i < j) {\n            X.set(i, j, qr.get(i, j));\n          } else if (i === j) {\n            X.set(i, j, this.Rdiag[i]);\n          } else {\n            X.set(i, j, 0);\n          }\n        }\n      }\n\n      return X;\n    }\n  }, {\n    key: \"orthogonalMatrix\",\n    get: function get() {\n      var qr = this.QR;\n      var rows = qr.rows;\n      var columns = qr.columns;\n      var X = new Matrix(rows, columns);\n      var i, j, k, s;\n\n      for (k = columns - 1; k >= 0; k--) {\n        for (i = 0; i < rows; i++) {\n          X.set(i, k, 0);\n        }\n\n        X.set(k, k, 1);\n\n        for (j = k; j < columns; j++) {\n          if (qr.get(k, k) !== 0) {\n            s = 0;\n\n            for (i = k; i < rows; i++) {\n              s += qr.get(i, k) * X.get(i, j);\n            }\n\n            s = -s / qr.get(k, k);\n\n            for (i = k; i < rows; i++) {\n              X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n            }\n          }\n        }\n      }\n\n      return X;\n    }\n  }]);\n\n  return QrDecomposition;\n}();\n\nexport { QrDecomposition as default };","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\nexport function inverse(matrix) {\n  var useSVD = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\nexport function solve(leftHandSide, rightHandSide) {\n  var useSVD = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}","// MODULES //\n\nimport { Matrix } from 'ml-matrix';\n\n\n// MAIN //\n\n/**\n* Matrix product of `A` and `B`.\n*\n* @param {Matrix} A - first input matrix\n* @param {Matrix} B - second input matrix\n* @returns {Matrix} A * B\n*/\nfunction multiplyMatrices( A, B ) {\n\tconst [ m, n ] = A.shape;\n\tconst p = B.shape[ 1 ];\n\tconst result = Matrix.zeros( m, p );\n\tconst Bcolj = new Float64Array( n );\n\tfor ( let j = 0; j < p; j++ ) {\n\t\tfor ( let k = 0; k < n; k++ ) {\n\t\t\tBcolj[ k ] = B.get(k, j);\n\t\t}\n\t\tfor ( let i = 0; i < m; i++ ) {\n\t\t\tlet s = 0;\n\t\t\tfor ( let k = 0; k < n; k++ ) {\n\t\t\t\ts += A.get( i, k ) * Bcolj[ k ];\n\t\t\t}\n\t\t\tresult.set( i, j, s );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nexport default multiplyMatrices;\n","// MODULES //\n\nimport ndarray from '@stdlib/ndarray/array';\n\n\n// MAIN //\n\n/**\n* Multiplies each column of matrix `A` with the elements of vector `b`.\n*\n* @param {Matrix} A - input matrix\n* @param {NumberArray} b - input vector\n* @returns {Matrix} `A` with columns multiplied by elements of `b`\n*/\nfunction colMult( A, b ) {\n\tconst [ m, n ] = A.shape;\n\tconst result = ndarray( new Float64Array( m*n ), { 'shape': [ m, n ]} );\n\tfor ( let i = 0; i < m; i++ ) {\n\t\tfor ( let j = 0; j < n; j++ ) {\n\t\t\tresult.set( i, j, A.get( i, j ) * b[ i ] );\n\t\t}\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nexport default colMult;\n","// MAIN //\n\n/**\n* Computes an element-wise multiplication of two arrays.\n*\n* @param {Array} x - numeric array\n* @param {Array} y - numeric array\n*/\nfunction multiply( x, y ) {\n\tconst len = x.length;\n\tconst out = new Array( len );\n\tfor ( let i = 0; i < len; i++ ) {\n\t\tout[ i ] = x[ i ] * y[ i ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default multiply;\n","// MODULES //\n\nimport { Matrix, solve } from 'ml-matrix';\nimport abs from '@stdlib/math/base/special/abs';\nimport ln from '@stdlib/math/base/special/ln';\nimport pow from '@stdlib/math/base/special/pow';\nimport exp from '@stdlib/math/base/special/exp';\nimport xlogy from '@stdlib/math/base/special/xlogy';\nimport EPS from '@stdlib/constants/float64/eps';\nimport dbern from '@stdlib/stats/base/dists/bernoulli/pmf';\nimport sqrt from '@stdlib/math/base/special/sqrt';\nimport mmult from '@isle-project/utils/mmult';\nimport transpose from '@isle-project/utils/transpose';\nimport multiplyMatrices from './multiply_matrices.js';\nimport colMult from './col_mult.js';\nimport multiply from './multiply.js';\n\n\n// VARIABLES //\n\nconst MAX_IT = 25;\nconst EPSILON = 1e-8;\n\n\n// FUNCTIONS //\n\nconst sum = ( arr ) => {\n\tlet res = 0;\n\tfor ( let i = 0; i < arr.length; i++ ) {\n\t\tres += arr[ i ];\n\t}\n\treturn res;\n};\n\nconst variance = ( mu ) => {\n\tconst out = new Float64Array( mu.length );\n\tfor ( let i = 0; i < mu.length; i++ ) {\n\t\tout[ i ] = mu[ i ] * ( 1.0 - mu[ i ] );\n\t}\n\treturn out;\n};\n\nconst logitLink = ( mu ) => {\n\tconst n = mu.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tout[ i ] = ln( mu[ i ] / ( 1 - mu[ i ] ) );\n\t}\n\treturn out;\n};\n\nconst logitLinkInv = ( eta ) => {\n\tconst n = eta.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tconst etai = eta[i];\n\t\tif ( abs( etai ) > 30 ) {\n\t\t\tout[ i ] = EPS;\n\t\t} else {\n\t\t\tconst x = exp( etai );\n\t\t\tout[ i ] = x / ( 1 + x );\n\t\t}\n\t}\n\treturn out;\n};\n\nconst logitMuEta = ( eta ) => {\n\tconst n = eta.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++) {\n\t\tconst val = eta[i];\n\t\tif ( abs( val ) > 30 ) {\n\t\t\tout[ i ] = EPS;\n\t\t} else {\n\t\t\tout[ i ] = exp( val ) / pow( 1 + exp( val ), 2 );\n\t\t}\n\t}\n\treturn out;\n};\n\nconst aic = ( y, mu, numParameters ) => {\n\tlet logLik = 0;\n\tfor ( let i = 0; i < y.length; i++ ) {\n\t\tlogLik += ln( dbern( y[ i ], mu[ i ] ) );\n\t}\n\treturn -2 * logLik + 2*numParameters;\n};\n\nconst devResids = ( y, mu, wt ) => {\n\tconst n = y.length;\n\tconst out = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\tconst mui = mu[ i ];\n\t\tconst yi = y[ i ];\n\t\tout[ i ] = 2.0 * wt[ i ] *\n\t\t( xlogy( yi, yi / mui ) + xlogy( 1 - yi, ( 1 - yi ) / ( 1 - mui ) ) );\n\t}\n\treturn out;\n};\n\nconst calcW = ( weights, gprime, varg ) => {\n\tconst out = new Float64Array( weights.length );\n\tfor ( let i = 0; i < weights.length; i++ ) {\n\t\tout[ i ] = weights[ i ] * ( gprime[i]*gprime[i] / varg[ i ] );\n\t}\n\treturn out;\n};\n\nconst calcZ = ( eta, y, mu, gprime ) => {\n\tconst out = new Float64Array( y.length );\n\tfor ( let i = 0; i < y.length; i++ ) {\n\t\tout[ i ] = eta[ i ] + ( y[ i ] - mu[ i ] ) / gprime[ i ];\n\t}\n\treturn out;\n};\n\nfunction sigmoid( x ) {\n\tconst result = new Float64Array( x.length );\n\tfor ( let i = 0; i < x.length; i++) {\n\t\tresult[ i ]= 1 / (1 + exp(-x[i]) );\n\t}\n\treturn result;\n}\n\nfunction stdErrors( matrix, yhat ) {\n\tconst w = new Float64Array( yhat.length );\n\tfor ( let i = 0; i < w.length; i++ ) {\n\t\tw[ i ] = yhat[ i ] * ( 1 - yhat[ i ] );\n\t}\n\tconst [ nrow, ncol ] = matrix.shape;\n\tconst errs = new Float64Array( ncol );\n\tfor ( let j = 0; j < errs.length; j++ ) {\n\t\tlet sum = 0;\n\t\tfor ( let i = 0; i < nrow; i++ ) {\n\t\t\tsum += pow( matrix.get( i, j ), 2 ) * w[ i ];\n\t\t}\n\t\terrs[ j ] = sqrt( 1.0 / sum );\n\t}\n\treturn errs;\n}\n\n\n// MAIN //\n\n/**\n* Iteratively re-weighted least squares algorithm.\n*/\nfunction irls( X, y, nObs ) {\n\tconst Xt = transpose( X );\n\tconst weights = new Array( nObs ).fill( 1 );\n\n\tconst mustart = new Float64Array( weights.length );\n\tfor ( let i = 0; i < nObs; i++ ) {\n\t\tmustart[ i ] = ( weights[ i ] * y[ i ] + 0.5 ) / ( weights[ i ] + 1 );\n\t}\n\tlet eta = logitLink( mustart );\n\tlet mu = logitLinkInv( eta );\n\tlet devOld = sum( devResids( y, mu, weights ) );\n\n\tlet beta;\n\tlet j;\n\tlet converged = false;\n\tfor ( j = 0; j < MAX_IT; j++ ) {\n\t\tconst varg = variance( mu );\n\t\tconst gprime = logitMuEta( eta );\n\t\tconst z = calcZ( eta, y, mu, gprime );\n\t\tconst w = calcW( weights, gprime, varg );\n\t\tconst wz = multiply( w, z );\n\t\tconst Xw = colMult( X, w );\n\t\tconst A = multiplyMatrices( Xt, Xw );\n\t\tconst b = mmult( Xt, wz );\n\t\tbeta = solve( A, Matrix.columnVector( b ) );\n\t\teta = mmult( X, beta.to1DArray() );\n\t\tmu = logitLinkInv( eta );\n\t\tconst dev = sum( devResids( y, mu, weights ) );\n\t\tif ( abs( dev - devOld ) / ( 0.1 + abs( dev ) ) < EPSILON ) {\n\t\t\tconverged = true;\n\t\t\tbreak;\n\t\t}\n\t\tdevOld = dev;\n\t}\n\tconst coefficients = beta.to1DArray();\n\tconst predict = ( X ) => {\n\t\tconst finalData = mmult( X, coefficients );\n\t\tconst predictions = sigmoid( finalData );\n\t\treturn predictions;\n\t};\n\tconst fitted = predict( X, coefficients );\n\treturn {\n\t\taic: aic( y, logitLinkInv( eta ), coefficients.length ),\n\t\tstdErrors: stdErrors( X, fitted ),\n\t\tfitted,\n\t\tcoefficients,\n\t\titerations: j,\n\t\tconverged,\n\t\tpredict\n\t};\n}\n\n\n// EXPORTS //\n\nexport default irls;\n","// MODULES //\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport contains from '@stdlib/assert/contains';\nimport ndarray from '@stdlib/ndarray/array';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isUndefinedOrNull from '@stdlib/assert/is-undefined-or-null';\nimport isArray from '@stdlib/assert/is-array';\nimport isnan from '@stdlib/assert/is-nan';\nimport abs from '@stdlib/math/base/special/abs';\nimport pnorm from '@stdlib/stats/base/dists/normal/cdf';\nimport roundn from '@stdlib/math/base/special/roundn';\nimport Tooltip from '@isle-project/components/tooltip';\nimport Table from '@isle-project/components/table';\nimport TeX from '@isle-project/components/tex';\nimport extractCategoriesFromValues from '@isle-project/utils/extract-categories-from-values';\nimport subtract from '@isle-project/utils/subtract';\nimport { withPropCheck } from '@isle-project/utils/prop-check';\nimport { Factor } from '@isle-project/utils/factor-variable';\nimport irls from './logistic_regression.js';\n\n\n// VARIABLES //\n\nlet COUNTER = 0;\nconst T = 't';\n\n\n// FUNCTIONS //\n\nfunction isMissing( x ) {\n\treturn isnan( x ) || isUndefinedOrNull( x );\n}\n\nfunction isNonMissingNumber( x ) {\n\treturn isNumber( x ) && !isnan( x );\n}\n\nfunction designMatrix( x, y, data, quantitative, intercept, success ) {\n\tconst predictors = [];\n\tconst hash = {};\n\tconst nobs = data[ x[ 0 ] ].length;\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tconst buffer = new Float64Array( nobs * (predictors.length+1) );\n\tfor ( let i = 0; i < nobs; i++ ) {\n\t\tif ( intercept ) {\n\t\t\tbuffer[ (predictors.length+1)*i ] = 1;\n\t\t}\n\t\tlet colIndex = 0;\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tcolIndex += 1;\n\t\t\t\tbuffer[ (predictors.length+1)*i + colIndex ] = values[ i ];\n\t\t\t} else {\n\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\tcolIndex += 1;\n\t\t\t\t\tbuffer[ (predictors.length+1)*i + colIndex ] = ( val === categories[ k ] ) ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst matrix = ndarray( buffer, {\n\t\tshape: [ nobs, predictors.length+1 ]\n\t});\n\tconst yvalues = data[ y ].map( v => {\n\t\treturn v === success ? 1 : 0;\n\t});\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nfunction designMatrixMissing( x, y, data, quantitative, intercept, success ) {\n\tconst predictors = [];\n\tconst hash = {};\n\tfor ( let j = 0; j < x.length; j++ ) {\n\t\tconst values = data[ x[ j ] ];\n\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\tpredictors.push( x[ j ] );\n\t\t} else {\n\t\t\tconst categories = extractCategoriesFromValues( values, x[ j ] );\n\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\tpredictors.push( `${x[ j ]}_${categories[ k ]}` );\n\t\t\t}\n\t\t\thash[ x[ j ] ] = categories;\n\t\t}\n\t}\n\tlet buffer = [];\n\tconst yvalues = [];\n\tfor ( let i = 0; i < data[ x[ 0 ] ].length; i++ ) {\n\t\tlet missing = false;\n\t\tconst row = [];\n\t\tif ( intercept ) {\n\t\t\trow.push( 1 );\n\t\t}\n\t\tfor ( let j = 0; j < x.length; j++ ) {\n\t\t\tconst values = data[ x[ j ] ];\n\t\t\tif ( contains( quantitative, x[ j ] ) ) {\n\t\t\t\tif ( isNonMissingNumber( values[ i ] ) ) {\n\t\t\t\t\trow.push( values[ i ] );\n\t\t\t\t} else {\n\t\t\t\t\tmissing = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst val = values[ i ];\n\t\t\t\tif ( isMissing( val ) ) {\n\t\t\t\t\tmissing = true;\n\t\t\t\t} else {\n\t\t\t\t\tconst categories = hash[ x[ j ] ];\n\t\t\t\t\tfor ( let k = intercept ? 1 : 0; k < categories.length; k++ ) {\n\t\t\t\t\t\trow.push( ( val === categories[ k ] ) ? 1 : 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !missing ) {\n\t\t\tbuffer = buffer.concat( row );\n\t\t\tyvalues.push( data[ y ][ i ] === success ? 1 : 0 );\n\t\t}\n\t}\n\tconst nobs = yvalues.length;\n\tconst matrix = ndarray( buffer, {\n\t\tshape: [ nobs, predictors.length+1 ]\n\t});\n\treturn { matrix, predictors, yvalues, nobs };\n}\n\nconst summaryTable = ( x, intercept, result, t ) => {\n\treturn (\n\t\t<Table bordered size=\"sm\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<Tooltip placement=\"right\" tooltip={t('name-of-predictor')} ><th>{t('predictor')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"right\" tooltip={t('change-in-log')}><th>{t('coefficient')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={t('standard-deviation-coefficient')} ><th>{t('std-error')}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={<span>{t('test-statistic-coefficient-zero')}<TeX displayMode raw=\"t = \\tfrac{\\text{Coefficient}}{\\text{Std. Error}}\" /></span>} ><th>{T}</th></Tooltip>\n\t\t\t\t\t<Tooltip placement=\"left\" tooltip={<span>{t('p-value-coefficient-zero')}<TeX displayMode raw=\"2 \\Phi( |t| )\" /></span>} ><th>{t('p-value')}</th></Tooltip>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{ intercept ? <tr>\n\t\t\t\t\t<th>{t('intercept')}</th>\n\t\t\t\t\t<td>{result.coefficients[ 0 ].toFixed( 6 )}</td>\n\t\t\t\t\t<td>{result.stdErrors[ 0 ].toFixed( 4 )}</td>\n\t\t\t\t\t<td>{( result.coefficients[ 0 ] / result.stdErrors[ 0 ] ).toFixed( 4 )}</td>\n\t\t\t\t\t<td>{( 2.0 * pnorm( -abs( result.coefficients[ 0 ] / result.stdErrors[ 0 ] ), 0.0, 1.0 ) ).toFixed( 4 )}</td>\n\t\t\t\t</tr> : null }\n\t\t\t\t{x.map( ( name, idx ) => {\n\t\t\t\t\tidx = idx + Number( intercept );\n\t\t\t\t\tconst tStat = result.coefficients[ idx ]/ result.stdErrors[ idx ];\n\t\t\t\t\tconst pVal = 2.0 * pnorm( -abs( tStat ), 0.0, 1.0 );\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={idx} >\n\t\t\t\t\t\t\t<th>{name}</th>\n\t\t\t\t\t\t\t<td>{result.coefficients[ idx ].toFixed( 6 )}</td>\n\t\t\t\t\t\t\t<td>{result.stdErrors[ idx ].toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{tStat.toFixed( 4 )}</td>\n\t\t\t\t\t\t\t<td>{pVal.toFixed( 4 )}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\nconst fitModel = ({ y, success, x, intercept, omitMissing, data, quantitative }) => {\n\ttry {\n\t\tif ( !isArray( x ) ) {\n\t\t\tx = [ x ];\n\t\t}\n\t\tconst dMatrix = omitMissing ? designMatrixMissing : designMatrix;\n\t\tconst { matrix, predictors, yvalues, nobs } = dMatrix( x, y, data, quantitative, intercept, success );\n\t\treturn {\n\t\t\tresult: irls( matrix, yvalues, nobs ),\n\t\t\tpredictors: predictors\n\t\t};\n\t} catch ( _ ) {\n\t\treturn {};\n\t}\n};\n\n\n// MAIN //\n\n/**\n* Logistic regression.\n*\n* @property {Object} data - object of value arrays\n* @property {(string|Factor)} y - outcome variable\n* @property {*} success - success category of `y`\n* @property {(string|Factor|Array<(string|Factor)>)} x - one or more predictor variables\n* @property {Array<string>} quantitative - array of variables in `data` that are `quantitative`\n* @property {boolean} omitMissing - controls whether to omit missing values\n* @property {boolean} intercept - controls whether to fit a model with an intercept term\n* @property {Function} onPredict - callback invoked with predictions and residuals after model fitting\n*/\nclass LogisticRegression extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tCOUNTER += 1;\n\t\tlet { y, success, x, intercept, omitMissing, data, quantitative } = props;\n\t\tconst { result, predictors } = fitModel({ y, success, x, intercept, omitMissing, data, quantitative });\n\t\tthis.state = {\n\t\t\tprobabilityThreshold: 0.5,\n\t\t\tresult,\n\t\t\tpredictors,\n\t\t\t...props\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps( nextProps, prevState ) {\n\t\tif (\n\t\t\tnextProps.data !== prevState.data ||\n\t\t\tnextProps.quantitative !== prevState.quantitative ||\n\t\t\tnextProps.x !== prevState.x ||\n\t\t\tnextProps.y !== prevState.y ||\n\t\t\tnextProps.success !== prevState.success ||\n\t\t\tnextProps.omitMissing !== prevState.omitMissing\n\t\t) {\n\t\t\tconst { y, success, x, intercept, omitMissing, data, quantitative } = nextProps;\n\t\t\tconst newState = {\n\t\t\t\t...fitModel({ y, success, x, intercept, omitMissing, data, quantitative }),\n\t\t\t\t...nextProps\n\t\t\t};\n\t\t\treturn newState;\n\t\t}\n\t\treturn null;\n\t}\n\n\thandlePredict = () => {\n\t\tlet { x, y, data, quantitative, intercept, success } = this.props;\n\t\tif ( !isArray( x ) ) {\n\t\t\tx = [ x ];\n\t\t}\n\t\tconst { matrix, yvalues } = designMatrix( x, y, data, quantitative, intercept, success );\n\t\tconst probs = this.state.result.predict( matrix );\n\t\tconst resid = subtract( probs, yvalues );\n\t\tconst yhat = probs.map( x => x > this.state.probabilityThreshold );\n\t\tthis.props.onPredict( yhat, probs, resid, COUNTER );\n\t}\n\n\trender() {\n\t\tconst { result } = this.state;\n\t\tconst { t } = this.props;\n\t\tif ( !result ) {\n\t\t\treturn <Alert variant=\"danger\">{t('missing-attributes')}</Alert>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ overflowX: 'auto', width: '100%' }}>\n\t\t\t\t<span className=\"title\" >{t('logistic-title', { y: this.props.y, counter: COUNTER })}</span>\n\t\t\t\t{summaryTable( this.state.predictors, this.props.intercept, result, this.props.t )}\n\t\t\t\t<i>{result.converged ? t('fisher-scoring-converged', { n: result.iterations }) : t('fisher-scoring-not-converged', { n: result.iterations })}</i>\n\t\t\t\t<p>{t('aic')}: {roundn( result.aic, -3 )}</p>\n\t\t\t\t{this.props.onPredict ? <ButtonGroup>\n\t\t\t\t\t<Tooltip tooltip={t('use-model-to-predict-tooltip-logistic')} >\n\t\t\t\t\t\t<Button variant=\"secondary\" size=\"sm\" onClick={this.handlePredict} >\n\t\t\t\t\t\t\t{this.props.t('use-model-to-predict')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<InputGroup size=\"sm\" >\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<InputGroup.Text>{t('threshold')}:</InputGroup.Text>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tdefaultValue={0.5}\n\t\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\t\tonChange={( event ) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tprobabilityThreshold: event.target.value\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</ButtonGroup> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n// PROPERTIES //\n\nLogisticRegression.defaultProps = {\n\tomitMissing: false,\n\tintercept: true,\n\tonPredict: null\n};\n\nLogisticRegression.propTypes = {\n\tdata: PropTypes.object.isRequired,\n\ty: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf( Factor )\n\t]).isRequired,\n\tsuccess: PropTypes.any.isRequired,\n\tx: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf( PropTypes.oneOfType([ PropTypes.string, PropTypes.instanceOf( Factor ) ]) ),\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf( Factor )\n\t]).isRequired,\n\tquantitative: PropTypes.arrayOf( PropTypes.string ).isRequired,\n\tomitMissing: PropTypes.bool,\n\tintercept: PropTypes.bool,\n\tonPredict: PropTypes.func\n};\n\n\n// EXPORTS //\n\nexport default withTranslation( 'models' )( withPropCheck( LogisticRegression ) );\n","/**\n* Computes a matrix product of a n x p matrix and a column vector of length p.\n*\n* @param {Matrix} A - n x p matrix\n* @param {Array} b - p x 1 column vector\n* @returns {Array} result of matrix multiplication\n*/\nfunction mmult( A, b ) {\n\tconst n = A.shape[ 0 ];\n\tconst p = A.shape[ 1 ];\n\n\tlet ret = new Float64Array( n );\n\tfor ( let i = 0; i < n; i++ ) {\n\t\t\tlet sum = 0;\n\t\t\tfor ( let j = 0; j < p; j++ ) {\n\t\t\t\tsum += A.get( i, j ) * b[ j ];\n\t\t\t}\n\t\t\tret[ i ] = sum;\n\t}\n\treturn ret;\n}\n\n\n// EXPORTS //\n\nexport default mmult;\n","// MODULES //\n\nimport isArrayLike from '@stdlib/assert/is-array-like';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\n\n\n// MAIN //\n\n/**\n* Computes an element-wise subtraction.\n*\n* @param {NumberArray} arr - input array\n* @param {(NumberArray|number)} x - either an array of equal length or a scalar\n* @returns {NumberArray} output array\n*/\nfunction subtract( arr, x ) {\n\tconst isArr = isArrayLike( x );\n\tif ( !isArrayLike( arr ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an array. Value: `' + arr + '`.' );\n\t}\n\tif ( !isArr && !isNumber( x ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must either be an array or number primitive. Value: `' + x + '`.' );\n\t}\n\tconst len = arr.length;\n\tconst out = new Array( len );\n\n\t// Case 1: x is an array\n\tif ( isArr ) {\n\t\tif ( len !== x.length ) {\n\t\t\tthrow new Error( 'invalid input argument. Array to be added must have a length equal to that of the input array.' );\n\t\t}\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x[ i ];\n\t\t}\n\t}\n\t// Case 2: scalar\n\telse {\n\t\tfor ( let i = 0; i < len; i++ ) {\n\t\t\tout[ i ] = arr[ i ] - x;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default subtract;\n","/**\n* Copyright (C) 2020-present The ISLE Authors\n*\n* The isle-dashboard program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// MODULES //\n\nimport ndarray from '@stdlib/ndarray/ctor';\n\n\n// MAIN //\n\n/**\n* Transposes a matrix.\n*\n* @param {Matrix} X - input matrix (2d `ndarray`)\n* @returns matrix transpose\n*/\nconst transpose = ( X ) => {\n\tconst shape = [ X.shape[ 1 ], X.shape[ 0 ] ];\n\tconst strides = [ X.strides[ 1 ], X.strides[ 0 ] ];\n\tconst offset = X.offset;\n\tconst order = X.order;\n\treturn ndarray( 'float64', X._buffer, shape, strides, offset, order );\n};\n\n\n// EXPORTS //\n\nexport default transpose;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Compute `x * ln(y)` so that the result is `0` if `x = 0`.\n*\n* @module @stdlib/math/base/special/xlogy\n*\n* @example\n* var xlogy = require( '@stdlib/math/base/special/xlogy' );\n*\n* var out = xlogy( 3.0, 2.0 );\n* // returns ~2.079\n*\n* out = xlogy( 1.5, 5.9 );\n* // returns ~2.662\n*\n* out = xlogy( 0.9, 1.0 );\n* // returns 0.0\n*\n* out = xlogy( 0.0, -2.0 );\n* // returns 0.0\n*\n* out = xlogy( 1.5, NaN );\n* // returns NaN\n*\n* out = xlogy( 0.0, NaN );\n* // returns NaN\n*\n* out = xlogy( NaN, 2.3 );\n* // returns NaN\n*/\n// MODULES //\n\nvar xlogy = require('./xlogy.js'); // EXPORTS //\n\n\nmodule.exports = xlogy;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isnan = require('./../../../../base/assert/is-nan');\n\nvar ln = require('./../../../../base/special/ln'); // MAIN //\n\n/**\n* Computes `x * ln(y)` so that the result is `0` if `x = 0`.\n*\n* @param {number} x - input value\n* @param {number} y - input value\n* @returns {number} function value\n*\n* @example\n* var out = xlogy( 3.0, 2.0 );\n* // returns ~2.079\n*\n* @example\n* var out = xlogy( 1.5, 5.9 );\n* // returns ~2.662\n*\n* @example\n* var out = xlogy( 0.9, 1.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogy( 0.0, -2.0 );\n* // returns 0.0\n*\n* @example\n* var out = xlogy( 1.5, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogy( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var out = xlogy( NaN, 2.3 );\n* // returns NaN\n*/\n\n\nfunction xlogy(x, y) {\n  if (x === 0.0 && !isnan(y)) {\n    return 0.0;\n  }\n\n  return x * ln(y);\n} // EXPORTS //\n\n\nmodule.exports = xlogy;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar constantFunction = require('@stdlib/utils/constant-function');\n\nvar isnan = require('@stdlib/math/base/assert/is-nan'); // MAIN //\n\n/**\n* Returns a function for evaluating the probability mass function (PMF) for a Bernoulli distribution with success probability `p`.\n*\n* @param {Probability} p - success probability\n* @returns {Function} PMF\n*\n* @example\n* var pmf = factory( 0.8 );\n* var y = pmf( 0.0 );\n* // returns 0.2\n*\n* y = pmf( 1.0 );\n* // returns 0.8\n*/\n\n\nfunction factory(p) {\n  if (isnan(p) || p < 0.0 || p > 1.0) {\n    return constantFunction(NaN);\n  }\n\n  return pmf;\n  /**\n  * Evaluates the probability mass function (PMF) for a Bernoulli distribution.\n  *\n  * @private\n  * @param {number} x - input value\n  * @returns {Probability} evaluated PMF\n  *\n  * @example\n  * var y = pmf( 2.0 );\n  * // returns <number>\n  */\n\n  function pmf(x) {\n    if (isnan(x)) {\n      return NaN;\n    }\n\n    if (x === 0.0) {\n      return 1.0 - p;\n    }\n\n    if (x === 1.0) {\n      return p;\n    }\n\n    return 0.0;\n  }\n} // EXPORTS //\n\n\nmodule.exports = factory;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Bernoulli distribution probability mass function (PMF).\n*\n* @module @stdlib/stats/base/dists/bernoulli/pmf\n*\n* @example\n* var pmf = require( '@stdlib/stats/base/dists/bernoulli/pmf' );\n*\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* y = pmf( 1.0, 0.7 );\n* // returns 0.7\n*\n* y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* var mypmf = pmf.factory( 0.5 );\n* y = mypmf( 2.0 );\n* // returns 0.0\n*\n* y = mypmf( 1.0 );\n* // returns 0.5\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils/define-nonenumerable-read-only-property');\n\nvar pmf = require('./pmf.js');\n\nvar factory = require('./factory.js'); // MAIN //\n\n\nsetReadOnly(pmf, 'factory', factory); // EXPORTS //\n\nmodule.exports = pmf;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isnan = require('@stdlib/math/base/assert/is-nan'); // MAIN //\n\n/**\n* Evaluates the probability mass function (PMF) for a Bernoulli distribution with success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {Probability} p - success probability\n* @returns {Probability} evaluated PMF\n*\n* @example\n* var y = pmf( 1.0, 0.3 );\n* // returns 0.3\n*\n* @example\n* var y = pmf( 0.0, 0.3 );\n* // returns 0.7\n*\n* @example\n* var y = pmf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.8, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = pmf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pmf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* // Invalid success probability:\n* var y = pmf( 1.0, 1.5 );\n* // returns NaN\n*/\n\n\nfunction pmf(x, p) {\n  if (isnan(x) || isnan(p) || p < 0.0 || p > 1.0) {\n    return NaN;\n  }\n\n  if (x === 0.0) {\n    return 1.0 - p;\n  }\n\n  if (x === 1.0) {\n    return p;\n  }\n\n  return 0.0;\n} // EXPORTS //\n\n\nmodule.exports = pmf;","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport { hypotenuse } from './util';\n\nvar SingularValueDecomposition = /*#__PURE__*/function () {\n  function SingularValueDecomposition(value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SingularValueDecomposition);\n\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    var m = value.rows;\n    var n = value.columns;\n    var _options$computeLeftS = options.computeLeftSingularVectors,\n        computeLeftSingularVectors = _options$computeLeftS === void 0 ? true : _options$computeLeftS,\n        _options$computeRight = options.computeRightSingularVectors,\n        computeRightSingularVectors = _options$computeRight === void 0 ? true : _options$computeRight,\n        _options$autoTranspos = options.autoTranspose,\n        autoTranspose = _options$autoTranspos === void 0 ? false : _options$autoTranspos;\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n    var swapped = false;\n    var a;\n\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone(); // eslint-disable-next-line no-console\n\n        console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Float64Array(ni);\n    var U = new Matrix(m, nu);\n    var V = new Matrix(n, n);\n    var e = new Float64Array(n);\n    var work = new Float64Array(m);\n    var si = new Float64Array(ni);\n\n    for (var i = 0; i < ni; i++) {\n      si[i] = i;\n    }\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (var k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n\n        for (var _i = k; _i < m; _i++) {\n          s[k] = hypotenuse(s[k], a.get(_i, k));\n        }\n\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n\n          for (var _i2 = k; _i2 < m; _i2++) {\n            a.set(_i2, k, a.get(_i2, k) / s[k]);\n          }\n\n          a.set(k, k, a.get(k, k) + 1);\n        }\n\n        s[k] = -s[k];\n      }\n\n      for (var j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          var t = 0;\n\n          for (var _i3 = k; _i3 < m; _i3++) {\n            t += a.get(_i3, k) * a.get(_i3, j);\n          }\n\n          t = -t / a.get(k, k);\n\n          for (var _i4 = k; _i4 < m; _i4++) {\n            a.set(_i4, j, a.get(_i4, j) + t * a.get(_i4, k));\n          }\n        }\n\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (var _i5 = k; _i5 < m; _i5++) {\n          U.set(_i5, k, a.get(_i5, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n\n        for (var _i6 = k + 1; _i6 < n; _i6++) {\n          e[k] = hypotenuse(e[k], e[_i6]);\n        }\n\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n\n          for (var _i7 = k + 1; _i7 < n; _i7++) {\n            e[_i7] /= e[k];\n          }\n\n          e[k + 1] += 1;\n        }\n\n        e[k] = -e[k];\n\n        if (k + 1 < m && e[k] !== 0) {\n          for (var _i8 = k + 1; _i8 < m; _i8++) {\n            work[_i8] = 0;\n          }\n\n          for (var _i9 = k + 1; _i9 < m; _i9++) {\n            for (var _j = k + 1; _j < n; _j++) {\n              work[_i9] += e[_j] * a.get(_i9, _j);\n            }\n          }\n\n          for (var _j2 = k + 1; _j2 < n; _j2++) {\n            var _t = -e[_j2] / e[k + 1];\n\n            for (var _i10 = k + 1; _i10 < m; _i10++) {\n              a.set(_i10, _j2, a.get(_i10, _j2) + _t * work[_i10]);\n            }\n          }\n        }\n\n        if (wantv) {\n          for (var _i11 = k + 1; _i11 < n; _i11++) {\n            V.set(_i11, k, e[_i11]);\n          }\n        }\n      }\n    }\n\n    var p = Math.min(n, m + 1);\n\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (var _j3 = nct; _j3 < nu; _j3++) {\n        for (var _i12 = 0; _i12 < m; _i12++) {\n          U.set(_i12, _j3, 0);\n        }\n\n        U.set(_j3, _j3, 1);\n      }\n\n      for (var _k = nct - 1; _k >= 0; _k--) {\n        if (s[_k] !== 0) {\n          for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n            var _t2 = 0;\n\n            for (var _i13 = _k; _i13 < m; _i13++) {\n              _t2 += U.get(_i13, _k) * U.get(_i13, _j4);\n            }\n\n            _t2 = -_t2 / U.get(_k, _k);\n\n            for (var _i14 = _k; _i14 < m; _i14++) {\n              U.set(_i14, _j4, U.get(_i14, _j4) + _t2 * U.get(_i14, _k));\n            }\n          }\n\n          for (var _i15 = _k; _i15 < m; _i15++) {\n            U.set(_i15, _k, -U.get(_i15, _k));\n          }\n\n          U.set(_k, _k, 1 + U.get(_k, _k));\n\n          for (var _i16 = 0; _i16 < _k - 1; _i16++) {\n            U.set(_i16, _k, 0);\n          }\n        } else {\n          for (var _i17 = 0; _i17 < m; _i17++) {\n            U.set(_i17, _k, 0);\n          }\n\n          U.set(_k, _k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (var _k2 = n - 1; _k2 >= 0; _k2--) {\n        if (_k2 < nrt && e[_k2] !== 0) {\n          for (var _j5 = _k2 + 1; _j5 < n; _j5++) {\n            var _t3 = 0;\n\n            for (var _i18 = _k2 + 1; _i18 < n; _i18++) {\n              _t3 += V.get(_i18, _k2) * V.get(_i18, _j5);\n            }\n\n            _t3 = -_t3 / V.get(_k2 + 1, _k2);\n\n            for (var _i19 = _k2 + 1; _i19 < n; _i19++) {\n              V.set(_i19, _j5, V.get(_i19, _j5) + _t3 * V.get(_i19, _k2));\n            }\n          }\n        }\n\n        for (var _i20 = 0; _i20 < n; _i20++) {\n          V.set(_i20, _k2, 0);\n        }\n\n        V.set(_k2, _k2, 1);\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n\n    while (p > 0) {\n      var _k3 = void 0,\n          kase = void 0;\n\n      for (_k3 = p - 2; _k3 >= -1; _k3--) {\n        if (_k3 === -1) {\n          break;\n        }\n\n        var alpha = Number.MIN_VALUE + eps * Math.abs(s[_k3] + Math.abs(s[_k3 + 1]));\n\n        if (Math.abs(e[_k3]) <= alpha || Number.isNaN(e[_k3])) {\n          e[_k3] = 0;\n          break;\n        }\n      }\n\n      if (_k3 === p - 2) {\n        kase = 4;\n      } else {\n        var ks = void 0;\n\n        for (ks = p - 1; ks >= _k3; ks--) {\n          if (ks === _k3) {\n            break;\n          }\n\n          var _t4 = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0);\n\n          if (Math.abs(s[ks]) <= eps * _t4) {\n            s[ks] = 0;\n            break;\n          }\n        }\n\n        if (ks === _k3) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          _k3 = ks;\n        }\n      }\n\n      _k3++;\n\n      switch (kase) {\n        case 1:\n          {\n            var f = e[p - 2];\n            e[p - 2] = 0;\n\n            for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n              var _t5 = hypotenuse(s[_j6], f);\n\n              var cs = s[_j6] / _t5;\n              var sn = f / _t5;\n              s[_j6] = _t5;\n\n              if (_j6 !== _k3) {\n                f = -sn * e[_j6 - 1];\n                e[_j6 - 1] = cs * e[_j6 - 1];\n              }\n\n              if (wantv) {\n                for (var _i21 = 0; _i21 < n; _i21++) {\n                  _t5 = cs * V.get(_i21, _j6) + sn * V.get(_i21, p - 1);\n                  V.set(_i21, p - 1, -sn * V.get(_i21, _j6) + cs * V.get(_i21, p - 1));\n                  V.set(_i21, _j6, _t5);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 2:\n          {\n            var _f = e[_k3 - 1];\n            e[_k3 - 1] = 0;\n\n            for (var _j7 = _k3; _j7 < p; _j7++) {\n              var _t6 = hypotenuse(s[_j7], _f);\n\n              var _cs = s[_j7] / _t6;\n\n              var _sn = _f / _t6;\n\n              s[_j7] = _t6;\n              _f = -_sn * e[_j7];\n              e[_j7] = _cs * e[_j7];\n\n              if (wantu) {\n                for (var _i22 = 0; _i22 < m; _i22++) {\n                  _t6 = _cs * U.get(_i22, _j7) + _sn * U.get(_i22, _k3 - 1);\n                  U.set(_i22, _k3 - 1, -_sn * U.get(_i22, _j7) + _cs * U.get(_i22, _k3 - 1));\n                  U.set(_i22, _j7, _t6);\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 3:\n          {\n            var scale = Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2]), Math.abs(e[p - 2]), Math.abs(s[_k3]), Math.abs(e[_k3]));\n            var sp = s[p - 1] / scale;\n            var spm1 = s[p - 2] / scale;\n            var epm1 = e[p - 2] / scale;\n            var sk = s[_k3] / scale;\n            var ek = e[_k3] / scale;\n            var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n            var c = sp * epm1 * (sp * epm1);\n            var shift = 0;\n\n            if (b !== 0 || c !== 0) {\n              if (b < 0) {\n                shift = 0 - Math.sqrt(b * b + c);\n              } else {\n                shift = Math.sqrt(b * b + c);\n              }\n\n              shift = c / (b + shift);\n            }\n\n            var _f2 = (sk + sp) * (sk - sp) + shift;\n\n            var g = sk * ek;\n\n            for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n              var _t7 = hypotenuse(_f2, g);\n\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n\n              var _cs2 = _f2 / _t7;\n\n              var _sn2 = g / _t7;\n\n              if (_j8 !== _k3) {\n                e[_j8 - 1] = _t7;\n              }\n\n              _f2 = _cs2 * s[_j8] + _sn2 * e[_j8];\n              e[_j8] = _cs2 * e[_j8] - _sn2 * s[_j8];\n              g = _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = _cs2 * s[_j8 + 1];\n\n              if (wantv) {\n                for (var _i23 = 0; _i23 < n; _i23++) {\n                  _t7 = _cs2 * V.get(_i23, _j8) + _sn2 * V.get(_i23, _j8 + 1);\n                  V.set(_i23, _j8 + 1, -_sn2 * V.get(_i23, _j8) + _cs2 * V.get(_i23, _j8 + 1));\n                  V.set(_i23, _j8, _t7);\n                }\n              }\n\n              _t7 = hypotenuse(_f2, g);\n              if (_t7 === 0) _t7 = Number.MIN_VALUE;\n              _cs2 = _f2 / _t7;\n              _sn2 = g / _t7;\n              s[_j8] = _t7;\n              _f2 = _cs2 * e[_j8] + _sn2 * s[_j8 + 1];\n              s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * s[_j8 + 1];\n              g = _sn2 * e[_j8 + 1];\n              e[_j8 + 1] = _cs2 * e[_j8 + 1];\n\n              if (wantu && _j8 < m - 1) {\n                for (var _i24 = 0; _i24 < m; _i24++) {\n                  _t7 = _cs2 * U.get(_i24, _j8) + _sn2 * U.get(_i24, _j8 + 1);\n                  U.set(_i24, _j8 + 1, -_sn2 * U.get(_i24, _j8) + _cs2 * U.get(_i24, _j8 + 1));\n                  U.set(_i24, _j8, _t7);\n                }\n              }\n            }\n\n            e[p - 2] = _f2;\n            iter = iter + 1;\n            break;\n          }\n\n        case 4:\n          {\n            if (s[_k3] <= 0) {\n              s[_k3] = s[_k3] < 0 ? -s[_k3] : 0;\n\n              if (wantv) {\n                for (var _i25 = 0; _i25 <= pp; _i25++) {\n                  V.set(_i25, _k3, -V.get(_i25, _k3));\n                }\n              }\n            }\n\n            while (_k3 < pp) {\n              if (s[_k3] >= s[_k3 + 1]) {\n                break;\n              }\n\n              var _t8 = s[_k3];\n              s[_k3] = s[_k3 + 1];\n              s[_k3 + 1] = _t8;\n\n              if (wantv && _k3 < n - 1) {\n                for (var _i26 = 0; _i26 < n; _i26++) {\n                  _t8 = V.get(_i26, _k3 + 1);\n                  V.set(_i26, _k3 + 1, V.get(_i26, _k3));\n                  V.set(_i26, _k3, _t8);\n                }\n              }\n\n              if (wantu && _k3 < m - 1) {\n                for (var _i27 = 0; _i27 < m; _i27++) {\n                  _t8 = U.get(_i27, _k3 + 1);\n                  U.set(_i27, _k3 + 1, U.get(_i27, _k3));\n                  U.set(_i27, _k3, _t8);\n                }\n              }\n\n              _k3++;\n            }\n\n            iter = 0;\n            p--;\n            break;\n          }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  _createClass(SingularValueDecomposition, [{\n    key: \"solve\",\n    value: function solve(value) {\n      var Y = value;\n      var e = this.threshold;\n      var scols = this.s.length;\n      var Ls = Matrix.zeros(scols, scols);\n\n      for (var i = 0; i < scols; i++) {\n        if (Math.abs(this.s[i]) <= e) {\n          Ls.set(i, i, 0);\n        } else {\n          Ls.set(i, i, 1 / this.s[i]);\n        }\n      }\n\n      var U = this.U;\n      var V = this.rightSingularVectors;\n      var VL = V.mmul(Ls);\n      var vrows = V.rows;\n      var urows = U.rows;\n      var VLU = Matrix.zeros(vrows, urows);\n\n      for (var _i28 = 0; _i28 < vrows; _i28++) {\n        for (var j = 0; j < urows; j++) {\n          var sum = 0;\n\n          for (var k = 0; k < scols; k++) {\n            sum += VL.get(_i28, k) * U.get(j, k);\n          }\n\n          VLU.set(_i28, j, sum);\n        }\n      }\n\n      return VLU.mmul(Y);\n    }\n  }, {\n    key: \"solveForDiagonal\",\n    value: function solveForDiagonal(value) {\n      return this.solve(Matrix.diag(value));\n    }\n  }, {\n    key: \"inverse\",\n    value: function inverse() {\n      var V = this.V;\n      var e = this.threshold;\n      var vrows = V.rows;\n      var vcols = V.columns;\n      var X = new Matrix(vrows, this.s.length);\n\n      for (var i = 0; i < vrows; i++) {\n        for (var j = 0; j < vcols; j++) {\n          if (Math.abs(this.s[j]) > e) {\n            X.set(i, j, V.get(i, j) / this.s[j]);\n          }\n        }\n      }\n\n      var U = this.U;\n      var urows = U.rows;\n      var ucols = U.columns;\n      var Y = new Matrix(vrows, urows);\n\n      for (var _i29 = 0; _i29 < vrows; _i29++) {\n        for (var _j9 = 0; _j9 < urows; _j9++) {\n          var sum = 0;\n\n          for (var k = 0; k < ucols; k++) {\n            sum += X.get(_i29, k) * U.get(_j9, k);\n          }\n\n          Y.set(_i29, _j9, sum);\n        }\n      }\n\n      return Y;\n    }\n  }, {\n    key: \"condition\",\n    get: function get() {\n      return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    }\n  }, {\n    key: \"norm2\",\n    get: function get() {\n      return this.s[0];\n    }\n  }, {\n    key: \"rank\",\n    get: function get() {\n      var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n      var r = 0;\n      var s = this.s;\n\n      for (var i = 0, ii = s.length; i < ii; i++) {\n        if (s[i] > tol) {\n          r++;\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"diagonal\",\n    get: function get() {\n      return Array.from(this.s);\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n    }\n  }, {\n    key: \"leftSingularVectors\",\n    get: function get() {\n      return this.U;\n    }\n  }, {\n    key: \"rightSingularVectors\",\n    get: function get() {\n      return this.V;\n    }\n  }, {\n    key: \"diagonalMatrix\",\n    get: function get() {\n      return Matrix.diag(this.s);\n    }\n  }]);\n\n  return SingularValueDecomposition;\n}();\n\nexport { SingularValueDecomposition as default };","export function hypotenuse(a, b) {\n  var r = 0;\n\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n\n  return 0;\n}","import _classCallCheck from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/philipp/git/cmu-isle/isle-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AbstractMatrix } from '../matrix';\n\nvar WrapperMatrix2D = /*#__PURE__*/function (_AbstractMatrix) {\n  _inherits(WrapperMatrix2D, _AbstractMatrix);\n\n  var _super = _createSuper(WrapperMatrix2D);\n\n  function WrapperMatrix2D(data) {\n    var _this;\n\n    _classCallCheck(this, WrapperMatrix2D);\n\n    _this = _super.call(this);\n    _this.data = data;\n    _this.rows = data.length;\n    _this.columns = data[0].length;\n    return _this;\n  }\n\n  _createClass(WrapperMatrix2D, [{\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, value) {\n      this.data[rowIndex][columnIndex] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(rowIndex, columnIndex) {\n      return this.data[rowIndex][columnIndex];\n    }\n  }]);\n\n  return WrapperMatrix2D;\n}(AbstractMatrix);\n\nexport { WrapperMatrix2D as default };"],"names":["LuDecomposition","matrix","this","i","j","k","p","s","t","v","LUcolj","kmax","lu","clone","rows","columns","pivotVector","Float64Array","pivotSign","get","Math","min","set","abs","LU","key","value","data","col","Error","isSingular","count","X","subMatrixRow","isSquare","determinant","Array","from","QrDecomposition","qr","m","n","rdiag","nrm","QR","Rdiag","isFullRank","subMatrix","solve","leftHandSide","rightHandSide","useSVD","arguments","length","undefined","A","B","shape","result","Matrix","Bcolj","b","ndarray","x","y","len","out","sum","arr","res","variance","mu","logitLinkInv","eta","etai","EPS","exp","logitMuEta","val","pow","aic","numParameters","logLik","ln","dbern","devResids","wt","mui","yi","xlogy","calcW","weights","gprime","varg","calcZ","stdErrors","yhat","w","nrow","ncol","errs","sqrt","nObs","Xt","transpose","fill","mustart","beta","logitLink","devOld","converged","z","wz","multiply","Xw","colMult","multiplyMatrices","mmult","to1DArray","dev","coefficients","predict","sigmoid","fitted","iterations","COUNTER","isMissing","isnan","isUndefinedOrNull","isNonMissingNumber","isNumber","designMatrix","quantitative","intercept","success","predictors","hash","nobs","values","contains","push","categories","extractCategoriesFromValues","buffer","colIndex","yvalues","map","designMatrixMissing","missing","row","concat","fitModel","omitMissing","isArray","irls","_","LogisticRegression","props","probs","state","resid","subtract","probabilityThreshold","onPredict","style","overflowX","width","className","counter","bordered","size","placement","tooltip","displayMode","raw","toFixed","pnorm","name","idx","Number","tStat","pVal","summaryTable","roundn","ButtonGroup","Button","variant","onClick","handlePredict","InputGroup","FormControl","type","max","defaultValue","step","onChange","event","setState","target","Alert","nextProps","prevState","Component","defaultProps","withTranslation","withPropCheck","ret","isArr","isArrayLike","TypeError","strides","offset","order","_buffer","module","exports","constantFunction","NaN","setReadOnly","pmf","SingularValueDecomposition","options","isEmpty","a","_options$computeLeftS","computeLeftSingularVectors","_options$computeRight","computeRightSingularVectors","_options$autoTranspos","autoTranspose","wantu","Boolean","wantv","swapped","aux","console","warn","nu","ni","U","V","e","work","si","nct","nrt","mrc","_i","_i2","_i3","_i4","_i5","_i6","_i7","_i8","_i9","_j","_j2","_t","_i10","_i11","_j3","_i12","_k","_j4","_t2","_i13","_i14","_i15","_i16","_i17","_k2","_j5","_t3","_i18","_i19","_i20","pp","eps","EPSILON","_k3","kase","alpha","MIN_VALUE","isNaN","ks","_t4","f","_j6","_t5","cs","sn","_i21","_f","_j7","_t6","_cs","_sn","_i22","scale","sp","spm1","epm1","sk","ek","c","shift","_f2","g","_j8","_t7","_cs2","_sn2","_i23","_i24","_i25","_t8","_i26","_i27","tmp","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","_i28","vcols","ucols","_i29","_j9","tol","r","ii","hypotenuse","WrapperMatrix2D","_AbstractMatrix","_super","_this","call","rowIndex","columnIndex"],"sourceRoot":""}