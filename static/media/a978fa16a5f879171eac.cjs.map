{"version":3,"sources":["../static/media/a978fa16a5f879171eac.cjs"],"sourcesContent":["'use strict';\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar OrderedMap = require('orderedmap');\n\nfunction _interopDefaultLegacy(e) {\n  return e && _typeof(e) === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar OrderedMap__default = _interopDefaultLegacy(OrderedMap);\n\nfunction _findDiffStart(a, b, pos) {\n  for (var i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount) return a.childCount == b.childCount ? null : pos;\n    var childA = a.child(i),\n        childB = b.child(i);\n\n    if (childA == childB) {\n      pos += childA.nodeSize;\n      continue;\n    }\n\n    if (!childA.sameMarkup(childB)) return pos;\n\n    if (childA.isText && childA.text != childB.text) {\n      for (var j = 0; childA.text[j] == childB.text[j]; j++) {\n        pos++;\n      }\n\n      return pos;\n    }\n\n    if (childA.content.size || childB.content.size) {\n      var inner = _findDiffStart(childA.content, childB.content, pos + 1);\n\n      if (inner != null) return inner;\n    }\n\n    pos += childA.nodeSize;\n  }\n}\n\nfunction _findDiffEnd(a, b, posA, posB) {\n  for (var iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0) return iA == iB ? null : {\n      a: posA,\n      b: posB\n    };\n    var childA = a.child(--iA),\n        childB = b.child(--iB),\n        size = childA.nodeSize;\n\n    if (childA == childB) {\n      posA -= size;\n      posB -= size;\n      continue;\n    }\n\n    if (!childA.sameMarkup(childB)) return {\n      a: posA,\n      b: posB\n    };\n\n    if (childA.isText && childA.text != childB.text) {\n      var same = 0,\n          minSize = Math.min(childA.text.length, childB.text.length);\n\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++;\n        posA--;\n        posB--;\n      }\n\n      return {\n        a: posA,\n        b: posB\n      };\n    }\n\n    if (childA.content.size || childB.content.size) {\n      var inner = _findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n\n      if (inner) return inner;\n    }\n\n    posA -= size;\n    posB -= size;\n  }\n}\n\nvar Fragment = function () {\n  function Fragment(content, size) {\n    _classCallCheck(this, Fragment);\n\n    this.content = content;\n    this.size = size || 0;\n    if (size == null) for (var i = 0; i < content.length; i++) {\n      this.size += content[i].nodeSize;\n    }\n  }\n\n  _createClass(Fragment, [{\n    key: \"nodesBetween\",\n    value: function nodesBetween(from, to, f) {\n      var nodeStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var parent = arguments.length > 4 ? arguments[4] : undefined;\n\n      for (var i = 0, pos = 0; pos < to; i++) {\n        var child = this.content[i],\n            end = pos + child.nodeSize;\n\n        if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n          var start = pos + 1;\n          child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n        }\n\n        pos = end;\n      }\n    }\n  }, {\n    key: \"descendants\",\n    value: function descendants(f) {\n      this.nodesBetween(0, this.size, f);\n    }\n  }, {\n    key: \"textBetween\",\n    value: function textBetween(from, to, blockSeparator, leafText) {\n      var text = \"\",\n          separated = true;\n      this.nodesBetween(from, to, function (node, pos) {\n        if (node.isText) {\n          text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n          separated = !blockSeparator;\n        } else if (node.isLeaf) {\n          if (leafText) {\n            text += typeof leafText === \"function\" ? leafText(node) : leafText;\n          } else if (node.type.spec.leafText) {\n            text += node.type.spec.leafText(node);\n          }\n\n          separated = !blockSeparator;\n        } else if (!separated && node.isBlock) {\n          text += blockSeparator;\n          separated = true;\n        }\n      }, 0);\n      return text;\n    }\n  }, {\n    key: \"append\",\n    value: function append(other) {\n      if (!other.size) return this;\n      if (!this.size) return other;\n      var last = this.lastChild,\n          first = other.firstChild,\n          content = this.content.slice(),\n          i = 0;\n\n      if (last.isText && last.sameMarkup(first)) {\n        content[content.length - 1] = last.withText(last.text + first.text);\n        i = 1;\n      }\n\n      for (; i < other.content.length; i++) {\n        content.push(other.content[i]);\n      }\n\n      return new Fragment(content, this.size + other.size);\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(from) {\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.size;\n      if (from == 0 && to == this.size) return this;\n      var result = [],\n          size = 0;\n      if (to > from) for (var i = 0, pos = 0; pos < to; i++) {\n        var child = this.content[i],\n            end = pos + child.nodeSize;\n\n        if (end > from) {\n          if (pos < from || end > to) {\n            if (child.isText) child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));else child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n          }\n\n          result.push(child);\n          size += child.nodeSize;\n        }\n\n        pos = end;\n      }\n      return new Fragment(result, size);\n    }\n  }, {\n    key: \"cutByIndex\",\n    value: function cutByIndex(from, to) {\n      if (from == to) return Fragment.empty;\n      if (from == 0 && to == this.content.length) return this;\n      return new Fragment(this.content.slice(from, to));\n    }\n  }, {\n    key: \"replaceChild\",\n    value: function replaceChild(index, node) {\n      var current = this.content[index];\n      if (current == node) return this;\n      var copy = this.content.slice();\n      var size = this.size + node.nodeSize - current.nodeSize;\n      copy[index] = node;\n      return new Fragment(copy, size);\n    }\n  }, {\n    key: \"addToStart\",\n    value: function addToStart(node) {\n      return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n  }, {\n    key: \"addToEnd\",\n    value: function addToEnd(node) {\n      return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      if (this.content.length != other.content.length) return false;\n\n      for (var i = 0; i < this.content.length; i++) {\n        if (!this.content[i].eq(other.content[i])) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      return this.content.length ? this.content[0] : null;\n    }\n  }, {\n    key: \"lastChild\",\n    get: function get() {\n      return this.content.length ? this.content[this.content.length - 1] : null;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this.content.length;\n    }\n  }, {\n    key: \"child\",\n    value: function child(index) {\n      var found = this.content[index];\n      if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n      return found;\n    }\n  }, {\n    key: \"maybeChild\",\n    value: function maybeChild(index) {\n      return this.content[index] || null;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f) {\n      for (var i = 0, p = 0; i < this.content.length; i++) {\n        var child = this.content[i];\n        f(child, p, i);\n        p += child.nodeSize;\n      }\n    }\n  }, {\n    key: \"findDiffStart\",\n    value: function findDiffStart(other) {\n      var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return _findDiffStart(this, other, pos);\n    }\n  }, {\n    key: \"findDiffEnd\",\n    value: function findDiffEnd(other) {\n      var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.size;\n      var otherPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : other.size;\n      return _findDiffEnd(this, other, pos, otherPos);\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(pos) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      if (pos == 0) return retIndex(0, pos);\n      if (pos == this.size) return retIndex(this.content.length, pos);\n      if (pos > this.size || pos < 0) throw new RangeError(\"Position \".concat(pos, \" outside of fragment (\").concat(this, \")\"));\n\n      for (var i = 0, curPos = 0;; i++) {\n        var cur = this.child(i),\n            end = curPos + cur.nodeSize;\n\n        if (end >= pos) {\n          if (end == pos || round > 0) return retIndex(i + 1, end);\n          return retIndex(i, curPos);\n        }\n\n        curPos = end;\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"<\" + this.toStringInner() + \">\";\n    }\n  }, {\n    key: \"toStringInner\",\n    value: function toStringInner() {\n      return this.content.join(\", \");\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.content.length ? this.content.map(function (n) {\n        return n.toJSON();\n      }) : null;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(schema, value) {\n      if (!value) return Fragment.empty;\n      if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n      return new Fragment(value.map(schema.nodeFromJSON));\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      if (!array.length) return Fragment.empty;\n      var joined,\n          size = 0;\n\n      for (var i = 0; i < array.length; i++) {\n        var node = array[i];\n        size += node.nodeSize;\n\n        if (i && node.isText && array[i - 1].sameMarkup(node)) {\n          if (!joined) joined = array.slice(0, i);\n          joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text);\n        } else if (joined) {\n          joined.push(node);\n        }\n      }\n\n      return new Fragment(joined || array, size);\n    }\n  }, {\n    key: \"from\",\n    value: function from(nodes) {\n      if (!nodes) return Fragment.empty;\n      if (nodes instanceof Fragment) return nodes;\n      if (Array.isArray(nodes)) return this.fromArray(nodes);\n      if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize);\n      throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" + (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n  }]);\n\n  return Fragment;\n}();\n\nFragment.empty = new Fragment([], 0);\nvar found = {\n  index: 0,\n  offset: 0\n};\n\nfunction retIndex(index, offset) {\n  found.index = index;\n  found.offset = offset;\n  return found;\n}\n\nfunction compareDeep(a, b) {\n  if (a === b) return true;\n  if (!(a && _typeof(a) == \"object\") || !(b && _typeof(b) == \"object\")) return false;\n  var array = Array.isArray(a);\n  if (Array.isArray(b) != array) return false;\n\n  if (array) {\n    if (a.length != b.length) return false;\n\n    for (var i = 0; i < a.length; i++) {\n      if (!compareDeep(a[i], b[i])) return false;\n    }\n  } else {\n    for (var p in a) {\n      if (!(p in b) || !compareDeep(a[p], b[p])) return false;\n    }\n\n    for (var _p in b) {\n      if (!(_p in a)) return false;\n    }\n  }\n\n  return true;\n}\n\nvar Mark = function () {\n  function Mark(type, attrs) {\n    _classCallCheck(this, Mark);\n\n    this.type = type;\n    this.attrs = attrs;\n  }\n\n  _createClass(Mark, [{\n    key: \"addToSet\",\n    value: function addToSet(set) {\n      var copy,\n          placed = false;\n\n      for (var i = 0; i < set.length; i++) {\n        var other = set[i];\n        if (this.eq(other)) return set;\n\n        if (this.type.excludes(other.type)) {\n          if (!copy) copy = set.slice(0, i);\n        } else if (other.type.excludes(this.type)) {\n          return set;\n        } else {\n          if (!placed && other.type.rank > this.type.rank) {\n            if (!copy) copy = set.slice(0, i);\n            copy.push(this);\n            placed = true;\n          }\n\n          if (copy) copy.push(other);\n        }\n      }\n\n      if (!copy) copy = set.slice();\n      if (!placed) copy.push(this);\n      return copy;\n    }\n  }, {\n    key: \"removeFromSet\",\n    value: function removeFromSet(set) {\n      for (var i = 0; i < set.length; i++) {\n        if (this.eq(set[i])) return set.slice(0, i).concat(set.slice(i + 1));\n      }\n\n      return set;\n    }\n  }, {\n    key: \"isInSet\",\n    value: function isInSet(set) {\n      for (var i = 0; i < set.length; i++) {\n        if (this.eq(set[i])) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this == other || this.type == other.type && compareDeep(this.attrs, other.attrs);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {\n        type: this.type.name\n      };\n\n      for (var _ in this.attrs) {\n        obj.attrs = this.attrs;\n        break;\n      }\n\n      return obj;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(schema, json) {\n      if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\");\n      var type = schema.marks[json.type];\n      if (!type) throw new RangeError(\"There is no mark type \".concat(json.type, \" in this schema\"));\n      return type.create(json.attrs);\n    }\n  }, {\n    key: \"sameSet\",\n    value: function sameSet(a, b) {\n      if (a == b) return true;\n      if (a.length != b.length) return false;\n\n      for (var i = 0; i < a.length; i++) {\n        if (!a[i].eq(b[i])) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"setFrom\",\n    value: function setFrom(marks) {\n      if (!marks || Array.isArray(marks) && marks.length == 0) return Mark.none;\n      if (marks instanceof Mark) return [marks];\n      var copy = marks.slice();\n      copy.sort(function (a, b) {\n        return a.type.rank - b.type.rank;\n      });\n      return copy;\n    }\n  }]);\n\n  return Mark;\n}();\n\nMark.none = [];\n\nvar ReplaceError = function (_Error) {\n  _inherits(ReplaceError, _Error);\n\n  var _super = _createSuper(ReplaceError);\n\n  function ReplaceError() {\n    _classCallCheck(this, ReplaceError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(ReplaceError);\n}(_wrapNativeSuper(Error));\n\nvar Slice = function () {\n  function Slice(content, openStart, openEnd) {\n    _classCallCheck(this, Slice);\n\n    this.content = content;\n    this.openStart = openStart;\n    this.openEnd = openEnd;\n  }\n\n  _createClass(Slice, [{\n    key: \"size\",\n    get: function get() {\n      return this.content.size - this.openStart - this.openEnd;\n    }\n  }, {\n    key: \"insertAt\",\n    value: function insertAt(pos, fragment) {\n      var content = insertInto(this.content, pos + this.openStart, fragment);\n      return content && new Slice(content, this.openStart, this.openEnd);\n    }\n  }, {\n    key: \"removeBetween\",\n    value: function removeBetween(from, to) {\n      return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this.content.size) return null;\n      var json = {\n        content: this.content.toJSON()\n      };\n      if (this.openStart > 0) json.openStart = this.openStart;\n      if (this.openEnd > 0) json.openEnd = this.openEnd;\n      return json;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(schema, json) {\n      if (!json) return Slice.empty;\n      var openStart = json.openStart || 0,\n          openEnd = json.openEnd || 0;\n      if (typeof openStart != \"number\" || typeof openEnd != \"number\") throw new RangeError(\"Invalid input for Slice.fromJSON\");\n      return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n  }, {\n    key: \"maxOpen\",\n    value: function maxOpen(fragment) {\n      var openIsolating = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var openStart = 0,\n          openEnd = 0;\n\n      for (var n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) {\n        openStart++;\n      }\n\n      for (var _n = fragment.lastChild; _n && !_n.isLeaf && (openIsolating || !_n.type.spec.isolating); _n = _n.lastChild) {\n        openEnd++;\n      }\n\n      return new Slice(fragment, openStart, openEnd);\n    }\n  }]);\n\n  return Slice;\n}();\n\nSlice.empty = new Slice(Fragment.empty, 0, 0);\n\nfunction removeRange(content, from, to) {\n  var _content$findIndex = content.findIndex(from),\n      index = _content$findIndex.index,\n      offset = _content$findIndex.offset,\n      child = content.maybeChild(index);\n\n  var _content$findIndex2 = content.findIndex(to),\n      indexTo = _content$findIndex2.index,\n      offsetTo = _content$findIndex2.offset;\n\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\");\n    return content.cut(0, from).append(content.cut(to));\n  }\n\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\");\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  var _content$findIndex3 = content.findIndex(dist),\n      index = _content$findIndex3.index,\n      offset = _content$findIndex3.offset,\n      child = content.maybeChild(index);\n\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null;\n    return content.cut(0, dist).append(insert).append(content.cut(dist));\n  }\n\n  var inner = insertInto(child.content, dist - offset - 1, insert);\n  return inner && content.replaceChild(index, child.copy(inner));\n}\n\nfunction _replace($from, $to, slice) {\n  if (slice.openStart > $from.depth) throw new ReplaceError(\"Inserted content deeper than insertion position\");\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd) throw new ReplaceError(\"Inconsistent open depths\");\n  return replaceOuter($from, $to, slice, 0);\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  var index = $from.index(depth),\n      node = $from.node(depth);\n\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    var inner = replaceOuter($from, $to, slice, depth + 1);\n    return node.copy(node.content.replaceChild(index, inner));\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth));\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) {\n    var parent = $from.parent,\n        content = parent.content;\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n  } else {\n    var _prepareSliceForRepla = prepareSliceForReplace(slice, $from),\n        start = _prepareSliceForRepla.start,\n        end = _prepareSliceForRepla.end;\n\n    return close(node, replaceThreeWay($from, start, end, $to, depth));\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type)) throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\n\nfunction joinable($before, $after, depth) {\n  var node = $before.node(depth);\n  checkJoin(node, $after.node(depth));\n  return node;\n}\n\nfunction addNode(child, target) {\n  var last = target.length - 1;\n  if (last >= 0 && child.isText && child.sameMarkup(target[last])) target[last] = child.withText(target[last].text + child.text);else target.push(child);\n}\n\nfunction addRange($start, $end, depth, target) {\n  var node = ($end || $start).node(depth);\n  var startIndex = 0,\n      endIndex = $end ? $end.index(depth) : node.childCount;\n\n  if ($start) {\n    startIndex = $start.index(depth);\n\n    if ($start.depth > depth) {\n      startIndex++;\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target);\n      startIndex++;\n    }\n  }\n\n  for (var i = startIndex; i < endIndex; i++) {\n    addNode(node.child(i), target);\n  }\n\n  if ($end && $end.depth == depth && $end.textOffset) addNode($end.nodeBefore, target);\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content)) throw new ReplaceError(\"Invalid content for node \" + node.type.name);\n  return node.copy(content);\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  var openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n  var openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n  var content = [];\n  addRange(null, $from, depth, content);\n\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd);\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n  } else {\n    if (openStart) addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n    addRange($start, $end, depth, content);\n    if (openEnd) addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n  }\n\n  addRange($to, null, depth, content);\n  return new Fragment(content);\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  var content = [];\n  addRange(null, $from, depth, content);\n\n  if ($from.depth > depth) {\n    var type = joinable($from, $to, depth + 1);\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n  }\n\n  addRange($to, null, depth, content);\n  return new Fragment(content);\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  var extra = $along.depth - slice.openStart,\n      parent = $along.node(extra);\n  var node = parent.copy(slice.content);\n\n  for (var i = extra - 1; i >= 0; i--) {\n    node = $along.node(i).copy(Fragment.from(node));\n  }\n\n  return {\n    start: node.resolveNoCache(slice.openStart + extra),\n    end: node.resolveNoCache(node.content.size - slice.openEnd - extra)\n  };\n}\n\nvar ResolvedPos = function () {\n  function ResolvedPos(pos, path, parentOffset) {\n    _classCallCheck(this, ResolvedPos);\n\n    this.pos = pos;\n    this.path = path;\n    this.parentOffset = parentOffset;\n    this.depth = path.length / 3 - 1;\n  }\n\n  _createClass(ResolvedPos, [{\n    key: \"resolveDepth\",\n    value: function resolveDepth(val) {\n      if (val == null) return this.depth;\n      if (val < 0) return this.depth + val;\n      return val;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.node(this.depth);\n    }\n  }, {\n    key: \"doc\",\n    get: function get() {\n      return this.node(0);\n    }\n  }, {\n    key: \"node\",\n    value: function node(depth) {\n      return this.path[this.resolveDepth(depth) * 3];\n    }\n  }, {\n    key: \"index\",\n    value: function index(depth) {\n      return this.path[this.resolveDepth(depth) * 3 + 1];\n    }\n  }, {\n    key: \"indexAfter\",\n    value: function indexAfter(depth) {\n      depth = this.resolveDepth(depth);\n      return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n  }, {\n    key: \"start\",\n    value: function start(depth) {\n      depth = this.resolveDepth(depth);\n      return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n  }, {\n    key: \"end\",\n    value: function end(depth) {\n      depth = this.resolveDepth(depth);\n      return this.start(depth) + this.node(depth).content.size;\n    }\n  }, {\n    key: \"before\",\n    value: function before(depth) {\n      depth = this.resolveDepth(depth);\n      if (!depth) throw new RangeError(\"There is no position before the top-level node\");\n      return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n  }, {\n    key: \"after\",\n    value: function after(depth) {\n      depth = this.resolveDepth(depth);\n      if (!depth) throw new RangeError(\"There is no position after the top-level node\");\n      return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n  }, {\n    key: \"textOffset\",\n    get: function get() {\n      return this.pos - this.path[this.path.length - 1];\n    }\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      var parent = this.parent,\n          index = this.index(this.depth);\n      if (index == parent.childCount) return null;\n      var dOff = this.pos - this.path[this.path.length - 1],\n          child = parent.child(index);\n      return dOff ? parent.child(index).cut(dOff) : child;\n    }\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      var index = this.index(this.depth);\n      var dOff = this.pos - this.path[this.path.length - 1];\n      if (dOff) return this.parent.child(index).cut(0, dOff);\n      return index == 0 ? null : this.parent.child(index - 1);\n    }\n  }, {\n    key: \"posAtIndex\",\n    value: function posAtIndex(index, depth) {\n      depth = this.resolveDepth(depth);\n      var node = this.path[depth * 3],\n          pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n\n      for (var i = 0; i < index; i++) {\n        pos += node.child(i).nodeSize;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"marks\",\n    value: function marks() {\n      var parent = this.parent,\n          index = this.index();\n      if (parent.content.size == 0) return Mark.none;\n      if (this.textOffset) return parent.child(index).marks;\n      var main = parent.maybeChild(index - 1),\n          other = parent.maybeChild(index);\n\n      if (!main) {\n        var tmp = main;\n        main = other;\n        other = tmp;\n      }\n\n      var marks = main.marks;\n\n      for (var i = 0; i < marks.length; i++) {\n        if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks))) marks = marks[i--].removeFromSet(marks);\n      }\n\n      return marks;\n    }\n  }, {\n    key: \"marksAcross\",\n    value: function marksAcross($end) {\n      var after = this.parent.maybeChild(this.index());\n      if (!after || !after.isInline) return null;\n      var marks = after.marks,\n          next = $end.parent.maybeChild($end.index());\n\n      for (var i = 0; i < marks.length; i++) {\n        if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks))) marks = marks[i--].removeFromSet(marks);\n      }\n\n      return marks;\n    }\n  }, {\n    key: \"sharedDepth\",\n    value: function sharedDepth(pos) {\n      for (var depth = this.depth; depth > 0; depth--) {\n        if (this.start(depth) <= pos && this.end(depth) >= pos) return depth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"blockRange\",\n    value: function blockRange() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n      var pred = arguments.length > 1 ? arguments[1] : undefined;\n      if (other.pos < this.pos) return other.blockRange(this);\n\n      for (var d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--) {\n        if (other.pos <= this.end(d) && (!pred || pred(this.node(d)))) return new NodeRange(this, other, d);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"sameParent\",\n    value: function sameParent(other) {\n      return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n  }, {\n    key: \"max\",\n    value: function max(other) {\n      return other.pos > this.pos ? other : this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(other) {\n      return other.pos < this.pos ? other : this;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var str = \"\";\n\n      for (var i = 1; i <= this.depth; i++) {\n        str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n      }\n\n      return str + \":\" + this.parentOffset;\n    }\n  }], [{\n    key: \"resolve\",\n    value: function resolve(doc, pos) {\n      if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\");\n      var path = [];\n      var start = 0,\n          parentOffset = pos;\n\n      for (var node = doc;;) {\n        var _node$content$findInd = node.content.findIndex(parentOffset),\n            index = _node$content$findInd.index,\n            offset = _node$content$findInd.offset;\n\n        var rem = parentOffset - offset;\n        path.push(node, index, start + offset);\n        if (!rem) break;\n        node = node.child(index);\n        if (node.isText) break;\n        parentOffset = rem - 1;\n        start += offset + 1;\n      }\n\n      return new ResolvedPos(pos, path, parentOffset);\n    }\n  }, {\n    key: \"resolveCached\",\n    value: function resolveCached(doc, pos) {\n      for (var i = 0; i < resolveCache.length; i++) {\n        var cached = resolveCache[i];\n        if (cached.pos == pos && cached.doc == doc) return cached;\n      }\n\n      var result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n      resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n      return result;\n    }\n  }]);\n\n  return ResolvedPos;\n}();\n\nvar resolveCache = [],\n    resolveCachePos = 0,\n    resolveCacheSize = 12;\n\nvar NodeRange = function () {\n  function NodeRange($from, $to, depth) {\n    _classCallCheck(this, NodeRange);\n\n    this.$from = $from;\n    this.$to = $to;\n    this.depth = depth;\n  }\n\n  _createClass(NodeRange, [{\n    key: \"start\",\n    get: function get() {\n      return this.$from.before(this.depth + 1);\n    }\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this.$to.after(this.depth + 1);\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.$from.node(this.depth);\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get() {\n      return this.$from.index(this.depth);\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get() {\n      return this.$to.indexAfter(this.depth);\n    }\n  }]);\n\n  return NodeRange;\n}();\n\nvar emptyAttrs = Object.create(null);\n\nvar Node = function () {\n  function Node(type, attrs, content) {\n    var marks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Mark.none;\n\n    _classCallCheck(this, Node);\n\n    this.type = type;\n    this.attrs = attrs;\n    this.marks = marks;\n    this.content = content || Fragment.empty;\n  }\n\n  _createClass(Node, [{\n    key: \"nodeSize\",\n    get: function get() {\n      return this.isLeaf ? 1 : 2 + this.content.size;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this.content.childCount;\n    }\n  }, {\n    key: \"child\",\n    value: function child(index) {\n      return this.content.child(index);\n    }\n  }, {\n    key: \"maybeChild\",\n    value: function maybeChild(index) {\n      return this.content.maybeChild(index);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f) {\n      this.content.forEach(f);\n    }\n  }, {\n    key: \"nodesBetween\",\n    value: function nodesBetween(from, to, f) {\n      var startPos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      this.content.nodesBetween(from, to, f, startPos, this);\n    }\n  }, {\n    key: \"descendants\",\n    value: function descendants(f) {\n      this.nodesBetween(0, this.content.size, f);\n    }\n  }, {\n    key: \"textContent\",\n    get: function get() {\n      return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, \"\");\n    }\n  }, {\n    key: \"textBetween\",\n    value: function textBetween(from, to, blockSeparator, leafText) {\n      return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      return this.content.firstChild;\n    }\n  }, {\n    key: \"lastChild\",\n    get: function get() {\n      return this.content.lastChild;\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this == other || this.sameMarkup(other) && this.content.eq(other.content);\n    }\n  }, {\n    key: \"sameMarkup\",\n    value: function sameMarkup(other) {\n      return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n  }, {\n    key: \"hasMarkup\",\n    value: function hasMarkup(type, attrs, marks) {\n      return this.type == type && compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) && Mark.sameSet(this.marks, marks || Mark.none);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (content == this.content) return this;\n      return new Node(this.type, this.attrs, content, this.marks);\n    }\n  }, {\n    key: \"mark\",\n    value: function mark(marks) {\n      return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(from) {\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.content.size;\n      if (from == 0 && to == this.content.size) return this;\n      return this.copy(this.content.cut(from, to));\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(from) {\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.content.size;\n      var includeParents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (from == to) return Slice.empty;\n      var $from = this.resolve(from),\n          $to = this.resolve(to);\n      var depth = includeParents ? 0 : $from.sharedDepth(to);\n      var start = $from.start(depth),\n          node = $from.node(depth);\n      var content = node.content.cut($from.pos - start, $to.pos - start);\n      return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(from, to, slice) {\n      return _replace(this.resolve(from), this.resolve(to), slice);\n    }\n  }, {\n    key: \"nodeAt\",\n    value: function nodeAt(pos) {\n      for (var node = this;;) {\n        var _node$content$findInd2 = node.content.findIndex(pos),\n            index = _node$content$findInd2.index,\n            offset = _node$content$findInd2.offset;\n\n        node = node.maybeChild(index);\n        if (!node) return null;\n        if (offset == pos || node.isText) return node;\n        pos -= offset + 1;\n      }\n    }\n  }, {\n    key: \"childAfter\",\n    value: function childAfter(pos) {\n      var _this$content$findInd = this.content.findIndex(pos),\n          index = _this$content$findInd.index,\n          offset = _this$content$findInd.offset;\n\n      return {\n        node: this.content.maybeChild(index),\n        index: index,\n        offset: offset\n      };\n    }\n  }, {\n    key: \"childBefore\",\n    value: function childBefore(pos) {\n      if (pos == 0) return {\n        node: null,\n        index: 0,\n        offset: 0\n      };\n\n      var _this$content$findInd2 = this.content.findIndex(pos),\n          index = _this$content$findInd2.index,\n          offset = _this$content$findInd2.offset;\n\n      if (offset < pos) return {\n        node: this.content.child(index),\n        index: index,\n        offset: offset\n      };\n      var node = this.content.child(index - 1);\n      return {\n        node: node,\n        index: index - 1,\n        offset: offset - node.nodeSize\n      };\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(pos) {\n      return ResolvedPos.resolveCached(this, pos);\n    }\n  }, {\n    key: \"resolveNoCache\",\n    value: function resolveNoCache(pos) {\n      return ResolvedPos.resolve(this, pos);\n    }\n  }, {\n    key: \"rangeHasMark\",\n    value: function rangeHasMark(from, to, type) {\n      var found = false;\n      if (to > from) this.nodesBetween(from, to, function (node) {\n        if (type.isInSet(node.marks)) found = true;\n        return !found;\n      });\n      return found;\n    }\n  }, {\n    key: \"isBlock\",\n    get: function get() {\n      return this.type.isBlock;\n    }\n  }, {\n    key: \"isTextblock\",\n    get: function get() {\n      return this.type.isTextblock;\n    }\n  }, {\n    key: \"inlineContent\",\n    get: function get() {\n      return this.type.inlineContent;\n    }\n  }, {\n    key: \"isInline\",\n    get: function get() {\n      return this.type.isInline;\n    }\n  }, {\n    key: \"isText\",\n    get: function get() {\n      return this.type.isText;\n    }\n  }, {\n    key: \"isLeaf\",\n    get: function get() {\n      return this.type.isLeaf;\n    }\n  }, {\n    key: \"isAtom\",\n    get: function get() {\n      return this.type.isAtom;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this);\n      var name = this.type.name;\n      if (this.content.size) name += \"(\" + this.content.toStringInner() + \")\";\n      return wrapMarks(this.marks, name);\n    }\n  }, {\n    key: \"contentMatchAt\",\n    value: function contentMatchAt(index) {\n      var match = this.type.contentMatch.matchFragment(this.content, 0, index);\n      if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\");\n      return match;\n    }\n  }, {\n    key: \"canReplace\",\n    value: function canReplace(from, to) {\n      var replacement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Fragment.empty;\n      var start = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var end = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : replacement.childCount;\n      var one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n      var two = one && one.matchFragment(this.content, to);\n      if (!two || !two.validEnd) return false;\n\n      for (var i = start; i < end; i++) {\n        if (!this.type.allowsMarks(replacement.child(i).marks)) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"canReplaceWith\",\n    value: function canReplaceWith(from, to, type, marks) {\n      if (marks && !this.type.allowsMarks(marks)) return false;\n      var start = this.contentMatchAt(from).matchType(type);\n      var end = start && start.matchFragment(this.content, to);\n      return end ? end.validEnd : false;\n    }\n  }, {\n    key: \"canAppend\",\n    value: function canAppend(other) {\n      if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content);else return this.type.compatibleContent(other.type);\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (!this.type.validContent(this.content)) throw new RangeError(\"Invalid content for node \".concat(this.type.name, \": \").concat(this.content.toString().slice(0, 50)));\n      var copy = Mark.none;\n\n      for (var i = 0; i < this.marks.length; i++) {\n        copy = this.marks[i].addToSet(copy);\n      }\n\n      if (!Mark.sameSet(copy, this.marks)) throw new RangeError(\"Invalid collection of marks for node \".concat(this.type.name, \": \").concat(this.marks.map(function (m) {\n        return m.type.name;\n      })));\n      this.content.forEach(function (node) {\n        return node.check();\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {\n        type: this.type.name\n      };\n\n      for (var _ in this.attrs) {\n        obj.attrs = this.attrs;\n        break;\n      }\n\n      if (this.content.size) obj.content = this.content.toJSON();\n      if (this.marks.length) obj.marks = this.marks.map(function (n) {\n        return n.toJSON();\n      });\n      return obj;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(schema, json) {\n      if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\");\n      var marks = null;\n\n      if (json.marks) {\n        if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n        marks = json.marks.map(schema.markFromJSON);\n      }\n\n      if (json.type == \"text\") {\n        if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\");\n        return schema.text(json.text, marks);\n      }\n\n      var content = Fragment.fromJSON(schema, json.content);\n      return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n  }]);\n\n  return Node;\n}();\n\nNode.prototype.text = undefined;\n\nvar TextNode = function (_Node) {\n  _inherits(TextNode, _Node);\n\n  var _super2 = _createSuper(TextNode);\n\n  function TextNode(type, attrs, content, marks) {\n    var _this;\n\n    _classCallCheck(this, TextNode);\n\n    _this = _super2.call(this, type, attrs, null, marks);\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\");\n    _this.text = content;\n    return _this;\n  }\n\n  _createClass(TextNode, [{\n    key: \"toString\",\n    value: function toString() {\n      if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this);\n      return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n  }, {\n    key: \"textContent\",\n    get: function get() {\n      return this.text;\n    }\n  }, {\n    key: \"textBetween\",\n    value: function textBetween(from, to) {\n      return this.text.slice(from, to);\n    }\n  }, {\n    key: \"nodeSize\",\n    get: function get() {\n      return this.text.length;\n    }\n  }, {\n    key: \"mark\",\n    value: function mark(marks) {\n      return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n  }, {\n    key: \"withText\",\n    value: function withText(text) {\n      if (text == this.text) return this;\n      return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.text.length;\n      if (from == 0 && to == this.text.length) return this;\n      return this.withText(this.text.slice(from, to));\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return this.sameMarkup(other) && this.text == other.text;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var base = _get(_getPrototypeOf(TextNode.prototype), \"toJSON\", this).call(this);\n\n      base.text = this.text;\n      return base;\n    }\n  }]);\n\n  return TextNode;\n}(Node);\n\nfunction wrapMarks(marks, str) {\n  for (var i = marks.length - 1; i >= 0; i--) {\n    str = marks[i].type.name + \"(\" + str + \")\";\n  }\n\n  return str;\n}\n\nvar ContentMatch = function () {\n  function ContentMatch(validEnd) {\n    _classCallCheck(this, ContentMatch);\n\n    this.validEnd = validEnd;\n    this.next = [];\n    this.wrapCache = [];\n  }\n\n  _createClass(ContentMatch, [{\n    key: \"matchType\",\n    value: function matchType(type) {\n      for (var i = 0; i < this.next.length; i++) {\n        if (this.next[i].type == type) return this.next[i].next;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"matchFragment\",\n    value: function matchFragment(frag) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : frag.childCount;\n      var cur = this;\n\n      for (var i = start; cur && i < end; i++) {\n        cur = cur.matchType(frag.child(i).type);\n      }\n\n      return cur;\n    }\n  }, {\n    key: \"inlineContent\",\n    get: function get() {\n      return this.next.length && this.next[0].type.isInline;\n    }\n  }, {\n    key: \"defaultType\",\n    get: function get() {\n      for (var i = 0; i < this.next.length; i++) {\n        var type = this.next[i].type;\n        if (!(type.isText || type.hasRequiredAttrs())) return type;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"compatible\",\n    value: function compatible(other) {\n      for (var i = 0; i < this.next.length; i++) {\n        for (var j = 0; j < other.next.length; j++) {\n          if (this.next[i].type == other.next[j].type) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"fillBefore\",\n    value: function fillBefore(after) {\n      var toEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var startIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var seen = [this];\n\n      function search(match, types) {\n        var finished = match.matchFragment(after, startIndex);\n        if (finished && (!toEnd || finished.validEnd)) return Fragment.from(types.map(function (tp) {\n          return tp.createAndFill();\n        }));\n\n        for (var i = 0; i < match.next.length; i++) {\n          var _match$next$i = match.next[i],\n              type = _match$next$i.type,\n              next = _match$next$i.next;\n\n          if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n            seen.push(next);\n\n            var _found = search(next, types.concat(type));\n\n            if (_found) return _found;\n          }\n        }\n\n        return null;\n      }\n\n      return search(this, []);\n    }\n  }, {\n    key: \"findWrapping\",\n    value: function findWrapping(target) {\n      for (var i = 0; i < this.wrapCache.length; i += 2) {\n        if (this.wrapCache[i] == target) return this.wrapCache[i + 1];\n      }\n\n      var computed = this.computeWrapping(target);\n      this.wrapCache.push(target, computed);\n      return computed;\n    }\n  }, {\n    key: \"computeWrapping\",\n    value: function computeWrapping(target) {\n      var seen = Object.create(null),\n          active = [{\n        match: this,\n        type: null,\n        via: null\n      }];\n\n      while (active.length) {\n        var current = active.shift(),\n            match = current.match;\n\n        if (match.matchType(target)) {\n          var result = [];\n\n          for (var obj = current; obj.type; obj = obj.via) {\n            result.push(obj.type);\n          }\n\n          return result.reverse();\n        }\n\n        for (var i = 0; i < match.next.length; i++) {\n          var _match$next$i2 = match.next[i],\n              type = _match$next$i2.type,\n              next = _match$next$i2.next;\n\n          if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n            active.push({\n              match: type.contentMatch,\n              type: type,\n              via: current\n            });\n            seen[type.name] = true;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"edgeCount\",\n    get: function get() {\n      return this.next.length;\n    }\n  }, {\n    key: \"edge\",\n    value: function edge(n) {\n      if (n >= this.next.length) throw new RangeError(\"There's no \".concat(n, \"th edge in this content match\"));\n      return this.next[n];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var seen = [];\n\n      function scan(m) {\n        seen.push(m);\n\n        for (var i = 0; i < m.next.length; i++) {\n          if (seen.indexOf(m.next[i].next) == -1) scan(m.next[i].next);\n        }\n      }\n\n      scan(this);\n      return seen.map(function (m, i) {\n        var out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n\n        for (var _i = 0; _i < m.next.length; _i++) {\n          out += (_i ? \", \" : \"\") + m.next[_i].type.name + \"->\" + seen.indexOf(m.next[_i].next);\n        }\n\n        return out;\n      }).join(\"\\n\");\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(string, nodeTypes) {\n      var stream = new TokenStream(string, nodeTypes);\n      if (stream.next == null) return ContentMatch.empty;\n      var expr = parseExpr(stream);\n      if (stream.next) stream.err(\"Unexpected trailing text\");\n      var match = dfa(nfa(expr));\n      checkForDeadEnds(match, stream);\n      return match;\n    }\n  }]);\n\n  return ContentMatch;\n}();\n\nContentMatch.empty = new ContentMatch(true);\n\nvar TokenStream = function () {\n  function TokenStream(string, nodeTypes) {\n    _classCallCheck(this, TokenStream);\n\n    this.string = string;\n    this.nodeTypes = nodeTypes;\n    this.inline = null;\n    this.pos = 0;\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop();\n    if (this.tokens[0] == \"\") this.tokens.shift();\n  }\n\n  _createClass(TokenStream, [{\n    key: \"next\",\n    get: function get() {\n      return this.tokens[this.pos];\n    }\n  }, {\n    key: \"eat\",\n    value: function eat(tok) {\n      return this.next == tok && (this.pos++ || true);\n    }\n  }, {\n    key: \"err\",\n    value: function err(str) {\n      throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\");\n    }\n  }]);\n\n  return TokenStream;\n}();\n\nfunction parseExpr(stream) {\n  var exprs = [];\n\n  do {\n    exprs.push(parseExprSeq(stream));\n  } while (stream.eat(\"|\"));\n\n  return exprs.length == 1 ? exprs[0] : {\n    type: \"choice\",\n    exprs: exprs\n  };\n}\n\nfunction parseExprSeq(stream) {\n  var exprs = [];\n\n  do {\n    exprs.push(parseExprSubscript(stream));\n  } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n\n  return exprs.length == 1 ? exprs[0] : {\n    type: \"seq\",\n    exprs: exprs\n  };\n}\n\nfunction parseExprSubscript(stream) {\n  var expr = parseExprAtom(stream);\n\n  for (;;) {\n    if (stream.eat(\"+\")) expr = {\n      type: \"plus\",\n      expr: expr\n    };else if (stream.eat(\"*\")) expr = {\n      type: \"star\",\n      expr: expr\n    };else if (stream.eat(\"?\")) expr = {\n      type: \"opt\",\n      expr: expr\n    };else if (stream.eat(\"{\")) expr = parseExprRange(stream, expr);else break;\n  }\n\n  return expr;\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\");\n  var result = Number(stream.next);\n  stream.pos++;\n  return result;\n}\n\nfunction parseExprRange(stream, expr) {\n  var min = parseNum(stream),\n      max = min;\n\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream);else max = -1;\n  }\n\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\");\n  return {\n    type: \"range\",\n    min: min,\n    max: max,\n    expr: expr\n  };\n}\n\nfunction resolveName(stream, name) {\n  var types = stream.nodeTypes,\n      type = types[name];\n  if (type) return [type];\n  var result = [];\n\n  for (var typeName in types) {\n    var _type = types[typeName];\n    if (_type.groups.indexOf(name) > -1) result.push(_type);\n  }\n\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\");\n  return result;\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    var expr = parseExpr(stream);\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\");\n    return expr;\n  } else if (!/\\W/.test(stream.next)) {\n    var exprs = resolveName(stream, stream.next).map(function (type) {\n      if (stream.inline == null) stream.inline = type.isInline;else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\");\n      return {\n        type: \"name\",\n        value: type\n      };\n    });\n    stream.pos++;\n    return exprs.length == 1 ? exprs[0] : {\n      type: \"choice\",\n      exprs: exprs\n    };\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\");\n  }\n}\n\nfunction nfa(expr) {\n  var nfa = [[]];\n  connect(compile(expr, 0), node());\n  return nfa;\n\n  function node() {\n    return nfa.push([]) - 1;\n  }\n\n  function edge(from, to, term) {\n    var edge = {\n      term: term,\n      to: to\n    };\n    nfa[from].push(edge);\n    return edge;\n  }\n\n  function connect(edges, to) {\n    edges.forEach(function (edge) {\n      return edge.to = to;\n    });\n  }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce(function (out, expr) {\n        return out.concat(compile(expr, from));\n      }, []);\n    } else if (expr.type == \"seq\") {\n      for (var i = 0;; i++) {\n        var next = compile(expr.exprs[i], from);\n        if (i == expr.exprs.length - 1) return next;\n        connect(next, from = node());\n      }\n    } else if (expr.type == \"star\") {\n      var loop = node();\n      edge(from, loop);\n      connect(compile(expr.expr, loop), loop);\n      return [edge(loop)];\n    } else if (expr.type == \"plus\") {\n      var _loop = node();\n\n      connect(compile(expr.expr, from), _loop);\n      connect(compile(expr.expr, _loop), _loop);\n      return [edge(_loop)];\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from));\n    } else if (expr.type == \"range\") {\n      var cur = from;\n\n      for (var _i2 = 0; _i2 < expr.min; _i2++) {\n        var _next = node();\n\n        connect(compile(expr.expr, cur), _next);\n        cur = _next;\n      }\n\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur);\n      } else {\n        for (var _i3 = expr.min; _i3 < expr.max; _i3++) {\n          var _next2 = node();\n\n          edge(cur, _next2);\n          connect(compile(expr.expr, cur), _next2);\n          cur = _next2;\n        }\n      }\n\n      return [edge(cur)];\n    } else if (expr.type == \"name\") {\n      return [edge(from, undefined, expr.value)];\n    } else {\n      throw new Error(\"Unknown expr type\");\n    }\n  }\n}\n\nfunction cmp(a, b) {\n  return b - a;\n}\n\nfunction nullFrom(nfa, node) {\n  var result = [];\n  scan(node);\n  return result.sort(cmp);\n\n  function scan(node) {\n    var edges = nfa[node];\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to);\n    result.push(node);\n\n    for (var i = 0; i < edges.length; i++) {\n      var _edges$i = edges[i],\n          term = _edges$i.term,\n          to = _edges$i.to;\n      if (!term && result.indexOf(to) == -1) scan(to);\n    }\n  }\n}\n\nfunction dfa(nfa) {\n  var labeled = Object.create(null);\n  return explore(nullFrom(nfa, 0));\n\n  function explore(states) {\n    var out = [];\n    states.forEach(function (node) {\n      nfa[node].forEach(function (_ref) {\n        var term = _ref.term,\n            to = _ref.to;\n        if (!term) return;\n        var set;\n\n        for (var i = 0; i < out.length; i++) {\n          if (out[i][0] == term) set = out[i][1];\n        }\n\n        nullFrom(nfa, to).forEach(function (node) {\n          if (!set) out.push([term, set = []]);\n          if (set.indexOf(node) == -1) set.push(node);\n        });\n      });\n    });\n    var state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n\n    for (var i = 0; i < out.length; i++) {\n      var _states = out[i][1].sort(cmp);\n\n      state.next.push({\n        type: out[i][0],\n        next: labeled[_states.join(\",\")] || explore(_states)\n      });\n    }\n\n    return state;\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (var i = 0, work = [match]; i < work.length; i++) {\n    var state = work[i],\n        dead = !state.validEnd,\n        nodes = [];\n\n    for (var j = 0; j < state.next.length; j++) {\n      var _state$next$j = state.next[j],\n          type = _state$next$j.type,\n          next = _state$next$j.next;\n      nodes.push(type.name);\n      if (dead && !(type.isText || type.hasRequiredAttrs())) dead = false;\n      if (work.indexOf(next) == -1) work.push(next);\n    }\n\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n  }\n}\n\nfunction defaultAttrs(attrs) {\n  var defaults = Object.create(null);\n\n  for (var attrName in attrs) {\n    var attr = attrs[attrName];\n    if (!attr.hasDefault) return null;\n    defaults[attrName] = attr[\"default\"];\n  }\n\n  return defaults;\n}\n\nfunction _computeAttrs(attrs, value) {\n  var built = Object.create(null);\n\n  for (var name in attrs) {\n    var given = value && value[name];\n\n    if (given === undefined) {\n      var attr = attrs[name];\n      if (attr.hasDefault) given = attr[\"default\"];else throw new RangeError(\"No value supplied for attribute \" + name);\n    }\n\n    built[name] = given;\n  }\n\n  return built;\n}\n\nfunction initAttrs(attrs) {\n  var result = Object.create(null);\n  if (attrs) for (var name in attrs) {\n    result[name] = new Attribute(attrs[name]);\n  }\n  return result;\n}\n\nvar NodeType = function () {\n  function NodeType(name, schema, spec) {\n    _classCallCheck(this, NodeType);\n\n    this.name = name;\n    this.schema = schema;\n    this.spec = spec;\n    this.markSet = null;\n    this.groups = spec.group ? spec.group.split(\" \") : [];\n    this.attrs = initAttrs(spec.attrs);\n    this.defaultAttrs = defaultAttrs(this.attrs);\n    this.contentMatch = null;\n    this.inlineContent = null;\n    this.isBlock = !(spec.inline || name == \"text\");\n    this.isText = name == \"text\";\n  }\n\n  _createClass(NodeType, [{\n    key: \"isInline\",\n    get: function get() {\n      return !this.isBlock;\n    }\n  }, {\n    key: \"isTextblock\",\n    get: function get() {\n      return this.isBlock && this.inlineContent;\n    }\n  }, {\n    key: \"isLeaf\",\n    get: function get() {\n      return this.contentMatch == ContentMatch.empty;\n    }\n  }, {\n    key: \"isAtom\",\n    get: function get() {\n      return this.isLeaf || !!this.spec.atom;\n    }\n  }, {\n    key: \"whitespace\",\n    get: function get() {\n      return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n  }, {\n    key: \"hasRequiredAttrs\",\n    value: function hasRequiredAttrs() {\n      for (var n in this.attrs) {\n        if (this.attrs[n].isRequired) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"compatibleContent\",\n    value: function compatibleContent(other) {\n      return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n  }, {\n    key: \"computeAttrs\",\n    value: function computeAttrs(attrs) {\n      if (!attrs && this.defaultAttrs) return this.defaultAttrs;else return _computeAttrs(this.attrs, attrs);\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var content = arguments.length > 1 ? arguments[1] : undefined;\n      var marks = arguments.length > 2 ? arguments[2] : undefined;\n      if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\");\n      return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n  }, {\n    key: \"createChecked\",\n    value: function createChecked() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var content = arguments.length > 1 ? arguments[1] : undefined;\n      var marks = arguments.length > 2 ? arguments[2] : undefined;\n      content = Fragment.from(content);\n      if (!this.validContent(content)) throw new RangeError(\"Invalid content for node \" + this.name);\n      return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n  }, {\n    key: \"createAndFill\",\n    value: function createAndFill() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var content = arguments.length > 1 ? arguments[1] : undefined;\n      var marks = arguments.length > 2 ? arguments[2] : undefined;\n      attrs = this.computeAttrs(attrs);\n      content = Fragment.from(content);\n\n      if (content.size) {\n        var before = this.contentMatch.fillBefore(content);\n        if (!before) return null;\n        content = before.append(content);\n      }\n\n      var matched = this.contentMatch.matchFragment(content);\n      var after = matched && matched.fillBefore(Fragment.empty, true);\n      if (!after) return null;\n      return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n  }, {\n    key: \"validContent\",\n    value: function validContent(content) {\n      var result = this.contentMatch.matchFragment(content);\n      if (!result || !result.validEnd) return false;\n\n      for (var i = 0; i < content.childCount; i++) {\n        if (!this.allowsMarks(content.child(i).marks)) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"allowsMarkType\",\n    value: function allowsMarkType(markType) {\n      return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n  }, {\n    key: \"allowsMarks\",\n    value: function allowsMarks(marks) {\n      if (this.markSet == null) return true;\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!this.allowsMarkType(marks[i].type)) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"allowedMarks\",\n    value: function allowedMarks(marks) {\n      if (this.markSet == null) return marks;\n      var copy;\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!this.allowsMarkType(marks[i].type)) {\n          if (!copy) copy = marks.slice(0, i);\n        } else if (copy) {\n          copy.push(marks[i]);\n        }\n      }\n\n      return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n  }], [{\n    key: \"compile\",\n    value: function compile(nodes, schema) {\n      var result = Object.create(null);\n      nodes.forEach(function (name, spec) {\n        return result[name] = new NodeType(name, schema, spec);\n      });\n      var topType = schema.spec.topNode || \"doc\";\n      if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n      if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\");\n\n      for (var _ in result.text.attrs) {\n        throw new RangeError(\"The text node type should not have attributes\");\n      }\n\n      return result;\n    }\n  }]);\n\n  return NodeType;\n}();\n\nvar Attribute = function () {\n  function Attribute(options) {\n    _classCallCheck(this, Attribute);\n\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n    this[\"default\"] = options[\"default\"];\n  }\n\n  _createClass(Attribute, [{\n    key: \"isRequired\",\n    get: function get() {\n      return !this.hasDefault;\n    }\n  }]);\n\n  return Attribute;\n}();\n\nvar MarkType = function () {\n  function MarkType(name, rank, schema, spec) {\n    _classCallCheck(this, MarkType);\n\n    this.name = name;\n    this.rank = rank;\n    this.schema = schema;\n    this.spec = spec;\n    this.attrs = initAttrs(spec.attrs);\n    this.excluded = null;\n    var defaults = defaultAttrs(this.attrs);\n    this.instance = defaults ? new Mark(this, defaults) : null;\n  }\n\n  _createClass(MarkType, [{\n    key: \"create\",\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!attrs && this.instance) return this.instance;\n      return new Mark(this, _computeAttrs(this.attrs, attrs));\n    }\n  }, {\n    key: \"removeFromSet\",\n    value: function removeFromSet(set) {\n      for (var i = 0; i < set.length; i++) {\n        if (set[i].type == this) {\n          set = set.slice(0, i).concat(set.slice(i + 1));\n          i--;\n        }\n      }\n\n      return set;\n    }\n  }, {\n    key: \"isInSet\",\n    value: function isInSet(set) {\n      for (var i = 0; i < set.length; i++) {\n        if (set[i].type == this) return set[i];\n      }\n    }\n  }, {\n    key: \"excludes\",\n    value: function excludes(other) {\n      return this.excluded.indexOf(other) > -1;\n    }\n  }], [{\n    key: \"compile\",\n    value: function compile(marks, schema) {\n      var result = Object.create(null),\n          rank = 0;\n      marks.forEach(function (name, spec) {\n        return result[name] = new MarkType(name, rank++, schema, spec);\n      });\n      return result;\n    }\n  }]);\n\n  return MarkType;\n}();\n\nvar Schema = function () {\n  function Schema(spec) {\n    _classCallCheck(this, Schema);\n\n    this.cached = Object.create(null);\n    this.spec = {\n      nodes: OrderedMap__default[\"default\"].from(spec.nodes),\n      marks: OrderedMap__default[\"default\"].from(spec.marks || {}),\n      topNode: spec.topNode\n    };\n    this.nodes = NodeType.compile(this.spec.nodes, this);\n    this.marks = MarkType.compile(this.spec.marks, this);\n    var contentExprCache = Object.create(null);\n\n    for (var prop in this.nodes) {\n      if (prop in this.marks) throw new RangeError(prop + \" can not be both a node and a mark\");\n      var type = this.nodes[prop],\n          contentExpr = type.spec.content || \"\",\n          markExpr = type.spec.marks;\n      type.contentMatch = contentExprCache[contentExpr] || (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n      type.inlineContent = type.contentMatch.inlineContent;\n      type.markSet = markExpr == \"_\" ? null : markExpr ? gatherMarks(this, markExpr.split(\" \")) : markExpr == \"\" || !type.inlineContent ? [] : null;\n    }\n\n    for (var _prop in this.marks) {\n      var _type2 = this.marks[_prop],\n          excl = _type2.spec.excludes;\n      _type2.excluded = excl == null ? [_type2] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this);\n    this.markFromJSON = this.markFromJSON.bind(this);\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n    this.cached.wrappings = Object.create(null);\n  }\n\n  _createClass(Schema, [{\n    key: \"node\",\n    value: function node(type) {\n      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var content = arguments.length > 2 ? arguments[2] : undefined;\n      var marks = arguments.length > 3 ? arguments[3] : undefined;\n      if (typeof type == \"string\") type = this.nodeType(type);else if (!(type instanceof NodeType)) throw new RangeError(\"Invalid node type: \" + type);else if (type.schema != this) throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n      return type.createChecked(attrs, content, marks);\n    }\n  }, {\n    key: \"text\",\n    value: function text(_text, marks) {\n      var type = this.nodes.text;\n      return new TextNode(type, type.defaultAttrs, _text, Mark.setFrom(marks));\n    }\n  }, {\n    key: \"mark\",\n    value: function mark(type, attrs) {\n      if (typeof type == \"string\") type = this.marks[type];\n      return type.create(attrs);\n    }\n  }, {\n    key: \"nodeFromJSON\",\n    value: function nodeFromJSON(json) {\n      return Node.fromJSON(this, json);\n    }\n  }, {\n    key: \"markFromJSON\",\n    value: function markFromJSON(json) {\n      return Mark.fromJSON(this, json);\n    }\n  }, {\n    key: \"nodeType\",\n    value: function nodeType(name) {\n      var found = this.nodes[name];\n      if (!found) throw new RangeError(\"Unknown node type: \" + name);\n      return found;\n    }\n  }]);\n\n  return Schema;\n}();\n\nfunction gatherMarks(schema, marks) {\n  var found = [];\n\n  for (var i = 0; i < marks.length; i++) {\n    var name = marks[i],\n        mark = schema.marks[name],\n        ok = mark;\n\n    if (mark) {\n      found.push(mark);\n    } else {\n      for (var prop in schema.marks) {\n        var _mark = schema.marks[prop];\n        if (name == \"_\" || _mark.spec.group && _mark.spec.group.split(\" \").indexOf(name) > -1) found.push(ok = _mark);\n      }\n    }\n\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n  }\n\n  return found;\n}\n\nvar DOMParser = function () {\n  function DOMParser(schema, rules) {\n    var _this2 = this;\n\n    _classCallCheck(this, DOMParser);\n\n    this.schema = schema;\n    this.rules = rules;\n    this.tags = [];\n    this.styles = [];\n    rules.forEach(function (rule) {\n      if (rule.tag) _this2.tags.push(rule);else if (rule.style) _this2.styles.push(rule);\n    });\n    this.normalizeLists = !this.tags.some(function (r) {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false;\n      var node = schema.nodes[r.node];\n      return node.contentMatch.matchType(node);\n    });\n  }\n\n  _createClass(DOMParser, [{\n    key: \"parse\",\n    value: function parse(dom) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var context = new ParseContext(this, options, false);\n      context.addAll(dom, options.from, options.to);\n      return context.finish();\n    }\n  }, {\n    key: \"parseSlice\",\n    value: function parseSlice(dom) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var context = new ParseContext(this, options, true);\n      context.addAll(dom, options.from, options.to);\n      return Slice.maxOpen(context.finish());\n    }\n  }, {\n    key: \"matchTag\",\n    value: function matchTag(dom, context, after) {\n      for (var i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n        var rule = this.tags[i];\n\n        if (matches(dom, rule.tag) && (rule.namespace === undefined || dom.namespaceURI == rule.namespace) && (!rule.context || context.matchesContext(rule.context))) {\n          if (rule.getAttrs) {\n            var result = rule.getAttrs(dom);\n            if (result === false) continue;\n            rule.attrs = result || undefined;\n          }\n\n          return rule;\n        }\n      }\n    }\n  }, {\n    key: \"matchStyle\",\n    value: function matchStyle(prop, value, context, after) {\n      for (var i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n        var rule = this.styles[i],\n            style = rule.style;\n        if (style.indexOf(prop) != 0 || rule.context && !context.matchesContext(rule.context) || style.length > prop.length && (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value)) continue;\n\n        if (rule.getAttrs) {\n          var result = rule.getAttrs(value);\n          if (result === false) continue;\n          rule.attrs = result || undefined;\n        }\n\n        return rule;\n      }\n    }\n  }], [{\n    key: \"schemaRules\",\n    value: function schemaRules(schema) {\n      var result = [];\n\n      function insert(rule) {\n        var priority = rule.priority == null ? 50 : rule.priority,\n            i = 0;\n\n        for (; i < result.length; i++) {\n          var next = result[i],\n              nextPriority = next.priority == null ? 50 : next.priority;\n          if (nextPriority < priority) break;\n        }\n\n        result.splice(i, 0, rule);\n      }\n\n      var _loop2 = function _loop2(name) {\n        var rules = schema.marks[name].spec.parseDOM;\n        if (rules) rules.forEach(function (rule) {\n          insert(rule = copy(rule));\n          rule.mark = name;\n        });\n      };\n\n      for (var name in schema.marks) {\n        _loop2(name);\n      }\n\n      var _loop3 = function _loop3(_name) {\n        var rules = schema.nodes[_name].spec.parseDOM;\n        if (rules) rules.forEach(function (rule) {\n          insert(rule = copy(rule));\n          rule.node = _name;\n        });\n      };\n\n      for (var _name in schema.nodes) {\n        _loop3(_name);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"fromSchema\",\n    value: function fromSchema(schema) {\n      return schema.cached.domParser || (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n  }]);\n\n  return DOMParser;\n}();\n\nvar blockTags = {\n  address: true,\n  article: true,\n  aside: true,\n  blockquote: true,\n  canvas: true,\n  dd: true,\n  div: true,\n  dl: true,\n  fieldset: true,\n  figcaption: true,\n  figure: true,\n  footer: true,\n  form: true,\n  h1: true,\n  h2: true,\n  h3: true,\n  h4: true,\n  h5: true,\n  h6: true,\n  header: true,\n  hgroup: true,\n  hr: true,\n  li: true,\n  noscript: true,\n  ol: true,\n  output: true,\n  p: true,\n  pre: true,\n  section: true,\n  table: true,\n  tfoot: true,\n  ul: true\n};\nvar ignoreTags = {\n  head: true,\n  noscript: true,\n  object: true,\n  script: true,\n  style: true,\n  title: true\n};\nvar listTags = {\n  ol: true,\n  ul: true\n};\nvar OPT_PRESERVE_WS = 1,\n    OPT_PRESERVE_WS_FULL = 2,\n    OPT_OPEN_LEFT = 4;\n\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n  if (preserveWhitespace != null) return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n  return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\n\nvar NodeContext = function () {\n  function NodeContext(type, attrs, marks, pendingMarks, solid, match, options) {\n    _classCallCheck(this, NodeContext);\n\n    this.type = type;\n    this.attrs = attrs;\n    this.marks = marks;\n    this.pendingMarks = pendingMarks;\n    this.solid = solid;\n    this.options = options;\n    this.content = [];\n    this.activeMarks = Mark.none;\n    this.stashMarks = [];\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n  }\n\n  _createClass(NodeContext, [{\n    key: \"findWrapping\",\n    value: function findWrapping(node) {\n      if (!this.match) {\n        if (!this.type) return [];\n        var fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n\n        if (fill) {\n          this.match = this.type.contentMatch.matchFragment(fill);\n        } else {\n          var start = this.type.contentMatch,\n              wrap;\n\n          if (wrap = start.findWrapping(node.type)) {\n            this.match = start;\n            return wrap;\n          } else {\n            return null;\n          }\n        }\n      }\n\n      return this.match.findWrapping(node.type);\n    }\n  }, {\n    key: \"finish\",\n    value: function finish(openEnd) {\n      if (!(this.options & OPT_PRESERVE_WS)) {\n        var last = this.content[this.content.length - 1],\n            m;\n\n        if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n          var text = last;\n          if (last.text.length == m[0].length) this.content.pop();else this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n        }\n      }\n\n      var content = Fragment.from(this.content);\n      if (!openEnd && this.match) content = content.append(this.match.fillBefore(Fragment.empty, true));\n      return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n  }, {\n    key: \"popFromStashMark\",\n    value: function popFromStashMark(mark) {\n      for (var i = this.stashMarks.length - 1; i >= 0; i--) {\n        if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0];\n      }\n    }\n  }, {\n    key: \"applyPending\",\n    value: function applyPending(nextType) {\n      for (var i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n        var mark = pending[i];\n\n        if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) && !mark.isInSet(this.activeMarks)) {\n          this.activeMarks = mark.addToSet(this.activeMarks);\n          this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n        }\n      }\n    }\n  }, {\n    key: \"inlineContext\",\n    value: function inlineContext(node) {\n      if (this.type) return this.type.inlineContent;\n      if (this.content.length) return this.content[0].isInline;\n      return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n  }]);\n\n  return NodeContext;\n}();\n\nvar ParseContext = function () {\n  function ParseContext(parser, options, isOpen) {\n    _classCallCheck(this, ParseContext);\n\n    this.parser = parser;\n    this.options = options;\n    this.isOpen = isOpen;\n    this.open = 0;\n    var topNode = options.topNode,\n        topContext;\n    var topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n    if (topNode) topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);else if (isOpen) topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);else topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n    this.nodes = [topContext];\n    this.find = options.findPositions;\n    this.needsBlock = false;\n  }\n\n  _createClass(ParseContext, [{\n    key: \"top\",\n    get: function get() {\n      return this.nodes[this.open];\n    }\n  }, {\n    key: \"addDOM\",\n    value: function addDOM(dom) {\n      if (dom.nodeType == 3) {\n        this.addTextNode(dom);\n      } else if (dom.nodeType == 1) {\n        var style = dom.getAttribute(\"style\");\n        var marks = style ? this.readStyles(parseStyles(style)) : null,\n            top = this.top;\n        if (marks != null) for (var i = 0; i < marks.length; i++) {\n          this.addPendingMark(marks[i]);\n        }\n        this.addElement(dom);\n        if (marks != null) for (var _i4 = 0; _i4 < marks.length; _i4++) {\n          this.removePendingMark(marks[_i4], top);\n        }\n      }\n    }\n  }, {\n    key: \"addTextNode\",\n    value: function addTextNode(dom) {\n      var value = dom.nodeValue;\n      var top = this.top;\n\n      if (top.options & OPT_PRESERVE_WS_FULL || top.inlineContext(dom) || /[^ \\t\\r\\n\\u000c]/.test(value)) {\n        if (!(top.options & OPT_PRESERVE_WS)) {\n          value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n\n          if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n            var nodeBefore = top.content[top.content.length - 1];\n            var domNodeBefore = dom.previousSibling;\n            if (!nodeBefore || domNodeBefore && domNodeBefore.nodeName == 'BR' || nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)) value = value.slice(1);\n          }\n        } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n          value = value.replace(/\\r?\\n|\\r/g, \" \");\n        } else {\n          value = value.replace(/\\r\\n?/g, \"\\n\");\n        }\n\n        if (value) this.insertNode(this.parser.schema.text(value));\n        this.findInText(dom);\n      } else {\n        this.findInside(dom);\n      }\n    }\n  }, {\n    key: \"addElement\",\n    value: function addElement(dom, matchAfter) {\n      var name = dom.nodeName.toLowerCase(),\n          ruleID;\n      if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom);\n      var rule = this.options.ruleFromNode && this.options.ruleFromNode(dom) || (ruleID = this.parser.matchTag(dom, this, matchAfter));\n\n      if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n        this.findInside(dom);\n        this.ignoreFallback(dom);\n      } else if (!rule || rule.skip || rule.closeParent) {\n        if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1);else if (rule && rule.skip.nodeType) dom = rule.skip;\n        var sync,\n            top = this.top,\n            oldNeedsBlock = this.needsBlock;\n\n        if (blockTags.hasOwnProperty(name)) {\n          sync = true;\n          if (!top.type) this.needsBlock = true;\n        } else if (!dom.firstChild) {\n          this.leafFallback(dom);\n          return;\n        }\n\n        this.addAll(dom);\n        if (sync) this.sync(top);\n        this.needsBlock = oldNeedsBlock;\n      } else {\n        this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n      }\n    }\n  }, {\n    key: \"leafFallback\",\n    value: function leafFallback(dom) {\n      if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent) this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n  }, {\n    key: \"ignoreFallback\",\n    value: function ignoreFallback(dom) {\n      if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent)) this.findPlace(this.parser.schema.text(\"-\"));\n    }\n  }, {\n    key: \"readStyles\",\n    value: function readStyles(styles) {\n      var marks = Mark.none;\n\n      style: for (var i = 0; i < styles.length; i += 2) {\n        for (var after = undefined;;) {\n          var rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n          if (!rule) continue style;\n          if (rule.ignore) return null;\n          marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks);\n          if (rule.consuming === false) after = rule;else break;\n        }\n      }\n\n      return marks;\n    }\n  }, {\n    key: \"addElementByRule\",\n    value: function addElementByRule(dom, rule, continueAfter) {\n      var _this3 = this;\n\n      var sync, nodeType, mark;\n\n      if (rule.node) {\n        nodeType = this.parser.schema.nodes[rule.node];\n\n        if (!nodeType.isLeaf) {\n          sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n        } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n          this.leafFallback(dom);\n        }\n      } else {\n        var markType = this.parser.schema.marks[rule.mark];\n        mark = markType.create(rule.attrs);\n        this.addPendingMark(mark);\n      }\n\n      var startIn = this.top;\n\n      if (nodeType && nodeType.isLeaf) {\n        this.findInside(dom);\n      } else if (continueAfter) {\n        this.addElement(dom, continueAfter);\n      } else if (rule.getContent) {\n        this.findInside(dom);\n        rule.getContent(dom, this.parser.schema).forEach(function (node) {\n          return _this3.insertNode(node);\n        });\n      } else {\n        var contentDOM = dom;\n        if (typeof rule.contentElement == \"string\") contentDOM = dom.querySelector(rule.contentElement);else if (typeof rule.contentElement == \"function\") contentDOM = rule.contentElement(dom);else if (rule.contentElement) contentDOM = rule.contentElement;\n        this.findAround(dom, contentDOM, true);\n        this.addAll(contentDOM);\n      }\n\n      if (sync && this.sync(startIn)) this.open--;\n      if (mark) this.removePendingMark(mark, startIn);\n    }\n  }, {\n    key: \"addAll\",\n    value: function addAll(parent, startIndex, endIndex) {\n      var index = startIndex || 0;\n\n      for (var dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n        this.findAtPoint(parent, index);\n        this.addDOM(dom);\n      }\n\n      this.findAtPoint(parent, index);\n    }\n  }, {\n    key: \"findPlace\",\n    value: function findPlace(node) {\n      var route, sync;\n\n      for (var depth = this.open; depth >= 0; depth--) {\n        var cx = this.nodes[depth];\n\n        var _found2 = cx.findWrapping(node);\n\n        if (_found2 && (!route || route.length > _found2.length)) {\n          route = _found2;\n          sync = cx;\n          if (!_found2.length) break;\n        }\n\n        if (cx.solid) break;\n      }\n\n      if (!route) return false;\n      this.sync(sync);\n\n      for (var i = 0; i < route.length; i++) {\n        this.enterInner(route[i], null, false);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"insertNode\",\n    value: function insertNode(node) {\n      if (node.isInline && this.needsBlock && !this.top.type) {\n        var block = this.textblockFromContext();\n        if (block) this.enterInner(block);\n      }\n\n      if (this.findPlace(node)) {\n        this.closeExtra();\n        var top = this.top;\n        top.applyPending(node.type);\n        if (top.match) top.match = top.match.matchType(node.type);\n        var marks = top.activeMarks;\n\n        for (var i = 0; i < node.marks.length; i++) {\n          if (!top.type || top.type.allowsMarkType(node.marks[i].type)) marks = node.marks[i].addToSet(marks);\n        }\n\n        top.content.push(node.mark(marks));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(type, attrs, preserveWS) {\n      var ok = this.findPlace(type.create(attrs));\n      if (ok) this.enterInner(type, attrs, true, preserveWS);\n      return ok;\n    }\n  }, {\n    key: \"enterInner\",\n    value: function enterInner(type) {\n      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var solid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var preserveWS = arguments.length > 3 ? arguments[3] : undefined;\n      this.closeExtra();\n      var top = this.top;\n      top.applyPending(type);\n      top.match = top.match && top.match.matchType(type);\n      var options = wsOptionsFor(type, preserveWS, top.options);\n      if (top.options & OPT_OPEN_LEFT && top.content.length == 0) options |= OPT_OPEN_LEFT;\n      this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n      this.open++;\n    }\n  }, {\n    key: \"closeExtra\",\n    value: function closeExtra() {\n      var openEnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var i = this.nodes.length - 1;\n\n      if (i > this.open) {\n        for (; i > this.open; i--) {\n          this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n        }\n\n        this.nodes.length = this.open + 1;\n      }\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.open = 0;\n      this.closeExtra(this.isOpen);\n      return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n  }, {\n    key: \"sync\",\n    value: function sync(to) {\n      for (var i = this.open; i >= 0; i--) {\n        if (this.nodes[i] == to) {\n          this.open = i;\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"currentPos\",\n    get: function get() {\n      this.closeExtra();\n      var pos = 0;\n\n      for (var i = this.open; i >= 0; i--) {\n        var content = this.nodes[i].content;\n\n        for (var j = content.length - 1; j >= 0; j--) {\n          pos += content[j].nodeSize;\n        }\n\n        if (i) pos++;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"findAtPoint\",\n    value: function findAtPoint(parent, offset) {\n      if (this.find) for (var i = 0; i < this.find.length; i++) {\n        if (this.find[i].node == parent && this.find[i].offset == offset) this.find[i].pos = this.currentPos;\n      }\n    }\n  }, {\n    key: \"findInside\",\n    value: function findInside(parent) {\n      if (this.find) for (var i = 0; i < this.find.length; i++) {\n        if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) this.find[i].pos = this.currentPos;\n      }\n    }\n  }, {\n    key: \"findAround\",\n    value: function findAround(parent, content, before) {\n      if (parent != content && this.find) for (var i = 0; i < this.find.length; i++) {\n        if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n          var pos = content.compareDocumentPosition(this.find[i].node);\n          if (pos & (before ? 2 : 4)) this.find[i].pos = this.currentPos;\n        }\n      }\n    }\n  }, {\n    key: \"findInText\",\n    value: function findInText(textNode) {\n      if (this.find) for (var i = 0; i < this.find.length; i++) {\n        if (this.find[i].node == textNode) this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n      }\n    }\n  }, {\n    key: \"matchesContext\",\n    value: function matchesContext(context) {\n      var _this4 = this;\n\n      if (context.indexOf(\"|\") > -1) return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n      var parts = context.split(\"/\");\n      var option = this.options.context;\n      var useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n      var minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n\n      var match = function match(i, depth) {\n        for (; i >= 0; i--) {\n          var part = parts[i];\n\n          if (part == \"\") {\n            if (i == parts.length - 1 || i == 0) continue;\n\n            for (; depth >= minDepth; depth--) {\n              if (match(i - 1, depth)) return true;\n            }\n\n            return false;\n          } else {\n            var next = depth > 0 || depth == 0 && useRoot ? _this4.nodes[depth].type : option && depth >= minDepth ? option.node(depth - minDepth).type : null;\n            if (!next || next.name != part && next.groups.indexOf(part) == -1) return false;\n            depth--;\n          }\n        }\n\n        return true;\n      };\n\n      return match(parts.length - 1, this.open);\n    }\n  }, {\n    key: \"textblockFromContext\",\n    value: function textblockFromContext() {\n      var $context = this.options.context;\n      if ($context) for (var d = $context.depth; d >= 0; d--) {\n        var deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n        if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt;\n      }\n\n      for (var name in this.parser.schema.nodes) {\n        var type = this.parser.schema.nodes[name];\n        if (type.isTextblock && type.defaultAttrs) return type;\n      }\n    }\n  }, {\n    key: \"addPendingMark\",\n    value: function addPendingMark(mark) {\n      var found = findSameMarkInSet(mark, this.top.pendingMarks);\n      if (found) this.top.stashMarks.push(found);\n      this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n  }, {\n    key: \"removePendingMark\",\n    value: function removePendingMark(mark, upto) {\n      for (var depth = this.open; depth >= 0; depth--) {\n        var level = this.nodes[depth];\n\n        var _found3 = level.pendingMarks.lastIndexOf(mark);\n\n        if (_found3 > -1) {\n          level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n        } else {\n          level.activeMarks = mark.removeFromSet(level.activeMarks);\n          var stashMark = level.popFromStashMark(mark);\n          if (stashMark && level.type && level.type.allowsMarkType(stashMark.type)) level.activeMarks = stashMark.addToSet(level.activeMarks);\n        }\n\n        if (level == upto) break;\n      }\n    }\n  }]);\n\n  return ParseContext;\n}();\n\nfunction normalizeList(dom) {\n  for (var child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    var name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child);\n      child = prevItem;\n    } else if (name == \"li\") {\n      prevItem = child;\n    } else if (name) {\n      prevItem = null;\n    }\n  }\n}\n\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n\nfunction parseStyles(style) {\n  var re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g,\n      m,\n      result = [];\n\n  while (m = re.exec(style)) {\n    result.push(m[1], m[2].trim());\n  }\n\n  return result;\n}\n\nfunction copy(obj) {\n  var copy = {};\n\n  for (var prop in obj) {\n    copy[prop] = obj[prop];\n  }\n\n  return copy;\n}\n\nfunction markMayApply(markType, nodeType) {\n  var nodes = nodeType.schema.nodes;\n\n  var _loop4 = function _loop4(name) {\n    var parent = nodes[name];\n    if (!parent.allowsMarkType(markType)) return \"continue\";\n\n    var seen = [],\n        scan = function scan(match) {\n      seen.push(match);\n\n      for (var i = 0; i < match.edgeCount; i++) {\n        var _match$edge = match.edge(i),\n            type = _match$edge.type,\n            next = _match$edge.next;\n\n        if (type == nodeType) return true;\n        if (seen.indexOf(next) < 0 && scan(next)) return true;\n      }\n    };\n\n    if (scan(parent.contentMatch)) return {\n      v: true\n    };\n  };\n\n  for (var name in nodes) {\n    var _ret = _loop4(name);\n\n    if (_ret === \"continue\") continue;\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (var i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i];\n  }\n}\n\nvar DOMSerializer = function () {\n  function DOMSerializer(nodes, marks) {\n    _classCallCheck(this, DOMSerializer);\n\n    this.nodes = nodes;\n    this.marks = marks;\n  }\n\n  _createClass(DOMSerializer, [{\n    key: \"serializeFragment\",\n    value: function serializeFragment(fragment) {\n      var _this5 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var target = arguments.length > 2 ? arguments[2] : undefined;\n      if (!target) target = doc(options).createDocumentFragment();\n      var top = target,\n          active = [];\n      fragment.forEach(function (node) {\n        if (active.length || node.marks.length) {\n          var keep = 0,\n              rendered = 0;\n\n          while (keep < active.length && rendered < node.marks.length) {\n            var next = node.marks[rendered];\n\n            if (!_this5.marks[next.type.name]) {\n              rendered++;\n              continue;\n            }\n\n            if (!next.eq(active[keep][0]) || next.type.spec.spanning === false) break;\n            keep++;\n            rendered++;\n          }\n\n          while (keep < active.length) {\n            top = active.pop()[1];\n          }\n\n          while (rendered < node.marks.length) {\n            var add = node.marks[rendered++];\n\n            var markDOM = _this5.serializeMark(add, node.isInline, options);\n\n            if (markDOM) {\n              active.push([add, top]);\n              top.appendChild(markDOM.dom);\n              top = markDOM.contentDOM || markDOM.dom;\n            }\n          }\n        }\n\n        top.appendChild(_this5.serializeNodeInner(node, options));\n      });\n      return target;\n    }\n  }, {\n    key: \"serializeNodeInner\",\n    value: function serializeNodeInner(node, options) {\n      var _DOMSerializer$render = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node)),\n          dom = _DOMSerializer$render.dom,\n          contentDOM = _DOMSerializer$render.contentDOM;\n\n      if (contentDOM) {\n        if (node.isLeaf) throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n        this.serializeFragment(node.content, options, contentDOM);\n      }\n\n      return dom;\n    }\n  }, {\n    key: \"serializeNode\",\n    value: function serializeNode(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var dom = this.serializeNodeInner(node, options);\n\n      for (var i = node.marks.length - 1; i >= 0; i--) {\n        var wrap = this.serializeMark(node.marks[i], node.isInline, options);\n\n        if (wrap) {\n          (wrap.contentDOM || wrap.dom).appendChild(dom);\n          dom = wrap.dom;\n        }\n      }\n\n      return dom;\n    }\n  }, {\n    key: \"serializeMark\",\n    value: function serializeMark(mark, inline) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var toDOM = this.marks[mark.type.name];\n      return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n  }], [{\n    key: \"renderSpec\",\n    value: function renderSpec(doc, structure) {\n      var xmlNS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      if (typeof structure == \"string\") return {\n        dom: doc.createTextNode(structure)\n      };\n      if (structure.nodeType != null) return {\n        dom: structure\n      };\n      if (structure.dom && structure.dom.nodeType != null) return structure;\n      var tagName = structure[0],\n          space = tagName.indexOf(\" \");\n\n      if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n      }\n\n      var contentDOM;\n      var dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName);\n      var attrs = structure[1],\n          start = 1;\n\n      if (attrs && _typeof(attrs) == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n\n        for (var name in attrs) {\n          if (attrs[name] != null) {\n            var _space = name.indexOf(\" \");\n\n            if (_space > 0) dom.setAttributeNS(name.slice(0, _space), name.slice(_space + 1), attrs[name]);else dom.setAttribute(name, attrs[name]);\n          }\n        }\n      }\n\n      for (var i = start; i < structure.length; i++) {\n        var child = structure[i];\n\n        if (child === 0) {\n          if (i < structure.length - 1 || i > start) throw new RangeError(\"Content hole must be the only child of its parent node\");\n          return {\n            dom: dom,\n            contentDOM: dom\n          };\n        } else {\n          var _DOMSerializer$render2 = DOMSerializer.renderSpec(doc, child, xmlNS),\n              inner = _DOMSerializer$render2.dom,\n              innerContent = _DOMSerializer$render2.contentDOM;\n\n          dom.appendChild(inner);\n\n          if (innerContent) {\n            if (contentDOM) throw new RangeError(\"Multiple content holes\");\n            contentDOM = innerContent;\n          }\n        }\n      }\n\n      return {\n        dom: dom,\n        contentDOM: contentDOM\n      };\n    }\n  }, {\n    key: \"fromSchema\",\n    value: function fromSchema(schema) {\n      return schema.cached.domSerializer || (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n  }, {\n    key: \"nodesFromSchema\",\n    value: function nodesFromSchema(schema) {\n      var result = gatherToDOM(schema.nodes);\n      if (!result.text) result.text = function (node) {\n        return node.text;\n      };\n      return result;\n    }\n  }, {\n    key: \"marksFromSchema\",\n    value: function marksFromSchema(schema) {\n      return gatherToDOM(schema.marks);\n    }\n  }]);\n\n  return DOMSerializer;\n}();\n\nfunction gatherToDOM(obj) {\n  var result = {};\n\n  for (var name in obj) {\n    var toDOM = obj[name].spec.toDOM;\n    if (toDOM) result[name] = toDOM;\n  }\n\n  return result;\n}\n\nfunction doc(options) {\n  return options.document || window.document;\n}\n\nexports.ContentMatch = ContentMatch;\nexports.DOMParser = DOMParser;\nexports.DOMSerializer = DOMSerializer;\nexports.Fragment = Fragment;\nexports.Mark = Mark;\nexports.MarkType = MarkType;\nexports.Node = Node;\nexports.NodeRange = NodeRange;\nexports.NodeType = NodeType;\nexports.ReplaceError = ReplaceError;\nexports.ResolvedPos = ResolvedPos;\nexports.Schema = Schema;\nexports.Slice = Slice;\n"],"mappings":"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","names":["Class","Parent","args","o","p","obj","Fragment","copy","found","Mark","ReplaceError","Slice","ResolvedPos","marks","doc","NodeRange","Node","TextNode","ContentMatch","TokenStream","nfa","edge","expr","node","i","NodeType","Attribute","MarkType","Schema","DOMParser","name","_name","NodeContext","ParseContext","match","scan","DOMSerializer"],"sourceRoot":"","file":"static/media/a978fa16a5f879171eac.cjs"}