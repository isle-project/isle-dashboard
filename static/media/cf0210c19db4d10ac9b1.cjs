"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var w3cKeyname=require("w3c-keyname"),prosemirrorState=require("prosemirror-state"),mac=typeof navigator!="undefined"?/Mac|iP(hone|[oa]d)/.test(navigator.platform):!1;function normalizeKeyName(name){var parts=name.split(/-(?!$)/),result=parts[parts.length-1];result=="Space"&&(result=" ");for(var alt,ctrl,shift,meta,i=0;i<parts.length-1;i++){var mod=parts[i];if(/^(cmd|meta|m)$/i.test(mod))meta=!0;else if(/^a(lt)?$/i.test(mod))alt=!0;else if(/^(c|ctrl|control)$/i.test(mod))ctrl=!0;else if(/^s(hift)?$/i.test(mod))shift=!0;else if(/^mod$/i.test(mod))mac?meta=!0:ctrl=!0;else throw new Error("Unrecognized modifier name: "+mod)}return alt&&(result="Alt-"+result),ctrl&&(result="Ctrl-"+result),meta&&(result="Meta-"+result),shift&&(result="Shift-"+result),result}function normalize(map){var copy=Object.create(null);for(var prop in map)copy[normalizeKeyName(prop)]=map[prop];return copy}function modifiers(name,event,shift){return event.altKey&&(name="Alt-"+name),event.ctrlKey&&(name="Ctrl-"+name),event.metaKey&&(name="Meta-"+name),shift!==!1&&event.shiftKey&&(name="Shift-"+name),name}function keymap(bindings){return new prosemirrorState.Plugin({props:{handleKeyDown:keydownHandler(bindings)}})}function keydownHandler(bindings){var map=normalize(bindings);return function(view,event){var name=w3cKeyname.keyName(event),isChar=name.length==1&&name!=" ",baseName,direct=map[modifiers(name,event,!isChar)];if(direct&&direct(view.state,view.dispatch,view))return!0;if(isChar&&(event.shiftKey||event.altKey||event.metaKey||name.charCodeAt(0)>127)&&(baseName=w3cKeyname.base[event.keyCode])&&baseName!=name){var fromCode=map[modifiers(baseName,event,!0)];if(fromCode&&fromCode(view.state,view.dispatch,view))return!0}else if(isChar&&event.shiftKey){var withShift=map[modifiers(name,event,!0)];if(withShift&&withShift(view.state,view.dispatch,view))return!0}return!1}}exports.keydownHandler=keydownHandler,exports.keymap=keymap;

//# sourceMappingURL=cf0210c19db4d10ac9b1.cjs.map