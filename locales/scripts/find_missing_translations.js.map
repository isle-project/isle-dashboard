{"version":3,"sources":["../locales/scripts/find_missing_translations.js"],"sourcesContent":["/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-server program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n'use strict';\r\n\r\n// MODULES //\r\n\r\nconst { basename, resolve } = require( 'path' );\r\nconst { execSync } = require( 'child_process' );\r\nconst glob = require( 'glob' );\r\nconst readJSON = require( '@stdlib/fs/read-json' );\r\nconst objectKeys = require( '@stdlib/utils/keys' );\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst TOPLEVEL_DIR = resolve( __dirname, '..', '..', '..' );\r\n\r\n\r\n// MAIN //\r\n\r\nglob( 'public/locales/en/*.json', {\r\n\tcwd: TOPLEVEL_DIR\r\n}, function onFiles( err, files ) {\r\n\tconst translations = new Set();\r\n\tfor ( let i = 0; i < files.length; i++ ) {\r\n\t\tconst file = resolve( TOPLEVEL_DIR, files[ i ] );\r\n\t\tconst table = readJSON.sync( file );\r\n\t\tconst keys = objectKeys( table );\r\n\t\tkeys.forEach( key => {\r\n\t\t\ttranslations.add( key );\r\n\t\t\ttranslations.add( basename( files[ i ], '.json' )+':'+key );\r\n\t\t});\r\n\t}\r\n\tconst command = 'grep -hroP \"(props.| |\\t|{)t\\\\( ?\\'\\\\K[^\\']*(?=\\' ?\\\\))\" src/* ';\r\n\tconst identifiers = execSync( command, {\r\n\t\tcwd: TOPLEVEL_DIR\r\n\t})\r\n\t\t.toString()\r\n\t\t.split( '\\n' );\r\n\tconst unique = new Set( identifiers );\r\n\r\n\tunique.forEach( value => {\r\n\t\tif ( value && !translations.has( value ) ) {\r\n\t\t\tconsole.log( 'Missing translation: '+value ); // eslint-disable-line no-console\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"],"mappings":"aAqBA,KAAM,CAAE,SAAU,SAAY,QAAS,QACjC,CAAE,UAAa,QAAS,iBACxB,KAAO,QAAS,QAChB,SAAW,QAAS,wBACpB,WAAa,QAAS,sBAKtB,aAAe,QAAS,UAAW,KAAM,KAAM,MAKrD,KAAM,2BAA4B,CACjC,IAAK,cACH,SAAkB,IAAK,MAAQ,CACjC,KAAM,cAAe,GAAI,KACzB,OAAU,GAAI,EAAG,EAAI,MAAM,OAAQ,IAAM,CACxC,KAAM,MAAO,QAAS,aAAc,MAAO,IACrC,MAAQ,SAAS,KAAM,MAE7B,AADa,WAAY,OACpB,QAAS,KAAO,CACpB,aAAa,IAAK,KAClB,aAAa,IAAK,SAAU,MAAO,GAAK,SAAU,IAAI,OAIxD,KAAM,aAAc,SADJ,8DACuB,CACtC,IAAK,eAEJ,WACA,MAAO;AAAA,GAGT,AAFe,GAAI,KAAK,aAEjB,QAAS,OAAS,CACxB,AAAK,OAAS,CAAC,aAAa,IAAK,QAChC,QAAQ,IAAK,wBAAwB","names":[],"sourceRoot":"","file":"locales/scripts/find_missing_translations.js"}