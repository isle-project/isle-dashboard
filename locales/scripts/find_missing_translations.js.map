{"version":3,"sources":["../locales/scripts/find_missing_translations.js"],"sourcesContent":["/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-server program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n'use strict';\r\n\r\n// MODULES //\r\n\r\nconst { basename, resolve } = require( 'path' );\r\nconst { execSync } = require( 'child_process' );\r\nconst glob = require( 'glob' );\r\nconst readJSON = require( '@stdlib/fs/read-json' );\r\nconst objectKeys = require( '@stdlib/utils/keys' );\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst TOPLEVEL_DIR = resolve( __dirname, '..', '..', '..' );\r\n\r\n\r\n// MAIN //\r\n\r\nglob( 'public/locales/en/*.json', {\r\n\tcwd: TOPLEVEL_DIR\r\n}, function onFiles( err, files ) {\r\n\tconst translations = new Set();\r\n\tfor ( let i = 0; i < files.length; i++ ) {\r\n\t\tconst file = resolve( TOPLEVEL_DIR, files[ i ] );\r\n\t\tconst table = readJSON.sync( file );\r\n\t\tconst keys = objectKeys( table );\r\n\t\tkeys.forEach( key => {\r\n\t\t\ttranslations.add( key );\r\n\t\t\ttranslations.add( basename( files[ i ], '.json' )+':'+key );\r\n\t\t});\r\n\t}\r\n\tconst command = 'grep -hroP \"(props.| |\\t|{)t\\\\( ?\\'\\\\K[^\\']*(?=\\' ?\\\\))\" src/* ';\r\n\tconst identifiers = execSync( command, {\r\n\t\tcwd: TOPLEVEL_DIR\r\n\t})\r\n\t\t.toString()\r\n\t\t.split( '\\n' );\r\n\tconst unique = new Set( identifiers );\r\n\r\n\tunique.forEach( value => {\r\n\t\tif ( value && !translations.has( value ) ) {\r\n\t\t\tconsole.log( 'Missing translation: '+value ); // eslint-disable-line no-console\r\n\t\t}\r\n\t});\r\n});\r\n\r\n"],"mappings":"aAqBA,KAAM,CAAE,SAAU,OAAQ,EAAI,QAAS,MAAO,EACxC,CAAE,QAAS,EAAI,QAAS,eAAgB,EACxC,KAAO,QAAS,MAAO,EACvB,SAAW,QAAS,sBAAuB,EAC3C,WAAa,QAAS,oBAAqB,EAK3C,aAAe,QAAS,UAAW,KAAM,KAAM,IAAK,EAK1D,KAAM,2BAA4B,CACjC,IAAK,YACN,EAAG,SAAkB,IAAK,MAAQ,CACjC,MAAM,aAAe,IAAI,IACzB,QAAU,EAAI,EAAG,EAAI,MAAM,OAAQ,IAAM,CACxC,MAAM,KAAO,QAAS,aAAc,MAAO,EAAI,EACzC,MAAQ,SAAS,KAAM,IAAK,EACrB,WAAY,KAAM,EAC1B,QAAS,KAAO,CACpB,aAAa,IAAK,GAAI,EACtB,aAAa,IAAK,SAAU,MAAO,GAAK,OAAQ,EAAE,IAAI,GAAI,CAC3D,CAAC,CACF,CAEA,MAAM,YAAc,SADJ,8DACuB,CACtC,IAAK,YACN,CAAC,EACC,SAAS,EACT,MAAO;AAAA,CAAK,EACC,IAAI,IAAK,WAAY,EAE7B,QAAS,OAAS,CACnB,OAAS,CAAC,aAAa,IAAK,KAAM,GACtC,QAAQ,IAAK,wBAAwB,KAAM,CAE7C,CAAC,CACF,CAAC","names":[],"sourceRoot":"","file":"locales/scripts/find_missing_translations.js"}