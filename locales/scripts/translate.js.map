{"version":3,"sources":["../locales/scripts/translate.js"],"sourcesContent":["/**\r\n* Copyright (C) 2016-present The ISLE Authors\r\n*\r\n* The isle-server program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as\r\n* published by the Free Software Foundation, either version 3 of the\r\n* License, or (at your option) any later version.\r\n*\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n*\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n*/\r\n\r\n'use strict';\r\n\r\n// MODULES //\r\n\r\nconst axios = require( 'axios' );\r\nconst glob = require( 'glob' );\r\nconst fs = require( 'fs' );\r\nconst path = require( 'path' );\r\nconst qs = require( 'qs' );\r\nconst replace = require( '@stdlib/string/replace' );\r\nconst readJSON = require( '@stdlib/fs/read-json' );\r\nconst objectKeys = require( '@stdlib/utils/keys' );\r\nconst ENV = require( '@stdlib/process/env' );\r\n\r\n\r\n// VARIABLES //\r\n\r\nconst LANGUAGE_TARGETS = [ 'bg', 'cs', 'da', 'de', 'el', 'es', 'et', 'fi', 'fr', 'hu', 'it', 'ja', 'lt', 'lv', 'nl', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'sv', 'zh' ];\r\nconst deepl = {\r\n\t'server': 'https://api.deepl.com/v2/translate',\r\n\t'auth_key': ENV.DEEPL_KEY\r\n};\r\nconst MAX_TRANSLATION_CALLS = 5;\r\nconst TOPLEVEL_DIR = path.resolve( __dirname, '..', '..', '..' );\r\nconst RE_HANDLEBAR_EXPRESSION = /\\{\\{([^}]+)\\}\\}/g;\r\nconst RE_XML_GROUPS = /<x>([^<]+)<\\/x>/g;\r\n\r\n\r\n// MAIN //\r\n\r\nconst options = {\r\n\tcwd: TOPLEVEL_DIR\r\n};\r\nglob( 'public/locales/en/*.json', options, function onFiles( err, files ) {\r\n\tfor ( let i = 0; i < files.length; i++ ) {\r\n\t\tconst file = path.resolve( TOPLEVEL_DIR, files[ i ] );\r\n\t\tconst reference = readJSON.sync( file );\r\n\t\tconst refKeys = objectKeys( reference );\r\n\t\tconst sortedReference = {};\r\n\t\tfor ( let i = 0; i < refKeys.length; i++ ) {\r\n\t\t\tconst key = refKeys[ i ];\r\n\t\t\tsortedReference[ key ] = reference[ key ];\r\n\t\t}\r\n\t\tfs.writeFileSync( file, JSON.stringify( sortedReference, null, '\\t' ).concat( '\\n' ) );\r\n\r\n\t\tfor ( let j = 0; j < LANGUAGE_TARGETS.length; j++ ) {\r\n\t\t\tconst lng = LANGUAGE_TARGETS[ j ];\r\n\t\t\tconst filePath = file.replace( 'en', lng );\r\n\t\t\tif ( !fs.existsSync( filePath ) ) {\r\n\t\t\t\tfs.writeFileSync( filePath, JSON.stringify({}) );\r\n\t\t\t}\r\n\t\t\tconst targetJSON = readJSON.sync( filePath );\r\n\t\t\tconst promises = [];\r\n\t\t\tconst promiseKeys = [];\r\n\t\t\tfor ( let k = 0; k < refKeys.length; k++ ) {\r\n\t\t\t\tconst key = refKeys[ k ];\r\n\t\t\t\tif ( !targetJSON[ key ] ) {\r\n\t\t\t\t\tlet textToTranslate = reference[ key ];\r\n\t\t\t\t\ttextToTranslate = replace( textToTranslate, RE_HANDLEBAR_EXPRESSION, '<x>$1</x>' );\r\n\r\n\t\t\t\t\tconsole.log( 'Translate `'+textToTranslate+'` to '+lng ); // eslint-disable-line no-console\r\n\t\t\t\t\tif ( promises.length < MAX_TRANSLATION_CALLS ) {\r\n\t\t\t\t\t\tpromiseKeys.push( key );\r\n\t\t\t\t\t\tpromises.push( axios.post( deepl.server, qs.stringify({\r\n\t\t\t\t\t\t\tauth_key: deepl.auth_key,\r\n\t\t\t\t\t\t\tsource_lang: 'EN',\r\n\t\t\t\t\t\t\ttext: textToTranslate,\r\n\t\t\t\t\t\t\ttag_handling: 'xml',\r\n\t\t\t\t\t\t\tignore_tags: 'x',\r\n\t\t\t\t\t\t\ttarget_lang: lng === 'pt' ? 'PT-BR' : lng.toUpperCase()\r\n\t\t\t\t\t\t}) ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tPromise.all( promises )\r\n\t\t\t\t.then( results => {\r\n\t\t\t\t\tconst translations = results.map( x => x.data.translations[ 0 ].text );\r\n\t\t\t\t\tfor ( let i = 0; i < promiseKeys.length; i++ ) {\r\n\t\t\t\t\t\tconst key = promiseKeys[ i ];\r\n\t\t\t\t\t\tconst text = replace( translations[ i ], RE_XML_GROUPS, '{{$1}}' );\r\n\t\t\t\t\t\ttargetJSON[ key ] = text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trefKeys.sort( ( a, b ) => {\r\n\t\t\t\t\t\treturn a.localeCompare(b);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst out = {};\r\n\t\t\t\t\tfor ( let i = 0; i < refKeys.length; i++ ) {\r\n\t\t\t\t\t\tconst key = refKeys[ i ];\r\n\t\t\t\t\t\tout[ key ] = targetJSON[ key ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfs.writeFileSync( filePath, JSON.stringify( out, null, '\\t' ).concat( '\\n' ) );\r\n\t\t\t\t})\r\n\t\t\t\t.catch( err => {\r\n\t\t\t\t\tconsole.error( err ); // eslint-disable-line no-console\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n"],"mappings":"aAqBA,KAAM,OAAQ,QAAS,OAAQ,EACzB,KAAO,QAAS,MAAO,EACvB,GAAK,QAAS,IAAK,EACnB,KAAO,QAAS,MAAO,EACvB,GAAK,QAAS,IAAK,EACnB,QAAU,QAAS,wBAAyB,EAC5C,SAAW,QAAS,sBAAuB,EAC3C,WAAa,QAAS,oBAAqB,EAC3C,IAAM,QAAS,qBAAsB,EAKrC,iBAAmB,CAAE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,EAC9J,MAAQ,CACb,OAAU,qCACV,SAAY,IAAI,SACjB,EACM,sBAAwB,EACxB,aAAe,KAAK,QAAS,UAAW,KAAM,KAAM,IAAK,EACzD,wBAA0B,mBAC1B,cAAgB,mBAKhB,QAAU,CACf,IAAK,YACN,EACA,KAAM,2BAA4B,QAAS,SAAkB,IAAK,MAAQ,CACzE,OAAU,GAAI,EAAG,EAAI,MAAM,OAAQ,IAAM,CACxC,KAAM,MAAO,KAAK,QAAS,aAAc,MAAO,EAAI,EAC9C,UAAY,SAAS,KAAM,IAAK,EAChC,QAAU,WAAY,SAAU,EAChC,gBAAkB,CAAC,EACzB,OAAU,IAAI,EAAG,GAAI,QAAQ,OAAQ,KAAM,CAC1C,KAAM,KAAM,QAAS,IACrB,gBAAiB,KAAQ,UAAW,IACrC,CACA,GAAG,cAAe,KAAM,KAAK,UAAW,gBAAiB,KAAM,GAAK,EAAE,OAAQ;AAAA,CAAK,CAAE,EAErF,OAAU,GAAI,EAAG,EAAI,iBAAiB,OAAQ,IAAM,CACnD,KAAM,KAAM,iBAAkB,GACxB,SAAW,KAAK,QAAS,KAAM,GAAI,EACzC,AAAM,GAAG,WAAY,QAAS,GAC7B,GAAG,cAAe,SAAU,KAAK,UAAU,CAAC,CAAC,CAAE,EAEhD,KAAM,YAAa,SAAS,KAAM,QAAS,EACrC,SAAW,CAAC,EACZ,YAAc,CAAC,EACrB,OAAU,GAAI,EAAG,EAAI,QAAQ,OAAQ,IAAM,CAC1C,KAAM,KAAM,QAAS,GACrB,GAAK,CAAC,WAAY,KAAQ,CACzB,GAAI,iBAAkB,UAAW,KACjC,gBAAkB,QAAS,gBAAiB,wBAAyB,WAAY,EAEjF,QAAQ,IAAK,cAAc,gBAAgB,QAAQ,GAAI,EAClD,SAAS,OAAS,uBACtB,aAAY,KAAM,GAAI,EACtB,SAAS,KAAM,MAAM,KAAM,MAAM,OAAQ,GAAG,UAAU,CACrD,SAAU,MAAM,SAChB,YAAa,KACb,KAAM,gBACN,aAAc,MACd,YAAa,IACb,YAAa,MAAQ,KAAO,QAAU,IAAI,YAAY,CACvD,CAAC,CAAE,CAAE,EAEP,CACD,CACA,QAAQ,IAAK,QAAS,EACpB,KAAM,SAAW,CACjB,KAAM,cAAe,QAAQ,IAAK,GAAK,EAAE,KAAK,aAAc,GAAI,IAAK,EACrE,OAAU,IAAI,EAAG,GAAI,YAAY,OAAQ,KAAM,CAC9C,KAAM,KAAM,YAAa,IACnB,KAAO,QAAS,aAAc,IAAK,cAAe,QAAS,EACjE,WAAY,KAAQ,IACrB,CACA,QAAQ,KAAM,CAAE,EAAG,IACX,EAAE,cAAc,CAAC,CACxB,EACD,KAAM,KAAM,CAAC,EACb,OAAU,IAAI,EAAG,GAAI,QAAQ,OAAQ,KAAM,CAC1C,KAAM,KAAM,QAAS,IACrB,IAAK,KAAQ,WAAY,IAC1B,CACA,GAAG,cAAe,SAAU,KAAK,UAAW,IAAK,KAAM,GAAK,EAAE,OAAQ;AAAA,CAAK,CAAE,CAC9E,CAAC,EACA,MAAO,MAAO,CACd,QAAQ,MAAO,IAAI,CACpB,CAAC,CACH,CACD,CACD,CAAC","names":[],"sourceRoot":"","file":"locales/scripts/translate.js"}