{"version":3,"sources":["../locales/scripts/translate.js"],"sourcesContent":["/**\n* Copyright (C) 2016-present The ISLE Authors\n*\n* The isle-server program is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as\n* published by the Free Software Foundation, either version 3 of the\n* License, or (at your option) any later version.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n'use strict';\n\n// MODULES //\n\nconst axios = require( 'axios' );\nconst glob = require( 'glob' );\nconst fs = require( 'fs' );\nconst path = require( 'path' );\nconst qs = require( 'qs' );\nconst replace = require( '@stdlib/string/replace' );\nconst readJSON = require( '@stdlib/fs/read-json' );\nconst objectKeys = require( '@stdlib/utils/keys' );\nconst ENV = require( '@stdlib/process/env' );\n\n\n// VARIABLES //\n\nconst LANGUAGE_TARGETS = [ 'bg', 'cs', 'da', 'de', 'el', 'es', 'et', 'fi', 'fr', 'hu', 'it', 'ja', 'lt', 'lv', 'nl', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'sv', 'zh' ];\nconst deepl = {\n\t'server': 'https://api.deepl.com/v2/translate',\n\t'auth_key': ENV.DEEPL_KEY\n};\nconst MAX_TRANSLATION_CALLS = 5;\nconst TOPLEVEL_DIR = path.resolve( __dirname, '..', '..', '..' );\nconst RE_HANDLEBAR_EXPRESSION = /\\{\\{([^}]+)\\}\\}/g;\nconst RE_XML_GROUPS = /<x>([^<]+)<\\/x>/g;\n\n\n// MAIN //\n\nconst options = {\n\tcwd: TOPLEVEL_DIR\n};\nglob( 'public/locales/en/*.json', options, function onFiles( err, files ) {\n\tfor ( let i = 0; i < files.length; i++ ) {\n\t\tconst file = path.resolve( TOPLEVEL_DIR, files[ i ] );\n\t\tconst reference = readJSON.sync( file );\n\t\tconst refKeys = objectKeys( reference );\n\t\tconst sortedReference = {};\n\t\tfor ( let i = 0; i < refKeys.length; i++ ) {\n\t\t\tconst key = refKeys[ i ];\n\t\t\tsortedReference[ key ] = reference[ key ];\n\t\t}\n\t\tfs.writeFileSync( file, JSON.stringify( sortedReference, null, '\\t' ).concat( '\\n' ) );\n\n\t\tfor ( let j = 0; j < LANGUAGE_TARGETS.length; j++ ) {\n\t\t\tconst lng = LANGUAGE_TARGETS[ j ];\n\t\t\tconst filePath = file.replace( 'en', lng );\n\t\t\tif ( !fs.existsSync( filePath ) ) {\n\t\t\t\tfs.writeFileSync( filePath, JSON.stringify({}) );\n\t\t\t}\n\t\t\tconst targetJSON = readJSON.sync( filePath );\n\t\t\tconst promises = [];\n\t\t\tconst promiseKeys = [];\n\t\t\tfor ( let k = 0; k < refKeys.length; k++ ) {\n\t\t\t\tconst key = refKeys[ k ];\n\t\t\t\tif ( !targetJSON[ key ] ) {\n\t\t\t\t\tlet textToTranslate = reference[ key ];\n\t\t\t\t\ttextToTranslate = replace( textToTranslate, RE_HANDLEBAR_EXPRESSION, '<x>$1</x>' );\n\n\t\t\t\t\tconsole.log( 'Translate `'+textToTranslate+'` to '+lng ); // eslint-disable-line no-console\n\t\t\t\t\tif ( promises.length < MAX_TRANSLATION_CALLS ) {\n\t\t\t\t\t\tpromiseKeys.push( key );\n\t\t\t\t\t\tpromises.push( axios.post( deepl.server, qs.stringify({\n\t\t\t\t\t\t\tauth_key: deepl.auth_key,\n\t\t\t\t\t\t\tsource_lang: 'EN',\n\t\t\t\t\t\t\ttext: textToTranslate,\n\t\t\t\t\t\t\ttag_handling: 'xml',\n\t\t\t\t\t\t\tignore_tags: 'x',\n\t\t\t\t\t\t\ttarget_lang: lng === 'pt' ? 'PT-BR' : lng.toUpperCase()\n\t\t\t\t\t\t}) ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tPromise.all( promises )\n\t\t\t\t.then( results => {\n\t\t\t\t\tconst translations = results.map( x => x.data.translations[ 0 ].text );\n\t\t\t\t\tfor ( let i = 0; i < promiseKeys.length; i++ ) {\n\t\t\t\t\t\tconst key = promiseKeys[ i ];\n\t\t\t\t\t\tconst text = replace( translations[ i ], RE_XML_GROUPS, '{{$1}}' );\n\t\t\t\t\t\ttargetJSON[ key ] = text;\n\t\t\t\t\t}\n\t\t\t\t\trefKeys.sort( ( a, b ) => {\n\t\t\t\t\t\treturn a.localeCompare(b);\n\t\t\t\t\t});\n\t\t\t\t\tconst out = {};\n\t\t\t\t\tfor ( let i = 0; i < refKeys.length; i++ ) {\n\t\t\t\t\t\tconst key = refKeys[ i ];\n\t\t\t\t\t\tout[ key ] = targetJSON[ key ];\n\t\t\t\t\t}\n\t\t\t\t\tfs.writeFileSync( filePath, JSON.stringify( out, null, '\\t' ).concat( '\\n' ) );\n\t\t\t\t})\n\t\t\t\t.catch( err => {\n\t\t\t\t\tconsole.error( err ); // eslint-disable-line no-console\n\t\t\t\t});\n\t\t}\n\t}\n});\n"],"mappings":"aAqBA,KAAM,OAAQ,QAAS,SACjB,KAAO,QAAS,QAChB,GAAK,QAAS,MACd,KAAO,QAAS,QAChB,GAAK,QAAS,MACd,QAAU,QAAS,0BACnB,SAAW,QAAS,wBACpB,WAAa,QAAS,sBACtB,IAAM,QAAS,uBAKf,iBAAmB,CAAE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACzJ,MAAQ,CACb,OAAU,qCACV,SAAY,IAAI,WAEX,sBAAwB,EACxB,aAAe,KAAK,QAAS,UAAW,KAAM,KAAM,MACpD,wBAA0B,mBAC1B,cAAgB,mBAKhB,QAAU,CACf,IAAK,cAEN,KAAM,2BAA4B,QAAS,SAAkB,IAAK,MAAQ,CACzE,OAAU,GAAI,EAAG,EAAI,MAAM,OAAQ,IAAM,CACxC,KAAM,MAAO,KAAK,QAAS,aAAc,MAAO,IAC1C,UAAY,SAAS,KAAM,MAC3B,QAAU,WAAY,WACtB,gBAAkB,GACxB,OAAU,IAAI,EAAG,GAAI,QAAQ,OAAQ,KAAM,CAC1C,KAAM,KAAM,QAAS,IACrB,gBAAiB,KAAQ,UAAW,KAErC,GAAG,cAAe,KAAM,KAAK,UAAW,gBAAiB,KAAM,KAAO,OAAQ;AAAA,IAE9E,OAAU,GAAI,EAAG,EAAI,iBAAiB,OAAQ,IAAM,CACnD,KAAM,KAAM,iBAAkB,GACxB,SAAW,KAAK,QAAS,KAAM,KACrC,AAAM,GAAG,WAAY,WACpB,GAAG,cAAe,SAAU,KAAK,UAAU,KAE5C,KAAM,YAAa,SAAS,KAAM,UAC5B,SAAW,GACX,YAAc,GACpB,OAAU,GAAI,EAAG,EAAI,QAAQ,OAAQ,IAAM,CAC1C,KAAM,KAAM,QAAS,GACrB,GAAK,CAAC,WAAY,KAAQ,CACzB,GAAI,iBAAkB,UAAW,KACjC,gBAAkB,QAAS,gBAAiB,wBAAyB,aAErE,QAAQ,IAAK,cAAc,gBAAgB,QAAQ,KAC9C,SAAS,OAAS,uBACtB,aAAY,KAAM,KAClB,SAAS,KAAM,MAAM,KAAM,MAAM,OAAQ,GAAG,UAAU,CACrD,SAAU,MAAM,SAChB,YAAa,KACb,KAAM,gBACN,aAAc,MACd,YAAa,IACb,YAAa,MAAQ,KAAO,QAAU,IAAI,oBAK9C,QAAQ,IAAK,UACX,KAAM,SAAW,CACjB,KAAM,cAAe,QAAQ,IAAK,GAAK,EAAE,KAAK,aAAc,GAAI,MAChE,OAAU,IAAI,EAAG,GAAI,YAAY,OAAQ,KAAM,CAC9C,KAAM,KAAM,YAAa,IACnB,KAAO,QAAS,aAAc,IAAK,cAAe,UACxD,WAAY,KAAQ,KAErB,QAAQ,KAAM,CAAE,EAAG,IACX,EAAE,cAAc,IAExB,KAAM,KAAM,GACZ,OAAU,IAAI,EAAG,GAAI,QAAQ,OAAQ,KAAM,CAC1C,KAAM,KAAM,QAAS,IACrB,IAAK,KAAQ,WAAY,KAE1B,GAAG,cAAe,SAAU,KAAK,UAAW,IAAK,KAAM,KAAO,OAAQ;AAAA,MAEtE,MAAO,MAAO,CACd,QAAQ,MAAO","names":[],"sourceRoot":"","file":"locales/scripts/translate.js"}